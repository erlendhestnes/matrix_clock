
matrix_clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000077a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001b4  00802000  000077a6  0000783a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000da3  008021b4  008021b4  000079ee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000079ee  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000760  00000000  00000000  00007a4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0001a769  00000000  00000000  000081aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002ff2  00000000  00000000  00022913  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000d391  00000000  00000000  00025905  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00002494  00000000  00000000  00032c98  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000324c  00000000  00000000  0003512c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00028381  00000000  00000000  00038378  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00003a40  00000000  00000000  000606f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	34 c1       	rjmp	.+616    	; 0x26a <__ctors_end>
       2:	00 00       	nop
       4:	51 c1       	rjmp	.+674    	; 0x2a8 <__bad_interrupt>
       6:	00 00       	nop
       8:	4f c1       	rjmp	.+670    	; 0x2a8 <__bad_interrupt>
       a:	00 00       	nop
       c:	4d c1       	rjmp	.+666    	; 0x2a8 <__bad_interrupt>
       e:	00 00       	nop
      10:	4b c1       	rjmp	.+662    	; 0x2a8 <__bad_interrupt>
      12:	00 00       	nop
      14:	49 c1       	rjmp	.+658    	; 0x2a8 <__bad_interrupt>
      16:	00 00       	nop
      18:	47 c1       	rjmp	.+654    	; 0x2a8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	45 c1       	rjmp	.+650    	; 0x2a8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	43 c1       	rjmp	.+646    	; 0x2a8 <__bad_interrupt>
      22:	00 00       	nop
      24:	41 c1       	rjmp	.+642    	; 0x2a8 <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 68 34 	jmp	0x68d0	; 0x68d0 <__vector_10>
      2c:	3d c1       	rjmp	.+634    	; 0x2a8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3b c1       	rjmp	.+630    	; 0x2a8 <__bad_interrupt>
      32:	00 00       	nop
      34:	39 c1       	rjmp	.+626    	; 0x2a8 <__bad_interrupt>
      36:	00 00       	nop
      38:	0c 94 0a 2e 	jmp	0x5c14	; 0x5c14 <__vector_14>
      3c:	35 c1       	rjmp	.+618    	; 0x2a8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	33 c1       	rjmp	.+614    	; 0x2a8 <__bad_interrupt>
      42:	00 00       	nop
      44:	31 c1       	rjmp	.+610    	; 0x2a8 <__bad_interrupt>
      46:	00 00       	nop
      48:	2f c1       	rjmp	.+606    	; 0x2a8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2d c1       	rjmp	.+602    	; 0x2a8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 b5 33 	jmp	0x676a	; 0x676a <__vector_20>
      54:	29 c1       	rjmp	.+594    	; 0x2a8 <__bad_interrupt>
      56:	00 00       	nop
      58:	27 c1       	rjmp	.+590    	; 0x2a8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	25 c1       	rjmp	.+586    	; 0x2a8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	23 c1       	rjmp	.+582    	; 0x2a8 <__bad_interrupt>
      62:	00 00       	nop
      64:	21 c1       	rjmp	.+578    	; 0x2a8 <__bad_interrupt>
      66:	00 00       	nop
      68:	1f c1       	rjmp	.+574    	; 0x2a8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1d c1       	rjmp	.+570    	; 0x2a8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	1b c1       	rjmp	.+566    	; 0x2a8 <__bad_interrupt>
      72:	00 00       	nop
      74:	19 c1       	rjmp	.+562    	; 0x2a8 <__bad_interrupt>
      76:	00 00       	nop
      78:	17 c1       	rjmp	.+558    	; 0x2a8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	15 c1       	rjmp	.+554    	; 0x2a8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	13 c1       	rjmp	.+550    	; 0x2a8 <__bad_interrupt>
      82:	00 00       	nop
      84:	11 c1       	rjmp	.+546    	; 0x2a8 <__bad_interrupt>
      86:	00 00       	nop
      88:	0c 94 1a 34 	jmp	0x6834	; 0x6834 <__vector_34>
      8c:	0d c1       	rjmp	.+538    	; 0x2a8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0b c1       	rjmp	.+534    	; 0x2a8 <__bad_interrupt>
      92:	00 00       	nop
      94:	09 c1       	rjmp	.+530    	; 0x2a8 <__bad_interrupt>
      96:	00 00       	nop
      98:	07 c1       	rjmp	.+526    	; 0x2a8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	05 c1       	rjmp	.+522    	; 0x2a8 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	03 c1       	rjmp	.+518    	; 0x2a8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	01 c1       	rjmp	.+514    	; 0x2a8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	ff c0       	rjmp	.+510    	; 0x2a8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	fd c0       	rjmp	.+506    	; 0x2a8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	fb c0       	rjmp	.+502    	; 0x2a8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	f9 c0       	rjmp	.+498    	; 0x2a8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f7 c0       	rjmp	.+494    	; 0x2a8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	f5 c0       	rjmp	.+490    	; 0x2a8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	f3 c0       	rjmp	.+486    	; 0x2a8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	f1 c0       	rjmp	.+482    	; 0x2a8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ef c0       	rjmp	.+478    	; 0x2a8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ed c0       	rjmp	.+474    	; 0x2a8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	eb c0       	rjmp	.+470    	; 0x2a8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	e9 c0       	rjmp	.+466    	; 0x2a8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	e7 c0       	rjmp	.+462    	; 0x2a8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	e5 c0       	rjmp	.+458    	; 0x2a8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	e3 c0       	rjmp	.+454    	; 0x2a8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	e1 c0       	rjmp	.+450    	; 0x2a8 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	df c0       	rjmp	.+446    	; 0x2a8 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	dd c0       	rjmp	.+442    	; 0x2a8 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	db c0       	rjmp	.+438    	; 0x2a8 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	d9 c0       	rjmp	.+434    	; 0x2a8 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	d7 c0       	rjmp	.+430    	; 0x2a8 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	d5 c0       	rjmp	.+426    	; 0x2a8 <__bad_interrupt>
      fe:	00 00       	nop
     100:	d3 c0       	rjmp	.+422    	; 0x2a8 <__bad_interrupt>
     102:	00 00       	nop
     104:	d1 c0       	rjmp	.+418    	; 0x2a8 <__bad_interrupt>
     106:	00 00       	nop
     108:	0c 94 cc 33 	jmp	0x6798	; 0x6798 <__vector_66>
     10c:	cd c0       	rjmp	.+410    	; 0x2a8 <__bad_interrupt>
     10e:	00 00       	nop
     110:	cb c0       	rjmp	.+406    	; 0x2a8 <__bad_interrupt>
     112:	00 00       	nop
     114:	c9 c0       	rjmp	.+402    	; 0x2a8 <__bad_interrupt>
     116:	00 00       	nop
     118:	c7 c0       	rjmp	.+398    	; 0x2a8 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	c5 c0       	rjmp	.+394    	; 0x2a8 <__bad_interrupt>
     11e:	00 00       	nop
     120:	c3 c0       	rjmp	.+390    	; 0x2a8 <__bad_interrupt>
     122:	00 00       	nop
     124:	c1 c0       	rjmp	.+386    	; 0x2a8 <__bad_interrupt>
     126:	00 00       	nop
     128:	bf c0       	rjmp	.+382    	; 0x2a8 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	bd c0       	rjmp	.+378    	; 0x2a8 <__bad_interrupt>
     12e:	00 00       	nop
     130:	bb c0       	rjmp	.+374    	; 0x2a8 <__bad_interrupt>
     132:	00 00       	nop
     134:	b9 c0       	rjmp	.+370    	; 0x2a8 <__bad_interrupt>
     136:	00 00       	nop
     138:	b7 c0       	rjmp	.+366    	; 0x2a8 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	b5 c0       	rjmp	.+362    	; 0x2a8 <__bad_interrupt>
     13e:	00 00       	nop
     140:	b3 c0       	rjmp	.+358    	; 0x2a8 <__bad_interrupt>
     142:	00 00       	nop
     144:	b1 c0       	rjmp	.+354    	; 0x2a8 <__bad_interrupt>
     146:	00 00       	nop
     148:	af c0       	rjmp	.+350    	; 0x2a8 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	ad c0       	rjmp	.+346    	; 0x2a8 <__bad_interrupt>
     14e:	00 00       	nop
     150:	ab c0       	rjmp	.+342    	; 0x2a8 <__bad_interrupt>
     152:	00 00       	nop
     154:	a9 c0       	rjmp	.+338    	; 0x2a8 <__bad_interrupt>
     156:	00 00       	nop
     158:	a7 c0       	rjmp	.+334    	; 0x2a8 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	a5 c0       	rjmp	.+330    	; 0x2a8 <__bad_interrupt>
     15e:	00 00       	nop
     160:	1c c3       	rjmp	.+1592   	; 0x79a <__vector_88>
     162:	00 00       	nop
     164:	a1 c0       	rjmp	.+322    	; 0x2a8 <__bad_interrupt>
     166:	00 00       	nop
     168:	9f c0       	rjmp	.+318    	; 0x2a8 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	9d c0       	rjmp	.+314    	; 0x2a8 <__bad_interrupt>
     16e:	00 00       	nop
     170:	9b c0       	rjmp	.+310    	; 0x2a8 <__bad_interrupt>
     172:	00 00       	nop
     174:	99 c0       	rjmp	.+306    	; 0x2a8 <__bad_interrupt>
     176:	00 00       	nop
     178:	97 c0       	rjmp	.+302    	; 0x2a8 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	95 c0       	rjmp	.+298    	; 0x2a8 <__bad_interrupt>
     17e:	00 00       	nop
     180:	93 c0       	rjmp	.+294    	; 0x2a8 <__bad_interrupt>
     182:	00 00       	nop
     184:	91 c0       	rjmp	.+290    	; 0x2a8 <__bad_interrupt>
     186:	00 00       	nop
     188:	8f c0       	rjmp	.+286    	; 0x2a8 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	8d c0       	rjmp	.+282    	; 0x2a8 <__bad_interrupt>
     18e:	00 00       	nop
     190:	8b c0       	rjmp	.+278    	; 0x2a8 <__bad_interrupt>
     192:	00 00       	nop
     194:	89 c0       	rjmp	.+274    	; 0x2a8 <__bad_interrupt>
     196:	00 00       	nop
     198:	87 c0       	rjmp	.+270    	; 0x2a8 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	85 c0       	rjmp	.+266    	; 0x2a8 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	83 c0       	rjmp	.+262    	; 0x2a8 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	81 c0       	rjmp	.+258    	; 0x2a8 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	7f c0       	rjmp	.+254    	; 0x2a8 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	7d c0       	rjmp	.+250    	; 0x2a8 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	7b c0       	rjmp	.+246    	; 0x2a8 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	79 c0       	rjmp	.+242    	; 0x2a8 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	77 c0       	rjmp	.+238    	; 0x2a8 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	75 c0       	rjmp	.+234    	; 0x2a8 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	73 c0       	rjmp	.+230    	; 0x2a8 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	71 c0       	rjmp	.+226    	; 0x2a8 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	6f c0       	rjmp	.+222    	; 0x2a8 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	6d c0       	rjmp	.+218    	; 0x2a8 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	6b c0       	rjmp	.+214    	; 0x2a8 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	69 c0       	rjmp	.+210    	; 0x2a8 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	67 c0       	rjmp	.+206    	; 0x2a8 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	65 c0       	rjmp	.+202    	; 0x2a8 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	63 c0       	rjmp	.+198    	; 0x2a8 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	61 c0       	rjmp	.+194    	; 0x2a8 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	5f c0       	rjmp	.+190    	; 0x2a8 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	5d c0       	rjmp	.+186    	; 0x2a8 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	5b c0       	rjmp	.+182    	; 0x2a8 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	59 c0       	rjmp	.+178    	; 0x2a8 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	57 c0       	rjmp	.+174    	; 0x2a8 <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	27 2d       	mov	r18, r7
     1fe:	b9 2c       	mov	r11, r9
     200:	1f 2c       	mov	r1, r15
     202:	3b 2d       	mov	r19, r11
     204:	1f 2c       	mov	r1, r15
     206:	1f 2c       	mov	r1, r15
     208:	1f 2c       	mov	r1, r15
     20a:	7e 2c       	mov	r7, r14
     20c:	1f 2c       	mov	r1, r15
     20e:	1f 2c       	mov	r1, r15
     210:	1f 2c       	mov	r1, r15
     212:	1f 2c       	mov	r1, r15
     214:	1f 2c       	mov	r1, r15
     216:	1f 2c       	mov	r1, r15
     218:	1f 2c       	mov	r1, r15
     21a:	1f 2c       	mov	r1, r15
     21c:	1f 2c       	mov	r1, r15
     21e:	1f 2c       	mov	r1, r15
     220:	1f 2c       	mov	r1, r15
     222:	1f 2c       	mov	r1, r15
     224:	1f 2c       	mov	r1, r15
     226:	1f 2c       	mov	r1, r15
     228:	1f 2c       	mov	r1, r15
     22a:	1f 2c       	mov	r1, r15
     22c:	1f 2c       	mov	r1, r15
     22e:	1f 2c       	mov	r1, r15
     230:	1f 2c       	mov	r1, r15
     232:	1f 2c       	mov	r1, r15
     234:	1f 2c       	mov	r1, r15
     236:	1f 2c       	mov	r1, r15
     238:	1f 2c       	mov	r1, r15
     23a:	1f 2c       	mov	r1, r15
     23c:	1f 2c       	mov	r1, r15
     23e:	1f 2c       	mov	r1, r15
     240:	1f 2c       	mov	r1, r15
     242:	1f 2c       	mov	r1, r15
     244:	1f 2c       	mov	r1, r15
     246:	1f 2c       	mov	r1, r15
     248:	1f 2c       	mov	r1, r15
     24a:	1f 2c       	mov	r1, r15
     24c:	1f 2c       	mov	r1, r15
     24e:	1f 2c       	mov	r1, r15
     250:	1f 2c       	mov	r1, r15
     252:	1f 2c       	mov	r1, r15
     254:	1f 2c       	mov	r1, r15
     256:	1f 2c       	mov	r1, r15
     258:	1f 2c       	mov	r1, r15
     25a:	1f 2c       	mov	r1, r15
     25c:	1f 2c       	mov	r1, r15
     25e:	1f 2c       	mov	r1, r15
     260:	b3 2c       	mov	r11, r3
     262:	87 2c       	mov	r8, r7
     264:	4d 2c       	mov	r4, r13
     266:	37 2c       	mov	r3, r7
     268:	2d 2c       	mov	r2, r13

0000026a <__ctors_end>:
     26a:	11 24       	eor	r1, r1
     26c:	1f be       	out	0x3f, r1	; 63
     26e:	cf ef       	ldi	r28, 0xFF	; 255
     270:	cd bf       	out	0x3d, r28	; 61
     272:	df e2       	ldi	r29, 0x2F	; 47
     274:	de bf       	out	0x3e, r29	; 62

00000276 <__do_copy_data>:
     276:	11 e2       	ldi	r17, 0x21	; 33
     278:	a0 e0       	ldi	r26, 0x00	; 0
     27a:	b0 e2       	ldi	r27, 0x20	; 32
     27c:	e6 ea       	ldi	r30, 0xA6	; 166
     27e:	f7 e7       	ldi	r31, 0x77	; 119
     280:	00 e0       	ldi	r16, 0x00	; 0
     282:	0b bf       	out	0x3b, r16	; 59
     284:	02 c0       	rjmp	.+4      	; 0x28a <__do_copy_data+0x14>
     286:	07 90       	elpm	r0, Z+
     288:	0d 92       	st	X+, r0
     28a:	a4 3b       	cpi	r26, 0xB4	; 180
     28c:	b1 07       	cpc	r27, r17
     28e:	d9 f7       	brne	.-10     	; 0x286 <__do_copy_data+0x10>

00000290 <__do_clear_bss>:
     290:	2f e2       	ldi	r18, 0x2F	; 47
     292:	a4 eb       	ldi	r26, 0xB4	; 180
     294:	b1 e2       	ldi	r27, 0x21	; 33
     296:	01 c0       	rjmp	.+2      	; 0x29a <.do_clear_bss_start>

00000298 <.do_clear_bss_loop>:
     298:	1d 92       	st	X+, r1

0000029a <.do_clear_bss_start>:
     29a:	a7 35       	cpi	r26, 0x57	; 87
     29c:	b2 07       	cpc	r27, r18
     29e:	e1 f7       	brne	.-8      	; 0x298 <.do_clear_bss_loop>
     2a0:	0e 94 5b 33 	call	0x66b6	; 0x66b6 <main>
     2a4:	0c 94 d1 3b 	jmp	0x77a2	; 0x77a2 <_exit>

000002a8 <__bad_interrupt>:
     2a8:	ab ce       	rjmp	.-682    	; 0x0 <__vectors>

000002aa <clock_setup_32_mhz_pll>:
	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;
}

void clock_setup_32_mhz_pll(void) {
	
	OSC.PLLCTRL = 0 | OSC_PLLFAC4_bm;
     2aa:	80 e1       	ldi	r24, 0x10	; 16
     2ac:	80 93 55 00 	sts	0x0055, r24
	OSC.CTRL |= OSC_PLLEN_bm;
     2b0:	80 91 50 00 	lds	r24, 0x0050
     2b4:	80 61       	ori	r24, 0x10	; 16
     2b6:	80 93 50 00 	sts	0x0050, r24
	while ( !(OSC.STATUS & OSC_PLLEN_bm) ) ;
     2ba:	80 91 51 00 	lds	r24, 0x0051
     2be:	84 ff       	sbrs	r24, 4
     2c0:	fc cf       	rjmp	.-8      	; 0x2ba <clock_setup_32_mhz_pll+0x10>
	CCP = CCP_IOREG_gc;
     2c2:	88 ed       	ldi	r24, 0xD8	; 216
     2c4:	84 bf       	out	0x34, r24	; 52
	CLK.CTRL = (CLK.CTRL & ~CLK_SCLKSEL_gm ) | CLK_SCLKSEL_PLL_gc;
     2c6:	80 91 40 00 	lds	r24, 0x0040
     2ca:	88 7f       	andi	r24, 0xF8	; 248
     2cc:	84 60       	ori	r24, 0x04	; 4
     2ce:	80 93 40 00 	sts	0x0040, r24
     2d2:	08 95       	ret

000002d4 <esp8266_on>:
		 {
			 int tempPos = 0;
			 bool finishedCopying = false;
			 for (int i=nameStartPos; i<strlen(rx_buffer); i++)
			 {
				 if ( (rx_buffer[i]==' ') && !finishedCopying )  { finishedCopying = true;   }
     2d4:	e0 e6       	ldi	r30, 0x60	; 96
     2d6:	f6 e0       	ldi	r31, 0x06	; 6
     2d8:	80 e2       	ldi	r24, 0x20	; 32
     2da:	81 83       	std	Z+1, r24	; 0x01
     2dc:	85 83       	std	Z+5, r24	; 0x05
     2de:	2f ef       	ldi	r18, 0xFF	; 255
     2e0:	33 e2       	ldi	r19, 0x23	; 35
     2e2:	84 ef       	ldi	r24, 0xF4	; 244
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	21 50       	subi	r18, 0x01	; 1
     2e8:	30 40       	sbci	r19, 0x00	; 0
     2ea:	80 40       	sbci	r24, 0x00	; 0
     2ec:	90 40       	sbci	r25, 0x00	; 0
     2ee:	d9 f7       	brne	.-10     	; 0x2e6 <esp8266_on+0x12>
     2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <esp8266_on+0x1e>
     2f2:	00 00       	nop
     2f4:	08 95       	ret

000002f6 <esp8266_join_ap>:
     2f6:	0f 93       	push	r16
     2f8:	1f 93       	push	r17
     2fa:	cf 93       	push	r28
     2fc:	df 93       	push	r29
     2fe:	8b 01       	movw	r16, r22
     300:	c1 e3       	ldi	r28, 0x31	; 49
     302:	d6 e2       	ldi	r29, 0x26	; 38
     304:	24 e6       	ldi	r18, 0x64	; 100
     306:	de 01       	movw	r26, r28
     308:	1d 92       	st	X+, r1
     30a:	2a 95       	dec	r18
     30c:	e9 f7       	brne	.-6      	; 0x308 <esp8266_join_ap+0x12>
     30e:	fe 01       	movw	r30, r28
     310:	01 90       	ld	r0, Z+
     312:	00 20       	and	r0, r0
     314:	e9 f7       	brne	.-6      	; 0x310 <esp8266_join_ap+0x1a>
     316:	9f 01       	movw	r18, r30
     318:	21 50       	subi	r18, 0x01	; 1
     31a:	31 09       	sbc	r19, r1
     31c:	21 53       	subi	r18, 0x31	; 49
     31e:	36 42       	sbci	r19, 0x26	; 38
     320:	d9 01       	movw	r26, r18
     322:	af 5c       	subi	r26, 0xCF	; 207
     324:	b9 4d       	sbci	r27, 0xD9	; 217
     326:	4a e0       	ldi	r20, 0x0A	; 10
     328:	e8 e4       	ldi	r30, 0x48	; 72
     32a:	f0 e2       	ldi	r31, 0x20	; 32
     32c:	01 90       	ld	r0, Z+
     32e:	0d 92       	st	X+, r0
     330:	4a 95       	dec	r20
     332:	e1 f7       	brne	.-8      	; 0x32c <esp8266_join_ap+0x36>
     334:	bc 01       	movw	r22, r24
     336:	c9 01       	movw	r24, r18
     338:	85 5c       	subi	r24, 0xC5	; 197
     33a:	99 4d       	sbci	r25, 0xD9	; 217
     33c:	0e 94 bc 38 	call	0x7178	; 0x7178 <strcpy>
     340:	fe 01       	movw	r30, r28
     342:	01 90       	ld	r0, Z+
     344:	00 20       	and	r0, r0
     346:	e9 f7       	brne	.-6      	; 0x342 <esp8266_join_ap+0x4c>
     348:	31 97       	sbiw	r30, 0x01	; 1
     34a:	42 e2       	ldi	r20, 0x22	; 34
     34c:	5c e2       	ldi	r21, 0x2C	; 44
     34e:	62 e2       	ldi	r22, 0x22	; 34
     350:	70 e0       	ldi	r23, 0x00	; 0
     352:	40 83       	st	Z, r20
     354:	51 83       	std	Z+1, r21	; 0x01
     356:	62 83       	std	Z+2, r22	; 0x02
     358:	73 83       	std	Z+3, r23	; 0x03
     35a:	b8 01       	movw	r22, r16
     35c:	cf 01       	movw	r24, r30
     35e:	03 96       	adiw	r24, 0x03	; 3
     360:	0e 94 bc 38 	call	0x7178	; 0x7178 <strcpy>
     364:	fe 01       	movw	r30, r28
     366:	01 90       	ld	r0, Z+
     368:	00 20       	and	r0, r0
     36a:	e9 f7       	brne	.-6      	; 0x366 <esp8266_join_ap+0x70>
     36c:	31 97       	sbiw	r30, 0x01	; 1
     36e:	82 e2       	ldi	r24, 0x22	; 34
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	80 83       	st	Z, r24
     374:	91 83       	std	Z+1, r25	; 0x01
     376:	10 92 9c 25 	sts	0x259C, r1
     37a:	10 92 9d 25 	sts	0x259D, r1
     37e:	88 ee       	ldi	r24, 0xE8	; 232
     380:	93 e0       	ldi	r25, 0x03	; 3
     382:	e4 eb       	ldi	r30, 0xB4	; 180
     384:	f1 e2       	ldi	r31, 0x21	; 33
     386:	df 01       	movw	r26, r30
     388:	9c 01       	movw	r18, r24
     38a:	1d 92       	st	X+, r1
     38c:	21 50       	subi	r18, 0x01	; 1
     38e:	30 40       	sbci	r19, 0x00	; 0
     390:	e1 f7       	brne	.-8      	; 0x38a <esp8266_join_ap+0x94>
     392:	df 93       	push	r29
     394:	cf 93       	push	r28
     396:	8b e1       	ldi	r24, 0x1B	; 27
     398:	90 e2       	ldi	r25, 0x20	; 32
     39a:	9f 93       	push	r25
     39c:	8f 93       	push	r24
     39e:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     3a2:	5a ea       	ldi	r21, 0xAA	; 170
     3a4:	86 ee       	ldi	r24, 0xE6	; 230
     3a6:	96 e9       	ldi	r25, 0x96	; 150
     3a8:	a1 e0       	ldi	r26, 0x01	; 1
     3aa:	51 50       	subi	r21, 0x01	; 1
     3ac:	80 40       	sbci	r24, 0x00	; 0
     3ae:	90 40       	sbci	r25, 0x00	; 0
     3b0:	a0 40       	sbci	r26, 0x00	; 0
     3b2:	d9 f7       	brne	.-10     	; 0x3aa <esp8266_join_ap+0xb4>
     3b4:	00 00       	nop
     3b6:	10 92 9c 25 	sts	0x259C, r1
     3ba:	10 92 9d 25 	sts	0x259D, r1
     3be:	88 ee       	ldi	r24, 0xE8	; 232
     3c0:	93 e0       	ldi	r25, 0x03	; 3
     3c2:	e4 eb       	ldi	r30, 0xB4	; 180
     3c4:	f1 e2       	ldi	r31, 0x21	; 33
     3c6:	df 01       	movw	r26, r30
     3c8:	9c 01       	movw	r18, r24
     3ca:	1d 92       	st	X+, r1
     3cc:	21 50       	subi	r18, 0x01	; 1
     3ce:	30 40       	sbci	r19, 0x00	; 0
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <esp8266_join_ap+0xd4>
     3d2:	83 e5       	ldi	r24, 0x53	; 83
     3d4:	90 e2       	ldi	r25, 0x20	; 32
     3d6:	9f 93       	push	r25
     3d8:	8f 93       	push	r24
     3da:	8b e1       	ldi	r24, 0x1B	; 27
     3dc:	90 e2       	ldi	r25, 0x20	; 32
     3de:	9f 93       	push	r25
     3e0:	8f 93       	push	r24
     3e2:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     3e6:	3a ea       	ldi	r19, 0xAA	; 170
     3e8:	46 ee       	ldi	r20, 0xE6	; 230
     3ea:	56 e9       	ldi	r21, 0x96	; 150
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	31 50       	subi	r19, 0x01	; 1
     3f0:	40 40       	sbci	r20, 0x00	; 0
     3f2:	50 40       	sbci	r21, 0x00	; 0
     3f4:	80 40       	sbci	r24, 0x00	; 0
     3f6:	d9 f7       	brne	.-10     	; 0x3ee <esp8266_join_ap+0xf8>
     3f8:	00 00       	nop
     3fa:	60 e2       	ldi	r22, 0x20	; 32
     3fc:	70 e2       	ldi	r23, 0x20	; 32
     3fe:	84 eb       	ldi	r24, 0xB4	; 180
     400:	91 e2       	ldi	r25, 0x21	; 33
     402:	0e 94 c3 38 	call	0x7186	; 0x7186 <strstr>
     406:	21 e0       	ldi	r18, 0x01	; 1
     408:	ad b7       	in	r26, 0x3d	; 61
     40a:	be b7       	in	r27, 0x3e	; 62
     40c:	18 96       	adiw	r26, 0x08	; 8
     40e:	ad bf       	out	0x3d, r26	; 61
     410:	be bf       	out	0x3e, r27	; 62
     412:	89 2b       	or	r24, r25
     414:	31 f0       	breq	.+12     	; 0x422 <esp8266_join_ap+0x12c>
     416:	82 2f       	mov	r24, r18
     418:	df 91       	pop	r29
     41a:	cf 91       	pop	r28
     41c:	1f 91       	pop	r17
     41e:	0f 91       	pop	r16
     420:	08 95       	ret
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	82 2f       	mov	r24, r18
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	1f 91       	pop	r17
     42c:	0f 91       	pop	r16
     42e:	08 95       	ret

00000430 <esp8266_setup_webserver>:
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	10 92 9c 25 	sts	0x259C, r1
     438:	10 92 9d 25 	sts	0x259D, r1
     43c:	c4 eb       	ldi	r28, 0xB4	; 180
     43e:	d1 e2       	ldi	r29, 0x21	; 33
     440:	88 ee       	ldi	r24, 0xE8	; 232
     442:	93 e0       	ldi	r25, 0x03	; 3
     444:	de 01       	movw	r26, r28
     446:	fc 01       	movw	r30, r24
     448:	1d 92       	st	X+, r1
     44a:	31 97       	sbiw	r30, 0x01	; 1
     44c:	e9 f7       	brne	.-6      	; 0x448 <esp8266_setup_webserver+0x18>
     44e:	83 e1       	ldi	r24, 0x13	; 19
     450:	90 e2       	ldi	r25, 0x20	; 32
     452:	9f 93       	push	r25
     454:	8f 93       	push	r24
     456:	8b e1       	ldi	r24, 0x1B	; 27
     458:	90 e2       	ldi	r25, 0x20	; 32
     45a:	9f 93       	push	r25
     45c:	8f 93       	push	r24
     45e:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     462:	ff ef       	ldi	r31, 0xFF	; 255
     464:	23 e2       	ldi	r18, 0x23	; 35
     466:	34 ef       	ldi	r19, 0xF4	; 244
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	f1 50       	subi	r31, 0x01	; 1
     46c:	20 40       	sbci	r18, 0x00	; 0
     46e:	30 40       	sbci	r19, 0x00	; 0
     470:	80 40       	sbci	r24, 0x00	; 0
     472:	d9 f7       	brne	.-10     	; 0x46a <esp8266_setup_webserver+0x3a>
     474:	00 c0       	rjmp	.+0      	; 0x476 <esp8266_setup_webserver+0x46>
     476:	00 00       	nop
     478:	60 e2       	ldi	r22, 0x20	; 32
     47a:	70 e2       	ldi	r23, 0x20	; 32
     47c:	ce 01       	movw	r24, r28
     47e:	0e 94 c3 38 	call	0x7186	; 0x7186 <strstr>
     482:	0f 90       	pop	r0
     484:	0f 90       	pop	r0
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	89 2b       	or	r24, r25
     48c:	09 f4       	brne	.+2      	; 0x490 <esp8266_setup_webserver+0x60>
     48e:	be c0       	rjmp	.+380    	; 0x60c <esp8266_setup_webserver+0x1dc>
     490:	10 92 9c 25 	sts	0x259C, r1
     494:	10 92 9d 25 	sts	0x259D, r1
     498:	88 ee       	ldi	r24, 0xE8	; 232
     49a:	93 e0       	ldi	r25, 0x03	; 3
     49c:	de 01       	movw	r26, r28
     49e:	fc 01       	movw	r30, r24
     4a0:	1d 92       	st	X+, r1
     4a2:	31 97       	sbiw	r30, 0x01	; 1
     4a4:	e9 f7       	brne	.-6      	; 0x4a0 <esp8266_setup_webserver+0x70>
     4a6:	8c e3       	ldi	r24, 0x3C	; 60
     4a8:	90 e2       	ldi	r25, 0x20	; 32
     4aa:	9f 93       	push	r25
     4ac:	8f 93       	push	r24
     4ae:	8b e1       	ldi	r24, 0x1B	; 27
     4b0:	90 e2       	ldi	r25, 0x20	; 32
     4b2:	9f 93       	push	r25
     4b4:	8f 93       	push	r24
     4b6:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     4ba:	ff ef       	ldi	r31, 0xFF	; 255
     4bc:	23 ed       	ldi	r18, 0xD3	; 211
     4be:	30 e3       	ldi	r19, 0x30	; 48
     4c0:	f1 50       	subi	r31, 0x01	; 1
     4c2:	20 40       	sbci	r18, 0x00	; 0
     4c4:	30 40       	sbci	r19, 0x00	; 0
     4c6:	e1 f7       	brne	.-8      	; 0x4c0 <esp8266_setup_webserver+0x90>
     4c8:	00 c0       	rjmp	.+0      	; 0x4ca <esp8266_setup_webserver+0x9a>
     4ca:	00 00       	nop
     4cc:	66 e9       	ldi	r22, 0x96	; 150
     4ce:	70 e2       	ldi	r23, 0x20	; 32
     4d0:	81 ea       	ldi	r24, 0xA1	; 161
     4d2:	90 e2       	ldi	r25, 0x20	; 32
     4d4:	10 df       	rcall	.-480    	; 0x2f6 <esp8266_join_ap>
     4d6:	10 92 9c 25 	sts	0x259C, r1
     4da:	10 92 9d 25 	sts	0x259D, r1
     4de:	88 ee       	ldi	r24, 0xE8	; 232
     4e0:	93 e0       	ldi	r25, 0x03	; 3
     4e2:	de 01       	movw	r26, r28
     4e4:	9c 01       	movw	r18, r24
     4e6:	1d 92       	st	X+, r1
     4e8:	21 50       	subi	r18, 0x01	; 1
     4ea:	30 40       	sbci	r19, 0x00	; 0
     4ec:	e1 f7       	brne	.-8      	; 0x4e6 <esp8266_setup_webserver+0xb6>
     4ee:	8b ea       	ldi	r24, 0xAB	; 171
     4f0:	90 e2       	ldi	r25, 0x20	; 32
     4f2:	9f 93       	push	r25
     4f4:	8f 93       	push	r24
     4f6:	8b e1       	ldi	r24, 0x1B	; 27
     4f8:	90 e2       	ldi	r25, 0x20	; 32
     4fa:	9f 93       	push	r25
     4fc:	8f 93       	push	r24
     4fe:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     502:	3f ef       	ldi	r19, 0xFF	; 255
     504:	83 ed       	ldi	r24, 0xD3	; 211
     506:	90 e3       	ldi	r25, 0x30	; 48
     508:	31 50       	subi	r19, 0x01	; 1
     50a:	80 40       	sbci	r24, 0x00	; 0
     50c:	90 40       	sbci	r25, 0x00	; 0
     50e:	e1 f7       	brne	.-8      	; 0x508 <esp8266_setup_webserver+0xd8>
     510:	00 c0       	rjmp	.+0      	; 0x512 <esp8266_setup_webserver+0xe2>
     512:	00 00       	nop
     514:	de 01       	movw	r26, r28
     516:	0d 90       	ld	r0, X+
     518:	00 20       	and	r0, r0
     51a:	e9 f7       	brne	.-6      	; 0x516 <esp8266_setup_webserver+0xe6>
     51c:	11 97       	sbiw	r26, 0x01	; 1
     51e:	a4 5b       	subi	r26, 0xB4	; 180
     520:	b1 42       	sbci	r27, 0x21	; 33
     522:	fe 01       	movw	r30, r28
     524:	2d b7       	in	r18, 0x3d	; 61
     526:	3e b7       	in	r19, 0x3e	; 62
     528:	28 5f       	subi	r18, 0xF8	; 248
     52a:	3f 4f       	sbci	r19, 0xFF	; 255
     52c:	2d bf       	out	0x3d, r18	; 61
     52e:	3e bf       	out	0x3e, r19	; 62
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	21 91       	ld	r18, Z+
     536:	01 96       	adiw	r24, 0x01	; 1
     538:	a8 17       	cp	r26, r24
     53a:	b9 07       	cpc	r27, r25
     53c:	0c f0       	brlt	.+2      	; 0x540 <esp8266_setup_webserver+0x110>
     53e:	51 c0       	rjmp	.+162    	; 0x5e2 <esp8266_setup_webserver+0x1b2>
     540:	86 e0       	ldi	r24, 0x06	; 6
     542:	e5 eb       	ldi	r30, 0xB5	; 181
     544:	f0 e2       	ldi	r31, 0x20	; 32
     546:	a5 ef       	ldi	r26, 0xF5	; 245
     548:	b5 e2       	ldi	r27, 0x25	; 37
     54a:	01 90       	ld	r0, Z+
     54c:	0d 92       	st	X+, r0
     54e:	8a 95       	dec	r24
     550:	e1 f7       	brne	.-8      	; 0x54a <esp8266_setup_webserver+0x11a>
     552:	10 92 9c 25 	sts	0x259C, r1
     556:	10 92 9d 25 	sts	0x259D, r1
     55a:	88 ee       	ldi	r24, 0xE8	; 232
     55c:	93 e0       	ldi	r25, 0x03	; 3
     55e:	de 01       	movw	r26, r28
     560:	fc 01       	movw	r30, r24
     562:	1d 92       	st	X+, r1
     564:	31 97       	sbiw	r30, 0x01	; 1
     566:	e9 f7       	brne	.-6      	; 0x562 <esp8266_setup_webserver+0x132>
     568:	8b eb       	ldi	r24, 0xBB	; 187
     56a:	90 e2       	ldi	r25, 0x20	; 32
     56c:	9f 93       	push	r25
     56e:	8f 93       	push	r24
     570:	8b e1       	ldi	r24, 0x1B	; 27
     572:	90 e2       	ldi	r25, 0x20	; 32
     574:	9f 93       	push	r25
     576:	8f 93       	push	r24
     578:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     57c:	ff ef       	ldi	r31, 0xFF	; 255
     57e:	23 ed       	ldi	r18, 0xD3	; 211
     580:	30 e3       	ldi	r19, 0x30	; 48
     582:	f1 50       	subi	r31, 0x01	; 1
     584:	20 40       	sbci	r18, 0x00	; 0
     586:	30 40       	sbci	r19, 0x00	; 0
     588:	e1 f7       	brne	.-8      	; 0x582 <esp8266_setup_webserver+0x152>
     58a:	00 c0       	rjmp	.+0      	; 0x58c <esp8266_setup_webserver+0x15c>
     58c:	00 00       	nop
     58e:	10 92 9c 25 	sts	0x259C, r1
     592:	10 92 9d 25 	sts	0x259D, r1
     596:	88 ee       	ldi	r24, 0xE8	; 232
     598:	93 e0       	ldi	r25, 0x03	; 3
     59a:	e4 eb       	ldi	r30, 0xB4	; 180
     59c:	f1 e2       	ldi	r31, 0x21	; 33
     59e:	df 01       	movw	r26, r30
     5a0:	9c 01       	movw	r18, r24
     5a2:	1d 92       	st	X+, r1
     5a4:	21 50       	subi	r18, 0x01	; 1
     5a6:	30 40       	sbci	r19, 0x00	; 0
     5a8:	e1 f7       	brne	.-8      	; 0x5a2 <esp8266_setup_webserver+0x172>
     5aa:	87 ec       	ldi	r24, 0xC7	; 199
     5ac:	90 e2       	ldi	r25, 0x20	; 32
     5ae:	9f 93       	push	r25
     5b0:	8f 93       	push	r24
     5b2:	8b e1       	ldi	r24, 0x1B	; 27
     5b4:	90 e2       	ldi	r25, 0x20	; 32
     5b6:	9f 93       	push	r25
     5b8:	8f 93       	push	r24
     5ba:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     5be:	3f ef       	ldi	r19, 0xFF	; 255
     5c0:	83 ed       	ldi	r24, 0xD3	; 211
     5c2:	90 e3       	ldi	r25, 0x30	; 48
     5c4:	31 50       	subi	r19, 0x01	; 1
     5c6:	80 40       	sbci	r24, 0x00	; 0
     5c8:	90 40       	sbci	r25, 0x00	; 0
     5ca:	e1 f7       	brne	.-8      	; 0x5c4 <esp8266_setup_webserver+0x194>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <esp8266_setup_webserver+0x19e>
     5ce:	00 00       	nop
     5d0:	ad b7       	in	r26, 0x3d	; 61
     5d2:	be b7       	in	r27, 0x3e	; 62
     5d4:	18 96       	adiw	r26, 0x08	; 8
     5d6:	ad bf       	out	0x3d, r26	; 61
     5d8:	be bf       	out	0x3e, r27	; 62
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	df 91       	pop	r29
     5de:	cf 91       	pop	r28
     5e0:	08 95       	ret
     5e2:	2a 30       	cpi	r18, 0x0A	; 10
     5e4:	09 f0       	breq	.+2      	; 0x5e8 <esp8266_setup_webserver+0x1b8>
     5e6:	a6 cf       	rjmp	.-180    	; 0x534 <esp8266_setup_webserver+0x104>
     5e8:	fc 01       	movw	r30, r24
     5ea:	ec 54       	subi	r30, 0x4C	; 76
     5ec:	fe 4d       	sbci	r31, 0xDE	; 222
     5ee:	a5 ef       	ldi	r26, 0xF5	; 245
     5f0:	b5 e2       	ldi	r27, 0x25	; 37
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	02 c0       	rjmp	.+4      	; 0x5fc <esp8266_setup_webserver+0x1cc>
     5f8:	2d 93       	st	X+, r18
     5fa:	01 96       	adiw	r24, 0x01	; 1
     5fc:	21 91       	ld	r18, Z+
     5fe:	2d 30       	cpi	r18, 0x0D	; 13
     600:	d9 f7       	brne	.-10     	; 0x5f8 <esp8266_setup_webserver+0x1c8>
     602:	fc 01       	movw	r30, r24
     604:	eb 50       	subi	r30, 0x0B	; 11
     606:	fa 4d       	sbci	r31, 0xDA	; 218
     608:	10 82       	st	Z, r1
     60a:	a3 cf       	rjmp	.-186    	; 0x552 <esp8266_setup_webserver+0x122>
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	08 95       	ret

00000614 <esp8266_run_simple_webserver>:
     614:	ef 92       	push	r14
     616:	ff 92       	push	r15
     618:	0f 93       	push	r16
     61a:	1f 93       	push	r17
     61c:	cf 93       	push	r28
     61e:	df 93       	push	r29
     620:	00 d0       	rcall	.+0      	; 0x622 <esp8266_run_simple_webserver+0xe>
     622:	cd b7       	in	r28, 0x3d	; 61
     624:	de b7       	in	r29, 0x3e	; 62
     626:	18 2f       	mov	r17, r24
     628:	09 2f       	mov	r16, r25
     62a:	20 91 9c 25 	lds	r18, 0x259C
     62e:	30 91 9d 25 	lds	r19, 0x259D
     632:	2f 3b       	cpi	r18, 0xBF	; 191
     634:	31 05       	cpc	r19, r1
     636:	08 f4       	brcc	.+2      	; 0x63a <esp8266_run_simple_webserver+0x26>
     638:	a7 c0       	rjmp	.+334    	; 0x788 <esp8266_run_simple_webserver+0x174>
     63a:	2f ef       	ldi	r18, 0xFF	; 255
     63c:	37 ea       	ldi	r19, 0xA7	; 167
     63e:	81 e6       	ldi	r24, 0x61	; 97
     640:	21 50       	subi	r18, 0x01	; 1
     642:	30 40       	sbci	r19, 0x00	; 0
     644:	80 40       	sbci	r24, 0x00	; 0
     646:	e1 f7       	brne	.-8      	; 0x640 <esp8266_run_simple_webserver+0x2c>
     648:	00 c0       	rjmp	.+0      	; 0x64a <esp8266_run_simple_webserver+0x36>
     64a:	00 00       	nop
     64c:	a1 2f       	mov	r26, r17
     64e:	b9 2f       	mov	r27, r25
     650:	fd 01       	movw	r30, r26
     652:	01 90       	ld	r0, Z+
     654:	00 20       	and	r0, r0
     656:	e9 f7       	brne	.-6      	; 0x652 <esp8266_run_simple_webserver+0x3e>
     658:	31 97       	sbiw	r30, 0x01	; 1
     65a:	ea 1b       	sub	r30, r26
     65c:	fb 0b       	sbc	r31, r27
     65e:	ff 93       	push	r31
     660:	ef 93       	push	r30
     662:	26 e7       	ldi	r18, 0x76	; 118
     664:	30 e2       	ldi	r19, 0x20	; 32
     666:	3f 93       	push	r19
     668:	2f 93       	push	r18
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	7f 93       	push	r23
     66e:	60 e0       	ldi	r22, 0x00	; 0
     670:	6f 93       	push	r22
     672:	69 83       	std	Y+1, r22	; 0x01
     674:	7a 83       	std	Y+2, r23	; 0x02
     676:	0e 94 1b 39 	call	0x7236	; 0x7236 <sprintf>
     67a:	51 e3       	ldi	r21, 0x31	; 49
     67c:	e5 2e       	mov	r14, r21
     67e:	56 e2       	ldi	r21, 0x26	; 38
     680:	f5 2e       	mov	r15, r21
     682:	8d e0       	ldi	r24, 0x0D	; 13
     684:	e9 ed       	ldi	r30, 0xD9	; 217
     686:	f0 e2       	ldi	r31, 0x20	; 32
     688:	d7 01       	movw	r26, r14
     68a:	01 90       	ld	r0, Z+
     68c:	0d 92       	st	X+, r0
     68e:	8a 95       	dec	r24
     690:	e1 f7       	brne	.-8      	; 0x68a <esp8266_run_simple_webserver+0x76>
     692:	69 81       	ldd	r22, Y+1	; 0x01
     694:	7a 81       	ldd	r23, Y+2	; 0x02
     696:	8e e3       	ldi	r24, 0x3E	; 62
     698:	96 e2       	ldi	r25, 0x26	; 38
     69a:	0e 94 bc 38 	call	0x7178	; 0x7178 <strcpy>
     69e:	f7 01       	movw	r30, r14
     6a0:	01 90       	ld	r0, Z+
     6a2:	00 20       	and	r0, r0
     6a4:	e9 f7       	brne	.-6      	; 0x6a0 <esp8266_run_simple_webserver+0x8c>
     6a6:	31 97       	sbiw	r30, 0x01	; 1
     6a8:	8d e0       	ldi	r24, 0x0D	; 13
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	80 83       	st	Z, r24
     6ae:	91 83       	std	Z+1, r25	; 0x01
     6b0:	10 92 9c 25 	sts	0x259C, r1
     6b4:	10 92 9d 25 	sts	0x259D, r1
     6b8:	88 ee       	ldi	r24, 0xE8	; 232
     6ba:	93 e0       	ldi	r25, 0x03	; 3
     6bc:	e4 eb       	ldi	r30, 0xB4	; 180
     6be:	f1 e2       	ldi	r31, 0x21	; 33
     6c0:	df 01       	movw	r26, r30
     6c2:	9c 01       	movw	r18, r24
     6c4:	1d 92       	st	X+, r1
     6c6:	21 50       	subi	r18, 0x01	; 1
     6c8:	30 40       	sbci	r19, 0x00	; 0
     6ca:	e1 f7       	brne	.-8      	; 0x6c4 <esp8266_run_simple_webserver+0xb0>
     6cc:	ff 92       	push	r15
     6ce:	ef 92       	push	r14
     6d0:	2b e1       	ldi	r18, 0x1B	; 27
     6d2:	30 e2       	ldi	r19, 0x20	; 32
     6d4:	3f 93       	push	r19
     6d6:	2f 93       	push	r18
     6d8:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     6dc:	3f ef       	ldi	r19, 0xFF	; 255
     6de:	8f e4       	ldi	r24, 0x4F	; 79
     6e0:	93 ec       	ldi	r25, 0xC3	; 195
     6e2:	31 50       	subi	r19, 0x01	; 1
     6e4:	80 40       	sbci	r24, 0x00	; 0
     6e6:	90 40       	sbci	r25, 0x00	; 0
     6e8:	e1 f7       	brne	.-8      	; 0x6e2 <esp8266_run_simple_webserver+0xce>
     6ea:	00 c0       	rjmp	.+0      	; 0x6ec <esp8266_run_simple_webserver+0xd8>
     6ec:	00 00       	nop
     6ee:	10 92 9c 25 	sts	0x259C, r1
     6f2:	10 92 9d 25 	sts	0x259D, r1
     6f6:	28 ee       	ldi	r18, 0xE8	; 232
     6f8:	33 e0       	ldi	r19, 0x03	; 3
     6fa:	e4 eb       	ldi	r30, 0xB4	; 180
     6fc:	f1 e2       	ldi	r31, 0x21	; 33
     6fe:	df 01       	movw	r26, r30
     700:	c9 01       	movw	r24, r18
     702:	1d 92       	st	X+, r1
     704:	01 97       	sbiw	r24, 0x01	; 1
     706:	e9 f7       	brne	.-6      	; 0x702 <esp8266_run_simple_webserver+0xee>
     708:	0f 93       	push	r16
     70a:	1f 93       	push	r17
     70c:	8b e1       	ldi	r24, 0x1B	; 27
     70e:	90 e2       	ldi	r25, 0x20	; 32
     710:	9f 93       	push	r25
     712:	8f 93       	push	r24
     714:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     718:	9f ef       	ldi	r25, 0xFF	; 255
     71a:	af e4       	ldi	r26, 0x4F	; 79
     71c:	b3 ec       	ldi	r27, 0xC3	; 195
     71e:	91 50       	subi	r25, 0x01	; 1
     720:	a0 40       	sbci	r26, 0x00	; 0
     722:	b0 40       	sbci	r27, 0x00	; 0
     724:	e1 f7       	brne	.-8      	; 0x71e <esp8266_run_simple_webserver+0x10a>
     726:	00 c0       	rjmp	.+0      	; 0x728 <esp8266_run_simple_webserver+0x114>
     728:	00 00       	nop
     72a:	e4 e5       	ldi	r30, 0x54	; 84
     72c:	fd ec       	ldi	r31, 0xCD	; 205
     72e:	2d e2       	ldi	r18, 0x2D	; 45
     730:	33 e0       	ldi	r19, 0x03	; 3
     732:	e1 50       	subi	r30, 0x01	; 1
     734:	f0 40       	sbci	r31, 0x00	; 0
     736:	20 40       	sbci	r18, 0x00	; 0
     738:	30 40       	sbci	r19, 0x00	; 0
     73a:	d9 f7       	brne	.-10     	; 0x732 <esp8266_run_simple_webserver+0x11e>
     73c:	00 c0       	rjmp	.+0      	; 0x73e <esp8266_run_simple_webserver+0x12a>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <esp8266_run_simple_webserver+0x12c>
     740:	00 00       	nop
     742:	10 92 9c 25 	sts	0x259C, r1
     746:	10 92 9d 25 	sts	0x259D, r1
     74a:	88 ee       	ldi	r24, 0xE8	; 232
     74c:	93 e0       	ldi	r25, 0x03	; 3
     74e:	e4 eb       	ldi	r30, 0xB4	; 180
     750:	f1 e2       	ldi	r31, 0x21	; 33
     752:	df 01       	movw	r26, r30
     754:	9c 01       	movw	r18, r24
     756:	1d 92       	st	X+, r1
     758:	21 50       	subi	r18, 0x01	; 1
     75a:	30 40       	sbci	r19, 0x00	; 0
     75c:	e1 f7       	brne	.-8      	; 0x756 <esp8266_run_simple_webserver+0x142>
     75e:	87 ee       	ldi	r24, 0xE7	; 231
     760:	90 e2       	ldi	r25, 0x20	; 32
     762:	9f 93       	push	r25
     764:	8f 93       	push	r24
     766:	8b e1       	ldi	r24, 0x1B	; 27
     768:	90 e2       	ldi	r25, 0x20	; 32
     76a:	9f 93       	push	r25
     76c:	8f 93       	push	r24
     76e:	0e 94 dd 38 	call	0x71ba	; 0x71ba <printf>
     772:	3f ef       	ldi	r19, 0xFF	; 255
     774:	83 ec       	ldi	r24, 0xC3	; 195
     776:	99 e0       	ldi	r25, 0x09	; 9
     778:	31 50       	subi	r19, 0x01	; 1
     77a:	80 40       	sbci	r24, 0x00	; 0
     77c:	90 40       	sbci	r25, 0x00	; 0
     77e:	e1 f7       	brne	.-8      	; 0x778 <esp8266_run_simple_webserver+0x164>
     780:	00 c0       	rjmp	.+0      	; 0x782 <esp8266_run_simple_webserver+0x16e>
     782:	00 00       	nop
     784:	cd bf       	out	0x3d, r28	; 61
     786:	de bf       	out	0x3e, r29	; 62
     788:	0f 90       	pop	r0
     78a:	0f 90       	pop	r0
     78c:	df 91       	pop	r29
     78e:	cf 91       	pop	r28
     790:	1f 91       	pop	r17
     792:	0f 91       	pop	r16
     794:	ff 90       	pop	r15
     796:	ef 90       	pop	r14
     798:	08 95       	ret

0000079a <__vector_88>:
 _delay_ms (100);
 
 // drop to here and wait for next request.
}

ISR(USARTD0_RXC_vect) {
     79a:	1f 92       	push	r1
     79c:	0f 92       	push	r0
     79e:	0f b6       	in	r0, 0x3f	; 63
     7a0:	0f 92       	push	r0
     7a2:	11 24       	eor	r1, r1
     7a4:	0b b6       	in	r0, 0x3b	; 59
     7a6:	0f 92       	push	r0
     7a8:	2f 93       	push	r18
     7aa:	3f 93       	push	r19
     7ac:	8f 93       	push	r24
     7ae:	9f 93       	push	r25
     7b0:	ef 93       	push	r30
     7b2:	ff 93       	push	r31
	rx_buffer[rx_ptr++] = USARTD0.DATA;
     7b4:	80 91 9c 25 	lds	r24, 0x259C
     7b8:	90 91 9d 25 	lds	r25, 0x259D
     7bc:	9c 01       	movw	r18, r24
     7be:	2f 5f       	subi	r18, 0xFF	; 255
     7c0:	3f 4f       	sbci	r19, 0xFF	; 255
     7c2:	20 93 9c 25 	sts	0x259C, r18
     7c6:	30 93 9d 25 	sts	0x259D, r19
     7ca:	20 91 a0 09 	lds	r18, 0x09A0
     7ce:	fc 01       	movw	r30, r24
     7d0:	ec 54       	subi	r30, 0x4C	; 76
     7d2:	fe 4d       	sbci	r31, 0xDE	; 222
     7d4:	20 83       	st	Z, r18
     7d6:	ff 91       	pop	r31
     7d8:	ef 91       	pop	r30
     7da:	9f 91       	pop	r25
     7dc:	8f 91       	pop	r24
     7de:	3f 91       	pop	r19
     7e0:	2f 91       	pop	r18
     7e2:	0f 90       	pop	r0
     7e4:	0b be       	out	0x3b, r0	; 59
     7e6:	0f 90       	pop	r0
     7e8:	0f be       	out	0x3f, r0	; 63
     7ea:	0f 90       	pop	r0
     7ec:	1f 90       	pop	r1
     7ee:	18 95       	reti

000007f0 <sync_window.part.2>:
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
			res = FR_DISK_ERR;
		} else {
			fs->wflag = 0;
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
     7f0:	8f 92       	push	r8
     7f2:	9f 92       	push	r9
     7f4:	af 92       	push	r10
     7f6:	bf 92       	push	r11
     7f8:	cf 92       	push	r12
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	cf 93       	push	r28
     806:	df 93       	push	r29
     808:	ec 01       	movw	r28, r24
     80a:	ce a4       	ldd	r12, Y+46	; 0x2e
     80c:	df a4       	ldd	r13, Y+47	; 0x2f
     80e:	e8 a8       	ldd	r14, Y+48	; 0x30
     810:	f9 a8       	ldd	r15, Y+49	; 0x31
     812:	5c 01       	movw	r10, r24
     814:	02 e3       	ldi	r16, 0x32	; 50
     816:	a0 0e       	add	r10, r16
     818:	b1 1c       	adc	r11, r1
     81a:	01 e0       	ldi	r16, 0x01	; 1
     81c:	10 e0       	ldi	r17, 0x00	; 0
     81e:	a7 01       	movw	r20, r14
     820:	96 01       	movw	r18, r12
     822:	b5 01       	movw	r22, r10
     824:	89 81       	ldd	r24, Y+1	; 0x01
     826:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     82a:	81 11       	cpse	r24, r1
     82c:	40 c0       	rjmp	.+128    	; 0x8ae <sync_window.part.2+0xbe>
     82e:	1c 82       	std	Y+4, r1	; 0x04
     830:	8a 8d       	ldd	r24, Y+26	; 0x1a
     832:	9b 8d       	ldd	r25, Y+27	; 0x1b
     834:	ac 8d       	ldd	r26, Y+28	; 0x1c
     836:	bd 8d       	ldd	r27, Y+29	; 0x1d
     838:	4a a1       	ldd	r20, Y+34	; 0x22
     83a:	5b a1       	ldd	r21, Y+35	; 0x23
     83c:	6c a1       	ldd	r22, Y+36	; 0x24
     83e:	7d a1       	ldd	r23, Y+37	; 0x25
     840:	97 01       	movw	r18, r14
     842:	86 01       	movw	r16, r12
     844:	04 1b       	sub	r16, r20
     846:	15 0b       	sbc	r17, r21
     848:	26 0b       	sbc	r18, r22
     84a:	37 0b       	sbc	r19, r23
     84c:	08 17       	cp	r16, r24
     84e:	19 07       	cpc	r17, r25
     850:	2a 07       	cpc	r18, r26
     852:	3b 07       	cpc	r19, r27
     854:	f0 f4       	brcc	.+60     	; 0x892 <sync_window.part.2+0xa2>
     856:	8b 80       	ldd	r8, Y+3	; 0x03
     858:	91 2c       	mov	r9, r1
     85a:	12 e0       	ldi	r17, 0x02	; 2
     85c:	81 16       	cp	r8, r17
     85e:	91 04       	cpc	r9, r1
     860:	28 f4       	brcc	.+10     	; 0x86c <sync_window.part.2+0x7c>
     862:	17 c0       	rjmp	.+46     	; 0x892 <sync_window.part.2+0xa2>
     864:	8a 8d       	ldd	r24, Y+26	; 0x1a
     866:	9b 8d       	ldd	r25, Y+27	; 0x1b
     868:	ac 8d       	ldd	r26, Y+28	; 0x1c
     86a:	bd 8d       	ldd	r27, Y+29	; 0x1d
     86c:	c8 0e       	add	r12, r24
     86e:	d9 1e       	adc	r13, r25
     870:	ea 1e       	adc	r14, r26
     872:	fb 1e       	adc	r15, r27
     874:	01 e0       	ldi	r16, 0x01	; 1
     876:	10 e0       	ldi	r17, 0x00	; 0
     878:	a7 01       	movw	r20, r14
     87a:	96 01       	movw	r18, r12
     87c:	b5 01       	movw	r22, r10
     87e:	89 81       	ldd	r24, Y+1	; 0x01
     880:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     884:	21 e0       	ldi	r18, 0x01	; 1
     886:	82 1a       	sub	r8, r18
     888:	91 08       	sbc	r9, r1
     88a:	31 e0       	ldi	r19, 0x01	; 1
     88c:	83 16       	cp	r8, r19
     88e:	91 04       	cpc	r9, r1
     890:	49 f7       	brne	.-46     	; 0x864 <sync_window.part.2+0x74>
     892:	80 e0       	ldi	r24, 0x00	; 0
     894:	df 91       	pop	r29
     896:	cf 91       	pop	r28
     898:	1f 91       	pop	r17
     89a:	0f 91       	pop	r16
     89c:	ff 90       	pop	r15
     89e:	ef 90       	pop	r14
     8a0:	df 90       	pop	r13
     8a2:	cf 90       	pop	r12
     8a4:	bf 90       	pop	r11
     8a6:	af 90       	pop	r10
     8a8:	9f 90       	pop	r9
     8aa:	8f 90       	pop	r8
     8ac:	08 95       	ret
     8ae:	81 e0       	ldi	r24, 0x01	; 1
     8b0:	f1 cf       	rjmp	.-30     	; 0x894 <sync_window.part.2+0xa4>

000008b2 <move_window>:
     8b2:	4f 92       	push	r4
     8b4:	5f 92       	push	r5
     8b6:	6f 92       	push	r6
     8b8:	7f 92       	push	r7
     8ba:	8f 92       	push	r8
     8bc:	9f 92       	push	r9
     8be:	af 92       	push	r10
     8c0:	bf 92       	push	r11
     8c2:	cf 92       	push	r12
     8c4:	df 92       	push	r13
     8c6:	ef 92       	push	r14
     8c8:	ff 92       	push	r15
     8ca:	0f 93       	push	r16
     8cc:	1f 93       	push	r17
     8ce:	cf 93       	push	r28
     8d0:	df 93       	push	r29
     8d2:	ec 01       	movw	r28, r24
     8d4:	2a 01       	movw	r4, r20
     8d6:	3b 01       	movw	r6, r22
     8d8:	ce a4       	ldd	r12, Y+46	; 0x2e
     8da:	df a4       	ldd	r13, Y+47	; 0x2f
     8dc:	e8 a8       	ldd	r14, Y+48	; 0x30
     8de:	f9 a8       	ldd	r15, Y+49	; 0x31
     8e0:	c4 16       	cp	r12, r20
     8e2:	d5 06       	cpc	r13, r21
     8e4:	e6 06       	cpc	r14, r22
     8e6:	f7 06       	cpc	r15, r23
     8e8:	09 f4       	brne	.+2      	; 0x8ec <move_window+0x3a>
     8ea:	6f c0       	rjmp	.+222    	; 0x9ca <move_window+0x118>
     8ec:	8c 81       	ldd	r24, Y+4	; 0x04
     8ee:	5e 01       	movw	r10, r28
     8f0:	81 11       	cpse	r24, r1
     8f2:	22 c0       	rjmp	.+68     	; 0x938 <move_window+0x86>
     8f4:	82 e3       	ldi	r24, 0x32	; 50
     8f6:	a8 0e       	add	r10, r24
     8f8:	b1 1c       	adc	r11, r1
     8fa:	01 e0       	ldi	r16, 0x01	; 1
     8fc:	10 e0       	ldi	r17, 0x00	; 0
     8fe:	a3 01       	movw	r20, r6
     900:	92 01       	movw	r18, r4
     902:	b5 01       	movw	r22, r10
     904:	89 81       	ldd	r24, Y+1	; 0x01
     906:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
     90a:	81 11       	cpse	r24, r1
     90c:	56 c0       	rjmp	.+172    	; 0x9ba <move_window+0x108>
     90e:	4e a6       	std	Y+46, r4	; 0x2e
     910:	5f a6       	std	Y+47, r5	; 0x2f
     912:	68 aa       	std	Y+48, r6	; 0x30
     914:	79 aa       	std	Y+49, r7	; 0x31
     916:	df 91       	pop	r29
     918:	cf 91       	pop	r28
     91a:	1f 91       	pop	r17
     91c:	0f 91       	pop	r16
     91e:	ff 90       	pop	r15
     920:	ef 90       	pop	r14
     922:	df 90       	pop	r13
     924:	cf 90       	pop	r12
     926:	bf 90       	pop	r11
     928:	af 90       	pop	r10
     92a:	9f 90       	pop	r9
     92c:	8f 90       	pop	r8
     92e:	7f 90       	pop	r7
     930:	6f 90       	pop	r6
     932:	5f 90       	pop	r5
     934:	4f 90       	pop	r4
     936:	08 95       	ret
     938:	02 e3       	ldi	r16, 0x32	; 50
     93a:	a0 0e       	add	r10, r16
     93c:	b1 1c       	adc	r11, r1
     93e:	01 e0       	ldi	r16, 0x01	; 1
     940:	10 e0       	ldi	r17, 0x00	; 0
     942:	a7 01       	movw	r20, r14
     944:	96 01       	movw	r18, r12
     946:	b5 01       	movw	r22, r10
     948:	89 81       	ldd	r24, Y+1	; 0x01
     94a:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     94e:	81 11       	cpse	r24, r1
     950:	3a c0       	rjmp	.+116    	; 0x9c6 <move_window+0x114>
     952:	1c 82       	std	Y+4, r1	; 0x04
     954:	8a 8d       	ldd	r24, Y+26	; 0x1a
     956:	9b 8d       	ldd	r25, Y+27	; 0x1b
     958:	ac 8d       	ldd	r26, Y+28	; 0x1c
     95a:	bd 8d       	ldd	r27, Y+29	; 0x1d
     95c:	4a a1       	ldd	r20, Y+34	; 0x22
     95e:	5b a1       	ldd	r21, Y+35	; 0x23
     960:	6c a1       	ldd	r22, Y+36	; 0x24
     962:	7d a1       	ldd	r23, Y+37	; 0x25
     964:	97 01       	movw	r18, r14
     966:	86 01       	movw	r16, r12
     968:	04 1b       	sub	r16, r20
     96a:	15 0b       	sbc	r17, r21
     96c:	26 0b       	sbc	r18, r22
     96e:	37 0b       	sbc	r19, r23
     970:	08 17       	cp	r16, r24
     972:	19 07       	cpc	r17, r25
     974:	2a 07       	cpc	r18, r26
     976:	3b 07       	cpc	r19, r27
     978:	08 f0       	brcs	.+2      	; 0x97c <move_window+0xca>
     97a:	bf cf       	rjmp	.-130    	; 0x8fa <move_window+0x48>
     97c:	8b 80       	ldd	r8, Y+3	; 0x03
     97e:	91 2c       	mov	r9, r1
     980:	12 e0       	ldi	r17, 0x02	; 2
     982:	81 16       	cp	r8, r17
     984:	91 04       	cpc	r9, r1
     986:	28 f4       	brcc	.+10     	; 0x992 <move_window+0xe0>
     988:	b8 cf       	rjmp	.-144    	; 0x8fa <move_window+0x48>
     98a:	8a 8d       	ldd	r24, Y+26	; 0x1a
     98c:	9b 8d       	ldd	r25, Y+27	; 0x1b
     98e:	ac 8d       	ldd	r26, Y+28	; 0x1c
     990:	bd 8d       	ldd	r27, Y+29	; 0x1d
     992:	c8 0e       	add	r12, r24
     994:	d9 1e       	adc	r13, r25
     996:	ea 1e       	adc	r14, r26
     998:	fb 1e       	adc	r15, r27
     99a:	01 e0       	ldi	r16, 0x01	; 1
     99c:	10 e0       	ldi	r17, 0x00	; 0
     99e:	a7 01       	movw	r20, r14
     9a0:	96 01       	movw	r18, r12
     9a2:	b5 01       	movw	r22, r10
     9a4:	89 81       	ldd	r24, Y+1	; 0x01
     9a6:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     9aa:	21 e0       	ldi	r18, 0x01	; 1
     9ac:	82 1a       	sub	r8, r18
     9ae:	91 08       	sbc	r9, r1
     9b0:	31 e0       	ldi	r19, 0x01	; 1
     9b2:	83 16       	cp	r8, r19
     9b4:	91 04       	cpc	r9, r1
     9b6:	49 f7       	brne	.-46     	; 0x98a <move_window+0xd8>
     9b8:	a0 cf       	rjmp	.-192    	; 0x8fa <move_window+0x48>
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	44 24       	eor	r4, r4
     9be:	4a 94       	dec	r4
     9c0:	54 2c       	mov	r5, r4
     9c2:	32 01       	movw	r6, r4
     9c4:	a4 cf       	rjmp	.-184    	; 0x90e <move_window+0x5c>
     9c6:	81 e0       	ldi	r24, 0x01	; 1
     9c8:	a6 cf       	rjmp	.-180    	; 0x916 <move_window+0x64>
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	a4 cf       	rjmp	.-184    	; 0x916 <move_window+0x64>

000009ce <sync_fs>:
     9ce:	8f 92       	push	r8
     9d0:	9f 92       	push	r9
     9d2:	af 92       	push	r10
     9d4:	bf 92       	push	r11
     9d6:	cf 92       	push	r12
     9d8:	df 92       	push	r13
     9da:	ef 92       	push	r14
     9dc:	ff 92       	push	r15
     9de:	0f 93       	push	r16
     9e0:	1f 93       	push	r17
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	ec 01       	movw	r28, r24
     9e8:	8c 81       	ldd	r24, Y+4	; 0x04
     9ea:	81 11       	cpse	r24, r1
     9ec:	1d c0       	rjmp	.+58     	; 0xa28 <sync_fs+0x5a>
     9ee:	88 81       	ld	r24, Y
     9f0:	83 30       	cpi	r24, 0x03	; 3
     9f2:	09 f4       	brne	.+2      	; 0x9f6 <sync_fs+0x28>
     9f4:	5f c0       	rjmp	.+190    	; 0xab4 <sync_fs+0xe6>
     9f6:	40 e0       	ldi	r20, 0x00	; 0
     9f8:	50 e0       	ldi	r21, 0x00	; 0
     9fa:	60 e0       	ldi	r22, 0x00	; 0
     9fc:	89 81       	ldd	r24, Y+1	; 0x01
     9fe:	0e 94 f7 2b 	call	0x57ee	; 0x57ee <disk_ioctl>
     a02:	91 e0       	ldi	r25, 0x01	; 1
     a04:	88 23       	and	r24, r24
     a06:	71 f0       	breq	.+28     	; 0xa24 <sync_fs+0x56>
     a08:	89 2f       	mov	r24, r25
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	1f 91       	pop	r17
     a10:	0f 91       	pop	r16
     a12:	ff 90       	pop	r15
     a14:	ef 90       	pop	r14
     a16:	df 90       	pop	r13
     a18:	cf 90       	pop	r12
     a1a:	bf 90       	pop	r11
     a1c:	af 90       	pop	r10
     a1e:	9f 90       	pop	r9
     a20:	8f 90       	pop	r8
     a22:	08 95       	ret
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	f0 cf       	rjmp	.-32     	; 0xa08 <sync_fs+0x3a>
     a28:	ce a4       	ldd	r12, Y+46	; 0x2e
     a2a:	df a4       	ldd	r13, Y+47	; 0x2f
     a2c:	e8 a8       	ldd	r14, Y+48	; 0x30
     a2e:	f9 a8       	ldd	r15, Y+49	; 0x31
     a30:	5e 01       	movw	r10, r28
     a32:	02 e3       	ldi	r16, 0x32	; 50
     a34:	a0 0e       	add	r10, r16
     a36:	b1 1c       	adc	r11, r1
     a38:	01 e0       	ldi	r16, 0x01	; 1
     a3a:	10 e0       	ldi	r17, 0x00	; 0
     a3c:	a7 01       	movw	r20, r14
     a3e:	96 01       	movw	r18, r12
     a40:	b5 01       	movw	r22, r10
     a42:	89 81       	ldd	r24, Y+1	; 0x01
     a44:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     a48:	81 11       	cpse	r24, r1
     a4a:	80 c0       	rjmp	.+256    	; 0xb4c <sync_fs+0x17e>
     a4c:	1c 82       	std	Y+4, r1	; 0x04
     a4e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a50:	9b 8d       	ldd	r25, Y+27	; 0x1b
     a52:	ac 8d       	ldd	r26, Y+28	; 0x1c
     a54:	bd 8d       	ldd	r27, Y+29	; 0x1d
     a56:	4a a1       	ldd	r20, Y+34	; 0x22
     a58:	5b a1       	ldd	r21, Y+35	; 0x23
     a5a:	6c a1       	ldd	r22, Y+36	; 0x24
     a5c:	7d a1       	ldd	r23, Y+37	; 0x25
     a5e:	97 01       	movw	r18, r14
     a60:	86 01       	movw	r16, r12
     a62:	04 1b       	sub	r16, r20
     a64:	15 0b       	sbc	r17, r21
     a66:	26 0b       	sbc	r18, r22
     a68:	37 0b       	sbc	r19, r23
     a6a:	08 17       	cp	r16, r24
     a6c:	19 07       	cpc	r17, r25
     a6e:	2a 07       	cpc	r18, r26
     a70:	3b 07       	cpc	r19, r27
     a72:	08 f0       	brcs	.+2      	; 0xa76 <sync_fs+0xa8>
     a74:	bc cf       	rjmp	.-136    	; 0x9ee <sync_fs+0x20>
     a76:	8b 80       	ldd	r8, Y+3	; 0x03
     a78:	91 2c       	mov	r9, r1
     a7a:	12 e0       	ldi	r17, 0x02	; 2
     a7c:	81 16       	cp	r8, r17
     a7e:	91 04       	cpc	r9, r1
     a80:	28 f4       	brcc	.+10     	; 0xa8c <sync_fs+0xbe>
     a82:	b5 cf       	rjmp	.-150    	; 0x9ee <sync_fs+0x20>
     a84:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a86:	9b 8d       	ldd	r25, Y+27	; 0x1b
     a88:	ac 8d       	ldd	r26, Y+28	; 0x1c
     a8a:	bd 8d       	ldd	r27, Y+29	; 0x1d
     a8c:	c8 0e       	add	r12, r24
     a8e:	d9 1e       	adc	r13, r25
     a90:	ea 1e       	adc	r14, r26
     a92:	fb 1e       	adc	r15, r27
     a94:	01 e0       	ldi	r16, 0x01	; 1
     a96:	10 e0       	ldi	r17, 0x00	; 0
     a98:	a7 01       	movw	r20, r14
     a9a:	96 01       	movw	r18, r12
     a9c:	b5 01       	movw	r22, r10
     a9e:	89 81       	ldd	r24, Y+1	; 0x01
     aa0:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     aa4:	21 e0       	ldi	r18, 0x01	; 1
     aa6:	82 1a       	sub	r8, r18
     aa8:	91 08       	sbc	r9, r1
     aaa:	31 e0       	ldi	r19, 0x01	; 1
     aac:	83 16       	cp	r8, r19
     aae:	91 04       	cpc	r9, r1
     ab0:	49 f7       	brne	.-46     	; 0xa84 <sync_fs+0xb6>
     ab2:	9d cf       	rjmp	.-198    	; 0x9ee <sync_fs+0x20>
     ab4:	8d 81       	ldd	r24, Y+5	; 0x05
     ab6:	81 30       	cpi	r24, 0x01	; 1
     ab8:	09 f0       	breq	.+2      	; 0xabc <sync_fs+0xee>
     aba:	9d cf       	rjmp	.-198    	; 0x9f6 <sync_fs+0x28>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	92 e0       	ldi	r25, 0x02	; 2
     ac0:	be 01       	movw	r22, r28
     ac2:	6e 5c       	subi	r22, 0xCE	; 206
     ac4:	7f 4f       	sbci	r23, 0xFF	; 255
     ac6:	fb 01       	movw	r30, r22
     ac8:	8c 01       	movw	r16, r24
     aca:	11 92       	st	Z+, r1
     acc:	01 50       	subi	r16, 0x01	; 1
     ace:	10 40       	sbci	r17, 0x00	; 0
     ad0:	e1 f7       	brne	.-8      	; 0xaca <sync_fs+0xfc>
     ad2:	85 e5       	ldi	r24, 0x55	; 85
     ad4:	9a ea       	ldi	r25, 0xAA	; 170
     ad6:	fe 01       	movw	r30, r28
     ad8:	e0 5d       	subi	r30, 0xD0	; 208
     ada:	fd 4f       	sbci	r31, 0xFD	; 253
     adc:	80 83       	st	Z, r24
     ade:	91 83       	std	Z+1, r25	; 0x01
     ae0:	82 e5       	ldi	r24, 0x52	; 82
     ae2:	92 e5       	ldi	r25, 0x52	; 82
     ae4:	a1 e6       	ldi	r26, 0x61	; 97
     ae6:	b1 e4       	ldi	r27, 0x41	; 65
     ae8:	8a ab       	std	Y+50, r24	; 0x32
     aea:	9b ab       	std	Y+51, r25	; 0x33
     aec:	ac ab       	std	Y+52, r26	; 0x34
     aee:	bd ab       	std	Y+53, r27	; 0x35
     af0:	82 e7       	ldi	r24, 0x72	; 114
     af2:	92 e7       	ldi	r25, 0x72	; 114
     af4:	a1 e4       	ldi	r26, 0x41	; 65
     af6:	b1 e6       	ldi	r27, 0x61	; 97
     af8:	7a 97       	sbiw	r30, 0x1a	; 26
     afa:	80 83       	st	Z, r24
     afc:	91 83       	std	Z+1, r25	; 0x01
     afe:	a2 83       	std	Z+2, r26	; 0x02
     b00:	b3 83       	std	Z+3, r27	; 0x03
     b02:	8e 85       	ldd	r24, Y+14	; 0x0e
     b04:	9f 85       	ldd	r25, Y+15	; 0x0f
     b06:	a8 89       	ldd	r26, Y+16	; 0x10
     b08:	b9 89       	ldd	r27, Y+17	; 0x11
     b0a:	34 96       	adiw	r30, 0x04	; 4
     b0c:	80 83       	st	Z, r24
     b0e:	91 83       	std	Z+1, r25	; 0x01
     b10:	a2 83       	std	Z+2, r26	; 0x02
     b12:	b3 83       	std	Z+3, r27	; 0x03
     b14:	8a 85       	ldd	r24, Y+10	; 0x0a
     b16:	9b 85       	ldd	r25, Y+11	; 0x0b
     b18:	ac 85       	ldd	r26, Y+12	; 0x0c
     b1a:	bd 85       	ldd	r27, Y+13	; 0x0d
     b1c:	34 96       	adiw	r30, 0x04	; 4
     b1e:	80 83       	st	Z, r24
     b20:	91 83       	std	Z+1, r25	; 0x01
     b22:	a2 83       	std	Z+2, r26	; 0x02
     b24:	b3 83       	std	Z+3, r27	; 0x03
     b26:	2e 8d       	ldd	r18, Y+30	; 0x1e
     b28:	3f 8d       	ldd	r19, Y+31	; 0x1f
     b2a:	48 a1       	ldd	r20, Y+32	; 0x20
     b2c:	59 a1       	ldd	r21, Y+33	; 0x21
     b2e:	2f 5f       	subi	r18, 0xFF	; 255
     b30:	3f 4f       	sbci	r19, 0xFF	; 255
     b32:	4f 4f       	sbci	r20, 0xFF	; 255
     b34:	5f 4f       	sbci	r21, 0xFF	; 255
     b36:	2e a7       	std	Y+46, r18	; 0x2e
     b38:	3f a7       	std	Y+47, r19	; 0x2f
     b3a:	48 ab       	std	Y+48, r20	; 0x30
     b3c:	59 ab       	std	Y+49, r21	; 0x31
     b3e:	01 e0       	ldi	r16, 0x01	; 1
     b40:	10 e0       	ldi	r17, 0x00	; 0
     b42:	89 81       	ldd	r24, Y+1	; 0x01
     b44:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     b48:	1d 82       	std	Y+5, r1	; 0x05
     b4a:	55 cf       	rjmp	.-342    	; 0x9f6 <sync_fs+0x28>
     b4c:	91 e0       	ldi	r25, 0x01	; 1
     b4e:	5c cf       	rjmp	.-328    	; 0xa08 <sync_fs+0x3a>

00000b50 <put_fat.part.6>:
     b50:	2f 92       	push	r2
     b52:	3f 92       	push	r3
     b54:	4f 92       	push	r4
     b56:	5f 92       	push	r5
     b58:	6f 92       	push	r6
     b5a:	7f 92       	push	r7
     b5c:	8f 92       	push	r8
     b5e:	9f 92       	push	r9
     b60:	af 92       	push	r10
     b62:	bf 92       	push	r11
     b64:	cf 92       	push	r12
     b66:	df 92       	push	r13
     b68:	ef 92       	push	r14
     b6a:	ff 92       	push	r15
     b6c:	0f 93       	push	r16
     b6e:	1f 93       	push	r17
     b70:	cf 93       	push	r28
     b72:	df 93       	push	r29
     b74:	cd b7       	in	r28, 0x3d	; 61
     b76:	de b7       	in	r29, 0x3e	; 62
     b78:	60 97       	sbiw	r28, 0x10	; 16
     b7a:	cd bf       	out	0x3d, r28	; 61
     b7c:	de bf       	out	0x3e, r29	; 62
     b7e:	8f 87       	std	Y+15, r24	; 0x0f
     b80:	98 8b       	std	Y+16, r25	; 0x10
     b82:	6a 01       	movw	r12, r20
     b84:	7b 01       	movw	r14, r22
     b86:	48 01       	movw	r8, r16
     b88:	59 01       	movw	r10, r18
     b8a:	dc 01       	movw	r26, r24
     b8c:	8c 91       	ld	r24, X
     b8e:	82 30       	cpi	r24, 0x02	; 2
     b90:	09 f4       	brne	.+2      	; 0xb94 <put_fat.part.6+0x44>
     b92:	73 c1       	rjmp	.+742    	; 0xe7a <put_fat.part.6+0x32a>
     b94:	83 30       	cpi	r24, 0x03	; 3
     b96:	09 f4       	brne	.+2      	; 0xb9a <put_fat.part.6+0x4a>
     b98:	2a c1       	rjmp	.+596    	; 0xdee <put_fat.part.6+0x29e>
     b9a:	81 30       	cpi	r24, 0x01	; 1
     b9c:	b9 f0       	breq	.+46     	; 0xbcc <put_fat.part.6+0x7c>
     b9e:	82 e0       	ldi	r24, 0x02	; 2
     ba0:	60 96       	adiw	r28, 0x10	; 16
     ba2:	cd bf       	out	0x3d, r28	; 61
     ba4:	de bf       	out	0x3e, r29	; 62
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	1f 91       	pop	r17
     bac:	0f 91       	pop	r16
     bae:	ff 90       	pop	r15
     bb0:	ef 90       	pop	r14
     bb2:	df 90       	pop	r13
     bb4:	cf 90       	pop	r12
     bb6:	bf 90       	pop	r11
     bb8:	af 90       	pop	r10
     bba:	9f 90       	pop	r9
     bbc:	8f 90       	pop	r8
     bbe:	7f 90       	pop	r7
     bc0:	6f 90       	pop	r6
     bc2:	5f 90       	pop	r5
     bc4:	4f 90       	pop	r4
     bc6:	3f 90       	pop	r3
     bc8:	2f 90       	pop	r2
     bca:	08 95       	ret
     bcc:	1a 01       	movw	r2, r20
     bce:	36 94       	lsr	r3
     bd0:	27 94       	ror	r2
     bd2:	24 0e       	add	r2, r20
     bd4:	35 1e       	adc	r3, r21
     bd6:	92 96       	adiw	r26, 0x22	; 34
     bd8:	8d 91       	ld	r24, X+
     bda:	9d 91       	ld	r25, X+
     bdc:	0d 90       	ld	r0, X+
     bde:	bc 91       	ld	r27, X
     be0:	a0 2d       	mov	r26, r0
     be2:	91 01       	movw	r18, r2
     be4:	23 2f       	mov	r18, r19
     be6:	33 27       	eor	r19, r19
     be8:	26 95       	lsr	r18
     bea:	ac 01       	movw	r20, r24
     bec:	bd 01       	movw	r22, r26
     bee:	42 0f       	add	r20, r18
     bf0:	53 1f       	adc	r21, r19
     bf2:	61 1d       	adc	r22, r1
     bf4:	71 1d       	adc	r23, r1
     bf6:	49 83       	std	Y+1, r20	; 0x01
     bf8:	5a 83       	std	Y+2, r21	; 0x02
     bfa:	6b 83       	std	Y+3, r22	; 0x03
     bfc:	7c 83       	std	Y+4, r23	; 0x04
     bfe:	ef 85       	ldd	r30, Y+15	; 0x0f
     c00:	f8 89       	ldd	r31, Y+16	; 0x10
     c02:	46 a4       	ldd	r4, Z+46	; 0x2e
     c04:	57 a4       	ldd	r5, Z+47	; 0x2f
     c06:	60 a8       	ldd	r6, Z+48	; 0x30
     c08:	71 a8       	ldd	r7, Z+49	; 0x31
     c0a:	44 15       	cp	r20, r4
     c0c:	55 05       	cpc	r21, r5
     c0e:	66 05       	cpc	r22, r6
     c10:	77 05       	cpc	r23, r7
     c12:	09 f4       	brne	.+2      	; 0xc16 <put_fat.part.6+0xc6>
     c14:	cb c2       	rjmp	.+1430   	; 0x11ac <put_fat.part.6+0x65c>
     c16:	84 81       	ldd	r24, Z+4	; 0x04
     c18:	81 11       	cpse	r24, r1
     c1a:	87 c1       	rjmp	.+782    	; 0xf2a <put_fat.part.6+0x3da>
     c1c:	0f 85       	ldd	r16, Y+15	; 0x0f
     c1e:	18 89       	ldd	r17, Y+16	; 0x10
     c20:	0e 5c       	subi	r16, 0xCE	; 206
     c22:	1f 4f       	sbci	r17, 0xFF	; 255
     c24:	0d 83       	std	Y+5, r16	; 0x05
     c26:	1e 83       	std	Y+6, r17	; 0x06
     c28:	01 e0       	ldi	r16, 0x01	; 1
     c2a:	10 e0       	ldi	r17, 0x00	; 0
     c2c:	29 81       	ldd	r18, Y+1	; 0x01
     c2e:	3a 81       	ldd	r19, Y+2	; 0x02
     c30:	4b 81       	ldd	r20, Y+3	; 0x03
     c32:	5c 81       	ldd	r21, Y+4	; 0x04
     c34:	6d 81       	ldd	r22, Y+5	; 0x05
     c36:	7e 81       	ldd	r23, Y+6	; 0x06
     c38:	af 85       	ldd	r26, Y+15	; 0x0f
     c3a:	b8 89       	ldd	r27, Y+16	; 0x10
     c3c:	11 96       	adiw	r26, 0x01	; 1
     c3e:	8c 91       	ld	r24, X
     c40:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
     c44:	81 11       	cpse	r24, r1
     c46:	0e c1       	rjmp	.+540    	; 0xe64 <put_fat.part.6+0x314>
     c48:	09 81       	ldd	r16, Y+1	; 0x01
     c4a:	1a 81       	ldd	r17, Y+2	; 0x02
     c4c:	2b 81       	ldd	r18, Y+3	; 0x03
     c4e:	3c 81       	ldd	r19, Y+4	; 0x04
     c50:	af 85       	ldd	r26, Y+15	; 0x0f
     c52:	b8 89       	ldd	r27, Y+16	; 0x10
     c54:	9e 96       	adiw	r26, 0x2e	; 46
     c56:	0d 93       	st	X+, r16
     c58:	1d 93       	st	X+, r17
     c5a:	2d 93       	st	X+, r18
     c5c:	3c 93       	st	X, r19
     c5e:	d1 97       	sbiw	r26, 0x31	; 49
     c60:	fd 01       	movw	r30, r26
     c62:	82 a1       	ldd	r24, Z+34	; 0x22
     c64:	93 a1       	ldd	r25, Z+35	; 0x23
     c66:	a4 a1       	ldd	r26, Z+36	; 0x24
     c68:	b5 a1       	ldd	r27, Z+37	; 0x25
     c6a:	28 01       	movw	r4, r16
     c6c:	39 01       	movw	r6, r18
     c6e:	f1 01       	movw	r30, r2
     c70:	31 96       	adiw	r30, 0x01	; 1
     c72:	ed 83       	std	Y+5, r30	; 0x05
     c74:	fe 83       	std	Y+6, r31	; 0x06
     c76:	f1 e0       	ldi	r31, 0x01	; 1
     c78:	3f 22       	and	r3, r31
     c7a:	97 01       	movw	r18, r14
     c7c:	86 01       	movw	r16, r12
     c7e:	01 70       	andi	r16, 0x01	; 1
     c80:	11 27       	eor	r17, r17
     c82:	22 27       	eor	r18, r18
     c84:	33 27       	eor	r19, r19
     c86:	0b 87       	std	Y+11, r16	; 0x0b
     c88:	1c 87       	std	Y+12, r17	; 0x0c
     c8a:	2d 87       	std	Y+13, r18	; 0x0d
     c8c:	3e 87       	std	Y+14, r19	; 0x0e
     c8e:	c0 fe       	sbrs	r12, 0
     c90:	87 c2       	rjmp	.+1294   	; 0x11a0 <put_fat.part.6+0x650>
     c92:	ef 85       	ldd	r30, Y+15	; 0x0f
     c94:	f8 89       	ldd	r31, Y+16	; 0x10
     c96:	e2 0d       	add	r30, r2
     c98:	f3 1d       	adc	r31, r3
     c9a:	42 a9       	ldd	r20, Z+50	; 0x32
     c9c:	4f 70       	andi	r20, 0x0F	; 15
     c9e:	10 e1       	ldi	r17, 0x10	; 16
     ca0:	81 9e       	mul	r8, r17
     ca2:	90 01       	movw	r18, r0
     ca4:	11 24       	eor	r1, r1
     ca6:	42 2b       	or	r20, r18
     ca8:	42 ab       	std	Z+50, r20	; 0x32
     caa:	21 e0       	ldi	r18, 0x01	; 1
     cac:	ef 85       	ldd	r30, Y+15	; 0x0f
     cae:	f8 89       	ldd	r31, Y+16	; 0x10
     cb0:	24 83       	std	Z+4, r18	; 0x04
     cb2:	2d 81       	ldd	r18, Y+5	; 0x05
     cb4:	3e 81       	ldd	r19, Y+6	; 0x06
     cb6:	23 2f       	mov	r18, r19
     cb8:	33 27       	eor	r19, r19
     cba:	26 95       	lsr	r18
     cbc:	6c 01       	movw	r12, r24
     cbe:	7d 01       	movw	r14, r26
     cc0:	c2 0e       	add	r12, r18
     cc2:	d3 1e       	adc	r13, r19
     cc4:	e1 1c       	adc	r14, r1
     cc6:	f1 1c       	adc	r15, r1
     cc8:	09 81       	ldd	r16, Y+1	; 0x01
     cca:	1a 81       	ldd	r17, Y+2	; 0x02
     ccc:	2b 81       	ldd	r18, Y+3	; 0x03
     cce:	3c 81       	ldd	r19, Y+4	; 0x04
     cd0:	c0 16       	cp	r12, r16
     cd2:	d1 06       	cpc	r13, r17
     cd4:	e2 06       	cpc	r14, r18
     cd6:	f3 06       	cpc	r15, r19
     cd8:	09 f4       	brne	.+2      	; 0xcdc <put_fat.part.6+0x18c>
     cda:	6a c0       	rjmp	.+212    	; 0xdb0 <put_fat.part.6+0x260>
     cdc:	a9 01       	movw	r20, r18
     cde:	98 01       	movw	r18, r16
     ce0:	df 01       	movw	r26, r30
     ce2:	f2 96       	adiw	r30, 0x32	; 50
     ce4:	ef 83       	std	Y+7, r30	; 0x07
     ce6:	f8 87       	std	Y+8, r31	; 0x08
     ce8:	01 e0       	ldi	r16, 0x01	; 1
     cea:	10 e0       	ldi	r17, 0x00	; 0
     cec:	bf 01       	movw	r22, r30
     cee:	11 96       	adiw	r26, 0x01	; 1
     cf0:	8c 91       	ld	r24, X
     cf2:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     cf6:	81 11       	cpse	r24, r1
     cf8:	be c0       	rjmp	.+380    	; 0xe76 <put_fat.part.6+0x326>
     cfa:	ef 85       	ldd	r30, Y+15	; 0x0f
     cfc:	f8 89       	ldd	r31, Y+16	; 0x10
     cfe:	14 82       	std	Z+4, r1	; 0x04
     d00:	82 8d       	ldd	r24, Z+26	; 0x1a
     d02:	93 8d       	ldd	r25, Z+27	; 0x1b
     d04:	a4 8d       	ldd	r26, Z+28	; 0x1c
     d06:	b5 8d       	ldd	r27, Z+29	; 0x1d
     d08:	42 a1       	ldd	r20, Z+34	; 0x22
     d0a:	53 a1       	ldd	r21, Z+35	; 0x23
     d0c:	64 a1       	ldd	r22, Z+36	; 0x24
     d0e:	75 a1       	ldd	r23, Z+37	; 0x25
     d10:	09 81       	ldd	r16, Y+1	; 0x01
     d12:	1a 81       	ldd	r17, Y+2	; 0x02
     d14:	2b 81       	ldd	r18, Y+3	; 0x03
     d16:	3c 81       	ldd	r19, Y+4	; 0x04
     d18:	04 1b       	sub	r16, r20
     d1a:	15 0b       	sbc	r17, r21
     d1c:	26 0b       	sbc	r18, r22
     d1e:	37 0b       	sbc	r19, r23
     d20:	08 17       	cp	r16, r24
     d22:	19 07       	cpc	r17, r25
     d24:	2a 07       	cpc	r18, r26
     d26:	3b 07       	cpc	r19, r27
     d28:	70 f5       	brcc	.+92     	; 0xd86 <put_fat.part.6+0x236>
     d2a:	23 81       	ldd	r18, Z+3	; 0x03
     d2c:	22 2e       	mov	r2, r18
     d2e:	31 2c       	mov	r3, r1
     d30:	12 e0       	ldi	r17, 0x02	; 2
     d32:	21 16       	cp	r2, r17
     d34:	31 04       	cpc	r3, r1
     d36:	38 f1       	brcs	.+78     	; 0xd86 <put_fat.part.6+0x236>
     d38:	c9 82       	std	Y+1, r12	; 0x01
     d3a:	da 82       	std	Y+2, r13	; 0x02
     d3c:	eb 82       	std	Y+3, r14	; 0x03
     d3e:	fc 82       	std	Y+4, r15	; 0x04
     d40:	ef 80       	ldd	r14, Y+7	; 0x07
     d42:	f8 84       	ldd	r15, Y+8	; 0x08
     d44:	06 c0       	rjmp	.+12     	; 0xd52 <put_fat.part.6+0x202>
     d46:	ef 85       	ldd	r30, Y+15	; 0x0f
     d48:	f8 89       	ldd	r31, Y+16	; 0x10
     d4a:	82 8d       	ldd	r24, Z+26	; 0x1a
     d4c:	93 8d       	ldd	r25, Z+27	; 0x1b
     d4e:	a4 8d       	ldd	r26, Z+28	; 0x1c
     d50:	b5 8d       	ldd	r27, Z+29	; 0x1d
     d52:	48 0e       	add	r4, r24
     d54:	59 1e       	adc	r5, r25
     d56:	6a 1e       	adc	r6, r26
     d58:	7b 1e       	adc	r7, r27
     d5a:	01 e0       	ldi	r16, 0x01	; 1
     d5c:	10 e0       	ldi	r17, 0x00	; 0
     d5e:	a3 01       	movw	r20, r6
     d60:	92 01       	movw	r18, r4
     d62:	b7 01       	movw	r22, r14
     d64:	af 85       	ldd	r26, Y+15	; 0x0f
     d66:	b8 89       	ldd	r27, Y+16	; 0x10
     d68:	11 96       	adiw	r26, 0x01	; 1
     d6a:	8c 91       	ld	r24, X
     d6c:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     d70:	b1 e0       	ldi	r27, 0x01	; 1
     d72:	2b 1a       	sub	r2, r27
     d74:	31 08       	sbc	r3, r1
     d76:	e1 e0       	ldi	r30, 0x01	; 1
     d78:	2e 16       	cp	r2, r30
     d7a:	31 04       	cpc	r3, r1
     d7c:	21 f7       	brne	.-56     	; 0xd46 <put_fat.part.6+0x1f6>
     d7e:	c9 80       	ldd	r12, Y+1	; 0x01
     d80:	da 80       	ldd	r13, Y+2	; 0x02
     d82:	eb 80       	ldd	r14, Y+3	; 0x03
     d84:	fc 80       	ldd	r15, Y+4	; 0x04
     d86:	01 e0       	ldi	r16, 0x01	; 1
     d88:	10 e0       	ldi	r17, 0x00	; 0
     d8a:	a7 01       	movw	r20, r14
     d8c:	96 01       	movw	r18, r12
     d8e:	6f 81       	ldd	r22, Y+7	; 0x07
     d90:	78 85       	ldd	r23, Y+8	; 0x08
     d92:	ef 85       	ldd	r30, Y+15	; 0x0f
     d94:	f8 89       	ldd	r31, Y+16	; 0x10
     d96:	81 81       	ldd	r24, Z+1	; 0x01
     d98:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
     d9c:	81 11       	cpse	r24, r1
     d9e:	62 c0       	rjmp	.+196    	; 0xe64 <put_fat.part.6+0x314>
     da0:	af 85       	ldd	r26, Y+15	; 0x0f
     da2:	b8 89       	ldd	r27, Y+16	; 0x10
     da4:	9e 96       	adiw	r26, 0x2e	; 46
     da6:	cd 92       	st	X+, r12
     da8:	dd 92       	st	X+, r13
     daa:	ed 92       	st	X+, r14
     dac:	fc 92       	st	X, r15
     dae:	d1 97       	sbiw	r26, 0x31	; 49
     db0:	ed 81       	ldd	r30, Y+5	; 0x05
     db2:	fe 81       	ldd	r31, Y+6	; 0x06
     db4:	f1 70       	andi	r31, 0x01	; 1
     db6:	0b 85       	ldd	r16, Y+11	; 0x0b
     db8:	1c 85       	ldd	r17, Y+12	; 0x0c
     dba:	2d 85       	ldd	r18, Y+13	; 0x0d
     dbc:	3e 85       	ldd	r19, Y+14	; 0x0e
     dbe:	01 2b       	or	r16, r17
     dc0:	02 2b       	or	r16, r18
     dc2:	03 2b       	or	r16, r19
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <put_fat.part.6+0x278>
     dc6:	f5 c1       	rjmp	.+1002   	; 0x11b2 <put_fat.part.6+0x662>
     dc8:	74 e0       	ldi	r23, 0x04	; 4
     dca:	b6 94       	lsr	r11
     dcc:	a7 94       	ror	r10
     dce:	97 94       	ror	r9
     dd0:	87 94       	ror	r8
     dd2:	7a 95       	dec	r23
     dd4:	d1 f7       	brne	.-12     	; 0xdca <put_fat.part.6+0x27a>
     dd6:	88 2d       	mov	r24, r8
     dd8:	2f 85       	ldd	r18, Y+15	; 0x0f
     dda:	38 89       	ldd	r19, Y+16	; 0x10
     ddc:	e2 0f       	add	r30, r18
     dde:	f3 1f       	adc	r31, r19
     de0:	d9 01       	movw	r26, r18
     de2:	82 ab       	std	Z+50, r24	; 0x32
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8c 93       	st	X, r24
     dea:	80 e0       	ldi	r24, 0x00	; 0
     dec:	d9 ce       	rjmp	.-590    	; 0xba0 <put_fat.part.6+0x50>
     dee:	8a 01       	movw	r16, r20
     df0:	9b 01       	movw	r18, r22
     df2:	47 e0       	ldi	r20, 0x07	; 7
     df4:	36 95       	lsr	r19
     df6:	27 95       	ror	r18
     df8:	17 95       	ror	r17
     dfa:	07 95       	ror	r16
     dfc:	4a 95       	dec	r20
     dfe:	d1 f7       	brne	.-12     	; 0xdf4 <put_fat.part.6+0x2a4>
     e00:	ef 85       	ldd	r30, Y+15	; 0x0f
     e02:	f8 89       	ldd	r31, Y+16	; 0x10
     e04:	82 a1       	ldd	r24, Z+34	; 0x22
     e06:	93 a1       	ldd	r25, Z+35	; 0x23
     e08:	a4 a1       	ldd	r26, Z+36	; 0x24
     e0a:	b5 a1       	ldd	r27, Z+37	; 0x25
     e0c:	08 0f       	add	r16, r24
     e0e:	19 1f       	adc	r17, r25
     e10:	2a 1f       	adc	r18, r26
     e12:	3b 1f       	adc	r19, r27
     e14:	09 83       	std	Y+1, r16	; 0x01
     e16:	1a 83       	std	Y+2, r17	; 0x02
     e18:	2b 83       	std	Y+3, r18	; 0x03
     e1a:	3c 83       	std	Y+4, r19	; 0x04
     e1c:	46 a4       	ldd	r4, Z+46	; 0x2e
     e1e:	57 a4       	ldd	r5, Z+47	; 0x2f
     e20:	60 a8       	ldd	r6, Z+48	; 0x30
     e22:	71 a8       	ldd	r7, Z+49	; 0x31
     e24:	04 15       	cp	r16, r4
     e26:	15 05       	cpc	r17, r5
     e28:	26 05       	cpc	r18, r6
     e2a:	37 05       	cpc	r19, r7
     e2c:	09 f4       	brne	.+2      	; 0xe30 <put_fat.part.6+0x2e0>
     e2e:	8e c1       	rjmp	.+796    	; 0x114c <put_fat.part.6+0x5fc>
     e30:	84 81       	ldd	r24, Z+4	; 0x04
     e32:	81 11       	cpse	r24, r1
     e34:	28 c1       	rjmp	.+592    	; 0x1086 <put_fat.part.6+0x536>
     e36:	0f 85       	ldd	r16, Y+15	; 0x0f
     e38:	18 89       	ldd	r17, Y+16	; 0x10
     e3a:	0e 5c       	subi	r16, 0xCE	; 206
     e3c:	1f 4f       	sbci	r17, 0xFF	; 255
     e3e:	0d 83       	std	Y+5, r16	; 0x05
     e40:	1e 83       	std	Y+6, r17	; 0x06
     e42:	01 e0       	ldi	r16, 0x01	; 1
     e44:	10 e0       	ldi	r17, 0x00	; 0
     e46:	29 81       	ldd	r18, Y+1	; 0x01
     e48:	3a 81       	ldd	r19, Y+2	; 0x02
     e4a:	4b 81       	ldd	r20, Y+3	; 0x03
     e4c:	5c 81       	ldd	r21, Y+4	; 0x04
     e4e:	6d 81       	ldd	r22, Y+5	; 0x05
     e50:	7e 81       	ldd	r23, Y+6	; 0x06
     e52:	af 85       	ldd	r26, Y+15	; 0x0f
     e54:	b8 89       	ldd	r27, Y+16	; 0x10
     e56:	11 96       	adiw	r26, 0x01	; 1
     e58:	8c 91       	ld	r24, X
     e5a:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
     e5e:	88 23       	and	r24, r24
     e60:	09 f4       	brne	.+2      	; 0xe64 <put_fat.part.6+0x314>
     e62:	68 c1       	rjmp	.+720    	; 0x1134 <put_fat.part.6+0x5e4>
     e64:	8f ef       	ldi	r24, 0xFF	; 255
     e66:	9f ef       	ldi	r25, 0xFF	; 255
     e68:	dc 01       	movw	r26, r24
     e6a:	ef 85       	ldd	r30, Y+15	; 0x0f
     e6c:	f8 89       	ldd	r31, Y+16	; 0x10
     e6e:	86 a7       	std	Z+46, r24	; 0x2e
     e70:	97 a7       	std	Z+47, r25	; 0x2f
     e72:	a0 ab       	std	Z+48, r26	; 0x30
     e74:	b1 ab       	std	Z+49, r27	; 0x31
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	93 ce       	rjmp	.-730    	; 0xba0 <put_fat.part.6+0x50>
     e7a:	33 27       	eor	r19, r19
     e7c:	2f 2d       	mov	r18, r15
     e7e:	1e 2d       	mov	r17, r14
     e80:	0d 2d       	mov	r16, r13
     e82:	ef 85       	ldd	r30, Y+15	; 0x0f
     e84:	f8 89       	ldd	r31, Y+16	; 0x10
     e86:	82 a1       	ldd	r24, Z+34	; 0x22
     e88:	93 a1       	ldd	r25, Z+35	; 0x23
     e8a:	a4 a1       	ldd	r26, Z+36	; 0x24
     e8c:	b5 a1       	ldd	r27, Z+37	; 0x25
     e8e:	08 0f       	add	r16, r24
     e90:	19 1f       	adc	r17, r25
     e92:	2a 1f       	adc	r18, r26
     e94:	3b 1f       	adc	r19, r27
     e96:	09 83       	std	Y+1, r16	; 0x01
     e98:	1a 83       	std	Y+2, r17	; 0x02
     e9a:	2b 83       	std	Y+3, r18	; 0x03
     e9c:	3c 83       	std	Y+4, r19	; 0x04
     e9e:	46 a4       	ldd	r4, Z+46	; 0x2e
     ea0:	57 a4       	ldd	r5, Z+47	; 0x2f
     ea2:	60 a8       	ldd	r6, Z+48	; 0x30
     ea4:	71 a8       	ldd	r7, Z+49	; 0x31
     ea6:	04 15       	cp	r16, r4
     ea8:	15 05       	cpc	r17, r5
     eaa:	26 05       	cpc	r18, r6
     eac:	37 05       	cpc	r19, r7
     eae:	29 f1       	breq	.+74     	; 0xefa <put_fat.part.6+0x3aa>
     eb0:	84 81       	ldd	r24, Z+4	; 0x04
     eb2:	81 11       	cpse	r24, r1
     eb4:	91 c0       	rjmp	.+290    	; 0xfd8 <put_fat.part.6+0x488>
     eb6:	0f 85       	ldd	r16, Y+15	; 0x0f
     eb8:	18 89       	ldd	r17, Y+16	; 0x10
     eba:	0e 5c       	subi	r16, 0xCE	; 206
     ebc:	1f 4f       	sbci	r17, 0xFF	; 255
     ebe:	0d 83       	std	Y+5, r16	; 0x05
     ec0:	1e 83       	std	Y+6, r17	; 0x06
     ec2:	01 e0       	ldi	r16, 0x01	; 1
     ec4:	10 e0       	ldi	r17, 0x00	; 0
     ec6:	29 81       	ldd	r18, Y+1	; 0x01
     ec8:	3a 81       	ldd	r19, Y+2	; 0x02
     eca:	4b 81       	ldd	r20, Y+3	; 0x03
     ecc:	5c 81       	ldd	r21, Y+4	; 0x04
     ece:	6d 81       	ldd	r22, Y+5	; 0x05
     ed0:	7e 81       	ldd	r23, Y+6	; 0x06
     ed2:	af 85       	ldd	r26, Y+15	; 0x0f
     ed4:	b8 89       	ldd	r27, Y+16	; 0x10
     ed6:	11 96       	adiw	r26, 0x01	; 1
     ed8:	8c 91       	ld	r24, X
     eda:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
     ede:	81 11       	cpse	r24, r1
     ee0:	c1 cf       	rjmp	.-126    	; 0xe64 <put_fat.part.6+0x314>
     ee2:	09 81       	ldd	r16, Y+1	; 0x01
     ee4:	1a 81       	ldd	r17, Y+2	; 0x02
     ee6:	2b 81       	ldd	r18, Y+3	; 0x03
     ee8:	3c 81       	ldd	r19, Y+4	; 0x04
     eea:	af 85       	ldd	r26, Y+15	; 0x0f
     eec:	b8 89       	ldd	r27, Y+16	; 0x10
     eee:	9e 96       	adiw	r26, 0x2e	; 46
     ef0:	0d 93       	st	X+, r16
     ef2:	1d 93       	st	X+, r17
     ef4:	2d 93       	st	X+, r18
     ef6:	3c 93       	st	X, r19
     ef8:	d1 97       	sbiw	r26, 0x31	; 49
     efa:	cc 0c       	add	r12, r12
     efc:	dd 1c       	adc	r13, r13
     efe:	ee 1c       	adc	r14, r14
     f00:	ff 1c       	adc	r15, r15
     f02:	e8 94       	clt
     f04:	c0 f8       	bld	r12, 0
     f06:	b1 e0       	ldi	r27, 0x01	; 1
     f08:	db 22       	and	r13, r27
     f0a:	ee 24       	eor	r14, r14
     f0c:	ff 24       	eor	r15, r15
     f0e:	f6 01       	movw	r30, r12
     f10:	f2 96       	adiw	r30, 0x32	; 50
     f12:	0f 85       	ldd	r16, Y+15	; 0x0f
     f14:	18 89       	ldd	r17, Y+16	; 0x10
     f16:	e0 0f       	add	r30, r16
     f18:	f1 1f       	adc	r31, r17
     f1a:	80 82       	st	Z, r8
     f1c:	91 82       	std	Z+1, r9	; 0x01
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	d8 01       	movw	r26, r16
     f22:	14 96       	adiw	r26, 0x04	; 4
     f24:	8c 93       	st	X, r24
     f26:	80 e0       	ldi	r24, 0x00	; 0
     f28:	3b ce       	rjmp	.-906    	; 0xba0 <put_fat.part.6+0x50>
     f2a:	f2 96       	adiw	r30, 0x32	; 50
     f2c:	ed 83       	std	Y+5, r30	; 0x05
     f2e:	fe 83       	std	Y+6, r31	; 0x06
     f30:	01 e0       	ldi	r16, 0x01	; 1
     f32:	10 e0       	ldi	r17, 0x00	; 0
     f34:	a3 01       	movw	r20, r6
     f36:	92 01       	movw	r18, r4
     f38:	bf 01       	movw	r22, r30
     f3a:	af 85       	ldd	r26, Y+15	; 0x0f
     f3c:	b8 89       	ldd	r27, Y+16	; 0x10
     f3e:	11 96       	adiw	r26, 0x01	; 1
     f40:	8c 91       	ld	r24, X
     f42:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     f46:	81 11       	cpse	r24, r1
     f48:	96 cf       	rjmp	.-212    	; 0xe76 <put_fat.part.6+0x326>
     f4a:	ef 85       	ldd	r30, Y+15	; 0x0f
     f4c:	f8 89       	ldd	r31, Y+16	; 0x10
     f4e:	14 82       	std	Z+4, r1	; 0x04
     f50:	82 8d       	ldd	r24, Z+26	; 0x1a
     f52:	93 8d       	ldd	r25, Z+27	; 0x1b
     f54:	a4 8d       	ldd	r26, Z+28	; 0x1c
     f56:	b5 8d       	ldd	r27, Z+29	; 0x1d
     f58:	42 a1       	ldd	r20, Z+34	; 0x22
     f5a:	53 a1       	ldd	r21, Z+35	; 0x23
     f5c:	64 a1       	ldd	r22, Z+36	; 0x24
     f5e:	75 a1       	ldd	r23, Z+37	; 0x25
     f60:	93 01       	movw	r18, r6
     f62:	82 01       	movw	r16, r4
     f64:	04 1b       	sub	r16, r20
     f66:	15 0b       	sbc	r17, r21
     f68:	26 0b       	sbc	r18, r22
     f6a:	37 0b       	sbc	r19, r23
     f6c:	08 17       	cp	r16, r24
     f6e:	19 07       	cpc	r17, r25
     f70:	2a 07       	cpc	r18, r26
     f72:	3b 07       	cpc	r19, r27
     f74:	08 f0       	brcs	.+2      	; 0xf78 <put_fat.part.6+0x428>
     f76:	58 ce       	rjmp	.-848    	; 0xc28 <put_fat.part.6+0xd8>
     f78:	23 81       	ldd	r18, Z+3	; 0x03
     f7a:	02 2f       	mov	r16, r18
     f7c:	10 e0       	ldi	r17, 0x00	; 0
     f7e:	02 30       	cpi	r16, 0x02	; 2
     f80:	11 05       	cpc	r17, r1
     f82:	08 f4       	brcc	.+2      	; 0xf86 <put_fat.part.6+0x436>
     f84:	51 ce       	rjmp	.-862    	; 0xc28 <put_fat.part.6+0xd8>
     f86:	cf 82       	std	Y+7, r12	; 0x07
     f88:	d8 86       	std	Y+8, r13	; 0x08
     f8a:	e9 86       	std	Y+9, r14	; 0x09
     f8c:	fa 86       	std	Y+10, r15	; 0x0a
     f8e:	cd 80       	ldd	r12, Y+5	; 0x05
     f90:	de 80       	ldd	r13, Y+6	; 0x06
     f92:	78 01       	movw	r14, r16
     f94:	06 c0       	rjmp	.+12     	; 0xfa2 <put_fat.part.6+0x452>
     f96:	ef 85       	ldd	r30, Y+15	; 0x0f
     f98:	f8 89       	ldd	r31, Y+16	; 0x10
     f9a:	82 8d       	ldd	r24, Z+26	; 0x1a
     f9c:	93 8d       	ldd	r25, Z+27	; 0x1b
     f9e:	a4 8d       	ldd	r26, Z+28	; 0x1c
     fa0:	b5 8d       	ldd	r27, Z+29	; 0x1d
     fa2:	48 0e       	add	r4, r24
     fa4:	59 1e       	adc	r5, r25
     fa6:	6a 1e       	adc	r6, r26
     fa8:	7b 1e       	adc	r7, r27
     faa:	01 e0       	ldi	r16, 0x01	; 1
     fac:	10 e0       	ldi	r17, 0x00	; 0
     fae:	a3 01       	movw	r20, r6
     fb0:	92 01       	movw	r18, r4
     fb2:	b6 01       	movw	r22, r12
     fb4:	af 85       	ldd	r26, Y+15	; 0x0f
     fb6:	b8 89       	ldd	r27, Y+16	; 0x10
     fb8:	11 96       	adiw	r26, 0x01	; 1
     fba:	8c 91       	ld	r24, X
     fbc:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     fc0:	b1 e0       	ldi	r27, 0x01	; 1
     fc2:	eb 1a       	sub	r14, r27
     fc4:	f1 08       	sbc	r15, r1
     fc6:	e1 e0       	ldi	r30, 0x01	; 1
     fc8:	ee 16       	cp	r14, r30
     fca:	f1 04       	cpc	r15, r1
     fcc:	21 f7       	brne	.-56     	; 0xf96 <put_fat.part.6+0x446>
     fce:	cf 80       	ldd	r12, Y+7	; 0x07
     fd0:	d8 84       	ldd	r13, Y+8	; 0x08
     fd2:	e9 84       	ldd	r14, Y+9	; 0x09
     fd4:	fa 84       	ldd	r15, Y+10	; 0x0a
     fd6:	28 ce       	rjmp	.-944    	; 0xc28 <put_fat.part.6+0xd8>
     fd8:	f2 96       	adiw	r30, 0x32	; 50
     fda:	ed 83       	std	Y+5, r30	; 0x05
     fdc:	fe 83       	std	Y+6, r31	; 0x06
     fde:	01 e0       	ldi	r16, 0x01	; 1
     fe0:	10 e0       	ldi	r17, 0x00	; 0
     fe2:	a3 01       	movw	r20, r6
     fe4:	92 01       	movw	r18, r4
     fe6:	bf 01       	movw	r22, r30
     fe8:	af 85       	ldd	r26, Y+15	; 0x0f
     fea:	b8 89       	ldd	r27, Y+16	; 0x10
     fec:	11 96       	adiw	r26, 0x01	; 1
     fee:	8c 91       	ld	r24, X
     ff0:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
     ff4:	81 11       	cpse	r24, r1
     ff6:	3f cf       	rjmp	.-386    	; 0xe76 <put_fat.part.6+0x326>
     ff8:	ef 85       	ldd	r30, Y+15	; 0x0f
     ffa:	f8 89       	ldd	r31, Y+16	; 0x10
     ffc:	14 82       	std	Z+4, r1	; 0x04
     ffe:	82 8d       	ldd	r24, Z+26	; 0x1a
    1000:	93 8d       	ldd	r25, Z+27	; 0x1b
    1002:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1004:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1006:	42 a1       	ldd	r20, Z+34	; 0x22
    1008:	53 a1       	ldd	r21, Z+35	; 0x23
    100a:	64 a1       	ldd	r22, Z+36	; 0x24
    100c:	75 a1       	ldd	r23, Z+37	; 0x25
    100e:	93 01       	movw	r18, r6
    1010:	82 01       	movw	r16, r4
    1012:	04 1b       	sub	r16, r20
    1014:	15 0b       	sbc	r17, r21
    1016:	26 0b       	sbc	r18, r22
    1018:	37 0b       	sbc	r19, r23
    101a:	08 17       	cp	r16, r24
    101c:	19 07       	cpc	r17, r25
    101e:	2a 07       	cpc	r18, r26
    1020:	3b 07       	cpc	r19, r27
    1022:	08 f0       	brcs	.+2      	; 0x1026 <put_fat.part.6+0x4d6>
    1024:	4e cf       	rjmp	.-356    	; 0xec2 <put_fat.part.6+0x372>
    1026:	23 81       	ldd	r18, Z+3	; 0x03
    1028:	22 2e       	mov	r2, r18
    102a:	31 2c       	mov	r3, r1
    102c:	12 e0       	ldi	r17, 0x02	; 2
    102e:	21 16       	cp	r2, r17
    1030:	31 04       	cpc	r3, r1
    1032:	08 f4       	brcc	.+2      	; 0x1036 <put_fat.part.6+0x4e6>
    1034:	46 cf       	rjmp	.-372    	; 0xec2 <put_fat.part.6+0x372>
    1036:	cf 82       	std	Y+7, r12	; 0x07
    1038:	d8 86       	std	Y+8, r13	; 0x08
    103a:	e9 86       	std	Y+9, r14	; 0x09
    103c:	fa 86       	std	Y+10, r15	; 0x0a
    103e:	ed 80       	ldd	r14, Y+5	; 0x05
    1040:	fe 80       	ldd	r15, Y+6	; 0x06
    1042:	06 c0       	rjmp	.+12     	; 0x1050 <put_fat.part.6+0x500>
    1044:	ef 85       	ldd	r30, Y+15	; 0x0f
    1046:	f8 89       	ldd	r31, Y+16	; 0x10
    1048:	82 8d       	ldd	r24, Z+26	; 0x1a
    104a:	93 8d       	ldd	r25, Z+27	; 0x1b
    104c:	a4 8d       	ldd	r26, Z+28	; 0x1c
    104e:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1050:	48 0e       	add	r4, r24
    1052:	59 1e       	adc	r5, r25
    1054:	6a 1e       	adc	r6, r26
    1056:	7b 1e       	adc	r7, r27
    1058:	01 e0       	ldi	r16, 0x01	; 1
    105a:	10 e0       	ldi	r17, 0x00	; 0
    105c:	a3 01       	movw	r20, r6
    105e:	92 01       	movw	r18, r4
    1060:	b7 01       	movw	r22, r14
    1062:	af 85       	ldd	r26, Y+15	; 0x0f
    1064:	b8 89       	ldd	r27, Y+16	; 0x10
    1066:	11 96       	adiw	r26, 0x01	; 1
    1068:	8c 91       	ld	r24, X
    106a:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    106e:	b1 e0       	ldi	r27, 0x01	; 1
    1070:	2b 1a       	sub	r2, r27
    1072:	31 08       	sbc	r3, r1
    1074:	e1 e0       	ldi	r30, 0x01	; 1
    1076:	2e 16       	cp	r2, r30
    1078:	31 04       	cpc	r3, r1
    107a:	21 f7       	brne	.-56     	; 0x1044 <put_fat.part.6+0x4f4>
    107c:	cf 80       	ldd	r12, Y+7	; 0x07
    107e:	d8 84       	ldd	r13, Y+8	; 0x08
    1080:	e9 84       	ldd	r14, Y+9	; 0x09
    1082:	fa 84       	ldd	r15, Y+10	; 0x0a
    1084:	1e cf       	rjmp	.-452    	; 0xec2 <put_fat.part.6+0x372>
    1086:	f2 96       	adiw	r30, 0x32	; 50
    1088:	ed 83       	std	Y+5, r30	; 0x05
    108a:	fe 83       	std	Y+6, r31	; 0x06
    108c:	01 e0       	ldi	r16, 0x01	; 1
    108e:	10 e0       	ldi	r17, 0x00	; 0
    1090:	a3 01       	movw	r20, r6
    1092:	92 01       	movw	r18, r4
    1094:	bf 01       	movw	r22, r30
    1096:	af 85       	ldd	r26, Y+15	; 0x0f
    1098:	b8 89       	ldd	r27, Y+16	; 0x10
    109a:	11 96       	adiw	r26, 0x01	; 1
    109c:	8c 91       	ld	r24, X
    109e:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    10a2:	81 11       	cpse	r24, r1
    10a4:	e8 ce       	rjmp	.-560    	; 0xe76 <put_fat.part.6+0x326>
    10a6:	ef 85       	ldd	r30, Y+15	; 0x0f
    10a8:	f8 89       	ldd	r31, Y+16	; 0x10
    10aa:	14 82       	std	Z+4, r1	; 0x04
    10ac:	82 8d       	ldd	r24, Z+26	; 0x1a
    10ae:	93 8d       	ldd	r25, Z+27	; 0x1b
    10b0:	a4 8d       	ldd	r26, Z+28	; 0x1c
    10b2:	b5 8d       	ldd	r27, Z+29	; 0x1d
    10b4:	42 a1       	ldd	r20, Z+34	; 0x22
    10b6:	53 a1       	ldd	r21, Z+35	; 0x23
    10b8:	64 a1       	ldd	r22, Z+36	; 0x24
    10ba:	75 a1       	ldd	r23, Z+37	; 0x25
    10bc:	93 01       	movw	r18, r6
    10be:	82 01       	movw	r16, r4
    10c0:	04 1b       	sub	r16, r20
    10c2:	15 0b       	sbc	r17, r21
    10c4:	26 0b       	sbc	r18, r22
    10c6:	37 0b       	sbc	r19, r23
    10c8:	08 17       	cp	r16, r24
    10ca:	19 07       	cpc	r17, r25
    10cc:	2a 07       	cpc	r18, r26
    10ce:	3b 07       	cpc	r19, r27
    10d0:	08 f0       	brcs	.+2      	; 0x10d4 <put_fat.part.6+0x584>
    10d2:	b7 ce       	rjmp	.-658    	; 0xe42 <put_fat.part.6+0x2f2>
    10d4:	23 81       	ldd	r18, Z+3	; 0x03
    10d6:	22 2e       	mov	r2, r18
    10d8:	31 2c       	mov	r3, r1
    10da:	12 e0       	ldi	r17, 0x02	; 2
    10dc:	21 16       	cp	r2, r17
    10de:	31 04       	cpc	r3, r1
    10e0:	08 f4       	brcc	.+2      	; 0x10e4 <put_fat.part.6+0x594>
    10e2:	af ce       	rjmp	.-674    	; 0xe42 <put_fat.part.6+0x2f2>
    10e4:	cf 82       	std	Y+7, r12	; 0x07
    10e6:	d8 86       	std	Y+8, r13	; 0x08
    10e8:	e9 86       	std	Y+9, r14	; 0x09
    10ea:	fa 86       	std	Y+10, r15	; 0x0a
    10ec:	ed 80       	ldd	r14, Y+5	; 0x05
    10ee:	fe 80       	ldd	r15, Y+6	; 0x06
    10f0:	06 c0       	rjmp	.+12     	; 0x10fe <put_fat.part.6+0x5ae>
    10f2:	ef 85       	ldd	r30, Y+15	; 0x0f
    10f4:	f8 89       	ldd	r31, Y+16	; 0x10
    10f6:	82 8d       	ldd	r24, Z+26	; 0x1a
    10f8:	93 8d       	ldd	r25, Z+27	; 0x1b
    10fa:	a4 8d       	ldd	r26, Z+28	; 0x1c
    10fc:	b5 8d       	ldd	r27, Z+29	; 0x1d
    10fe:	48 0e       	add	r4, r24
    1100:	59 1e       	adc	r5, r25
    1102:	6a 1e       	adc	r6, r26
    1104:	7b 1e       	adc	r7, r27
    1106:	01 e0       	ldi	r16, 0x01	; 1
    1108:	10 e0       	ldi	r17, 0x00	; 0
    110a:	a3 01       	movw	r20, r6
    110c:	92 01       	movw	r18, r4
    110e:	b7 01       	movw	r22, r14
    1110:	af 85       	ldd	r26, Y+15	; 0x0f
    1112:	b8 89       	ldd	r27, Y+16	; 0x10
    1114:	11 96       	adiw	r26, 0x01	; 1
    1116:	8c 91       	ld	r24, X
    1118:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    111c:	b1 e0       	ldi	r27, 0x01	; 1
    111e:	2b 1a       	sub	r2, r27
    1120:	31 08       	sbc	r3, r1
    1122:	e1 e0       	ldi	r30, 0x01	; 1
    1124:	2e 16       	cp	r2, r30
    1126:	31 04       	cpc	r3, r1
    1128:	21 f7       	brne	.-56     	; 0x10f2 <put_fat.part.6+0x5a2>
    112a:	cf 80       	ldd	r12, Y+7	; 0x07
    112c:	d8 84       	ldd	r13, Y+8	; 0x08
    112e:	e9 84       	ldd	r14, Y+9	; 0x09
    1130:	fa 84       	ldd	r15, Y+10	; 0x0a
    1132:	87 ce       	rjmp	.-754    	; 0xe42 <put_fat.part.6+0x2f2>
    1134:	09 81       	ldd	r16, Y+1	; 0x01
    1136:	1a 81       	ldd	r17, Y+2	; 0x02
    1138:	2b 81       	ldd	r18, Y+3	; 0x03
    113a:	3c 81       	ldd	r19, Y+4	; 0x04
    113c:	af 85       	ldd	r26, Y+15	; 0x0f
    113e:	b8 89       	ldd	r27, Y+16	; 0x10
    1140:	9e 96       	adiw	r26, 0x2e	; 46
    1142:	0d 93       	st	X+, r16
    1144:	1d 93       	st	X+, r17
    1146:	2d 93       	st	X+, r18
    1148:	3c 93       	st	X, r19
    114a:	d1 97       	sbiw	r26, 0x31	; 49
    114c:	cc 0c       	add	r12, r12
    114e:	dd 1c       	adc	r13, r13
    1150:	ee 1c       	adc	r14, r14
    1152:	ff 1c       	adc	r15, r15
    1154:	cc 0c       	add	r12, r12
    1156:	dd 1c       	adc	r13, r13
    1158:	ee 1c       	adc	r14, r14
    115a:	ff 1c       	adc	r15, r15
    115c:	bc ef       	ldi	r27, 0xFC	; 252
    115e:	cb 22       	and	r12, r27
    1160:	b1 e0       	ldi	r27, 0x01	; 1
    1162:	db 22       	and	r13, r27
    1164:	ee 24       	eor	r14, r14
    1166:	ff 24       	eor	r15, r15
    1168:	f6 01       	movw	r30, r12
    116a:	f2 96       	adiw	r30, 0x32	; 50
    116c:	0f 85       	ldd	r16, Y+15	; 0x0f
    116e:	18 89       	ldd	r17, Y+16	; 0x10
    1170:	e0 0f       	add	r30, r16
    1172:	f1 1f       	adc	r31, r17
    1174:	80 81       	ld	r24, Z
    1176:	91 81       	ldd	r25, Z+1	; 0x01
    1178:	a2 81       	ldd	r26, Z+2	; 0x02
    117a:	b3 81       	ldd	r27, Z+3	; 0x03
    117c:	88 27       	eor	r24, r24
    117e:	99 27       	eor	r25, r25
    1180:	aa 27       	eor	r26, r26
    1182:	b0 7f       	andi	r27, 0xF0	; 240
    1184:	88 29       	or	r24, r8
    1186:	99 29       	or	r25, r9
    1188:	aa 29       	or	r26, r10
    118a:	bb 29       	or	r27, r11
    118c:	80 83       	st	Z, r24
    118e:	91 83       	std	Z+1, r25	; 0x01
    1190:	a2 83       	std	Z+2, r26	; 0x02
    1192:	b3 83       	std	Z+3, r27	; 0x03
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	d8 01       	movw	r26, r16
    1198:	14 96       	adiw	r26, 0x04	; 4
    119a:	8c 93       	st	X, r24
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	00 cd       	rjmp	.-1536   	; 0xba0 <put_fat.part.6+0x50>
    11a0:	48 2d       	mov	r20, r8
    11a2:	ef 85       	ldd	r30, Y+15	; 0x0f
    11a4:	f8 89       	ldd	r31, Y+16	; 0x10
    11a6:	e2 0d       	add	r30, r2
    11a8:	f3 1d       	adc	r31, r3
    11aa:	7e cd       	rjmp	.-1284   	; 0xca8 <put_fat.part.6+0x158>
    11ac:	2a 01       	movw	r4, r20
    11ae:	3b 01       	movw	r6, r22
    11b0:	5e cd       	rjmp	.-1348   	; 0xc6e <put_fat.part.6+0x11e>
    11b2:	4f 85       	ldd	r20, Y+15	; 0x0f
    11b4:	58 89       	ldd	r21, Y+16	; 0x10
    11b6:	e4 0f       	add	r30, r20
    11b8:	f5 1f       	adc	r31, r21
    11ba:	82 a9       	ldd	r24, Z+50	; 0x32
    11bc:	80 7f       	andi	r24, 0xF0	; 240
    11be:	99 2d       	mov	r25, r9
    11c0:	9f 70       	andi	r25, 0x0F	; 15
    11c2:	89 2b       	or	r24, r25
    11c4:	da 01       	movw	r26, r20
    11c6:	0d ce       	rjmp	.-998    	; 0xde2 <put_fat.part.6+0x292>

000011c8 <get_fat.part.4>:
    11c8:	2f 92       	push	r2
    11ca:	3f 92       	push	r3
    11cc:	4f 92       	push	r4
    11ce:	5f 92       	push	r5
    11d0:	6f 92       	push	r6
    11d2:	7f 92       	push	r7
    11d4:	8f 92       	push	r8
    11d6:	9f 92       	push	r9
    11d8:	af 92       	push	r10
    11da:	bf 92       	push	r11
    11dc:	cf 92       	push	r12
    11de:	df 92       	push	r13
    11e0:	ef 92       	push	r14
    11e2:	ff 92       	push	r15
    11e4:	0f 93       	push	r16
    11e6:	1f 93       	push	r17
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
    11ec:	cd b7       	in	r28, 0x3d	; 61
    11ee:	de b7       	in	r29, 0x3e	; 62
    11f0:	2d 97       	sbiw	r28, 0x0d	; 13
    11f2:	cd bf       	out	0x3d, r28	; 61
    11f4:	de bf       	out	0x3e, r29	; 62
    11f6:	8c 87       	std	Y+12, r24	; 0x0c
    11f8:	9d 87       	std	Y+13, r25	; 0x0d
    11fa:	6a 01       	movw	r12, r20
    11fc:	7b 01       	movw	r14, r22
    11fe:	dc 01       	movw	r26, r24
    1200:	8c 91       	ld	r24, X
    1202:	82 30       	cpi	r24, 0x02	; 2
    1204:	09 f4       	brne	.+2      	; 0x1208 <get_fat.part.4+0x40>
    1206:	04 c1       	rjmp	.+520    	; 0x1410 <get_fat.part.4+0x248>
    1208:	83 30       	cpi	r24, 0x03	; 3
    120a:	09 f4       	brne	.+2      	; 0x120e <get_fat.part.4+0x46>
    120c:	bf c0       	rjmp	.+382    	; 0x138c <get_fat.part.4+0x1c4>
    120e:	81 30       	cpi	r24, 0x01	; 1
    1210:	d1 f0       	breq	.+52     	; 0x1246 <get_fat.part.4+0x7e>
    1212:	61 e0       	ldi	r22, 0x01	; 1
    1214:	70 e0       	ldi	r23, 0x00	; 0
    1216:	80 e0       	ldi	r24, 0x00	; 0
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	2d 96       	adiw	r28, 0x0d	; 13
    121c:	cd bf       	out	0x3d, r28	; 61
    121e:	de bf       	out	0x3e, r29	; 62
    1220:	df 91       	pop	r29
    1222:	cf 91       	pop	r28
    1224:	1f 91       	pop	r17
    1226:	0f 91       	pop	r16
    1228:	ff 90       	pop	r15
    122a:	ef 90       	pop	r14
    122c:	df 90       	pop	r13
    122e:	cf 90       	pop	r12
    1230:	bf 90       	pop	r11
    1232:	af 90       	pop	r10
    1234:	9f 90       	pop	r9
    1236:	8f 90       	pop	r8
    1238:	7f 90       	pop	r7
    123a:	6f 90       	pop	r6
    123c:	5f 90       	pop	r5
    123e:	4f 90       	pop	r4
    1240:	3f 90       	pop	r3
    1242:	2f 90       	pop	r2
    1244:	08 95       	ret
    1246:	1a 01       	movw	r2, r20
    1248:	36 94       	lsr	r3
    124a:	27 94       	ror	r2
    124c:	24 0e       	add	r2, r20
    124e:	35 1e       	adc	r3, r21
    1250:	92 96       	adiw	r26, 0x22	; 34
    1252:	8d 91       	ld	r24, X+
    1254:	9d 91       	ld	r25, X+
    1256:	0d 90       	ld	r0, X+
    1258:	bc 91       	ld	r27, X
    125a:	a0 2d       	mov	r26, r0
    125c:	91 01       	movw	r18, r2
    125e:	23 2f       	mov	r18, r19
    1260:	33 27       	eor	r19, r19
    1262:	26 95       	lsr	r18
    1264:	ac 01       	movw	r20, r24
    1266:	bd 01       	movw	r22, r26
    1268:	42 0f       	add	r20, r18
    126a:	53 1f       	adc	r21, r19
    126c:	61 1d       	adc	r22, r1
    126e:	71 1d       	adc	r23, r1
    1270:	49 83       	std	Y+1, r20	; 0x01
    1272:	5a 83       	std	Y+2, r21	; 0x02
    1274:	6b 83       	std	Y+3, r22	; 0x03
    1276:	7c 83       	std	Y+4, r23	; 0x04
    1278:	ec 85       	ldd	r30, Y+12	; 0x0c
    127a:	fd 85       	ldd	r31, Y+13	; 0x0d
    127c:	46 a4       	ldd	r4, Z+46	; 0x2e
    127e:	57 a4       	ldd	r5, Z+47	; 0x2f
    1280:	60 a8       	ldd	r6, Z+48	; 0x30
    1282:	71 a8       	ldd	r7, Z+49	; 0x31
    1284:	44 15       	cp	r20, r4
    1286:	55 05       	cpc	r21, r5
    1288:	66 05       	cpc	r22, r6
    128a:	77 05       	cpc	r23, r7
    128c:	09 f4       	brne	.+2      	; 0x1290 <get_fat.part.4+0xc8>
    128e:	21 c2       	rjmp	.+1090   	; 0x16d2 <get_fat.part.4+0x50a>
    1290:	84 81       	ldd	r24, Z+4	; 0x04
    1292:	81 11       	cpse	r24, r1
    1294:	05 c1       	rjmp	.+522    	; 0x14a0 <get_fat.part.4+0x2d8>
    1296:	ac 84       	ldd	r10, Y+12	; 0x0c
    1298:	bd 84       	ldd	r11, Y+13	; 0x0d
    129a:	f2 e3       	ldi	r31, 0x32	; 50
    129c:	af 0e       	add	r10, r31
    129e:	b1 1c       	adc	r11, r1
    12a0:	01 e0       	ldi	r16, 0x01	; 1
    12a2:	10 e0       	ldi	r17, 0x00	; 0
    12a4:	29 81       	ldd	r18, Y+1	; 0x01
    12a6:	3a 81       	ldd	r19, Y+2	; 0x02
    12a8:	4b 81       	ldd	r20, Y+3	; 0x03
    12aa:	5c 81       	ldd	r21, Y+4	; 0x04
    12ac:	b5 01       	movw	r22, r10
    12ae:	ac 85       	ldd	r26, Y+12	; 0x0c
    12b0:	bd 85       	ldd	r27, Y+13	; 0x0d
    12b2:	11 96       	adiw	r26, 0x01	; 1
    12b4:	8c 91       	ld	r24, X
    12b6:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    12ba:	81 11       	cpse	r24, r1
    12bc:	9c c0       	rjmp	.+312    	; 0x13f6 <get_fat.part.4+0x22e>
    12be:	09 81       	ldd	r16, Y+1	; 0x01
    12c0:	1a 81       	ldd	r17, Y+2	; 0x02
    12c2:	2b 81       	ldd	r18, Y+3	; 0x03
    12c4:	3c 81       	ldd	r19, Y+4	; 0x04
    12c6:	ac 85       	ldd	r26, Y+12	; 0x0c
    12c8:	bd 85       	ldd	r27, Y+13	; 0x0d
    12ca:	9e 96       	adiw	r26, 0x2e	; 46
    12cc:	0d 93       	st	X+, r16
    12ce:	1d 93       	st	X+, r17
    12d0:	2d 93       	st	X+, r18
    12d2:	3c 93       	st	X, r19
    12d4:	d1 97       	sbiw	r26, 0x31	; 49
    12d6:	92 96       	adiw	r26, 0x22	; 34
    12d8:	4d 90       	ld	r4, X+
    12da:	5d 90       	ld	r5, X+
    12dc:	6d 90       	ld	r6, X+
    12de:	7c 90       	ld	r7, X
    12e0:	95 97       	sbiw	r26, 0x25	; 37
    12e2:	48 01       	movw	r8, r16
    12e4:	59 01       	movw	r10, r18
    12e6:	8d 01       	movw	r16, r26
    12e8:	f1 01       	movw	r30, r2
    12ea:	31 96       	adiw	r30, 0x01	; 1
    12ec:	ed 83       	std	Y+5, r30	; 0x05
    12ee:	fe 83       	std	Y+6, r31	; 0x06
    12f0:	f1 01       	movw	r30, r2
    12f2:	f1 70       	andi	r31, 0x01	; 1
    12f4:	e0 0f       	add	r30, r16
    12f6:	f1 1f       	adc	r31, r17
    12f8:	92 a9       	ldd	r25, Z+50	; 0x32
    12fa:	9b 87       	std	Y+11, r25	; 0x0b
    12fc:	8d 81       	ldd	r24, Y+5	; 0x05
    12fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1300:	89 2f       	mov	r24, r25
    1302:	99 27       	eor	r25, r25
    1304:	86 95       	lsr	r24
    1306:	48 0e       	add	r4, r24
    1308:	59 1e       	adc	r5, r25
    130a:	61 1c       	adc	r6, r1
    130c:	71 1c       	adc	r7, r1
    130e:	09 81       	ldd	r16, Y+1	; 0x01
    1310:	1a 81       	ldd	r17, Y+2	; 0x02
    1312:	2b 81       	ldd	r18, Y+3	; 0x03
    1314:	3c 81       	ldd	r19, Y+4	; 0x04
    1316:	40 16       	cp	r4, r16
    1318:	51 06       	cpc	r5, r17
    131a:	62 06       	cpc	r6, r18
    131c:	73 06       	cpc	r7, r19
    131e:	f9 f0       	breq	.+62     	; 0x135e <get_fat.part.4+0x196>
    1320:	ac 85       	ldd	r26, Y+12	; 0x0c
    1322:	bd 85       	ldd	r27, Y+13	; 0x0d
    1324:	14 96       	adiw	r26, 0x04	; 4
    1326:	8c 91       	ld	r24, X
    1328:	14 97       	sbiw	r26, 0x04	; 4
    132a:	fd 01       	movw	r30, r26
    132c:	81 11       	cpse	r24, r1
    132e:	d8 c1       	rjmp	.+944    	; 0x16e0 <get_fat.part.4+0x518>
    1330:	f2 96       	adiw	r30, 0x32	; 50
    1332:	e9 87       	std	Y+9, r30	; 0x09
    1334:	fa 87       	std	Y+10, r31	; 0x0a
    1336:	01 e0       	ldi	r16, 0x01	; 1
    1338:	10 e0       	ldi	r17, 0x00	; 0
    133a:	a3 01       	movw	r20, r6
    133c:	92 01       	movw	r18, r4
    133e:	69 85       	ldd	r22, Y+9	; 0x09
    1340:	7a 85       	ldd	r23, Y+10	; 0x0a
    1342:	ac 85       	ldd	r26, Y+12	; 0x0c
    1344:	bd 85       	ldd	r27, Y+13	; 0x0d
    1346:	11 96       	adiw	r26, 0x01	; 1
    1348:	8c 91       	ld	r24, X
    134a:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    134e:	81 11       	cpse	r24, r1
    1350:	52 c0       	rjmp	.+164    	; 0x13f6 <get_fat.part.4+0x22e>
    1352:	ec 85       	ldd	r30, Y+12	; 0x0c
    1354:	fd 85       	ldd	r31, Y+13	; 0x0d
    1356:	46 a6       	std	Z+46, r4	; 0x2e
    1358:	57 a6       	std	Z+47, r5	; 0x2f
    135a:	60 aa       	std	Z+48, r6	; 0x30
    135c:	71 aa       	std	Z+49, r7	; 0x31
    135e:	ed 81       	ldd	r30, Y+5	; 0x05
    1360:	fe 81       	ldd	r31, Y+6	; 0x06
    1362:	f1 70       	andi	r31, 0x01	; 1
    1364:	0c 85       	ldd	r16, Y+12	; 0x0c
    1366:	1d 85       	ldd	r17, Y+13	; 0x0d
    1368:	e0 0f       	add	r30, r16
    136a:	f1 1f       	adc	r31, r17
    136c:	82 a9       	ldd	r24, Z+50	; 0x32
    136e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1370:	69 2f       	mov	r22, r25
    1372:	70 e0       	ldi	r23, 0x00	; 0
    1374:	78 2b       	or	r23, r24
    1376:	c0 fe       	sbrs	r12, 0
    1378:	12 c2       	rjmp	.+1060   	; 0x179e <get_fat.part.4+0x5d6>
    137a:	72 95       	swap	r23
    137c:	62 95       	swap	r22
    137e:	6f 70       	andi	r22, 0x0F	; 15
    1380:	67 27       	eor	r22, r23
    1382:	7f 70       	andi	r23, 0x0F	; 15
    1384:	67 27       	eor	r22, r23
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	47 cf       	rjmp	.-370    	; 0x121a <get_fat.part.4+0x52>
    138c:	2a 01       	movw	r4, r20
    138e:	3b 01       	movw	r6, r22
    1390:	67 e0       	ldi	r22, 0x07	; 7
    1392:	76 94       	lsr	r7
    1394:	67 94       	ror	r6
    1396:	57 94       	ror	r5
    1398:	47 94       	ror	r4
    139a:	6a 95       	dec	r22
    139c:	d1 f7       	brne	.-12     	; 0x1392 <get_fat.part.4+0x1ca>
    139e:	ec 85       	ldd	r30, Y+12	; 0x0c
    13a0:	fd 85       	ldd	r31, Y+13	; 0x0d
    13a2:	82 a1       	ldd	r24, Z+34	; 0x22
    13a4:	93 a1       	ldd	r25, Z+35	; 0x23
    13a6:	a4 a1       	ldd	r26, Z+36	; 0x24
    13a8:	b5 a1       	ldd	r27, Z+37	; 0x25
    13aa:	48 0e       	add	r4, r24
    13ac:	59 1e       	adc	r5, r25
    13ae:	6a 1e       	adc	r6, r26
    13b0:	7b 1e       	adc	r7, r27
    13b2:	86 a4       	ldd	r8, Z+46	; 0x2e
    13b4:	97 a4       	ldd	r9, Z+47	; 0x2f
    13b6:	a0 a8       	ldd	r10, Z+48	; 0x30
    13b8:	b1 a8       	ldd	r11, Z+49	; 0x31
    13ba:	48 14       	cp	r4, r8
    13bc:	59 04       	cpc	r5, r9
    13be:	6a 04       	cpc	r6, r10
    13c0:	7b 04       	cpc	r7, r11
    13c2:	09 f4       	brne	.+2      	; 0x13c6 <get_fat.part.4+0x1fe>
    13c4:	70 c1       	rjmp	.+736    	; 0x16a6 <get_fat.part.4+0x4de>
    13c6:	84 81       	ldd	r24, Z+4	; 0x04
    13c8:	81 11       	cpse	r24, r1
    13ca:	0d c1       	rjmp	.+538    	; 0x15e6 <get_fat.part.4+0x41e>
    13cc:	0c 85       	ldd	r16, Y+12	; 0x0c
    13ce:	1d 85       	ldd	r17, Y+13	; 0x0d
    13d0:	0e 5c       	subi	r16, 0xCE	; 206
    13d2:	1f 4f       	sbci	r17, 0xFF	; 255
    13d4:	09 83       	std	Y+1, r16	; 0x01
    13d6:	1a 83       	std	Y+2, r17	; 0x02
    13d8:	01 e0       	ldi	r16, 0x01	; 1
    13da:	10 e0       	ldi	r17, 0x00	; 0
    13dc:	a3 01       	movw	r20, r6
    13de:	92 01       	movw	r18, r4
    13e0:	69 81       	ldd	r22, Y+1	; 0x01
    13e2:	7a 81       	ldd	r23, Y+2	; 0x02
    13e4:	ac 85       	ldd	r26, Y+12	; 0x0c
    13e6:	bd 85       	ldd	r27, Y+13	; 0x0d
    13e8:	11 96       	adiw	r26, 0x01	; 1
    13ea:	8c 91       	ld	r24, X
    13ec:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    13f0:	88 23       	and	r24, r24
    13f2:	09 f4       	brne	.+2      	; 0x13f6 <get_fat.part.4+0x22e>
    13f4:	4f c1       	rjmp	.+670    	; 0x1694 <get_fat.part.4+0x4cc>
    13f6:	8f ef       	ldi	r24, 0xFF	; 255
    13f8:	9f ef       	ldi	r25, 0xFF	; 255
    13fa:	dc 01       	movw	r26, r24
    13fc:	ec 85       	ldd	r30, Y+12	; 0x0c
    13fe:	fd 85       	ldd	r31, Y+13	; 0x0d
    1400:	86 a7       	std	Z+46, r24	; 0x2e
    1402:	97 a7       	std	Z+47, r25	; 0x2f
    1404:	a0 ab       	std	Z+48, r26	; 0x30
    1406:	b1 ab       	std	Z+49, r27	; 0x31
    1408:	6f ef       	ldi	r22, 0xFF	; 255
    140a:	7f ef       	ldi	r23, 0xFF	; 255
    140c:	cb 01       	movw	r24, r22
    140e:	05 cf       	rjmp	.-502    	; 0x121a <get_fat.part.4+0x52>
    1410:	45 2e       	mov	r4, r21
    1412:	56 2e       	mov	r5, r22
    1414:	67 2e       	mov	r6, r23
    1416:	77 24       	eor	r7, r7
    1418:	ec 85       	ldd	r30, Y+12	; 0x0c
    141a:	fd 85       	ldd	r31, Y+13	; 0x0d
    141c:	82 a1       	ldd	r24, Z+34	; 0x22
    141e:	93 a1       	ldd	r25, Z+35	; 0x23
    1420:	a4 a1       	ldd	r26, Z+36	; 0x24
    1422:	b5 a1       	ldd	r27, Z+37	; 0x25
    1424:	48 0e       	add	r4, r24
    1426:	59 1e       	adc	r5, r25
    1428:	6a 1e       	adc	r6, r26
    142a:	7b 1e       	adc	r7, r27
    142c:	86 a4       	ldd	r8, Z+46	; 0x2e
    142e:	97 a4       	ldd	r9, Z+47	; 0x2f
    1430:	a0 a8       	ldd	r10, Z+48	; 0x30
    1432:	b1 a8       	ldd	r11, Z+49	; 0x31
    1434:	48 14       	cp	r4, r8
    1436:	59 04       	cpc	r5, r9
    1438:	6a 04       	cpc	r6, r10
    143a:	7b 04       	cpc	r7, r11
    143c:	01 f1       	breq	.+64     	; 0x147e <get_fat.part.4+0x2b6>
    143e:	84 81       	ldd	r24, Z+4	; 0x04
    1440:	81 11       	cpse	r24, r1
    1442:	7a c0       	rjmp	.+244    	; 0x1538 <get_fat.part.4+0x370>
    1444:	0c 85       	ldd	r16, Y+12	; 0x0c
    1446:	1d 85       	ldd	r17, Y+13	; 0x0d
    1448:	0e 5c       	subi	r16, 0xCE	; 206
    144a:	1f 4f       	sbci	r17, 0xFF	; 255
    144c:	09 83       	std	Y+1, r16	; 0x01
    144e:	1a 83       	std	Y+2, r17	; 0x02
    1450:	01 e0       	ldi	r16, 0x01	; 1
    1452:	10 e0       	ldi	r17, 0x00	; 0
    1454:	a3 01       	movw	r20, r6
    1456:	92 01       	movw	r18, r4
    1458:	69 81       	ldd	r22, Y+1	; 0x01
    145a:	7a 81       	ldd	r23, Y+2	; 0x02
    145c:	ac 85       	ldd	r26, Y+12	; 0x0c
    145e:	bd 85       	ldd	r27, Y+13	; 0x0d
    1460:	11 96       	adiw	r26, 0x01	; 1
    1462:	8c 91       	ld	r24, X
    1464:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    1468:	81 11       	cpse	r24, r1
    146a:	c5 cf       	rjmp	.-118    	; 0x13f6 <get_fat.part.4+0x22e>
    146c:	ac 85       	ldd	r26, Y+12	; 0x0c
    146e:	bd 85       	ldd	r27, Y+13	; 0x0d
    1470:	9e 96       	adiw	r26, 0x2e	; 46
    1472:	4d 92       	st	X+, r4
    1474:	5d 92       	st	X+, r5
    1476:	6d 92       	st	X+, r6
    1478:	7c 92       	st	X, r7
    147a:	d1 97       	sbiw	r26, 0x31	; 49
    147c:	fd 01       	movw	r30, r26
    147e:	cc 0c       	add	r12, r12
    1480:	dd 1c       	adc	r13, r13
    1482:	ee 1c       	adc	r14, r14
    1484:	ff 1c       	adc	r15, r15
    1486:	e8 94       	clt
    1488:	c0 f8       	bld	r12, 0
    148a:	b1 e0       	ldi	r27, 0x01	; 1
    148c:	db 22       	and	r13, r27
    148e:	ee 24       	eor	r14, r14
    1490:	ff 24       	eor	r15, r15
    1492:	ec 0d       	add	r30, r12
    1494:	fd 1d       	adc	r31, r13
    1496:	62 a9       	ldd	r22, Z+50	; 0x32
    1498:	73 a9       	ldd	r23, Z+51	; 0x33
    149a:	80 e0       	ldi	r24, 0x00	; 0
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	bd ce       	rjmp	.-646    	; 0x121a <get_fat.part.4+0x52>
    14a0:	5f 01       	movw	r10, r30
    14a2:	f2 e3       	ldi	r31, 0x32	; 50
    14a4:	af 0e       	add	r10, r31
    14a6:	b1 1c       	adc	r11, r1
    14a8:	01 e0       	ldi	r16, 0x01	; 1
    14aa:	10 e0       	ldi	r17, 0x00	; 0
    14ac:	a3 01       	movw	r20, r6
    14ae:	92 01       	movw	r18, r4
    14b0:	b5 01       	movw	r22, r10
    14b2:	ac 85       	ldd	r26, Y+12	; 0x0c
    14b4:	bd 85       	ldd	r27, Y+13	; 0x0d
    14b6:	11 96       	adiw	r26, 0x01	; 1
    14b8:	8c 91       	ld	r24, X
    14ba:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    14be:	81 11       	cpse	r24, r1
    14c0:	a3 cf       	rjmp	.-186    	; 0x1408 <get_fat.part.4+0x240>
    14c2:	ec 85       	ldd	r30, Y+12	; 0x0c
    14c4:	fd 85       	ldd	r31, Y+13	; 0x0d
    14c6:	14 82       	std	Z+4, r1	; 0x04
    14c8:	82 8d       	ldd	r24, Z+26	; 0x1a
    14ca:	93 8d       	ldd	r25, Z+27	; 0x1b
    14cc:	a4 8d       	ldd	r26, Z+28	; 0x1c
    14ce:	b5 8d       	ldd	r27, Z+29	; 0x1d
    14d0:	42 a1       	ldd	r20, Z+34	; 0x22
    14d2:	53 a1       	ldd	r21, Z+35	; 0x23
    14d4:	64 a1       	ldd	r22, Z+36	; 0x24
    14d6:	75 a1       	ldd	r23, Z+37	; 0x25
    14d8:	93 01       	movw	r18, r6
    14da:	82 01       	movw	r16, r4
    14dc:	04 1b       	sub	r16, r20
    14de:	15 0b       	sbc	r17, r21
    14e0:	26 0b       	sbc	r18, r22
    14e2:	37 0b       	sbc	r19, r23
    14e4:	08 17       	cp	r16, r24
    14e6:	19 07       	cpc	r17, r25
    14e8:	2a 07       	cpc	r18, r26
    14ea:	3b 07       	cpc	r19, r27
    14ec:	08 f0       	brcs	.+2      	; 0x14f0 <get_fat.part.4+0x328>
    14ee:	d8 ce       	rjmp	.-592    	; 0x12a0 <get_fat.part.4+0xd8>
    14f0:	83 80       	ldd	r8, Z+3	; 0x03
    14f2:	91 2c       	mov	r9, r1
    14f4:	12 e0       	ldi	r17, 0x02	; 2
    14f6:	81 16       	cp	r8, r17
    14f8:	91 04       	cpc	r9, r1
    14fa:	38 f4       	brcc	.+14     	; 0x150a <get_fat.part.4+0x342>
    14fc:	d1 ce       	rjmp	.-606    	; 0x12a0 <get_fat.part.4+0xd8>
    14fe:	ec 85       	ldd	r30, Y+12	; 0x0c
    1500:	fd 85       	ldd	r31, Y+13	; 0x0d
    1502:	82 8d       	ldd	r24, Z+26	; 0x1a
    1504:	93 8d       	ldd	r25, Z+27	; 0x1b
    1506:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1508:	b5 8d       	ldd	r27, Z+29	; 0x1d
    150a:	48 0e       	add	r4, r24
    150c:	59 1e       	adc	r5, r25
    150e:	6a 1e       	adc	r6, r26
    1510:	7b 1e       	adc	r7, r27
    1512:	01 e0       	ldi	r16, 0x01	; 1
    1514:	10 e0       	ldi	r17, 0x00	; 0
    1516:	a3 01       	movw	r20, r6
    1518:	92 01       	movw	r18, r4
    151a:	b5 01       	movw	r22, r10
    151c:	ac 85       	ldd	r26, Y+12	; 0x0c
    151e:	bd 85       	ldd	r27, Y+13	; 0x0d
    1520:	11 96       	adiw	r26, 0x01	; 1
    1522:	8c 91       	ld	r24, X
    1524:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1528:	b1 e0       	ldi	r27, 0x01	; 1
    152a:	8b 1a       	sub	r8, r27
    152c:	91 08       	sbc	r9, r1
    152e:	e1 e0       	ldi	r30, 0x01	; 1
    1530:	8e 16       	cp	r8, r30
    1532:	91 04       	cpc	r9, r1
    1534:	21 f7       	brne	.-56     	; 0x14fe <get_fat.part.4+0x336>
    1536:	b4 ce       	rjmp	.-664    	; 0x12a0 <get_fat.part.4+0xd8>
    1538:	f2 96       	adiw	r30, 0x32	; 50
    153a:	e9 83       	std	Y+1, r30	; 0x01
    153c:	fa 83       	std	Y+2, r31	; 0x02
    153e:	01 e0       	ldi	r16, 0x01	; 1
    1540:	10 e0       	ldi	r17, 0x00	; 0
    1542:	a5 01       	movw	r20, r10
    1544:	94 01       	movw	r18, r8
    1546:	bf 01       	movw	r22, r30
    1548:	ac 85       	ldd	r26, Y+12	; 0x0c
    154a:	bd 85       	ldd	r27, Y+13	; 0x0d
    154c:	11 96       	adiw	r26, 0x01	; 1
    154e:	8c 91       	ld	r24, X
    1550:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1554:	81 11       	cpse	r24, r1
    1556:	58 cf       	rjmp	.-336    	; 0x1408 <get_fat.part.4+0x240>
    1558:	ec 85       	ldd	r30, Y+12	; 0x0c
    155a:	fd 85       	ldd	r31, Y+13	; 0x0d
    155c:	14 82       	std	Z+4, r1	; 0x04
    155e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1560:	93 8d       	ldd	r25, Z+27	; 0x1b
    1562:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1564:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1566:	42 a1       	ldd	r20, Z+34	; 0x22
    1568:	53 a1       	ldd	r21, Z+35	; 0x23
    156a:	64 a1       	ldd	r22, Z+36	; 0x24
    156c:	75 a1       	ldd	r23, Z+37	; 0x25
    156e:	95 01       	movw	r18, r10
    1570:	84 01       	movw	r16, r8
    1572:	04 1b       	sub	r16, r20
    1574:	15 0b       	sbc	r17, r21
    1576:	26 0b       	sbc	r18, r22
    1578:	37 0b       	sbc	r19, r23
    157a:	08 17       	cp	r16, r24
    157c:	19 07       	cpc	r17, r25
    157e:	2a 07       	cpc	r18, r26
    1580:	3b 07       	cpc	r19, r27
    1582:	08 f0       	brcs	.+2      	; 0x1586 <get_fat.part.4+0x3be>
    1584:	65 cf       	rjmp	.-310    	; 0x1450 <get_fat.part.4+0x288>
    1586:	23 81       	ldd	r18, Z+3	; 0x03
    1588:	22 2e       	mov	r2, r18
    158a:	31 2c       	mov	r3, r1
    158c:	12 e0       	ldi	r17, 0x02	; 2
    158e:	21 16       	cp	r2, r17
    1590:	31 04       	cpc	r3, r1
    1592:	08 f4       	brcc	.+2      	; 0x1596 <get_fat.part.4+0x3ce>
    1594:	5d cf       	rjmp	.-326    	; 0x1450 <get_fat.part.4+0x288>
    1596:	cd 82       	std	Y+5, r12	; 0x05
    1598:	de 82       	std	Y+6, r13	; 0x06
    159a:	ef 82       	std	Y+7, r14	; 0x07
    159c:	f8 86       	std	Y+8, r15	; 0x08
    159e:	e9 80       	ldd	r14, Y+1	; 0x01
    15a0:	fa 80       	ldd	r15, Y+2	; 0x02
    15a2:	06 c0       	rjmp	.+12     	; 0x15b0 <get_fat.part.4+0x3e8>
    15a4:	ec 85       	ldd	r30, Y+12	; 0x0c
    15a6:	fd 85       	ldd	r31, Y+13	; 0x0d
    15a8:	82 8d       	ldd	r24, Z+26	; 0x1a
    15aa:	93 8d       	ldd	r25, Z+27	; 0x1b
    15ac:	a4 8d       	ldd	r26, Z+28	; 0x1c
    15ae:	b5 8d       	ldd	r27, Z+29	; 0x1d
    15b0:	88 0e       	add	r8, r24
    15b2:	99 1e       	adc	r9, r25
    15b4:	aa 1e       	adc	r10, r26
    15b6:	bb 1e       	adc	r11, r27
    15b8:	01 e0       	ldi	r16, 0x01	; 1
    15ba:	10 e0       	ldi	r17, 0x00	; 0
    15bc:	a5 01       	movw	r20, r10
    15be:	94 01       	movw	r18, r8
    15c0:	b7 01       	movw	r22, r14
    15c2:	ac 85       	ldd	r26, Y+12	; 0x0c
    15c4:	bd 85       	ldd	r27, Y+13	; 0x0d
    15c6:	11 96       	adiw	r26, 0x01	; 1
    15c8:	8c 91       	ld	r24, X
    15ca:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    15ce:	b1 e0       	ldi	r27, 0x01	; 1
    15d0:	2b 1a       	sub	r2, r27
    15d2:	31 08       	sbc	r3, r1
    15d4:	e1 e0       	ldi	r30, 0x01	; 1
    15d6:	2e 16       	cp	r2, r30
    15d8:	31 04       	cpc	r3, r1
    15da:	21 f7       	brne	.-56     	; 0x15a4 <get_fat.part.4+0x3dc>
    15dc:	cd 80       	ldd	r12, Y+5	; 0x05
    15de:	de 80       	ldd	r13, Y+6	; 0x06
    15e0:	ef 80       	ldd	r14, Y+7	; 0x07
    15e2:	f8 84       	ldd	r15, Y+8	; 0x08
    15e4:	35 cf       	rjmp	.-406    	; 0x1450 <get_fat.part.4+0x288>
    15e6:	f2 96       	adiw	r30, 0x32	; 50
    15e8:	e9 83       	std	Y+1, r30	; 0x01
    15ea:	fa 83       	std	Y+2, r31	; 0x02
    15ec:	01 e0       	ldi	r16, 0x01	; 1
    15ee:	10 e0       	ldi	r17, 0x00	; 0
    15f0:	a5 01       	movw	r20, r10
    15f2:	94 01       	movw	r18, r8
    15f4:	bf 01       	movw	r22, r30
    15f6:	ac 85       	ldd	r26, Y+12	; 0x0c
    15f8:	bd 85       	ldd	r27, Y+13	; 0x0d
    15fa:	11 96       	adiw	r26, 0x01	; 1
    15fc:	8c 91       	ld	r24, X
    15fe:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1602:	81 11       	cpse	r24, r1
    1604:	01 cf       	rjmp	.-510    	; 0x1408 <get_fat.part.4+0x240>
    1606:	ec 85       	ldd	r30, Y+12	; 0x0c
    1608:	fd 85       	ldd	r31, Y+13	; 0x0d
    160a:	14 82       	std	Z+4, r1	; 0x04
    160c:	82 8d       	ldd	r24, Z+26	; 0x1a
    160e:	93 8d       	ldd	r25, Z+27	; 0x1b
    1610:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1612:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1614:	42 a1       	ldd	r20, Z+34	; 0x22
    1616:	53 a1       	ldd	r21, Z+35	; 0x23
    1618:	64 a1       	ldd	r22, Z+36	; 0x24
    161a:	75 a1       	ldd	r23, Z+37	; 0x25
    161c:	95 01       	movw	r18, r10
    161e:	84 01       	movw	r16, r8
    1620:	04 1b       	sub	r16, r20
    1622:	15 0b       	sbc	r17, r21
    1624:	26 0b       	sbc	r18, r22
    1626:	37 0b       	sbc	r19, r23
    1628:	08 17       	cp	r16, r24
    162a:	19 07       	cpc	r17, r25
    162c:	2a 07       	cpc	r18, r26
    162e:	3b 07       	cpc	r19, r27
    1630:	08 f0       	brcs	.+2      	; 0x1634 <get_fat.part.4+0x46c>
    1632:	d2 ce       	rjmp	.-604    	; 0x13d8 <get_fat.part.4+0x210>
    1634:	23 81       	ldd	r18, Z+3	; 0x03
    1636:	22 2e       	mov	r2, r18
    1638:	31 2c       	mov	r3, r1
    163a:	12 e0       	ldi	r17, 0x02	; 2
    163c:	21 16       	cp	r2, r17
    163e:	31 04       	cpc	r3, r1
    1640:	08 f4       	brcc	.+2      	; 0x1644 <get_fat.part.4+0x47c>
    1642:	ca ce       	rjmp	.-620    	; 0x13d8 <get_fat.part.4+0x210>
    1644:	cd 82       	std	Y+5, r12	; 0x05
    1646:	de 82       	std	Y+6, r13	; 0x06
    1648:	ef 82       	std	Y+7, r14	; 0x07
    164a:	f8 86       	std	Y+8, r15	; 0x08
    164c:	e9 80       	ldd	r14, Y+1	; 0x01
    164e:	fa 80       	ldd	r15, Y+2	; 0x02
    1650:	06 c0       	rjmp	.+12     	; 0x165e <get_fat.part.4+0x496>
    1652:	ec 85       	ldd	r30, Y+12	; 0x0c
    1654:	fd 85       	ldd	r31, Y+13	; 0x0d
    1656:	82 8d       	ldd	r24, Z+26	; 0x1a
    1658:	93 8d       	ldd	r25, Z+27	; 0x1b
    165a:	a4 8d       	ldd	r26, Z+28	; 0x1c
    165c:	b5 8d       	ldd	r27, Z+29	; 0x1d
    165e:	88 0e       	add	r8, r24
    1660:	99 1e       	adc	r9, r25
    1662:	aa 1e       	adc	r10, r26
    1664:	bb 1e       	adc	r11, r27
    1666:	01 e0       	ldi	r16, 0x01	; 1
    1668:	10 e0       	ldi	r17, 0x00	; 0
    166a:	a5 01       	movw	r20, r10
    166c:	94 01       	movw	r18, r8
    166e:	b7 01       	movw	r22, r14
    1670:	ac 85       	ldd	r26, Y+12	; 0x0c
    1672:	bd 85       	ldd	r27, Y+13	; 0x0d
    1674:	11 96       	adiw	r26, 0x01	; 1
    1676:	8c 91       	ld	r24, X
    1678:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    167c:	b1 e0       	ldi	r27, 0x01	; 1
    167e:	2b 1a       	sub	r2, r27
    1680:	31 08       	sbc	r3, r1
    1682:	e1 e0       	ldi	r30, 0x01	; 1
    1684:	2e 16       	cp	r2, r30
    1686:	31 04       	cpc	r3, r1
    1688:	21 f7       	brne	.-56     	; 0x1652 <get_fat.part.4+0x48a>
    168a:	cd 80       	ldd	r12, Y+5	; 0x05
    168c:	de 80       	ldd	r13, Y+6	; 0x06
    168e:	ef 80       	ldd	r14, Y+7	; 0x07
    1690:	f8 84       	ldd	r15, Y+8	; 0x08
    1692:	a2 ce       	rjmp	.-700    	; 0x13d8 <get_fat.part.4+0x210>
    1694:	ac 85       	ldd	r26, Y+12	; 0x0c
    1696:	bd 85       	ldd	r27, Y+13	; 0x0d
    1698:	9e 96       	adiw	r26, 0x2e	; 46
    169a:	4d 92       	st	X+, r4
    169c:	5d 92       	st	X+, r5
    169e:	6d 92       	st	X+, r6
    16a0:	7c 92       	st	X, r7
    16a2:	d1 97       	sbiw	r26, 0x31	; 49
    16a4:	fd 01       	movw	r30, r26
    16a6:	cc 0c       	add	r12, r12
    16a8:	dd 1c       	adc	r13, r13
    16aa:	ee 1c       	adc	r14, r14
    16ac:	ff 1c       	adc	r15, r15
    16ae:	cc 0c       	add	r12, r12
    16b0:	dd 1c       	adc	r13, r13
    16b2:	ee 1c       	adc	r14, r14
    16b4:	ff 1c       	adc	r15, r15
    16b6:	bc ef       	ldi	r27, 0xFC	; 252
    16b8:	cb 22       	and	r12, r27
    16ba:	b1 e0       	ldi	r27, 0x01	; 1
    16bc:	db 22       	and	r13, r27
    16be:	ee 24       	eor	r14, r14
    16c0:	ff 24       	eor	r15, r15
    16c2:	ec 0d       	add	r30, r12
    16c4:	fd 1d       	adc	r31, r13
    16c6:	62 a9       	ldd	r22, Z+50	; 0x32
    16c8:	73 a9       	ldd	r23, Z+51	; 0x33
    16ca:	84 a9       	ldd	r24, Z+52	; 0x34
    16cc:	95 a9       	ldd	r25, Z+53	; 0x35
    16ce:	9f 70       	andi	r25, 0x0F	; 15
    16d0:	a4 cd       	rjmp	.-1208   	; 0x121a <get_fat.part.4+0x52>
    16d2:	4a 01       	movw	r8, r20
    16d4:	5b 01       	movw	r10, r22
    16d6:	2c 01       	movw	r4, r24
    16d8:	3d 01       	movw	r6, r26
    16da:	0c 85       	ldd	r16, Y+12	; 0x0c
    16dc:	1d 85       	ldd	r17, Y+13	; 0x0d
    16de:	04 ce       	rjmp	.-1016   	; 0x12e8 <get_fat.part.4+0x120>
    16e0:	d2 96       	adiw	r26, 0x32	; 50
    16e2:	a9 87       	std	Y+9, r26	; 0x09
    16e4:	ba 87       	std	Y+10, r27	; 0x0a
    16e6:	01 e0       	ldi	r16, 0x01	; 1
    16e8:	10 e0       	ldi	r17, 0x00	; 0
    16ea:	29 81       	ldd	r18, Y+1	; 0x01
    16ec:	3a 81       	ldd	r19, Y+2	; 0x02
    16ee:	4b 81       	ldd	r20, Y+3	; 0x03
    16f0:	5c 81       	ldd	r21, Y+4	; 0x04
    16f2:	bd 01       	movw	r22, r26
    16f4:	81 81       	ldd	r24, Z+1	; 0x01
    16f6:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    16fa:	81 11       	cpse	r24, r1
    16fc:	85 ce       	rjmp	.-758    	; 0x1408 <get_fat.part.4+0x240>
    16fe:	ac 85       	ldd	r26, Y+12	; 0x0c
    1700:	bd 85       	ldd	r27, Y+13	; 0x0d
    1702:	14 96       	adiw	r26, 0x04	; 4
    1704:	1c 92       	st	X, r1
    1706:	14 97       	sbiw	r26, 0x04	; 4
    1708:	5a 96       	adiw	r26, 0x1a	; 26
    170a:	4d 91       	ld	r20, X+
    170c:	5d 91       	ld	r21, X+
    170e:	6d 91       	ld	r22, X+
    1710:	7c 91       	ld	r23, X
    1712:	5d 97       	sbiw	r26, 0x1d	; 29
    1714:	fd 01       	movw	r30, r26
    1716:	82 a1       	ldd	r24, Z+34	; 0x22
    1718:	93 a1       	ldd	r25, Z+35	; 0x23
    171a:	a4 a1       	ldd	r26, Z+36	; 0x24
    171c:	b5 a1       	ldd	r27, Z+37	; 0x25
    171e:	09 81       	ldd	r16, Y+1	; 0x01
    1720:	1a 81       	ldd	r17, Y+2	; 0x02
    1722:	2b 81       	ldd	r18, Y+3	; 0x03
    1724:	3c 81       	ldd	r19, Y+4	; 0x04
    1726:	08 1b       	sub	r16, r24
    1728:	19 0b       	sbc	r17, r25
    172a:	2a 0b       	sbc	r18, r26
    172c:	3b 0b       	sbc	r19, r27
    172e:	04 17       	cp	r16, r20
    1730:	15 07       	cpc	r17, r21
    1732:	26 07       	cpc	r18, r22
    1734:	37 07       	cpc	r19, r23
    1736:	08 f0       	brcs	.+2      	; 0x173a <get_fat.part.4+0x572>
    1738:	fe cd       	rjmp	.-1028   	; 0x1336 <get_fat.part.4+0x16e>
    173a:	83 81       	ldd	r24, Z+3	; 0x03
    173c:	28 2e       	mov	r2, r24
    173e:	31 2c       	mov	r3, r1
    1740:	12 e0       	ldi	r17, 0x02	; 2
    1742:	21 16       	cp	r2, r17
    1744:	31 04       	cpc	r3, r1
    1746:	08 f4       	brcc	.+2      	; 0x174a <get_fat.part.4+0x582>
    1748:	f6 cd       	rjmp	.-1044   	; 0x1336 <get_fat.part.4+0x16e>
    174a:	c9 82       	std	Y+1, r12	; 0x01
    174c:	da 82       	std	Y+2, r13	; 0x02
    174e:	eb 82       	std	Y+3, r14	; 0x03
    1750:	fc 82       	std	Y+4, r15	; 0x04
    1752:	e9 84       	ldd	r14, Y+9	; 0x09
    1754:	fa 84       	ldd	r15, Y+10	; 0x0a
    1756:	ac 85       	ldd	r26, Y+12	; 0x0c
    1758:	bd 85       	ldd	r27, Y+13	; 0x0d
    175a:	08 c0       	rjmp	.+16     	; 0x176c <get_fat.part.4+0x5a4>
    175c:	ac 85       	ldd	r26, Y+12	; 0x0c
    175e:	bd 85       	ldd	r27, Y+13	; 0x0d
    1760:	5a 96       	adiw	r26, 0x1a	; 26
    1762:	4d 91       	ld	r20, X+
    1764:	5d 91       	ld	r21, X+
    1766:	6d 91       	ld	r22, X+
    1768:	7c 91       	ld	r23, X
    176a:	5d 97       	sbiw	r26, 0x1d	; 29
    176c:	84 0e       	add	r8, r20
    176e:	95 1e       	adc	r9, r21
    1770:	a6 1e       	adc	r10, r22
    1772:	b7 1e       	adc	r11, r23
    1774:	01 e0       	ldi	r16, 0x01	; 1
    1776:	10 e0       	ldi	r17, 0x00	; 0
    1778:	a5 01       	movw	r20, r10
    177a:	94 01       	movw	r18, r8
    177c:	b7 01       	movw	r22, r14
    177e:	11 96       	adiw	r26, 0x01	; 1
    1780:	8c 91       	ld	r24, X
    1782:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1786:	b1 e0       	ldi	r27, 0x01	; 1
    1788:	2b 1a       	sub	r2, r27
    178a:	31 08       	sbc	r3, r1
    178c:	e1 e0       	ldi	r30, 0x01	; 1
    178e:	2e 16       	cp	r2, r30
    1790:	31 04       	cpc	r3, r1
    1792:	21 f7       	brne	.-56     	; 0x175c <get_fat.part.4+0x594>
    1794:	c9 80       	ldd	r12, Y+1	; 0x01
    1796:	da 80       	ldd	r13, Y+2	; 0x02
    1798:	eb 80       	ldd	r14, Y+3	; 0x03
    179a:	fc 80       	ldd	r15, Y+4	; 0x04
    179c:	cc cd       	rjmp	.-1128   	; 0x1336 <get_fat.part.4+0x16e>
    179e:	7f 70       	andi	r23, 0x0F	; 15
    17a0:	80 e0       	ldi	r24, 0x00	; 0
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	3a cd       	rjmp	.-1420   	; 0x121a <get_fat.part.4+0x52>

000017a6 <dir_sdi>:
    17a6:	8f 92       	push	r8
    17a8:	9f 92       	push	r9
    17aa:	af 92       	push	r10
    17ac:	bf 92       	push	r11
    17ae:	cf 92       	push	r12
    17b0:	df 92       	push	r13
    17b2:	ef 92       	push	r14
    17b4:	ff 92       	push	r15
    17b6:	0f 93       	push	r16
    17b8:	1f 93       	push	r17
    17ba:	cf 93       	push	r28
    17bc:	df 93       	push	r29
    17be:	8c 01       	movw	r16, r24
    17c0:	eb 01       	movw	r28, r22
    17c2:	dc 01       	movw	r26, r24
    17c4:	14 96       	adiw	r26, 0x04	; 4
    17c6:	6d 93       	st	X+, r22
    17c8:	7c 93       	st	X, r23
    17ca:	15 97       	sbiw	r26, 0x05	; 5
    17cc:	16 96       	adiw	r26, 0x06	; 6
    17ce:	cd 90       	ld	r12, X+
    17d0:	dd 90       	ld	r13, X+
    17d2:	ed 90       	ld	r14, X+
    17d4:	fc 90       	ld	r15, X
    17d6:	19 97       	sbiw	r26, 0x09	; 9
    17d8:	b1 e0       	ldi	r27, 0x01	; 1
    17da:	cb 16       	cp	r12, r27
    17dc:	d1 04       	cpc	r13, r1
    17de:	e1 04       	cpc	r14, r1
    17e0:	f1 04       	cpc	r15, r1
    17e2:	61 f0       	breq	.+24     	; 0x17fc <dir_sdi+0x56>
    17e4:	dc 01       	movw	r26, r24
    17e6:	ed 91       	ld	r30, X+
    17e8:	fc 91       	ld	r31, X
    17ea:	86 89       	ldd	r24, Z+22	; 0x16
    17ec:	97 89       	ldd	r25, Z+23	; 0x17
    17ee:	a0 8d       	ldd	r26, Z+24	; 0x18
    17f0:	b1 8d       	ldd	r27, Z+25	; 0x19
    17f2:	c8 16       	cp	r12, r24
    17f4:	d9 06       	cpc	r13, r25
    17f6:	ea 06       	cpc	r14, r26
    17f8:	fb 06       	cpc	r15, r27
    17fa:	70 f0       	brcs	.+28     	; 0x1818 <dir_sdi+0x72>
    17fc:	82 e0       	ldi	r24, 0x02	; 2
    17fe:	df 91       	pop	r29
    1800:	cf 91       	pop	r28
    1802:	1f 91       	pop	r17
    1804:	0f 91       	pop	r16
    1806:	ff 90       	pop	r15
    1808:	ef 90       	pop	r14
    180a:	df 90       	pop	r13
    180c:	cf 90       	pop	r12
    180e:	bf 90       	pop	r11
    1810:	af 90       	pop	r10
    1812:	9f 90       	pop	r9
    1814:	8f 90       	pop	r8
    1816:	08 95       	ret
    1818:	c1 14       	cp	r12, r1
    181a:	d1 04       	cpc	r13, r1
    181c:	e1 04       	cpc	r14, r1
    181e:	f1 04       	cpc	r15, r1
    1820:	09 f0       	breq	.+2      	; 0x1824 <dir_sdi+0x7e>
    1822:	4a c0       	rjmp	.+148    	; 0x18b8 <dir_sdi+0x112>
    1824:	20 81       	ld	r18, Z
    1826:	23 30       	cpi	r18, 0x03	; 3
    1828:	d9 f1       	breq	.+118    	; 0x18a0 <dir_sdi+0xfa>
    182a:	80 85       	ldd	r24, Z+8	; 0x08
    182c:	91 85       	ldd	r25, Z+9	; 0x09
    182e:	c8 17       	cp	r28, r24
    1830:	d9 07       	cpc	r29, r25
    1832:	20 f7       	brcc	.-56     	; 0x17fc <dir_sdi+0x56>
    1834:	66 a1       	ldd	r22, Z+38	; 0x26
    1836:	77 a1       	ldd	r23, Z+39	; 0x27
    1838:	80 a5       	ldd	r24, Z+40	; 0x28
    183a:	91 a5       	ldd	r25, Z+41	; 0x29
    183c:	d8 01       	movw	r26, r16
    183e:	1a 96       	adiw	r26, 0x0a	; 10
    1840:	cd 92       	st	X+, r12
    1842:	dd 92       	st	X+, r13
    1844:	ed 92       	st	X+, r14
    1846:	fc 92       	st	X, r15
    1848:	1d 97       	sbiw	r26, 0x0d	; 13
    184a:	61 15       	cp	r22, r1
    184c:	71 05       	cpc	r23, r1
    184e:	81 05       	cpc	r24, r1
    1850:	91 05       	cpc	r25, r1
    1852:	a1 f2       	breq	.-88     	; 0x17fc <dir_sdi+0x56>
    1854:	9e 01       	movw	r18, r28
    1856:	32 95       	swap	r19
    1858:	22 95       	swap	r18
    185a:	2f 70       	andi	r18, 0x0F	; 15
    185c:	23 27       	eor	r18, r19
    185e:	3f 70       	andi	r19, 0x0F	; 15
    1860:	23 27       	eor	r18, r19
    1862:	ab 01       	movw	r20, r22
    1864:	bc 01       	movw	r22, r24
    1866:	42 0f       	add	r20, r18
    1868:	53 1f       	adc	r21, r19
    186a:	61 1d       	adc	r22, r1
    186c:	71 1d       	adc	r23, r1
    186e:	1e 96       	adiw	r26, 0x0e	; 14
    1870:	4d 93       	st	X+, r20
    1872:	5d 93       	st	X+, r21
    1874:	6d 93       	st	X+, r22
    1876:	7c 93       	st	X, r23
    1878:	51 97       	sbiw	r26, 0x11	; 17
    187a:	cf 70       	andi	r28, 0x0F	; 15
    187c:	dd 27       	eor	r29, r29
    187e:	cc 0f       	add	r28, r28
    1880:	dd 1f       	adc	r29, r29
    1882:	c2 95       	swap	r28
    1884:	d2 95       	swap	r29
    1886:	d0 7f       	andi	r29, 0xF0	; 240
    1888:	dc 27       	eor	r29, r28
    188a:	c0 7f       	andi	r28, 0xF0	; 240
    188c:	dc 27       	eor	r29, r28
    188e:	e2 96       	adiw	r28, 0x32	; 50
    1890:	ce 0f       	add	r28, r30
    1892:	df 1f       	adc	r29, r31
    1894:	52 96       	adiw	r26, 0x12	; 18
    1896:	cd 93       	st	X+, r28
    1898:	dc 93       	st	X, r29
    189a:	53 97       	sbiw	r26, 0x13	; 19
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	af cf       	rjmp	.-162    	; 0x17fe <dir_sdi+0x58>
    18a0:	46 a1       	ldd	r20, Z+38	; 0x26
    18a2:	57 a1       	ldd	r21, Z+39	; 0x27
    18a4:	60 a5       	ldd	r22, Z+40	; 0x28
    18a6:	71 a5       	ldd	r23, Z+41	; 0x29
    18a8:	41 15       	cp	r20, r1
    18aa:	51 05       	cpc	r21, r1
    18ac:	61 05       	cpc	r22, r1
    18ae:	71 05       	cpc	r23, r1
    18b0:	09 f4       	brne	.+2      	; 0x18b4 <dir_sdi+0x10e>
    18b2:	bb cf       	rjmp	.-138    	; 0x182a <dir_sdi+0x84>
    18b4:	6a 01       	movw	r12, r20
    18b6:	7b 01       	movw	r14, r22
    18b8:	a2 80       	ldd	r10, Z+2	; 0x02
    18ba:	20 e1       	ldi	r18, 0x10	; 16
    18bc:	a2 9e       	mul	r10, r18
    18be:	50 01       	movw	r10, r0
    18c0:	11 24       	eor	r1, r1
    18c2:	ca 15       	cp	r28, r10
    18c4:	db 05       	cpc	r29, r11
    18c6:	a8 f1       	brcs	.+106    	; 0x1932 <dir_sdi+0x18c>
    18c8:	22 e0       	ldi	r18, 0x02	; 2
    18ca:	c2 16       	cp	r12, r18
    18cc:	d1 04       	cpc	r13, r1
    18ce:	e1 04       	cpc	r14, r1
    18d0:	f1 04       	cpc	r15, r1
    18d2:	08 f4       	brcc	.+2      	; 0x18d6 <dir_sdi+0x130>
    18d4:	93 cf       	rjmp	.-218    	; 0x17fc <dir_sdi+0x56>
    18d6:	c8 16       	cp	r12, r24
    18d8:	d9 06       	cpc	r13, r25
    18da:	ea 06       	cpc	r14, r26
    18dc:	fb 06       	cpc	r15, r27
    18de:	08 f0       	brcs	.+2      	; 0x18e2 <dir_sdi+0x13c>
    18e0:	8d cf       	rjmp	.-230    	; 0x17fc <dir_sdi+0x56>
    18e2:	19 c0       	rjmp	.+50     	; 0x1916 <dir_sdi+0x170>
    18e4:	a2 e0       	ldi	r26, 0x02	; 2
    18e6:	ca 16       	cp	r12, r26
    18e8:	d1 04       	cpc	r13, r1
    18ea:	e1 04       	cpc	r14, r1
    18ec:	f1 04       	cpc	r15, r1
    18ee:	08 f4       	brcc	.+2      	; 0x18f2 <dir_sdi+0x14c>
    18f0:	85 cf       	rjmp	.-246    	; 0x17fc <dir_sdi+0x56>
    18f2:	d8 01       	movw	r26, r16
    18f4:	ed 91       	ld	r30, X+
    18f6:	fc 91       	ld	r31, X
    18f8:	86 89       	ldd	r24, Z+22	; 0x16
    18fa:	97 89       	ldd	r25, Z+23	; 0x17
    18fc:	a0 8d       	ldd	r26, Z+24	; 0x18
    18fe:	b1 8d       	ldd	r27, Z+25	; 0x19
    1900:	c8 16       	cp	r12, r24
    1902:	d9 06       	cpc	r13, r25
    1904:	ea 06       	cpc	r14, r26
    1906:	fb 06       	cpc	r15, r27
    1908:	08 f0       	brcs	.+2      	; 0x190c <dir_sdi+0x166>
    190a:	78 cf       	rjmp	.-272    	; 0x17fc <dir_sdi+0x56>
    190c:	ca 19       	sub	r28, r10
    190e:	db 09       	sbc	r29, r11
    1910:	ca 15       	cp	r28, r10
    1912:	db 05       	cpc	r29, r11
    1914:	70 f0       	brcs	.+28     	; 0x1932 <dir_sdi+0x18c>
    1916:	b7 01       	movw	r22, r14
    1918:	a6 01       	movw	r20, r12
    191a:	cf 01       	movw	r24, r30
    191c:	55 dc       	rcall	.-1878   	; 0x11c8 <get_fat.part.4>
    191e:	6b 01       	movw	r12, r22
    1920:	7c 01       	movw	r14, r24
    1922:	8f ef       	ldi	r24, 0xFF	; 255
    1924:	c8 16       	cp	r12, r24
    1926:	d8 06       	cpc	r13, r24
    1928:	e8 06       	cpc	r14, r24
    192a:	f8 06       	cpc	r15, r24
    192c:	d9 f6       	brne	.-74     	; 0x18e4 <dir_sdi+0x13e>
    192e:	81 e0       	ldi	r24, 0x01	; 1
    1930:	66 cf       	rjmp	.-308    	; 0x17fe <dir_sdi+0x58>
    1932:	a7 01       	movw	r20, r14
    1934:	96 01       	movw	r18, r12
    1936:	22 50       	subi	r18, 0x02	; 2
    1938:	31 09       	sbc	r19, r1
    193a:	41 09       	sbc	r20, r1
    193c:	51 09       	sbc	r21, r1
    193e:	02 97       	sbiw	r24, 0x02	; 2
    1940:	a1 09       	sbc	r26, r1
    1942:	b1 09       	sbc	r27, r1
    1944:	28 17       	cp	r18, r24
    1946:	39 07       	cpc	r19, r25
    1948:	4a 07       	cpc	r20, r26
    194a:	5b 07       	cpc	r21, r27
    194c:	68 f4       	brcc	.+26     	; 0x1968 <dir_sdi+0x1c2>
    194e:	a2 81       	ldd	r26, Z+2	; 0x02
    1950:	b0 e0       	ldi	r27, 0x00	; 0
    1952:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    1956:	82 a4       	ldd	r8, Z+42	; 0x2a
    1958:	93 a4       	ldd	r9, Z+43	; 0x2b
    195a:	a4 a4       	ldd	r10, Z+44	; 0x2c
    195c:	b5 a4       	ldd	r11, Z+45	; 0x2d
    195e:	68 0d       	add	r22, r8
    1960:	79 1d       	adc	r23, r9
    1962:	8a 1d       	adc	r24, r10
    1964:	9b 1d       	adc	r25, r11
    1966:	6a cf       	rjmp	.-300    	; 0x183c <dir_sdi+0x96>
    1968:	f8 01       	movw	r30, r16
    196a:	c2 86       	std	Z+10, r12	; 0x0a
    196c:	d3 86       	std	Z+11, r13	; 0x0b
    196e:	e4 86       	std	Z+12, r14	; 0x0c
    1970:	f5 86       	std	Z+13, r15	; 0x0d
    1972:	44 cf       	rjmp	.-376    	; 0x17fc <dir_sdi+0x56>

00001974 <create_chain>:
    1974:	2f 92       	push	r2
    1976:	3f 92       	push	r3
    1978:	4f 92       	push	r4
    197a:	5f 92       	push	r5
    197c:	6f 92       	push	r6
    197e:	7f 92       	push	r7
    1980:	8f 92       	push	r8
    1982:	9f 92       	push	r9
    1984:	af 92       	push	r10
    1986:	bf 92       	push	r11
    1988:	cf 92       	push	r12
    198a:	df 92       	push	r13
    198c:	ef 92       	push	r14
    198e:	ff 92       	push	r15
    1990:	0f 93       	push	r16
    1992:	1f 93       	push	r17
    1994:	cf 93       	push	r28
    1996:	df 93       	push	r29
    1998:	cd b7       	in	r28, 0x3d	; 61
    199a:	de b7       	in	r29, 0x3e	; 62
    199c:	6a 97       	sbiw	r28, 0x1a	; 26
    199e:	cd bf       	out	0x3d, r28	; 61
    19a0:	de bf       	out	0x3e, r29	; 62
    19a2:	5c 01       	movw	r10, r24
    19a4:	49 87       	std	Y+9, r20	; 0x09
    19a6:	5a 87       	std	Y+10, r21	; 0x0a
    19a8:	6b 87       	std	Y+11, r22	; 0x0b
    19aa:	7c 87       	std	Y+12, r23	; 0x0c
    19ac:	45 2b       	or	r20, r21
    19ae:	46 2b       	or	r20, r22
    19b0:	47 2b       	or	r20, r23
    19b2:	09 f0       	breq	.+2      	; 0x19b6 <create_chain+0x42>
    19b4:	d9 c0       	rjmp	.+434    	; 0x1b68 <create_chain+0x1f4>
    19b6:	dc 01       	movw	r26, r24
    19b8:	1a 96       	adiw	r26, 0x0a	; 10
    19ba:	0d 91       	ld	r16, X+
    19bc:	1d 91       	ld	r17, X+
    19be:	2d 91       	ld	r18, X+
    19c0:	3c 91       	ld	r19, X
    19c2:	1d 97       	sbiw	r26, 0x0d	; 13
    19c4:	09 83       	std	Y+1, r16	; 0x01
    19c6:	1a 83       	std	Y+2, r17	; 0x02
    19c8:	2b 83       	std	Y+3, r18	; 0x03
    19ca:	3c 83       	std	Y+4, r19	; 0x04
    19cc:	01 15       	cp	r16, r1
    19ce:	11 05       	cpc	r17, r1
    19d0:	21 05       	cpc	r18, r1
    19d2:	31 05       	cpc	r19, r1
    19d4:	09 f0       	breq	.+2      	; 0x19d8 <create_chain+0x64>
    19d6:	fb c0       	rjmp	.+502    	; 0x1bce <create_chain+0x25a>
    19d8:	56 96       	adiw	r26, 0x16	; 22
    19da:	8d 91       	ld	r24, X+
    19dc:	9d 91       	ld	r25, X+
    19de:	0d 90       	ld	r0, X+
    19e0:	bc 91       	ld	r27, X
    19e2:	a0 2d       	mov	r26, r0
    19e4:	01 e0       	ldi	r16, 0x01	; 1
    19e6:	10 e0       	ldi	r17, 0x00	; 0
    19e8:	20 e0       	ldi	r18, 0x00	; 0
    19ea:	30 e0       	ldi	r19, 0x00	; 0
    19ec:	09 83       	std	Y+1, r16	; 0x01
    19ee:	1a 83       	std	Y+2, r17	; 0x02
    19f0:	2b 83       	std	Y+3, r18	; 0x03
    19f2:	3c 83       	std	Y+4, r19	; 0x04
    19f4:	28 01       	movw	r4, r16
    19f6:	39 01       	movw	r6, r18
    19f8:	15 01       	movw	r2, r10
    19fa:	32 e3       	ldi	r19, 0x32	; 50
    19fc:	23 0e       	add	r2, r19
    19fe:	31 1c       	adc	r3, r1
    1a00:	a9 8e       	std	Y+25, r10	; 0x19
    1a02:	ba 8e       	std	Y+26, r11	; 0x1a
    1a04:	4f ef       	ldi	r20, 0xFF	; 255
    1a06:	44 1a       	sub	r4, r20
    1a08:	54 0a       	sbc	r5, r20
    1a0a:	64 0a       	sbc	r6, r20
    1a0c:	74 0a       	sbc	r7, r20
    1a0e:	48 16       	cp	r4, r24
    1a10:	59 06       	cpc	r5, r25
    1a12:	6a 06       	cpc	r6, r26
    1a14:	7b 06       	cpc	r7, r27
    1a16:	08 f4       	brcc	.+2      	; 0x1a1a <create_chain+0xa6>
    1a18:	f0 c0       	rjmp	.+480    	; 0x1bfa <create_chain+0x286>
    1a1a:	09 81       	ldd	r16, Y+1	; 0x01
    1a1c:	1a 81       	ldd	r17, Y+2	; 0x02
    1a1e:	2b 81       	ldd	r18, Y+3	; 0x03
    1a20:	3c 81       	ldd	r19, Y+4	; 0x04
    1a22:	02 30       	cpi	r16, 0x02	; 2
    1a24:	11 05       	cpc	r17, r1
    1a26:	21 05       	cpc	r18, r1
    1a28:	31 05       	cpc	r19, r1
    1a2a:	08 f4       	brcc	.+2      	; 0x1a2e <create_chain+0xba>
    1a2c:	fd c2       	rjmp	.+1530   	; 0x2028 <create_chain+0x6b4>
    1a2e:	03 97       	sbiw	r24, 0x03	; 3
    1a30:	a1 05       	cpc	r26, r1
    1a32:	b1 05       	cpc	r27, r1
    1a34:	08 f4       	brcc	.+2      	; 0x1a38 <create_chain+0xc4>
    1a36:	ae c0       	rjmp	.+348    	; 0x1b94 <create_chain+0x220>
    1a38:	82 e0       	ldi	r24, 0x02	; 2
    1a3a:	48 2e       	mov	r4, r24
    1a3c:	51 2c       	mov	r5, r1
    1a3e:	61 2c       	mov	r6, r1
    1a40:	71 2c       	mov	r7, r1
    1a42:	a9 8d       	ldd	r26, Y+25	; 0x19
    1a44:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1a46:	8c 91       	ld	r24, X
    1a48:	82 30       	cpi	r24, 0x02	; 2
    1a4a:	09 f4       	brne	.+2      	; 0x1a4e <create_chain+0xda>
    1a4c:	e2 c0       	rjmp	.+452    	; 0x1c12 <create_chain+0x29e>
    1a4e:	83 30       	cpi	r24, 0x03	; 3
    1a50:	09 f4       	brne	.+2      	; 0x1a54 <create_chain+0xe0>
    1a52:	83 c1       	rjmp	.+774    	; 0x1d5a <create_chain+0x3e6>
    1a54:	81 30       	cpi	r24, 0x01	; 1
    1a56:	09 f0       	breq	.+2      	; 0x1a5a <create_chain+0xe6>
    1a58:	9d c0       	rjmp	.+314    	; 0x1b94 <create_chain+0x220>
    1a5a:	f2 01       	movw	r30, r4
    1a5c:	f6 95       	lsr	r31
    1a5e:	e7 95       	ror	r30
    1a60:	e4 0d       	add	r30, r4
    1a62:	f5 1d       	adc	r31, r5
    1a64:	ed 83       	std	Y+5, r30	; 0x05
    1a66:	fe 83       	std	Y+6, r31	; 0x06
    1a68:	92 96       	adiw	r26, 0x22	; 34
    1a6a:	4d 91       	ld	r20, X+
    1a6c:	5d 91       	ld	r21, X+
    1a6e:	6d 91       	ld	r22, X+
    1a70:	7c 91       	ld	r23, X
    1a72:	95 97       	sbiw	r26, 0x25	; 37
    1a74:	cf 01       	movw	r24, r30
    1a76:	89 2f       	mov	r24, r25
    1a78:	99 27       	eor	r25, r25
    1a7a:	86 95       	lsr	r24
    1a7c:	6a 01       	movw	r12, r20
    1a7e:	7b 01       	movw	r14, r22
    1a80:	c8 0e       	add	r12, r24
    1a82:	d9 1e       	adc	r13, r25
    1a84:	e1 1c       	adc	r14, r1
    1a86:	f1 1c       	adc	r15, r1
    1a88:	9e 96       	adiw	r26, 0x2e	; 46
    1a8a:	8d 90       	ld	r8, X+
    1a8c:	9d 90       	ld	r9, X+
    1a8e:	ad 90       	ld	r10, X+
    1a90:	bc 90       	ld	r11, X
    1a92:	d1 97       	sbiw	r26, 0x31	; 49
    1a94:	c8 14       	cp	r12, r8
    1a96:	d9 04       	cpc	r13, r9
    1a98:	ea 04       	cpc	r14, r10
    1a9a:	fb 04       	cpc	r15, r11
    1a9c:	09 f4       	brne	.+2      	; 0x1aa0 <create_chain+0x12c>
    1a9e:	bd c2       	rjmp	.+1402   	; 0x201a <create_chain+0x6a6>
    1aa0:	14 96       	adiw	r26, 0x04	; 4
    1aa2:	8c 91       	ld	r24, X
    1aa4:	14 97       	sbiw	r26, 0x04	; 4
    1aa6:	81 11       	cpse	r24, r1
    1aa8:	61 c2       	rjmp	.+1218   	; 0x1f6c <create_chain+0x5f8>
    1aaa:	01 e0       	ldi	r16, 0x01	; 1
    1aac:	10 e0       	ldi	r17, 0x00	; 0
    1aae:	a7 01       	movw	r20, r14
    1ab0:	96 01       	movw	r18, r12
    1ab2:	b1 01       	movw	r22, r2
    1ab4:	e9 8d       	ldd	r30, Y+25	; 0x19
    1ab6:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1ab8:	81 81       	ldd	r24, Z+1	; 0x01
    1aba:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    1abe:	81 11       	cpse	r24, r1
    1ac0:	44 c0       	rjmp	.+136    	; 0x1b4a <create_chain+0x1d6>
    1ac2:	a9 8d       	ldd	r26, Y+25	; 0x19
    1ac4:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1ac6:	9e 96       	adiw	r26, 0x2e	; 46
    1ac8:	cd 92       	st	X+, r12
    1aca:	dd 92       	st	X+, r13
    1acc:	ed 92       	st	X+, r14
    1ace:	fc 92       	st	X, r15
    1ad0:	d1 97       	sbiw	r26, 0x31	; 49
    1ad2:	92 96       	adiw	r26, 0x22	; 34
    1ad4:	4d 91       	ld	r20, X+
    1ad6:	5d 91       	ld	r21, X+
    1ad8:	6d 91       	ld	r22, X+
    1ada:	7c 91       	ld	r23, X
    1adc:	95 97       	sbiw	r26, 0x25	; 37
    1ade:	c9 8a       	std	Y+17, r12	; 0x11
    1ae0:	da 8a       	std	Y+18, r13	; 0x12
    1ae2:	eb 8a       	std	Y+19, r14	; 0x13
    1ae4:	fc 8a       	std	Y+20, r15	; 0x14
    1ae6:	9d 01       	movw	r18, r26
    1ae8:	0d 81       	ldd	r16, Y+5	; 0x05
    1aea:	1e 81       	ldd	r17, Y+6	; 0x06
    1aec:	0f 5f       	subi	r16, 0xFF	; 255
    1aee:	1f 4f       	sbci	r17, 0xFF	; 255
    1af0:	0d 87       	std	Y+13, r16	; 0x0d
    1af2:	1e 87       	std	Y+14, r17	; 0x0e
    1af4:	ed 81       	ldd	r30, Y+5	; 0x05
    1af6:	fe 81       	ldd	r31, Y+6	; 0x06
    1af8:	f1 70       	andi	r31, 0x01	; 1
    1afa:	e2 0f       	add	r30, r18
    1afc:	f3 1f       	adc	r31, r19
    1afe:	92 a9       	ldd	r25, Z+50	; 0x32
    1b00:	9d 83       	std	Y+5, r25	; 0x05
    1b02:	c8 01       	movw	r24, r16
    1b04:	89 2f       	mov	r24, r25
    1b06:	99 27       	eor	r25, r25
    1b08:	86 95       	lsr	r24
    1b0a:	4a 01       	movw	r8, r20
    1b0c:	5b 01       	movw	r10, r22
    1b0e:	88 0e       	add	r8, r24
    1b10:	99 1e       	adc	r9, r25
    1b12:	a1 1c       	adc	r10, r1
    1b14:	b1 1c       	adc	r11, r1
    1b16:	c8 14       	cp	r12, r8
    1b18:	d9 04       	cpc	r13, r9
    1b1a:	ea 04       	cpc	r14, r10
    1b1c:	fb 04       	cpc	r15, r11
    1b1e:	09 f4       	brne	.+2      	; 0x1b22 <create_chain+0x1ae>
    1b20:	19 c3       	rjmp	.+1586   	; 0x2154 <create_chain+0x7e0>
    1b22:	d9 01       	movw	r26, r18
    1b24:	14 96       	adiw	r26, 0x04	; 4
    1b26:	8c 91       	ld	r24, X
    1b28:	14 97       	sbiw	r26, 0x04	; 4
    1b2a:	81 11       	cpse	r24, r1
    1b2c:	b2 c2       	rjmp	.+1380   	; 0x2092 <create_chain+0x71e>
    1b2e:	01 e0       	ldi	r16, 0x01	; 1
    1b30:	10 e0       	ldi	r17, 0x00	; 0
    1b32:	a5 01       	movw	r20, r10
    1b34:	94 01       	movw	r18, r8
    1b36:	b1 01       	movw	r22, r2
    1b38:	a9 8d       	ldd	r26, Y+25	; 0x19
    1b3a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1b3c:	11 96       	adiw	r26, 0x01	; 1
    1b3e:	8c 91       	ld	r24, X
    1b40:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    1b44:	88 23       	and	r24, r24
    1b46:	09 f4       	brne	.+2      	; 0x1b4a <create_chain+0x1d6>
    1b48:	ff c2       	rjmp	.+1534   	; 0x2148 <create_chain+0x7d4>
    1b4a:	a9 8c       	ldd	r10, Y+25	; 0x19
    1b4c:	ba 8c       	ldd	r11, Y+26	; 0x1a
    1b4e:	8f ef       	ldi	r24, 0xFF	; 255
    1b50:	9f ef       	ldi	r25, 0xFF	; 255
    1b52:	dc 01       	movw	r26, r24
    1b54:	f5 01       	movw	r30, r10
    1b56:	86 a7       	std	Z+46, r24	; 0x2e
    1b58:	97 a7       	std	Z+47, r25	; 0x2f
    1b5a:	a0 ab       	std	Z+48, r26	; 0x30
    1b5c:	b1 ab       	std	Z+49, r27	; 0x31
    1b5e:	4f ef       	ldi	r20, 0xFF	; 255
    1b60:	3f ef       	ldi	r19, 0xFF	; 255
    1b62:	2f ef       	ldi	r18, 0xFF	; 255
    1b64:	9f ef       	ldi	r25, 0xFF	; 255
    1b66:	1a c0       	rjmp	.+52     	; 0x1b9c <create_chain+0x228>
    1b68:	29 85       	ldd	r18, Y+9	; 0x09
    1b6a:	3a 85       	ldd	r19, Y+10	; 0x0a
    1b6c:	4b 85       	ldd	r20, Y+11	; 0x0b
    1b6e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1b70:	22 30       	cpi	r18, 0x02	; 2
    1b72:	31 05       	cpc	r19, r1
    1b74:	41 05       	cpc	r20, r1
    1b76:	51 05       	cpc	r21, r1
    1b78:	68 f0       	brcs	.+26     	; 0x1b94 <create_chain+0x220>
    1b7a:	89 01       	movw	r16, r18
    1b7c:	9a 01       	movw	r18, r20
    1b7e:	fc 01       	movw	r30, r24
    1b80:	86 89       	ldd	r24, Z+22	; 0x16
    1b82:	97 89       	ldd	r25, Z+23	; 0x17
    1b84:	a0 8d       	ldd	r26, Z+24	; 0x18
    1b86:	b1 8d       	ldd	r27, Z+25	; 0x19
    1b88:	08 17       	cp	r16, r24
    1b8a:	19 07       	cpc	r17, r25
    1b8c:	2a 07       	cpc	r18, r26
    1b8e:	3b 07       	cpc	r19, r27
    1b90:	08 f4       	brcc	.+2      	; 0x1b94 <create_chain+0x220>
    1b92:	54 c2       	rjmp	.+1192   	; 0x203c <create_chain+0x6c8>
    1b94:	41 e0       	ldi	r20, 0x01	; 1
    1b96:	30 e0       	ldi	r19, 0x00	; 0
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	64 2f       	mov	r22, r20
    1b9e:	73 2f       	mov	r23, r19
    1ba0:	82 2f       	mov	r24, r18
    1ba2:	6a 96       	adiw	r28, 0x1a	; 26
    1ba4:	cd bf       	out	0x3d, r28	; 61
    1ba6:	de bf       	out	0x3e, r29	; 62
    1ba8:	df 91       	pop	r29
    1baa:	cf 91       	pop	r28
    1bac:	1f 91       	pop	r17
    1bae:	0f 91       	pop	r16
    1bb0:	ff 90       	pop	r15
    1bb2:	ef 90       	pop	r14
    1bb4:	df 90       	pop	r13
    1bb6:	cf 90       	pop	r12
    1bb8:	bf 90       	pop	r11
    1bba:	af 90       	pop	r10
    1bbc:	9f 90       	pop	r9
    1bbe:	8f 90       	pop	r8
    1bc0:	7f 90       	pop	r7
    1bc2:	6f 90       	pop	r6
    1bc4:	5f 90       	pop	r5
    1bc6:	4f 90       	pop	r4
    1bc8:	3f 90       	pop	r3
    1bca:	2f 90       	pop	r2
    1bcc:	08 95       	ret
    1bce:	fc 01       	movw	r30, r24
    1bd0:	86 89       	ldd	r24, Z+22	; 0x16
    1bd2:	97 89       	ldd	r25, Z+23	; 0x17
    1bd4:	a0 8d       	ldd	r26, Z+24	; 0x18
    1bd6:	b1 8d       	ldd	r27, Z+25	; 0x19
    1bd8:	08 17       	cp	r16, r24
    1bda:	19 07       	cpc	r17, r25
    1bdc:	2a 07       	cpc	r18, r26
    1bde:	3b 07       	cpc	r19, r27
    1be0:	08 f4       	brcc	.+2      	; 0x1be4 <create_chain+0x270>
    1be2:	27 c2       	rjmp	.+1102   	; 0x2032 <create_chain+0x6be>
    1be4:	21 e0       	ldi	r18, 0x01	; 1
    1be6:	30 e0       	ldi	r19, 0x00	; 0
    1be8:	40 e0       	ldi	r20, 0x00	; 0
    1bea:	50 e0       	ldi	r21, 0x00	; 0
    1bec:	29 83       	std	Y+1, r18	; 0x01
    1bee:	3a 83       	std	Y+2, r19	; 0x02
    1bf0:	4b 83       	std	Y+3, r20	; 0x03
    1bf2:	5c 83       	std	Y+4, r21	; 0x04
    1bf4:	29 01       	movw	r4, r18
    1bf6:	3a 01       	movw	r6, r20
    1bf8:	ff ce       	rjmp	.-514    	; 0x19f8 <create_chain+0x84>
    1bfa:	12 e0       	ldi	r17, 0x02	; 2
    1bfc:	41 16       	cp	r4, r17
    1bfe:	51 04       	cpc	r5, r1
    1c00:	61 04       	cpc	r6, r1
    1c02:	71 04       	cpc	r7, r1
    1c04:	38 f2       	brcs	.-114    	; 0x1b94 <create_chain+0x220>
    1c06:	a9 8d       	ldd	r26, Y+25	; 0x19
    1c08:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1c0a:	8c 91       	ld	r24, X
    1c0c:	82 30       	cpi	r24, 0x02	; 2
    1c0e:	09 f0       	breq	.+2      	; 0x1c12 <create_chain+0x29e>
    1c10:	1e cf       	rjmp	.-452    	; 0x1a4e <create_chain+0xda>
    1c12:	fd 01       	movw	r30, r26
    1c14:	bb 24       	eor	r11, r11
    1c16:	a7 2c       	mov	r10, r7
    1c18:	96 2c       	mov	r9, r6
    1c1a:	85 2c       	mov	r8, r5
    1c1c:	82 a1       	ldd	r24, Z+34	; 0x22
    1c1e:	93 a1       	ldd	r25, Z+35	; 0x23
    1c20:	a4 a1       	ldd	r26, Z+36	; 0x24
    1c22:	b5 a1       	ldd	r27, Z+37	; 0x25
    1c24:	88 0e       	add	r8, r24
    1c26:	99 1e       	adc	r9, r25
    1c28:	aa 1e       	adc	r10, r26
    1c2a:	bb 1e       	adc	r11, r27
    1c2c:	c6 a4       	ldd	r12, Z+46	; 0x2e
    1c2e:	d7 a4       	ldd	r13, Z+47	; 0x2f
    1c30:	e0 a8       	ldd	r14, Z+48	; 0x30
    1c32:	f1 a8       	ldd	r15, Z+49	; 0x31
    1c34:	8c 14       	cp	r8, r12
    1c36:	9d 04       	cpc	r9, r13
    1c38:	ae 04       	cpc	r10, r14
    1c3a:	bf 04       	cpc	r11, r15
    1c3c:	c9 f0       	breq	.+50     	; 0x1c70 <create_chain+0x2fc>
    1c3e:	84 81       	ldd	r24, Z+4	; 0x04
    1c40:	81 11       	cpse	r24, r1
    1c42:	42 c1       	rjmp	.+644    	; 0x1ec8 <create_chain+0x554>
    1c44:	01 e0       	ldi	r16, 0x01	; 1
    1c46:	10 e0       	ldi	r17, 0x00	; 0
    1c48:	a5 01       	movw	r20, r10
    1c4a:	94 01       	movw	r18, r8
    1c4c:	b1 01       	movw	r22, r2
    1c4e:	a9 8d       	ldd	r26, Y+25	; 0x19
    1c50:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1c52:	11 96       	adiw	r26, 0x01	; 1
    1c54:	8c 91       	ld	r24, X
    1c56:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    1c5a:	81 11       	cpse	r24, r1
    1c5c:	76 cf       	rjmp	.-276    	; 0x1b4a <create_chain+0x1d6>
    1c5e:	a9 8d       	ldd	r26, Y+25	; 0x19
    1c60:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1c62:	9e 96       	adiw	r26, 0x2e	; 46
    1c64:	8d 92       	st	X+, r8
    1c66:	9d 92       	st	X+, r9
    1c68:	ad 92       	st	X+, r10
    1c6a:	bc 92       	st	X, r11
    1c6c:	d1 97       	sbiw	r26, 0x31	; 49
    1c6e:	fd 01       	movw	r30, r26
    1c70:	d3 01       	movw	r26, r6
    1c72:	c2 01       	movw	r24, r4
    1c74:	88 0f       	add	r24, r24
    1c76:	99 1f       	adc	r25, r25
    1c78:	aa 1f       	adc	r26, r26
    1c7a:	bb 1f       	adc	r27, r27
    1c7c:	8e 7f       	andi	r24, 0xFE	; 254
    1c7e:	91 70       	andi	r25, 0x01	; 1
    1c80:	aa 27       	eor	r26, r26
    1c82:	bb 27       	eor	r27, r27
    1c84:	e8 0f       	add	r30, r24
    1c86:	f9 1f       	adc	r31, r25
    1c88:	82 a9       	ldd	r24, Z+50	; 0x32
    1c8a:	93 a9       	ldd	r25, Z+51	; 0x33
    1c8c:	a0 e0       	ldi	r26, 0x00	; 0
    1c8e:	b0 e0       	ldi	r27, 0x00	; 0
    1c90:	00 97       	sbiw	r24, 0x00	; 0
    1c92:	a1 05       	cpc	r26, r1
    1c94:	b1 05       	cpc	r27, r1
    1c96:	09 f0       	breq	.+2      	; 0x1c9a <create_chain+0x326>
    1c98:	af c0       	rjmp	.+350    	; 0x1df8 <create_chain+0x484>
    1c9a:	a9 8c       	ldd	r10, Y+25	; 0x19
    1c9c:	ba 8c       	ldd	r11, Y+26	; 0x1a
    1c9e:	f5 01       	movw	r30, r10
    1ca0:	86 89       	ldd	r24, Z+22	; 0x16
    1ca2:	97 89       	ldd	r25, Z+23	; 0x17
    1ca4:	a0 8d       	ldd	r26, Z+24	; 0x18
    1ca6:	b1 8d       	ldd	r27, Z+25	; 0x19
    1ca8:	48 16       	cp	r4, r24
    1caa:	59 06       	cpc	r5, r25
    1cac:	6a 06       	cpc	r6, r26
    1cae:	7b 06       	cpc	r7, r27
    1cb0:	08 f0       	brcs	.+2      	; 0x1cb4 <create_chain+0x340>
    1cb2:	70 cf       	rjmp	.-288    	; 0x1b94 <create_chain+0x220>
    1cb4:	0f ef       	ldi	r16, 0xFF	; 255
    1cb6:	1f ef       	ldi	r17, 0xFF	; 255
    1cb8:	2f ef       	ldi	r18, 0xFF	; 255
    1cba:	3f e0       	ldi	r19, 0x0F	; 15
    1cbc:	b3 01       	movw	r22, r6
    1cbe:	a2 01       	movw	r20, r4
    1cc0:	c5 01       	movw	r24, r10
    1cc2:	0e 94 a8 05 	call	0xb50	; 0xb50 <put_fat.part.6>
    1cc6:	81 11       	cpse	r24, r1
    1cc8:	60 c2       	rjmp	.+1216   	; 0x218a <create_chain+0x816>
    1cca:	09 85       	ldd	r16, Y+9	; 0x09
    1ccc:	1a 85       	ldd	r17, Y+10	; 0x0a
    1cce:	2b 85       	ldd	r18, Y+11	; 0x0b
    1cd0:	3c 85       	ldd	r19, Y+12	; 0x0c
    1cd2:	01 15       	cp	r16, r1
    1cd4:	11 05       	cpc	r17, r1
    1cd6:	21 05       	cpc	r18, r1
    1cd8:	31 05       	cpc	r19, r1
    1cda:	e1 f0       	breq	.+56     	; 0x1d14 <create_chain+0x3a0>
    1cdc:	02 30       	cpi	r16, 0x02	; 2
    1cde:	11 05       	cpc	r17, r1
    1ce0:	21 05       	cpc	r18, r1
    1ce2:	31 05       	cpc	r19, r1
    1ce4:	08 f4       	brcc	.+2      	; 0x1ce8 <create_chain+0x374>
    1ce6:	56 cf       	rjmp	.-340    	; 0x1b94 <create_chain+0x220>
    1ce8:	f5 01       	movw	r30, r10
    1cea:	86 89       	ldd	r24, Z+22	; 0x16
    1cec:	97 89       	ldd	r25, Z+23	; 0x17
    1cee:	a0 8d       	ldd	r26, Z+24	; 0x18
    1cf0:	b1 8d       	ldd	r27, Z+25	; 0x19
    1cf2:	08 17       	cp	r16, r24
    1cf4:	19 07       	cpc	r17, r25
    1cf6:	2a 07       	cpc	r18, r26
    1cf8:	3b 07       	cpc	r19, r27
    1cfa:	08 f0       	brcs	.+2      	; 0x1cfe <create_chain+0x38a>
    1cfc:	4b cf       	rjmp	.-362    	; 0x1b94 <create_chain+0x220>
    1cfe:	93 01       	movw	r18, r6
    1d00:	82 01       	movw	r16, r4
    1d02:	49 85       	ldd	r20, Y+9	; 0x09
    1d04:	5a 85       	ldd	r21, Y+10	; 0x0a
    1d06:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d08:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d0a:	c5 01       	movw	r24, r10
    1d0c:	0e 94 a8 05 	call	0xb50	; 0xb50 <put_fat.part.6>
    1d10:	81 11       	cpse	r24, r1
    1d12:	3b c2       	rjmp	.+1142   	; 0x218a <create_chain+0x816>
    1d14:	d5 01       	movw	r26, r10
    1d16:	1a 96       	adiw	r26, 0x0a	; 10
    1d18:	4d 92       	st	X+, r4
    1d1a:	5d 92       	st	X+, r5
    1d1c:	6d 92       	st	X+, r6
    1d1e:	7c 92       	st	X, r7
    1d20:	1d 97       	sbiw	r26, 0x0d	; 13
    1d22:	1e 96       	adiw	r26, 0x0e	; 14
    1d24:	8d 91       	ld	r24, X+
    1d26:	9d 91       	ld	r25, X+
    1d28:	0d 90       	ld	r0, X+
    1d2a:	bc 91       	ld	r27, X
    1d2c:	a0 2d       	mov	r26, r0
    1d2e:	8f 3f       	cpi	r24, 0xFF	; 255
    1d30:	ef ef       	ldi	r30, 0xFF	; 255
    1d32:	9e 07       	cpc	r25, r30
    1d34:	ae 07       	cpc	r26, r30
    1d36:	be 07       	cpc	r27, r30
    1d38:	59 f0       	breq	.+22     	; 0x1d50 <create_chain+0x3dc>
    1d3a:	01 97       	sbiw	r24, 0x01	; 1
    1d3c:	a1 09       	sbc	r26, r1
    1d3e:	b1 09       	sbc	r27, r1
    1d40:	f5 01       	movw	r30, r10
    1d42:	86 87       	std	Z+14, r24	; 0x0e
    1d44:	97 87       	std	Z+15, r25	; 0x0f
    1d46:	a0 8b       	std	Z+16, r26	; 0x10
    1d48:	b1 8b       	std	Z+17, r27	; 0x11
    1d4a:	85 81       	ldd	r24, Z+5	; 0x05
    1d4c:	81 60       	ori	r24, 0x01	; 1
    1d4e:	85 83       	std	Z+5, r24	; 0x05
    1d50:	44 2d       	mov	r20, r4
    1d52:	35 2d       	mov	r19, r5
    1d54:	26 2d       	mov	r18, r6
    1d56:	97 2d       	mov	r25, r7
    1d58:	21 cf       	rjmp	.-446    	; 0x1b9c <create_chain+0x228>
    1d5a:	53 01       	movw	r10, r6
    1d5c:	42 01       	movw	r8, r4
    1d5e:	77 e0       	ldi	r23, 0x07	; 7
    1d60:	b6 94       	lsr	r11
    1d62:	a7 94       	ror	r10
    1d64:	97 94       	ror	r9
    1d66:	87 94       	ror	r8
    1d68:	7a 95       	dec	r23
    1d6a:	d1 f7       	brne	.-12     	; 0x1d60 <create_chain+0x3ec>
    1d6c:	e9 8d       	ldd	r30, Y+25	; 0x19
    1d6e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1d70:	82 a1       	ldd	r24, Z+34	; 0x22
    1d72:	93 a1       	ldd	r25, Z+35	; 0x23
    1d74:	a4 a1       	ldd	r26, Z+36	; 0x24
    1d76:	b5 a1       	ldd	r27, Z+37	; 0x25
    1d78:	88 0e       	add	r8, r24
    1d7a:	99 1e       	adc	r9, r25
    1d7c:	aa 1e       	adc	r10, r26
    1d7e:	bb 1e       	adc	r11, r27
    1d80:	c6 a4       	ldd	r12, Z+46	; 0x2e
    1d82:	d7 a4       	ldd	r13, Z+47	; 0x2f
    1d84:	e0 a8       	ldd	r14, Z+48	; 0x30
    1d86:	f1 a8       	ldd	r15, Z+49	; 0x31
    1d88:	8c 14       	cp	r8, r12
    1d8a:	9d 04       	cpc	r9, r13
    1d8c:	ae 04       	cpc	r10, r14
    1d8e:	bf 04       	cpc	r11, r15
    1d90:	c9 f0       	breq	.+50     	; 0x1dc4 <create_chain+0x450>
    1d92:	84 81       	ldd	r24, Z+4	; 0x04
    1d94:	81 11       	cpse	r24, r1
    1d96:	46 c0       	rjmp	.+140    	; 0x1e24 <create_chain+0x4b0>
    1d98:	01 e0       	ldi	r16, 0x01	; 1
    1d9a:	10 e0       	ldi	r17, 0x00	; 0
    1d9c:	a5 01       	movw	r20, r10
    1d9e:	94 01       	movw	r18, r8
    1da0:	b1 01       	movw	r22, r2
    1da2:	a9 8d       	ldd	r26, Y+25	; 0x19
    1da4:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1da6:	11 96       	adiw	r26, 0x01	; 1
    1da8:	8c 91       	ld	r24, X
    1daa:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    1dae:	81 11       	cpse	r24, r1
    1db0:	cc ce       	rjmp	.-616    	; 0x1b4a <create_chain+0x1d6>
    1db2:	a9 8d       	ldd	r26, Y+25	; 0x19
    1db4:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1db6:	9e 96       	adiw	r26, 0x2e	; 46
    1db8:	8d 92       	st	X+, r8
    1dba:	9d 92       	st	X+, r9
    1dbc:	ad 92       	st	X+, r10
    1dbe:	bc 92       	st	X, r11
    1dc0:	d1 97       	sbiw	r26, 0x31	; 49
    1dc2:	fd 01       	movw	r30, r26
    1dc4:	d3 01       	movw	r26, r6
    1dc6:	c2 01       	movw	r24, r4
    1dc8:	88 0f       	add	r24, r24
    1dca:	99 1f       	adc	r25, r25
    1dcc:	aa 1f       	adc	r26, r26
    1dce:	bb 1f       	adc	r27, r27
    1dd0:	88 0f       	add	r24, r24
    1dd2:	99 1f       	adc	r25, r25
    1dd4:	aa 1f       	adc	r26, r26
    1dd6:	bb 1f       	adc	r27, r27
    1dd8:	8c 7f       	andi	r24, 0xFC	; 252
    1dda:	91 70       	andi	r25, 0x01	; 1
    1ddc:	aa 27       	eor	r26, r26
    1dde:	bb 27       	eor	r27, r27
    1de0:	e8 0f       	add	r30, r24
    1de2:	f9 1f       	adc	r31, r25
    1de4:	82 a9       	ldd	r24, Z+50	; 0x32
    1de6:	93 a9       	ldd	r25, Z+51	; 0x33
    1de8:	a4 a9       	ldd	r26, Z+52	; 0x34
    1dea:	b5 a9       	ldd	r27, Z+53	; 0x35
    1dec:	bf 70       	andi	r27, 0x0F	; 15
    1dee:	00 97       	sbiw	r24, 0x00	; 0
    1df0:	a1 05       	cpc	r26, r1
    1df2:	b1 05       	cpc	r27, r1
    1df4:	09 f4       	brne	.+2      	; 0x1df8 <create_chain+0x484>
    1df6:	51 cf       	rjmp	.-350    	; 0x1c9a <create_chain+0x326>
    1df8:	01 97       	sbiw	r24, 0x01	; 1
    1dfa:	a1 05       	cpc	r26, r1
    1dfc:	b1 05       	cpc	r27, r1
    1dfe:	09 f4       	brne	.+2      	; 0x1e02 <create_chain+0x48e>
    1e00:	c9 ce       	rjmp	.-622    	; 0x1b94 <create_chain+0x220>
    1e02:	09 81       	ldd	r16, Y+1	; 0x01
    1e04:	1a 81       	ldd	r17, Y+2	; 0x02
    1e06:	2b 81       	ldd	r18, Y+3	; 0x03
    1e08:	3c 81       	ldd	r19, Y+4	; 0x04
    1e0a:	04 15       	cp	r16, r4
    1e0c:	15 05       	cpc	r17, r5
    1e0e:	26 05       	cpc	r18, r6
    1e10:	37 05       	cpc	r19, r7
    1e12:	09 f4       	brne	.+2      	; 0x1e16 <create_chain+0x4a2>
    1e14:	09 c1       	rjmp	.+530    	; 0x2028 <create_chain+0x6b4>
    1e16:	e9 8d       	ldd	r30, Y+25	; 0x19
    1e18:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1e1a:	86 89       	ldd	r24, Z+22	; 0x16
    1e1c:	97 89       	ldd	r25, Z+23	; 0x17
    1e1e:	a0 8d       	ldd	r26, Z+24	; 0x18
    1e20:	b1 8d       	ldd	r27, Z+25	; 0x19
    1e22:	f0 cd       	rjmp	.-1056   	; 0x1a04 <create_chain+0x90>
    1e24:	01 e0       	ldi	r16, 0x01	; 1
    1e26:	10 e0       	ldi	r17, 0x00	; 0
    1e28:	a7 01       	movw	r20, r14
    1e2a:	96 01       	movw	r18, r12
    1e2c:	b1 01       	movw	r22, r2
    1e2e:	81 81       	ldd	r24, Z+1	; 0x01
    1e30:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1e34:	81 11       	cpse	r24, r1
    1e36:	93 ce       	rjmp	.-730    	; 0x1b5e <create_chain+0x1ea>
    1e38:	a9 8d       	ldd	r26, Y+25	; 0x19
    1e3a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1e3c:	14 96       	adiw	r26, 0x04	; 4
    1e3e:	1c 92       	st	X, r1
    1e40:	14 97       	sbiw	r26, 0x04	; 4
    1e42:	fd 01       	movw	r30, r26
    1e44:	82 8d       	ldd	r24, Z+26	; 0x1a
    1e46:	93 8d       	ldd	r25, Z+27	; 0x1b
    1e48:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1e4a:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1e4c:	42 a1       	ldd	r20, Z+34	; 0x22
    1e4e:	53 a1       	ldd	r21, Z+35	; 0x23
    1e50:	64 a1       	ldd	r22, Z+36	; 0x24
    1e52:	75 a1       	ldd	r23, Z+37	; 0x25
    1e54:	97 01       	movw	r18, r14
    1e56:	86 01       	movw	r16, r12
    1e58:	04 1b       	sub	r16, r20
    1e5a:	15 0b       	sbc	r17, r21
    1e5c:	26 0b       	sbc	r18, r22
    1e5e:	37 0b       	sbc	r19, r23
    1e60:	08 17       	cp	r16, r24
    1e62:	19 07       	cpc	r17, r25
    1e64:	2a 07       	cpc	r18, r26
    1e66:	3b 07       	cpc	r19, r27
    1e68:	08 f0       	brcs	.+2      	; 0x1e6c <create_chain+0x4f8>
    1e6a:	96 cf       	rjmp	.-212    	; 0x1d98 <create_chain+0x424>
    1e6c:	23 81       	ldd	r18, Z+3	; 0x03
    1e6e:	02 2f       	mov	r16, r18
    1e70:	10 e0       	ldi	r17, 0x00	; 0
    1e72:	02 30       	cpi	r16, 0x02	; 2
    1e74:	11 05       	cpc	r17, r1
    1e76:	08 f4       	brcc	.+2      	; 0x1e7a <create_chain+0x506>
    1e78:	8f cf       	rjmp	.-226    	; 0x1d98 <create_chain+0x424>
    1e7a:	8d 82       	std	Y+5, r8	; 0x05
    1e7c:	9e 82       	std	Y+6, r9	; 0x06
    1e7e:	af 82       	std	Y+7, r10	; 0x07
    1e80:	b8 86       	std	Y+8, r11	; 0x08
    1e82:	58 01       	movw	r10, r16
    1e84:	06 c0       	rjmp	.+12     	; 0x1e92 <create_chain+0x51e>
    1e86:	e9 8d       	ldd	r30, Y+25	; 0x19
    1e88:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1e8a:	82 8d       	ldd	r24, Z+26	; 0x1a
    1e8c:	93 8d       	ldd	r25, Z+27	; 0x1b
    1e8e:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1e90:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1e92:	c8 0e       	add	r12, r24
    1e94:	d9 1e       	adc	r13, r25
    1e96:	ea 1e       	adc	r14, r26
    1e98:	fb 1e       	adc	r15, r27
    1e9a:	01 e0       	ldi	r16, 0x01	; 1
    1e9c:	10 e0       	ldi	r17, 0x00	; 0
    1e9e:	a7 01       	movw	r20, r14
    1ea0:	96 01       	movw	r18, r12
    1ea2:	b1 01       	movw	r22, r2
    1ea4:	a9 8d       	ldd	r26, Y+25	; 0x19
    1ea6:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1ea8:	11 96       	adiw	r26, 0x01	; 1
    1eaa:	8c 91       	ld	r24, X
    1eac:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1eb0:	b1 e0       	ldi	r27, 0x01	; 1
    1eb2:	ab 1a       	sub	r10, r27
    1eb4:	b1 08       	sbc	r11, r1
    1eb6:	e1 e0       	ldi	r30, 0x01	; 1
    1eb8:	ae 16       	cp	r10, r30
    1eba:	b1 04       	cpc	r11, r1
    1ebc:	21 f7       	brne	.-56     	; 0x1e86 <create_chain+0x512>
    1ebe:	8d 80       	ldd	r8, Y+5	; 0x05
    1ec0:	9e 80       	ldd	r9, Y+6	; 0x06
    1ec2:	af 80       	ldd	r10, Y+7	; 0x07
    1ec4:	b8 84       	ldd	r11, Y+8	; 0x08
    1ec6:	68 cf       	rjmp	.-304    	; 0x1d98 <create_chain+0x424>
    1ec8:	01 e0       	ldi	r16, 0x01	; 1
    1eca:	10 e0       	ldi	r17, 0x00	; 0
    1ecc:	a7 01       	movw	r20, r14
    1ece:	96 01       	movw	r18, r12
    1ed0:	b1 01       	movw	r22, r2
    1ed2:	81 81       	ldd	r24, Z+1	; 0x01
    1ed4:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1ed8:	81 11       	cpse	r24, r1
    1eda:	41 ce       	rjmp	.-894    	; 0x1b5e <create_chain+0x1ea>
    1edc:	a9 8d       	ldd	r26, Y+25	; 0x19
    1ede:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1ee0:	14 96       	adiw	r26, 0x04	; 4
    1ee2:	1c 92       	st	X, r1
    1ee4:	14 97       	sbiw	r26, 0x04	; 4
    1ee6:	fd 01       	movw	r30, r26
    1ee8:	82 8d       	ldd	r24, Z+26	; 0x1a
    1eea:	93 8d       	ldd	r25, Z+27	; 0x1b
    1eec:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1eee:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1ef0:	42 a1       	ldd	r20, Z+34	; 0x22
    1ef2:	53 a1       	ldd	r21, Z+35	; 0x23
    1ef4:	64 a1       	ldd	r22, Z+36	; 0x24
    1ef6:	75 a1       	ldd	r23, Z+37	; 0x25
    1ef8:	97 01       	movw	r18, r14
    1efa:	86 01       	movw	r16, r12
    1efc:	04 1b       	sub	r16, r20
    1efe:	15 0b       	sbc	r17, r21
    1f00:	26 0b       	sbc	r18, r22
    1f02:	37 0b       	sbc	r19, r23
    1f04:	08 17       	cp	r16, r24
    1f06:	19 07       	cpc	r17, r25
    1f08:	2a 07       	cpc	r18, r26
    1f0a:	3b 07       	cpc	r19, r27
    1f0c:	08 f0       	brcs	.+2      	; 0x1f10 <create_chain+0x59c>
    1f0e:	9a ce       	rjmp	.-716    	; 0x1c44 <create_chain+0x2d0>
    1f10:	23 81       	ldd	r18, Z+3	; 0x03
    1f12:	02 2f       	mov	r16, r18
    1f14:	10 e0       	ldi	r17, 0x00	; 0
    1f16:	02 30       	cpi	r16, 0x02	; 2
    1f18:	11 05       	cpc	r17, r1
    1f1a:	08 f4       	brcc	.+2      	; 0x1f1e <create_chain+0x5aa>
    1f1c:	93 ce       	rjmp	.-730    	; 0x1c44 <create_chain+0x2d0>
    1f1e:	8d 82       	std	Y+5, r8	; 0x05
    1f20:	9e 82       	std	Y+6, r9	; 0x06
    1f22:	af 82       	std	Y+7, r10	; 0x07
    1f24:	b8 86       	std	Y+8, r11	; 0x08
    1f26:	58 01       	movw	r10, r16
    1f28:	06 c0       	rjmp	.+12     	; 0x1f36 <create_chain+0x5c2>
    1f2a:	e9 8d       	ldd	r30, Y+25	; 0x19
    1f2c:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1f2e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1f30:	93 8d       	ldd	r25, Z+27	; 0x1b
    1f32:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1f34:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1f36:	c8 0e       	add	r12, r24
    1f38:	d9 1e       	adc	r13, r25
    1f3a:	ea 1e       	adc	r14, r26
    1f3c:	fb 1e       	adc	r15, r27
    1f3e:	01 e0       	ldi	r16, 0x01	; 1
    1f40:	10 e0       	ldi	r17, 0x00	; 0
    1f42:	a7 01       	movw	r20, r14
    1f44:	96 01       	movw	r18, r12
    1f46:	b1 01       	movw	r22, r2
    1f48:	a9 8d       	ldd	r26, Y+25	; 0x19
    1f4a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1f4c:	11 96       	adiw	r26, 0x01	; 1
    1f4e:	8c 91       	ld	r24, X
    1f50:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1f54:	b1 e0       	ldi	r27, 0x01	; 1
    1f56:	ab 1a       	sub	r10, r27
    1f58:	b1 08       	sbc	r11, r1
    1f5a:	e1 e0       	ldi	r30, 0x01	; 1
    1f5c:	ae 16       	cp	r10, r30
    1f5e:	b1 04       	cpc	r11, r1
    1f60:	21 f7       	brne	.-56     	; 0x1f2a <create_chain+0x5b6>
    1f62:	8d 80       	ldd	r8, Y+5	; 0x05
    1f64:	9e 80       	ldd	r9, Y+6	; 0x06
    1f66:	af 80       	ldd	r10, Y+7	; 0x07
    1f68:	b8 84       	ldd	r11, Y+8	; 0x08
    1f6a:	6c ce       	rjmp	.-808    	; 0x1c44 <create_chain+0x2d0>
    1f6c:	01 e0       	ldi	r16, 0x01	; 1
    1f6e:	10 e0       	ldi	r17, 0x00	; 0
    1f70:	a5 01       	movw	r20, r10
    1f72:	94 01       	movw	r18, r8
    1f74:	b1 01       	movw	r22, r2
    1f76:	11 96       	adiw	r26, 0x01	; 1
    1f78:	8c 91       	ld	r24, X
    1f7a:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    1f7e:	81 11       	cpse	r24, r1
    1f80:	ee cd       	rjmp	.-1060   	; 0x1b5e <create_chain+0x1ea>
    1f82:	a9 8d       	ldd	r26, Y+25	; 0x19
    1f84:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1f86:	14 96       	adiw	r26, 0x04	; 4
    1f88:	1c 92       	st	X, r1
    1f8a:	14 97       	sbiw	r26, 0x04	; 4
    1f8c:	5a 96       	adiw	r26, 0x1a	; 26
    1f8e:	4d 91       	ld	r20, X+
    1f90:	5d 91       	ld	r21, X+
    1f92:	6d 91       	ld	r22, X+
    1f94:	7c 91       	ld	r23, X
    1f96:	5d 97       	sbiw	r26, 0x1d	; 29
    1f98:	fd 01       	movw	r30, r26
    1f9a:	82 a1       	ldd	r24, Z+34	; 0x22
    1f9c:	93 a1       	ldd	r25, Z+35	; 0x23
    1f9e:	a4 a1       	ldd	r26, Z+36	; 0x24
    1fa0:	b5 a1       	ldd	r27, Z+37	; 0x25
    1fa2:	95 01       	movw	r18, r10
    1fa4:	84 01       	movw	r16, r8
    1fa6:	08 1b       	sub	r16, r24
    1fa8:	19 0b       	sbc	r17, r25
    1faa:	2a 0b       	sbc	r18, r26
    1fac:	3b 0b       	sbc	r19, r27
    1fae:	04 17       	cp	r16, r20
    1fb0:	15 07       	cpc	r17, r21
    1fb2:	26 07       	cpc	r18, r22
    1fb4:	37 07       	cpc	r19, r23
    1fb6:	08 f0       	brcs	.+2      	; 0x1fba <create_chain+0x646>
    1fb8:	78 cd       	rjmp	.-1296   	; 0x1aaa <create_chain+0x136>
    1fba:	83 81       	ldd	r24, Z+3	; 0x03
    1fbc:	08 2f       	mov	r16, r24
    1fbe:	10 e0       	ldi	r17, 0x00	; 0
    1fc0:	02 30       	cpi	r16, 0x02	; 2
    1fc2:	11 05       	cpc	r17, r1
    1fc4:	08 f4       	brcc	.+2      	; 0x1fc8 <create_chain+0x654>
    1fc6:	71 cd       	rjmp	.-1310   	; 0x1aaa <create_chain+0x136>
    1fc8:	cd 86       	std	Y+13, r12	; 0x0d
    1fca:	de 86       	std	Y+14, r13	; 0x0e
    1fcc:	ef 86       	std	Y+15, r14	; 0x0f
    1fce:	f8 8a       	std	Y+16, r15	; 0x10
    1fd0:	78 01       	movw	r14, r16
    1fd2:	a9 8d       	ldd	r26, Y+25	; 0x19
    1fd4:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1fd6:	08 c0       	rjmp	.+16     	; 0x1fe8 <create_chain+0x674>
    1fd8:	a9 8d       	ldd	r26, Y+25	; 0x19
    1fda:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1fdc:	5a 96       	adiw	r26, 0x1a	; 26
    1fde:	4d 91       	ld	r20, X+
    1fe0:	5d 91       	ld	r21, X+
    1fe2:	6d 91       	ld	r22, X+
    1fe4:	7c 91       	ld	r23, X
    1fe6:	5d 97       	sbiw	r26, 0x1d	; 29
    1fe8:	84 0e       	add	r8, r20
    1fea:	95 1e       	adc	r9, r21
    1fec:	a6 1e       	adc	r10, r22
    1fee:	b7 1e       	adc	r11, r23
    1ff0:	01 e0       	ldi	r16, 0x01	; 1
    1ff2:	10 e0       	ldi	r17, 0x00	; 0
    1ff4:	a5 01       	movw	r20, r10
    1ff6:	94 01       	movw	r18, r8
    1ff8:	b1 01       	movw	r22, r2
    1ffa:	11 96       	adiw	r26, 0x01	; 1
    1ffc:	8c 91       	ld	r24, X
    1ffe:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    2002:	b1 e0       	ldi	r27, 0x01	; 1
    2004:	eb 1a       	sub	r14, r27
    2006:	f1 08       	sbc	r15, r1
    2008:	e1 e0       	ldi	r30, 0x01	; 1
    200a:	ee 16       	cp	r14, r30
    200c:	f1 04       	cpc	r15, r1
    200e:	21 f7       	brne	.-56     	; 0x1fd8 <create_chain+0x664>
    2010:	cd 84       	ldd	r12, Y+13	; 0x0d
    2012:	de 84       	ldd	r13, Y+14	; 0x0e
    2014:	ef 84       	ldd	r14, Y+15	; 0x0f
    2016:	f8 88       	ldd	r15, Y+16	; 0x10
    2018:	48 cd       	rjmp	.-1392   	; 0x1aaa <create_chain+0x136>
    201a:	c9 8a       	std	Y+17, r12	; 0x11
    201c:	da 8a       	std	Y+18, r13	; 0x12
    201e:	eb 8a       	std	Y+19, r14	; 0x13
    2020:	fc 8a       	std	Y+20, r15	; 0x14
    2022:	29 8d       	ldd	r18, Y+25	; 0x19
    2024:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2026:	60 cd       	rjmp	.-1344   	; 0x1ae8 <create_chain+0x174>
    2028:	40 e0       	ldi	r20, 0x00	; 0
    202a:	30 e0       	ldi	r19, 0x00	; 0
    202c:	20 e0       	ldi	r18, 0x00	; 0
    202e:	90 e0       	ldi	r25, 0x00	; 0
    2030:	b5 cd       	rjmp	.-1174   	; 0x1b9c <create_chain+0x228>
    2032:	49 80       	ldd	r4, Y+1	; 0x01
    2034:	5a 80       	ldd	r5, Y+2	; 0x02
    2036:	6b 80       	ldd	r6, Y+3	; 0x03
    2038:	7c 80       	ldd	r7, Y+4	; 0x04
    203a:	de cc       	rjmp	.-1604   	; 0x19f8 <create_chain+0x84>
    203c:	b9 01       	movw	r22, r18
    203e:	a8 01       	movw	r20, r16
    2040:	c5 01       	movw	r24, r10
    2042:	c2 d8       	rcall	.-3708   	; 0x11c8 <get_fat.part.4>
    2044:	62 30       	cpi	r22, 0x02	; 2
    2046:	71 05       	cpc	r23, r1
    2048:	81 05       	cpc	r24, r1
    204a:	91 05       	cpc	r25, r1
    204c:	08 f4       	brcc	.+2      	; 0x2050 <create_chain+0x6dc>
    204e:	a2 cd       	rjmp	.-1212   	; 0x1b94 <create_chain+0x220>
    2050:	6f 3f       	cpi	r22, 0xFF	; 255
    2052:	1f ef       	ldi	r17, 0xFF	; 255
    2054:	71 07       	cpc	r23, r17
    2056:	81 07       	cpc	r24, r17
    2058:	91 07       	cpc	r25, r17
    205a:	09 f4       	brne	.+2      	; 0x205e <create_chain+0x6ea>
    205c:	80 cd       	rjmp	.-1280   	; 0x1b5e <create_chain+0x1ea>
    205e:	d5 01       	movw	r26, r10
    2060:	56 96       	adiw	r26, 0x16	; 22
    2062:	cd 90       	ld	r12, X+
    2064:	dd 90       	ld	r13, X+
    2066:	ed 90       	ld	r14, X+
    2068:	fc 90       	ld	r15, X
    206a:	59 97       	sbiw	r26, 0x19	; 25
    206c:	6c 15       	cp	r22, r12
    206e:	7d 05       	cpc	r23, r13
    2070:	8e 05       	cpc	r24, r14
    2072:	9f 05       	cpc	r25, r15
    2074:	08 f4       	brcc	.+2      	; 0x2078 <create_chain+0x704>
    2076:	64 c0       	rjmp	.+200    	; 0x2140 <create_chain+0x7cc>
    2078:	d7 01       	movw	r26, r14
    207a:	c6 01       	movw	r24, r12
    207c:	09 85       	ldd	r16, Y+9	; 0x09
    207e:	1a 85       	ldd	r17, Y+10	; 0x0a
    2080:	2b 85       	ldd	r18, Y+11	; 0x0b
    2082:	3c 85       	ldd	r19, Y+12	; 0x0c
    2084:	09 83       	std	Y+1, r16	; 0x01
    2086:	1a 83       	std	Y+2, r17	; 0x02
    2088:	2b 83       	std	Y+3, r18	; 0x03
    208a:	3c 83       	std	Y+4, r19	; 0x04
    208c:	28 01       	movw	r4, r16
    208e:	39 01       	movw	r6, r18
    2090:	b3 cc       	rjmp	.-1690   	; 0x19f8 <create_chain+0x84>
    2092:	01 e0       	ldi	r16, 0x01	; 1
    2094:	10 e0       	ldi	r17, 0x00	; 0
    2096:	a7 01       	movw	r20, r14
    2098:	96 01       	movw	r18, r12
    209a:	b1 01       	movw	r22, r2
    209c:	11 96       	adiw	r26, 0x01	; 1
    209e:	8c 91       	ld	r24, X
    20a0:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    20a4:	81 11       	cpse	r24, r1
    20a6:	5b cd       	rjmp	.-1354   	; 0x1b5e <create_chain+0x1ea>
    20a8:	e9 8d       	ldd	r30, Y+25	; 0x19
    20aa:	fa 8d       	ldd	r31, Y+26	; 0x1a
    20ac:	14 82       	std	Z+4, r1	; 0x04
    20ae:	42 8d       	ldd	r20, Z+26	; 0x1a
    20b0:	53 8d       	ldd	r21, Z+27	; 0x1b
    20b2:	64 8d       	ldd	r22, Z+28	; 0x1c
    20b4:	75 8d       	ldd	r23, Z+29	; 0x1d
    20b6:	82 a1       	ldd	r24, Z+34	; 0x22
    20b8:	93 a1       	ldd	r25, Z+35	; 0x23
    20ba:	a4 a1       	ldd	r26, Z+36	; 0x24
    20bc:	b5 a1       	ldd	r27, Z+37	; 0x25
    20be:	97 01       	movw	r18, r14
    20c0:	86 01       	movw	r16, r12
    20c2:	08 1b       	sub	r16, r24
    20c4:	19 0b       	sbc	r17, r25
    20c6:	2a 0b       	sbc	r18, r26
    20c8:	3b 0b       	sbc	r19, r27
    20ca:	04 17       	cp	r16, r20
    20cc:	15 07       	cpc	r17, r21
    20ce:	26 07       	cpc	r18, r22
    20d0:	37 07       	cpc	r19, r23
    20d2:	08 f0       	brcs	.+2      	; 0x20d6 <create_chain+0x762>
    20d4:	2c cd       	rjmp	.-1448   	; 0x1b2e <create_chain+0x1ba>
    20d6:	83 81       	ldd	r24, Z+3	; 0x03
    20d8:	e8 2e       	mov	r14, r24
    20da:	f1 2c       	mov	r15, r1
    20dc:	12 e0       	ldi	r17, 0x02	; 2
    20de:	e1 16       	cp	r14, r17
    20e0:	f1 04       	cpc	r15, r1
    20e2:	08 f4       	brcc	.+2      	; 0x20e6 <create_chain+0x772>
    20e4:	24 cd       	rjmp	.-1464   	; 0x1b2e <create_chain+0x1ba>
    20e6:	db 01       	movw	r26, r22
    20e8:	ca 01       	movw	r24, r20
    20ea:	8d 8a       	std	Y+21, r8	; 0x15
    20ec:	9e 8a       	std	Y+22, r9	; 0x16
    20ee:	af 8a       	std	Y+23, r10	; 0x17
    20f0:	b8 8e       	std	Y+24, r11	; 0x18
    20f2:	57 01       	movw	r10, r14
    20f4:	c9 88       	ldd	r12, Y+17	; 0x11
    20f6:	da 88       	ldd	r13, Y+18	; 0x12
    20f8:	eb 88       	ldd	r14, Y+19	; 0x13
    20fa:	fc 88       	ldd	r15, Y+20	; 0x14
    20fc:	06 c0       	rjmp	.+12     	; 0x210a <create_chain+0x796>
    20fe:	e9 8d       	ldd	r30, Y+25	; 0x19
    2100:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2102:	82 8d       	ldd	r24, Z+26	; 0x1a
    2104:	93 8d       	ldd	r25, Z+27	; 0x1b
    2106:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2108:	b5 8d       	ldd	r27, Z+29	; 0x1d
    210a:	c8 0e       	add	r12, r24
    210c:	d9 1e       	adc	r13, r25
    210e:	ea 1e       	adc	r14, r26
    2110:	fb 1e       	adc	r15, r27
    2112:	01 e0       	ldi	r16, 0x01	; 1
    2114:	10 e0       	ldi	r17, 0x00	; 0
    2116:	a7 01       	movw	r20, r14
    2118:	96 01       	movw	r18, r12
    211a:	b1 01       	movw	r22, r2
    211c:	a9 8d       	ldd	r26, Y+25	; 0x19
    211e:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2120:	11 96       	adiw	r26, 0x01	; 1
    2122:	8c 91       	ld	r24, X
    2124:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    2128:	b1 e0       	ldi	r27, 0x01	; 1
    212a:	ab 1a       	sub	r10, r27
    212c:	b1 08       	sbc	r11, r1
    212e:	e1 e0       	ldi	r30, 0x01	; 1
    2130:	ae 16       	cp	r10, r30
    2132:	b1 04       	cpc	r11, r1
    2134:	21 f7       	brne	.-56     	; 0x20fe <create_chain+0x78a>
    2136:	8d 88       	ldd	r8, Y+21	; 0x15
    2138:	9e 88       	ldd	r9, Y+22	; 0x16
    213a:	af 88       	ldd	r10, Y+23	; 0x17
    213c:	b8 8c       	ldd	r11, Y+24	; 0x18
    213e:	f7 cc       	rjmp	.-1554   	; 0x1b2e <create_chain+0x1ba>
    2140:	46 2f       	mov	r20, r22
    2142:	37 2f       	mov	r19, r23
    2144:	28 2f       	mov	r18, r24
    2146:	2a cd       	rjmp	.-1452   	; 0x1b9c <create_chain+0x228>
    2148:	e9 8d       	ldd	r30, Y+25	; 0x19
    214a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    214c:	86 a6       	std	Z+46, r8	; 0x2e
    214e:	97 a6       	std	Z+47, r9	; 0x2f
    2150:	a0 aa       	std	Z+48, r10	; 0x30
    2152:	b1 aa       	std	Z+49, r11	; 0x31
    2154:	ed 85       	ldd	r30, Y+13	; 0x0d
    2156:	fe 85       	ldd	r31, Y+14	; 0x0e
    2158:	f1 70       	andi	r31, 0x01	; 1
    215a:	09 8d       	ldd	r16, Y+25	; 0x19
    215c:	1a 8d       	ldd	r17, Y+26	; 0x1a
    215e:	e0 0f       	add	r30, r16
    2160:	f1 1f       	adc	r31, r17
    2162:	22 a9       	ldd	r18, Z+50	; 0x32
    2164:	1d 81       	ldd	r17, Y+5	; 0x05
    2166:	81 2f       	mov	r24, r17
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	92 2b       	or	r25, r18
    216c:	40 fe       	sbrs	r4, 0
    216e:	09 c0       	rjmp	.+18     	; 0x2182 <create_chain+0x80e>
    2170:	92 95       	swap	r25
    2172:	82 95       	swap	r24
    2174:	8f 70       	andi	r24, 0x0F	; 15
    2176:	89 27       	eor	r24, r25
    2178:	9f 70       	andi	r25, 0x0F	; 15
    217a:	89 27       	eor	r24, r25
    217c:	a0 e0       	ldi	r26, 0x00	; 0
    217e:	b0 e0       	ldi	r27, 0x00	; 0
    2180:	36 ce       	rjmp	.-916    	; 0x1dee <create_chain+0x47a>
    2182:	9f 70       	andi	r25, 0x0F	; 15
    2184:	a0 e0       	ldi	r26, 0x00	; 0
    2186:	b0 e0       	ldi	r27, 0x00	; 0
    2188:	32 ce       	rjmp	.-924    	; 0x1dee <create_chain+0x47a>
    218a:	81 30       	cpi	r24, 0x01	; 1
    218c:	09 f0       	breq	.+2      	; 0x2190 <create_chain+0x81c>
    218e:	02 cd       	rjmp	.-1532   	; 0x1b94 <create_chain+0x220>
    2190:	e6 cc       	rjmp	.-1588   	; 0x1b5e <create_chain+0x1ea>

00002192 <dir_alloc.constprop.10>:
    2192:	2f 92       	push	r2
    2194:	3f 92       	push	r3
    2196:	4f 92       	push	r4
    2198:	5f 92       	push	r5
    219a:	6f 92       	push	r6
    219c:	7f 92       	push	r7
    219e:	8f 92       	push	r8
    21a0:	9f 92       	push	r9
    21a2:	af 92       	push	r10
    21a4:	bf 92       	push	r11
    21a6:	cf 92       	push	r12
    21a8:	df 92       	push	r13
    21aa:	ef 92       	push	r14
    21ac:	ff 92       	push	r15
    21ae:	0f 93       	push	r16
    21b0:	1f 93       	push	r17
    21b2:	cf 93       	push	r28
    21b4:	df 93       	push	r29
    21b6:	cd b7       	in	r28, 0x3d	; 61
    21b8:	de b7       	in	r29, 0x3e	; 62
    21ba:	27 97       	sbiw	r28, 0x07	; 7
    21bc:	cd bf       	out	0x3d, r28	; 61
    21be:	de bf       	out	0x3e, r29	; 62
    21c0:	1c 01       	movw	r2, r24
    21c2:	60 e0       	ldi	r22, 0x00	; 0
    21c4:	70 e0       	ldi	r23, 0x00	; 0
    21c6:	ef da       	rcall	.-2594   	; 0x17a6 <dir_sdi>
    21c8:	89 83       	std	Y+1, r24	; 0x01
    21ca:	88 23       	and	r24, r24
    21cc:	d9 f0       	breq	.+54     	; 0x2204 <dir_alloc.constprop.10+0x72>
    21ce:	b9 81       	ldd	r27, Y+1	; 0x01
    21d0:	b4 30       	cpi	r27, 0x04	; 4
    21d2:	09 f4       	brne	.+2      	; 0x21d6 <dir_alloc.constprop.10+0x44>
    21d4:	6e c0       	rjmp	.+220    	; 0x22b2 <dir_alloc.constprop.10+0x120>
    21d6:	89 81       	ldd	r24, Y+1	; 0x01
    21d8:	27 96       	adiw	r28, 0x07	; 7
    21da:	cd bf       	out	0x3d, r28	; 61
    21dc:	de bf       	out	0x3e, r29	; 62
    21de:	df 91       	pop	r29
    21e0:	cf 91       	pop	r28
    21e2:	1f 91       	pop	r17
    21e4:	0f 91       	pop	r16
    21e6:	ff 90       	pop	r15
    21e8:	ef 90       	pop	r14
    21ea:	df 90       	pop	r13
    21ec:	cf 90       	pop	r12
    21ee:	bf 90       	pop	r11
    21f0:	af 90       	pop	r10
    21f2:	9f 90       	pop	r9
    21f4:	8f 90       	pop	r8
    21f6:	7f 90       	pop	r7
    21f8:	6f 90       	pop	r6
    21fa:	5f 90       	pop	r5
    21fc:	4f 90       	pop	r4
    21fe:	3f 90       	pop	r3
    2200:	2f 90       	pop	r2
    2202:	08 95       	ret
    2204:	d1 01       	movw	r26, r2
    2206:	0d 90       	ld	r0, X+
    2208:	bc 91       	ld	r27, X
    220a:	a0 2d       	mov	r26, r0
    220c:	ae 83       	std	Y+6, r26	; 0x06
    220e:	bf 83       	std	Y+7, r27	; 0x07
    2210:	f1 01       	movw	r30, r2
    2212:	46 84       	ldd	r4, Z+14	; 0x0e
    2214:	57 84       	ldd	r5, Z+15	; 0x0f
    2216:	60 88       	ldd	r6, Z+16	; 0x10
    2218:	71 88       	ldd	r7, Z+17	; 0x11
    221a:	9e 96       	adiw	r26, 0x2e	; 46
    221c:	cd 90       	ld	r12, X+
    221e:	dd 90       	ld	r13, X+
    2220:	ed 90       	ld	r14, X+
    2222:	fc 90       	ld	r15, X
    2224:	d1 97       	sbiw	r26, 0x31	; 49
    2226:	c4 14       	cp	r12, r4
    2228:	d5 04       	cpc	r13, r5
    222a:	e6 04       	cpc	r14, r6
    222c:	f7 04       	cpc	r15, r7
    222e:	59 f1       	breq	.+86     	; 0x2286 <dir_alloc.constprop.10+0xf4>
    2230:	14 96       	adiw	r26, 0x04	; 4
    2232:	8c 91       	ld	r24, X
    2234:	14 97       	sbiw	r26, 0x04	; 4
    2236:	81 11       	cpse	r24, r1
    2238:	71 c0       	rjmp	.+226    	; 0x231c <dir_alloc.constprop.10+0x18a>
    223a:	ae 80       	ldd	r10, Y+6	; 0x06
    223c:	bf 80       	ldd	r11, Y+7	; 0x07
    223e:	f2 e3       	ldi	r31, 0x32	; 50
    2240:	af 0e       	add	r10, r31
    2242:	b1 1c       	adc	r11, r1
    2244:	01 e0       	ldi	r16, 0x01	; 1
    2246:	10 e0       	ldi	r17, 0x00	; 0
    2248:	a3 01       	movw	r20, r6
    224a:	92 01       	movw	r18, r4
    224c:	b5 01       	movw	r22, r10
    224e:	ae 81       	ldd	r26, Y+6	; 0x06
    2250:	bf 81       	ldd	r27, Y+7	; 0x07
    2252:	11 96       	adiw	r26, 0x01	; 1
    2254:	8c 91       	ld	r24, X
    2256:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    225a:	88 23       	and	r24, r24
    225c:	61 f0       	breq	.+24     	; 0x2276 <dir_alloc.constprop.10+0xe4>
    225e:	8f ef       	ldi	r24, 0xFF	; 255
    2260:	9f ef       	ldi	r25, 0xFF	; 255
    2262:	dc 01       	movw	r26, r24
    2264:	ee 81       	ldd	r30, Y+6	; 0x06
    2266:	ff 81       	ldd	r31, Y+7	; 0x07
    2268:	86 a7       	std	Z+46, r24	; 0x2e
    226a:	97 a7       	std	Z+47, r25	; 0x2f
    226c:	a0 ab       	std	Z+48, r26	; 0x30
    226e:	b1 ab       	std	Z+49, r27	; 0x31
    2270:	f1 e0       	ldi	r31, 0x01	; 1
    2272:	f9 83       	std	Y+1, r31	; 0x01
    2274:	b0 cf       	rjmp	.-160    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    2276:	ae 81       	ldd	r26, Y+6	; 0x06
    2278:	bf 81       	ldd	r27, Y+7	; 0x07
    227a:	9e 96       	adiw	r26, 0x2e	; 46
    227c:	4d 92       	st	X+, r4
    227e:	5d 92       	st	X+, r5
    2280:	6d 92       	st	X+, r6
    2282:	7c 92       	st	X, r7
    2284:	d1 97       	sbiw	r26, 0x31	; 49
    2286:	d1 01       	movw	r26, r2
    2288:	52 96       	adiw	r26, 0x12	; 18
    228a:	ed 91       	ld	r30, X+
    228c:	fc 91       	ld	r31, X
    228e:	53 97       	sbiw	r26, 0x13	; 19
    2290:	80 81       	ld	r24, Z
    2292:	85 3e       	cpi	r24, 0xE5	; 229
    2294:	09 f4       	brne	.+2      	; 0x2298 <dir_alloc.constprop.10+0x106>
    2296:	9f cf       	rjmp	.-194    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    2298:	88 23       	and	r24, r24
    229a:	09 f4       	brne	.+2      	; 0x229e <dir_alloc.constprop.10+0x10c>
    229c:	9c cf       	rjmp	.-200    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    229e:	14 96       	adiw	r26, 0x04	; 4
    22a0:	ed 90       	ld	r14, X+
    22a2:	fc 90       	ld	r15, X
    22a4:	15 97       	sbiw	r26, 0x05	; 5
    22a6:	bf ef       	ldi	r27, 0xFF	; 255
    22a8:	eb 1a       	sub	r14, r27
    22aa:	fb 0a       	sbc	r15, r27
    22ac:	e1 14       	cp	r14, r1
    22ae:	f1 04       	cpc	r15, r1
    22b0:	19 f4       	brne	.+6      	; 0x22b8 <dir_alloc.constprop.10+0x126>
    22b2:	e7 e0       	ldi	r30, 0x07	; 7
    22b4:	e9 83       	std	Y+1, r30	; 0x01
    22b6:	8f cf       	rjmp	.-226    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    22b8:	f1 01       	movw	r30, r2
    22ba:	46 84       	ldd	r4, Z+14	; 0x0e
    22bc:	57 84       	ldd	r5, Z+15	; 0x0f
    22be:	60 88       	ldd	r6, Z+16	; 0x10
    22c0:	71 88       	ldd	r7, Z+17	; 0x11
    22c2:	41 14       	cp	r4, r1
    22c4:	51 04       	cpc	r5, r1
    22c6:	61 04       	cpc	r6, r1
    22c8:	71 04       	cpc	r7, r1
    22ca:	99 f3       	breq	.-26     	; 0x22b2 <dir_alloc.constprop.10+0x120>
    22cc:	67 01       	movw	r12, r14
    22ce:	ff e0       	ldi	r31, 0x0F	; 15
    22d0:	cf 22       	and	r12, r31
    22d2:	dd 24       	eor	r13, r13
    22d4:	c1 14       	cp	r12, r1
    22d6:	d1 04       	cpc	r13, r1
    22d8:	09 f4       	brne	.+2      	; 0x22dc <dir_alloc.constprop.10+0x14a>
    22da:	71 c0       	rjmp	.+226    	; 0x23be <dir_alloc.constprop.10+0x22c>
    22dc:	d1 01       	movw	r26, r2
    22de:	0d 90       	ld	r0, X+
    22e0:	bc 91       	ld	r27, X
    22e2:	a0 2d       	mov	r26, r0
    22e4:	ae 83       	std	Y+6, r26	; 0x06
    22e6:	bf 83       	std	Y+7, r27	; 0x07
    22e8:	f1 01       	movw	r30, r2
    22ea:	e4 82       	std	Z+4, r14	; 0x04
    22ec:	f5 82       	std	Z+5, r15	; 0x05
    22ee:	cc 0c       	add	r12, r12
    22f0:	dd 1c       	adc	r13, r13
    22f2:	c2 94       	swap	r12
    22f4:	d2 94       	swap	r13
    22f6:	90 ef       	ldi	r25, 0xF0	; 240
    22f8:	d9 22       	and	r13, r25
    22fa:	dc 24       	eor	r13, r12
    22fc:	c9 22       	and	r12, r25
    22fe:	dc 24       	eor	r13, r12
    2300:	f2 e3       	ldi	r31, 0x32	; 50
    2302:	cf 0e       	add	r12, r31
    2304:	d1 1c       	adc	r13, r1
    2306:	0e 81       	ldd	r16, Y+6	; 0x06
    2308:	1f 81       	ldd	r17, Y+7	; 0x07
    230a:	c0 0e       	add	r12, r16
    230c:	d1 1e       	adc	r13, r17
    230e:	d1 01       	movw	r26, r2
    2310:	52 96       	adiw	r26, 0x12	; 18
    2312:	cd 92       	st	X+, r12
    2314:	dc 92       	st	X, r13
    2316:	53 97       	sbiw	r26, 0x13	; 19
    2318:	d8 01       	movw	r26, r16
    231a:	7f cf       	rjmp	.-258    	; 0x221a <dir_alloc.constprop.10+0x88>
    231c:	5d 01       	movw	r10, r26
    231e:	b2 e3       	ldi	r27, 0x32	; 50
    2320:	ab 0e       	add	r10, r27
    2322:	b1 1c       	adc	r11, r1
    2324:	01 e0       	ldi	r16, 0x01	; 1
    2326:	10 e0       	ldi	r17, 0x00	; 0
    2328:	a7 01       	movw	r20, r14
    232a:	96 01       	movw	r18, r12
    232c:	b5 01       	movw	r22, r10
    232e:	ee 81       	ldd	r30, Y+6	; 0x06
    2330:	ff 81       	ldd	r31, Y+7	; 0x07
    2332:	81 81       	ldd	r24, Z+1	; 0x01
    2334:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    2338:	81 11       	cpse	r24, r1
    233a:	3e c0       	rjmp	.+124    	; 0x23b8 <dir_alloc.constprop.10+0x226>
    233c:	ae 81       	ldd	r26, Y+6	; 0x06
    233e:	bf 81       	ldd	r27, Y+7	; 0x07
    2340:	14 96       	adiw	r26, 0x04	; 4
    2342:	1c 92       	st	X, r1
    2344:	14 97       	sbiw	r26, 0x04	; 4
    2346:	fd 01       	movw	r30, r26
    2348:	82 8d       	ldd	r24, Z+26	; 0x1a
    234a:	93 8d       	ldd	r25, Z+27	; 0x1b
    234c:	a4 8d       	ldd	r26, Z+28	; 0x1c
    234e:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2350:	42 a1       	ldd	r20, Z+34	; 0x22
    2352:	53 a1       	ldd	r21, Z+35	; 0x23
    2354:	64 a1       	ldd	r22, Z+36	; 0x24
    2356:	75 a1       	ldd	r23, Z+37	; 0x25
    2358:	97 01       	movw	r18, r14
    235a:	86 01       	movw	r16, r12
    235c:	04 1b       	sub	r16, r20
    235e:	15 0b       	sbc	r17, r21
    2360:	26 0b       	sbc	r18, r22
    2362:	37 0b       	sbc	r19, r23
    2364:	08 17       	cp	r16, r24
    2366:	19 07       	cpc	r17, r25
    2368:	2a 07       	cpc	r18, r26
    236a:	3b 07       	cpc	r19, r27
    236c:	08 f0       	brcs	.+2      	; 0x2370 <dir_alloc.constprop.10+0x1de>
    236e:	6a cf       	rjmp	.-300    	; 0x2244 <dir_alloc.constprop.10+0xb2>
    2370:	83 80       	ldd	r8, Z+3	; 0x03
    2372:	91 2c       	mov	r9, r1
    2374:	12 e0       	ldi	r17, 0x02	; 2
    2376:	81 16       	cp	r8, r17
    2378:	91 04       	cpc	r9, r1
    237a:	38 f4       	brcc	.+14     	; 0x238a <dir_alloc.constprop.10+0x1f8>
    237c:	63 cf       	rjmp	.-314    	; 0x2244 <dir_alloc.constprop.10+0xb2>
    237e:	ee 81       	ldd	r30, Y+6	; 0x06
    2380:	ff 81       	ldd	r31, Y+7	; 0x07
    2382:	82 8d       	ldd	r24, Z+26	; 0x1a
    2384:	93 8d       	ldd	r25, Z+27	; 0x1b
    2386:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2388:	b5 8d       	ldd	r27, Z+29	; 0x1d
    238a:	c8 0e       	add	r12, r24
    238c:	d9 1e       	adc	r13, r25
    238e:	ea 1e       	adc	r14, r26
    2390:	fb 1e       	adc	r15, r27
    2392:	01 e0       	ldi	r16, 0x01	; 1
    2394:	10 e0       	ldi	r17, 0x00	; 0
    2396:	a7 01       	movw	r20, r14
    2398:	96 01       	movw	r18, r12
    239a:	b5 01       	movw	r22, r10
    239c:	ae 81       	ldd	r26, Y+6	; 0x06
    239e:	bf 81       	ldd	r27, Y+7	; 0x07
    23a0:	11 96       	adiw	r26, 0x01	; 1
    23a2:	8c 91       	ld	r24, X
    23a4:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    23a8:	b1 e0       	ldi	r27, 0x01	; 1
    23aa:	8b 1a       	sub	r8, r27
    23ac:	91 08       	sbc	r9, r1
    23ae:	e1 e0       	ldi	r30, 0x01	; 1
    23b0:	8e 16       	cp	r8, r30
    23b2:	91 04       	cpc	r9, r1
    23b4:	21 f7       	brne	.-56     	; 0x237e <dir_alloc.constprop.10+0x1ec>
    23b6:	46 cf       	rjmp	.-372    	; 0x2244 <dir_alloc.constprop.10+0xb2>
    23b8:	01 e0       	ldi	r16, 0x01	; 1
    23ba:	09 83       	std	Y+1, r16	; 0x01
    23bc:	0c cf       	rjmp	.-488    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    23be:	bf ef       	ldi	r27, 0xFF	; 255
    23c0:	4b 1a       	sub	r4, r27
    23c2:	5b 0a       	sbc	r5, r27
    23c4:	6b 0a       	sbc	r6, r27
    23c6:	7b 0a       	sbc	r7, r27
    23c8:	f1 01       	movw	r30, r2
    23ca:	46 86       	std	Z+14, r4	; 0x0e
    23cc:	57 86       	std	Z+15, r5	; 0x0f
    23ce:	60 8a       	std	Z+16, r6	; 0x10
    23d0:	71 8a       	std	Z+17, r7	; 0x11
    23d2:	42 85       	ldd	r20, Z+10	; 0x0a
    23d4:	53 85       	ldd	r21, Z+11	; 0x0b
    23d6:	64 85       	ldd	r22, Z+12	; 0x0c
    23d8:	75 85       	ldd	r23, Z+13	; 0x0d
    23da:	41 15       	cp	r20, r1
    23dc:	51 05       	cpc	r21, r1
    23de:	61 05       	cpc	r22, r1
    23e0:	71 05       	cpc	r23, r1
    23e2:	41 f1       	breq	.+80     	; 0x2434 <dir_alloc.constprop.10+0x2a2>
    23e4:	f1 01       	movw	r30, r2
    23e6:	01 90       	ld	r0, Z+
    23e8:	f0 81       	ld	r31, Z
    23ea:	e0 2d       	mov	r30, r0
    23ec:	ee 83       	std	Y+6, r30	; 0x06
    23ee:	ff 83       	std	Y+7, r31	; 0x07
    23f0:	82 81       	ldd	r24, Z+2	; 0x02
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	01 97       	sbiw	r24, 0x01	; 1
    23f6:	97 01       	movw	r18, r14
    23f8:	32 95       	swap	r19
    23fa:	22 95       	swap	r18
    23fc:	2f 70       	andi	r18, 0x0F	; 15
    23fe:	23 27       	eor	r18, r19
    2400:	3f 70       	andi	r19, 0x0F	; 15
    2402:	23 27       	eor	r18, r19
    2404:	82 23       	and	r24, r18
    2406:	93 23       	and	r25, r19
    2408:	89 2b       	or	r24, r25
    240a:	09 f0       	breq	.+2      	; 0x240e <dir_alloc.constprop.10+0x27c>
    240c:	6d cf       	rjmp	.-294    	; 0x22e8 <dir_alloc.constprop.10+0x156>
    240e:	42 30       	cpi	r20, 0x02	; 2
    2410:	51 05       	cpc	r21, r1
    2412:	61 05       	cpc	r22, r1
    2414:	71 05       	cpc	r23, r1
    2416:	58 f0       	brcs	.+22     	; 0x242e <dir_alloc.constprop.10+0x29c>
    2418:	ee 81       	ldd	r30, Y+6	; 0x06
    241a:	ff 81       	ldd	r31, Y+7	; 0x07
    241c:	86 89       	ldd	r24, Z+22	; 0x16
    241e:	97 89       	ldd	r25, Z+23	; 0x17
    2420:	a0 8d       	ldd	r26, Z+24	; 0x18
    2422:	b1 8d       	ldd	r27, Z+25	; 0x19
    2424:	48 17       	cp	r20, r24
    2426:	59 07       	cpc	r21, r25
    2428:	6a 07       	cpc	r22, r26
    242a:	7b 07       	cpc	r23, r27
    242c:	88 f0       	brcs	.+34     	; 0x2450 <dir_alloc.constprop.10+0x2be>
    242e:	f2 e0       	ldi	r31, 0x02	; 2
    2430:	f9 83       	std	Y+1, r31	; 0x01
    2432:	d1 ce       	rjmp	.-606    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    2434:	00 81       	ld	r16, Z
    2436:	11 81       	ldd	r17, Z+1	; 0x01
    2438:	0e 83       	std	Y+6, r16	; 0x06
    243a:	1f 83       	std	Y+7, r17	; 0x07
    243c:	d8 01       	movw	r26, r16
    243e:	18 96       	adiw	r26, 0x08	; 8
    2440:	8d 91       	ld	r24, X+
    2442:	9c 91       	ld	r25, X
    2444:	19 97       	sbiw	r26, 0x09	; 9
    2446:	e8 16       	cp	r14, r24
    2448:	f9 06       	cpc	r15, r25
    244a:	08 f0       	brcs	.+2      	; 0x244e <dir_alloc.constprop.10+0x2bc>
    244c:	32 cf       	rjmp	.-412    	; 0x22b2 <dir_alloc.constprop.10+0x120>
    244e:	4c cf       	rjmp	.-360    	; 0x22e8 <dir_alloc.constprop.10+0x156>
    2450:	cf 01       	movw	r24, r30
    2452:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <get_fat.part.4>
    2456:	4b 01       	movw	r8, r22
    2458:	5c 01       	movw	r10, r24
    245a:	62 30       	cpi	r22, 0x02	; 2
    245c:	71 05       	cpc	r23, r1
    245e:	81 05       	cpc	r24, r1
    2460:	91 05       	cpc	r25, r1
    2462:	28 f3       	brcs	.-54     	; 0x242e <dir_alloc.constprop.10+0x29c>
    2464:	6f 3f       	cpi	r22, 0xFF	; 255
    2466:	0f ef       	ldi	r16, 0xFF	; 255
    2468:	70 07       	cpc	r23, r16
    246a:	80 07       	cpc	r24, r16
    246c:	90 07       	cpc	r25, r16
    246e:	09 f4       	brne	.+2      	; 0x2472 <dir_alloc.constprop.10+0x2e0>
    2470:	4e c0       	rjmp	.+156    	; 0x250e <dir_alloc.constprop.10+0x37c>
    2472:	d1 01       	movw	r26, r2
    2474:	0d 90       	ld	r0, X+
    2476:	bc 91       	ld	r27, X
    2478:	a0 2d       	mov	r26, r0
    247a:	ae 83       	std	Y+6, r26	; 0x06
    247c:	bf 83       	std	Y+7, r27	; 0x07
    247e:	56 96       	adiw	r26, 0x16	; 22
    2480:	8d 91       	ld	r24, X+
    2482:	9d 91       	ld	r25, X+
    2484:	0d 90       	ld	r0, X+
    2486:	bc 91       	ld	r27, X
    2488:	a0 2d       	mov	r26, r0
    248a:	88 16       	cp	r8, r24
    248c:	99 06       	cpc	r9, r25
    248e:	aa 06       	cpc	r10, r26
    2490:	bb 06       	cpc	r11, r27
    2492:	58 f5       	brcc	.+86     	; 0x24ea <dir_alloc.constprop.10+0x358>
    2494:	a5 01       	movw	r20, r10
    2496:	94 01       	movw	r18, r8
    2498:	22 50       	subi	r18, 0x02	; 2
    249a:	31 09       	sbc	r19, r1
    249c:	41 09       	sbc	r20, r1
    249e:	51 09       	sbc	r21, r1
    24a0:	f1 01       	movw	r30, r2
    24a2:	82 86       	std	Z+10, r8	; 0x0a
    24a4:	93 86       	std	Z+11, r9	; 0x0b
    24a6:	a4 86       	std	Z+12, r10	; 0x0c
    24a8:	b5 86       	std	Z+13, r11	; 0x0d
    24aa:	02 97       	sbiw	r24, 0x02	; 2
    24ac:	a1 09       	sbc	r26, r1
    24ae:	b1 09       	sbc	r27, r1
    24b0:	28 17       	cp	r18, r24
    24b2:	39 07       	cpc	r19, r25
    24b4:	4a 07       	cpc	r20, r26
    24b6:	5b 07       	cpc	r21, r27
    24b8:	68 f5       	brcc	.+90     	; 0x2514 <dir_alloc.constprop.10+0x382>
    24ba:	ee 81       	ldd	r30, Y+6	; 0x06
    24bc:	ff 81       	ldd	r31, Y+7	; 0x07
    24be:	a2 81       	ldd	r26, Z+2	; 0x02
    24c0:	b0 e0       	ldi	r27, 0x00	; 0
    24c2:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    24c6:	2b 01       	movw	r4, r22
    24c8:	3c 01       	movw	r6, r24
    24ca:	82 a5       	ldd	r24, Z+42	; 0x2a
    24cc:	93 a5       	ldd	r25, Z+43	; 0x2b
    24ce:	a4 a5       	ldd	r26, Z+44	; 0x2c
    24d0:	b5 a5       	ldd	r27, Z+45	; 0x2d
    24d2:	48 0e       	add	r4, r24
    24d4:	59 1e       	adc	r5, r25
    24d6:	6a 1e       	adc	r6, r26
    24d8:	7b 1e       	adc	r7, r27
    24da:	d1 01       	movw	r26, r2
    24dc:	1e 96       	adiw	r26, 0x0e	; 14
    24de:	4d 92       	st	X+, r4
    24e0:	5d 92       	st	X+, r5
    24e2:	6d 92       	st	X+, r6
    24e4:	7c 92       	st	X, r7
    24e6:	51 97       	sbiw	r26, 0x11	; 17
    24e8:	ff ce       	rjmp	.-514    	; 0x22e8 <dir_alloc.constprop.10+0x156>
    24ea:	f1 01       	movw	r30, r2
    24ec:	42 85       	ldd	r20, Z+10	; 0x0a
    24ee:	53 85       	ldd	r21, Z+11	; 0x0b
    24f0:	64 85       	ldd	r22, Z+12	; 0x0c
    24f2:	75 85       	ldd	r23, Z+13	; 0x0d
    24f4:	8e 81       	ldd	r24, Y+6	; 0x06
    24f6:	9f 81       	ldd	r25, Y+7	; 0x07
    24f8:	3d da       	rcall	.-2950   	; 0x1974 <create_chain>
    24fa:	4b 01       	movw	r8, r22
    24fc:	5c 01       	movw	r10, r24
    24fe:	61 15       	cp	r22, r1
    2500:	71 05       	cpc	r23, r1
    2502:	81 05       	cpc	r24, r1
    2504:	91 05       	cpc	r25, r1
    2506:	51 f4       	brne	.+20     	; 0x251c <dir_alloc.constprop.10+0x38a>
    2508:	f7 e0       	ldi	r31, 0x07	; 7
    250a:	f9 83       	std	Y+1, r31	; 0x01
    250c:	64 ce       	rjmp	.-824    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    250e:	11 e0       	ldi	r17, 0x01	; 1
    2510:	19 83       	std	Y+1, r17	; 0x01
    2512:	61 ce       	rjmp	.-830    	; 0x21d6 <dir_alloc.constprop.10+0x44>
    2514:	41 2c       	mov	r4, r1
    2516:	51 2c       	mov	r5, r1
    2518:	32 01       	movw	r6, r4
    251a:	df cf       	rjmp	.-66     	; 0x24da <dir_alloc.constprop.10+0x348>
    251c:	61 30       	cpi	r22, 0x01	; 1
    251e:	71 05       	cpc	r23, r1
    2520:	81 05       	cpc	r24, r1
    2522:	91 05       	cpc	r25, r1
    2524:	09 f4       	brne	.+2      	; 0x2528 <dir_alloc.constprop.10+0x396>
    2526:	83 cf       	rjmp	.-250    	; 0x242e <dir_alloc.constprop.10+0x29c>
    2528:	6f 3f       	cpi	r22, 0xFF	; 255
    252a:	0f ef       	ldi	r16, 0xFF	; 255
    252c:	70 07       	cpc	r23, r16
    252e:	80 07       	cpc	r24, r16
    2530:	90 07       	cpc	r25, r16
    2532:	69 f3       	breq	.-38     	; 0x250e <dir_alloc.constprop.10+0x37c>
    2534:	d1 01       	movw	r26, r2
    2536:	8d 91       	ld	r24, X+
    2538:	9c 91       	ld	r25, X
    253a:	fc 01       	movw	r30, r24
    253c:	24 81       	ldd	r18, Z+4	; 0x04
    253e:	21 11       	cpse	r18, r1
    2540:	9b c0       	rjmp	.+310    	; 0x2678 <dir_alloc.constprop.10+0x4e6>
    2542:	fc 01       	movw	r30, r24
    2544:	f2 96       	adiw	r30, 0x32	; 50
    2546:	df 01       	movw	r26, r30
    2548:	00 e0       	ldi	r16, 0x00	; 0
    254a:	12 e0       	ldi	r17, 0x02	; 2
    254c:	1d 92       	st	X+, r1
    254e:	01 50       	subi	r16, 0x01	; 1
    2550:	10 40       	sbci	r17, 0x00	; 0
    2552:	e1 f7       	brne	.-8      	; 0x254c <dir_alloc.constprop.10+0x3ba>
    2554:	d1 01       	movw	r26, r2
    2556:	0d 90       	ld	r0, X+
    2558:	bc 91       	ld	r27, X
    255a:	a0 2d       	mov	r26, r0
    255c:	ae 83       	std	Y+6, r26	; 0x06
    255e:	bf 83       	std	Y+7, r27	; 0x07
    2560:	95 01       	movw	r18, r10
    2562:	84 01       	movw	r16, r8
    2564:	02 50       	subi	r16, 0x02	; 2
    2566:	11 09       	sbc	r17, r1
    2568:	21 09       	sbc	r18, r1
    256a:	31 09       	sbc	r19, r1
    256c:	0a 83       	std	Y+2, r16	; 0x02
    256e:	1b 83       	std	Y+3, r17	; 0x03
    2570:	2c 83       	std	Y+4, r18	; 0x04
    2572:	3d 83       	std	Y+5, r19	; 0x05
    2574:	56 96       	adiw	r26, 0x16	; 22
    2576:	8d 91       	ld	r24, X+
    2578:	9d 91       	ld	r25, X+
    257a:	0d 90       	ld	r0, X+
    257c:	bc 91       	ld	r27, X
    257e:	a0 2d       	mov	r26, r0
    2580:	02 97       	sbiw	r24, 0x02	; 2
    2582:	a1 09       	sbc	r26, r1
    2584:	b1 09       	sbc	r27, r1
    2586:	08 17       	cp	r16, r24
    2588:	19 07       	cpc	r17, r25
    258a:	2a 07       	cpc	r18, r26
    258c:	3b 07       	cpc	r19, r27
    258e:	08 f0       	brcs	.+2      	; 0x2592 <dir_alloc.constprop.10+0x400>
    2590:	53 c0       	rjmp	.+166    	; 0x2638 <dir_alloc.constprop.10+0x4a6>
    2592:	a9 01       	movw	r20, r18
    2594:	98 01       	movw	r18, r16
    2596:	ee 81       	ldd	r30, Y+6	; 0x06
    2598:	ff 81       	ldd	r31, Y+7	; 0x07
    259a:	12 81       	ldd	r17, Z+2	; 0x02
    259c:	a1 2f       	mov	r26, r17
    259e:	b0 e0       	ldi	r27, 0x00	; 0
    25a0:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    25a4:	42 a4       	ldd	r4, Z+42	; 0x2a
    25a6:	53 a4       	ldd	r5, Z+43	; 0x2b
    25a8:	64 a4       	ldd	r6, Z+44	; 0x2c
    25aa:	75 a4       	ldd	r7, Z+45	; 0x2d
    25ac:	64 0d       	add	r22, r4
    25ae:	75 1d       	adc	r23, r5
    25b0:	86 1d       	adc	r24, r6
    25b2:	97 1d       	adc	r25, r7
    25b4:	e1 2f       	mov	r30, r17
    25b6:	ae 81       	ldd	r26, Y+6	; 0x06
    25b8:	bf 81       	ldd	r27, Y+7	; 0x07
    25ba:	9e 96       	adiw	r26, 0x2e	; 46
    25bc:	6d 93       	st	X+, r22
    25be:	7d 93       	st	X+, r23
    25c0:	8d 93       	st	X+, r24
    25c2:	9c 93       	st	X, r25
    25c4:	d1 97       	sbiw	r26, 0x31	; 49
    25c6:	61 2c       	mov	r6, r1
    25c8:	71 2c       	mov	r7, r1
    25ca:	e1 11       	cpse	r30, r1
    25cc:	19 c0       	rjmp	.+50     	; 0x2600 <dir_alloc.constprop.10+0x46e>
    25ce:	3f c0       	rjmp	.+126    	; 0x264e <dir_alloc.constprop.10+0x4bc>
    25d0:	9e 96       	adiw	r26, 0x2e	; 46
    25d2:	4d 91       	ld	r20, X+
    25d4:	5d 91       	ld	r21, X+
    25d6:	6d 91       	ld	r22, X+
    25d8:	7c 91       	ld	r23, X
    25da:	d1 97       	sbiw	r26, 0x31	; 49
    25dc:	4f 5f       	subi	r20, 0xFF	; 255
    25de:	5f 4f       	sbci	r21, 0xFF	; 255
    25e0:	6f 4f       	sbci	r22, 0xFF	; 255
    25e2:	7f 4f       	sbci	r23, 0xFF	; 255
    25e4:	fd 01       	movw	r30, r26
    25e6:	46 a7       	std	Z+46, r20	; 0x2e
    25e8:	57 a7       	std	Z+47, r21	; 0x2f
    25ea:	60 ab       	std	Z+48, r22	; 0x30
    25ec:	71 ab       	std	Z+49, r23	; 0x31
    25ee:	ff ef       	ldi	r31, 0xFF	; 255
    25f0:	6f 1a       	sub	r6, r31
    25f2:	7f 0a       	sbc	r7, r31
    25f4:	12 96       	adiw	r26, 0x02	; 2
    25f6:	8c 91       	ld	r24, X
    25f8:	90 e0       	ldi	r25, 0x00	; 0
    25fa:	68 16       	cp	r6, r24
    25fc:	79 06       	cpc	r7, r25
    25fe:	28 f5       	brcc	.+74     	; 0x264a <dir_alloc.constprop.10+0x4b8>
    2600:	01 e0       	ldi	r16, 0x01	; 1
    2602:	ee 81       	ldd	r30, Y+6	; 0x06
    2604:	ff 81       	ldd	r31, Y+7	; 0x07
    2606:	04 83       	std	Z+4, r16	; 0x04
    2608:	d1 01       	movw	r26, r2
    260a:	0d 90       	ld	r0, X+
    260c:	bc 91       	ld	r27, X
    260e:	a0 2d       	mov	r26, r0
    2610:	ae 83       	std	Y+6, r26	; 0x06
    2612:	bf 83       	std	Y+7, r27	; 0x07
    2614:	14 96       	adiw	r26, 0x04	; 4
    2616:	8c 91       	ld	r24, X
    2618:	14 97       	sbiw	r26, 0x04	; 4
    261a:	88 23       	and	r24, r24
    261c:	c9 f2       	breq	.-78     	; 0x25d0 <dir_alloc.constprop.10+0x43e>
    261e:	cd 01       	movw	r24, r26
    2620:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <sync_window.part.2>
    2624:	81 11       	cpse	r24, r1
    2626:	73 cf       	rjmp	.-282    	; 0x250e <dir_alloc.constprop.10+0x37c>
    2628:	f1 01       	movw	r30, r2
    262a:	01 90       	ld	r0, Z+
    262c:	f0 81       	ld	r31, Z
    262e:	e0 2d       	mov	r30, r0
    2630:	ee 83       	std	Y+6, r30	; 0x06
    2632:	ff 83       	std	Y+7, r31	; 0x07
    2634:	df 01       	movw	r26, r30
    2636:	cc cf       	rjmp	.-104    	; 0x25d0 <dir_alloc.constprop.10+0x43e>
    2638:	ae 81       	ldd	r26, Y+6	; 0x06
    263a:	bf 81       	ldd	r27, Y+7	; 0x07
    263c:	12 96       	adiw	r26, 0x02	; 2
    263e:	ec 91       	ld	r30, X
    2640:	12 97       	sbiw	r26, 0x02	; 2
    2642:	60 e0       	ldi	r22, 0x00	; 0
    2644:	70 e0       	ldi	r23, 0x00	; 0
    2646:	cb 01       	movw	r24, r22
    2648:	b8 cf       	rjmp	.-144    	; 0x25ba <dir_alloc.constprop.10+0x428>
    264a:	cb 01       	movw	r24, r22
    264c:	ba 01       	movw	r22, r20
    264e:	dc 01       	movw	r26, r24
    2650:	cb 01       	movw	r24, r22
    2652:	86 19       	sub	r24, r6
    2654:	97 09       	sbc	r25, r7
    2656:	a1 09       	sbc	r26, r1
    2658:	b1 09       	sbc	r27, r1
    265a:	ee 81       	ldd	r30, Y+6	; 0x06
    265c:	ff 81       	ldd	r31, Y+7	; 0x07
    265e:	86 a7       	std	Z+46, r24	; 0x2e
    2660:	97 a7       	std	Z+47, r25	; 0x2f
    2662:	a0 ab       	std	Z+48, r26	; 0x30
    2664:	b1 ab       	std	Z+49, r27	; 0x31
    2666:	86 89       	ldd	r24, Z+22	; 0x16
    2668:	97 89       	ldd	r25, Z+23	; 0x17
    266a:	a0 8d       	ldd	r26, Z+24	; 0x18
    266c:	b1 8d       	ldd	r27, Z+25	; 0x19
    266e:	2a 81       	ldd	r18, Y+2	; 0x02
    2670:	3b 81       	ldd	r19, Y+3	; 0x03
    2672:	4c 81       	ldd	r20, Y+4	; 0x04
    2674:	5d 81       	ldd	r21, Y+5	; 0x05
    2676:	14 cf       	rjmp	.-472    	; 0x24a0 <dir_alloc.constprop.10+0x30e>
    2678:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <sync_window.part.2>
    267c:	81 11       	cpse	r24, r1
    267e:	47 cf       	rjmp	.-370    	; 0x250e <dir_alloc.constprop.10+0x37c>
    2680:	d1 01       	movw	r26, r2
    2682:	8d 91       	ld	r24, X+
    2684:	9c 91       	ld	r25, X
    2686:	5d cf       	rjmp	.-326    	; 0x2542 <dir_alloc.constprop.10+0x3b0>

00002688 <dir_register>:
    2688:	2f 92       	push	r2
    268a:	3f 92       	push	r3
    268c:	4f 92       	push	r4
    268e:	5f 92       	push	r5
    2690:	6f 92       	push	r6
    2692:	7f 92       	push	r7
    2694:	8f 92       	push	r8
    2696:	9f 92       	push	r9
    2698:	af 92       	push	r10
    269a:	bf 92       	push	r11
    269c:	cf 92       	push	r12
    269e:	df 92       	push	r13
    26a0:	ef 92       	push	r14
    26a2:	ff 92       	push	r15
    26a4:	0f 93       	push	r16
    26a6:	1f 93       	push	r17
    26a8:	cf 93       	push	r28
    26aa:	df 93       	push	r29
    26ac:	cd b7       	in	r28, 0x3d	; 61
    26ae:	de b7       	in	r29, 0x3e	; 62
    26b0:	2f 97       	sbiw	r28, 0x0f	; 15
    26b2:	cd bf       	out	0x3d, r28	; 61
    26b4:	de bf       	out	0x3e, r29	; 62
    26b6:	2c 01       	movw	r4, r24
    26b8:	6c dd       	rcall	.-1320   	; 0x2192 <dir_alloc.constprop.10>
    26ba:	98 2f       	mov	r25, r24
    26bc:	88 23       	and	r24, r24
    26be:	b9 f0       	breq	.+46     	; 0x26ee <dir_register+0x66>
    26c0:	89 2f       	mov	r24, r25
    26c2:	2f 96       	adiw	r28, 0x0f	; 15
    26c4:	cd bf       	out	0x3d, r28	; 61
    26c6:	de bf       	out	0x3e, r29	; 62
    26c8:	df 91       	pop	r29
    26ca:	cf 91       	pop	r28
    26cc:	1f 91       	pop	r17
    26ce:	0f 91       	pop	r16
    26d0:	ff 90       	pop	r15
    26d2:	ef 90       	pop	r14
    26d4:	df 90       	pop	r13
    26d6:	cf 90       	pop	r12
    26d8:	bf 90       	pop	r11
    26da:	af 90       	pop	r10
    26dc:	9f 90       	pop	r9
    26de:	8f 90       	pop	r8
    26e0:	7f 90       	pop	r7
    26e2:	6f 90       	pop	r6
    26e4:	5f 90       	pop	r5
    26e6:	4f 90       	pop	r4
    26e8:	3f 90       	pop	r3
    26ea:	2f 90       	pop	r2
    26ec:	08 95       	ret
    26ee:	d2 01       	movw	r26, r4
    26f0:	1e 96       	adiw	r26, 0x0e	; 14
    26f2:	6d 90       	ld	r6, X+
    26f4:	7d 90       	ld	r7, X+
    26f6:	8d 90       	ld	r8, X+
    26f8:	9c 90       	ld	r9, X
    26fa:	51 97       	sbiw	r26, 0x11	; 17
    26fc:	6c 86       	std	Y+12, r6	; 0x0c
    26fe:	7d 86       	std	Y+13, r7	; 0x0d
    2700:	8e 86       	std	Y+14, r8	; 0x0e
    2702:	9f 86       	std	Y+15, r9	; 0x0f
    2704:	ad 90       	ld	r10, X+
    2706:	bc 90       	ld	r11, X
    2708:	f5 01       	movw	r30, r10
    270a:	c6 a4       	ldd	r12, Z+46	; 0x2e
    270c:	d7 a4       	ldd	r13, Z+47	; 0x2f
    270e:	e0 a8       	ldd	r14, Z+48	; 0x30
    2710:	f1 a8       	ldd	r15, Z+49	; 0x31
    2712:	6c 14       	cp	r6, r12
    2714:	7d 04       	cpc	r7, r13
    2716:	8e 04       	cpc	r8, r14
    2718:	9f 04       	cpc	r9, r15
    271a:	59 f1       	breq	.+86     	; 0x2772 <dir_register+0xea>
    271c:	84 81       	ldd	r24, Z+4	; 0x04
    271e:	15 01       	movw	r2, r10
    2720:	81 11       	cpse	r24, r1
    2722:	5d c0       	rjmp	.+186    	; 0x27de <dir_register+0x156>
    2724:	b2 e3       	ldi	r27, 0x32	; 50
    2726:	2b 0e       	add	r2, r27
    2728:	31 1c       	adc	r3, r1
    272a:	01 e0       	ldi	r16, 0x01	; 1
    272c:	10 e0       	ldi	r17, 0x00	; 0
    272e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2730:	3d 85       	ldd	r19, Y+13	; 0x0d
    2732:	4e 85       	ldd	r20, Y+14	; 0x0e
    2734:	5f 85       	ldd	r21, Y+15	; 0x0f
    2736:	b1 01       	movw	r22, r2
    2738:	f5 01       	movw	r30, r10
    273a:	81 81       	ldd	r24, Z+1	; 0x01
    273c:	99 83       	std	Y+1, r25	; 0x01
    273e:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    2742:	99 81       	ldd	r25, Y+1	; 0x01
    2744:	88 23       	and	r24, r24
    2746:	51 f0       	breq	.+20     	; 0x275c <dir_register+0xd4>
    2748:	8f ef       	ldi	r24, 0xFF	; 255
    274a:	9f ef       	ldi	r25, 0xFF	; 255
    274c:	dc 01       	movw	r26, r24
    274e:	f5 01       	movw	r30, r10
    2750:	86 a7       	std	Z+46, r24	; 0x2e
    2752:	97 a7       	std	Z+47, r25	; 0x2f
    2754:	a0 ab       	std	Z+48, r26	; 0x30
    2756:	b1 ab       	std	Z+49, r27	; 0x31
    2758:	91 e0       	ldi	r25, 0x01	; 1
    275a:	b2 cf       	rjmp	.-156    	; 0x26c0 <dir_register+0x38>
    275c:	6c 84       	ldd	r6, Y+12	; 0x0c
    275e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2760:	8e 84       	ldd	r8, Y+14	; 0x0e
    2762:	9f 84       	ldd	r9, Y+15	; 0x0f
    2764:	d5 01       	movw	r26, r10
    2766:	9e 96       	adiw	r26, 0x2e	; 46
    2768:	6d 92       	st	X+, r6
    276a:	7d 92       	st	X+, r7
    276c:	8d 92       	st	X+, r8
    276e:	9c 92       	st	X, r9
    2770:	d1 97       	sbiw	r26, 0x31	; 49
    2772:	d2 01       	movw	r26, r4
    2774:	52 96       	adiw	r26, 0x12	; 18
    2776:	ed 91       	ld	r30, X+
    2778:	fc 91       	ld	r31, X
    277a:	53 97       	sbiw	r26, 0x13	; 19
    277c:	80 e2       	ldi	r24, 0x20	; 32
    277e:	df 01       	movw	r26, r30
    2780:	1d 92       	st	X+, r1
    2782:	8a 95       	dec	r24
    2784:	e9 f7       	brne	.-6      	; 0x2780 <dir_register+0xf8>
    2786:	f2 01       	movw	r30, r4
    2788:	a4 89       	ldd	r26, Z+20	; 0x14
    278a:	b5 89       	ldd	r27, Z+21	; 0x15
    278c:	42 89       	ldd	r20, Z+18	; 0x12
    278e:	53 89       	ldd	r21, Z+19	; 0x13
    2790:	2d 91       	ld	r18, X+
    2792:	3c 91       	ld	r19, X
    2794:	11 97       	sbiw	r26, 0x01	; 1
    2796:	fa 01       	movw	r30, r20
    2798:	20 83       	st	Z, r18
    279a:	31 83       	std	Z+1, r19	; 0x01
    279c:	12 96       	adiw	r26, 0x02	; 2
    279e:	2d 91       	ld	r18, X+
    27a0:	3c 91       	ld	r19, X
    27a2:	13 97       	sbiw	r26, 0x03	; 3
    27a4:	22 83       	std	Z+2, r18	; 0x02
    27a6:	33 83       	std	Z+3, r19	; 0x03
    27a8:	14 96       	adiw	r26, 0x04	; 4
    27aa:	2d 91       	ld	r18, X+
    27ac:	3c 91       	ld	r19, X
    27ae:	15 97       	sbiw	r26, 0x05	; 5
    27b0:	24 83       	std	Z+4, r18	; 0x04
    27b2:	35 83       	std	Z+5, r19	; 0x05
    27b4:	16 96       	adiw	r26, 0x06	; 6
    27b6:	2d 91       	ld	r18, X+
    27b8:	3c 91       	ld	r19, X
    27ba:	17 97       	sbiw	r26, 0x07	; 7
    27bc:	26 83       	std	Z+6, r18	; 0x06
    27be:	37 83       	std	Z+7, r19	; 0x07
    27c0:	18 96       	adiw	r26, 0x08	; 8
    27c2:	2d 91       	ld	r18, X+
    27c4:	3c 91       	ld	r19, X
    27c6:	19 97       	sbiw	r26, 0x09	; 9
    27c8:	20 87       	std	Z+8, r18	; 0x08
    27ca:	31 87       	std	Z+9, r19	; 0x09
    27cc:	1a 96       	adiw	r26, 0x0a	; 10
    27ce:	8c 91       	ld	r24, X
    27d0:	82 87       	std	Z+10, r24	; 0x0a
    27d2:	d2 01       	movw	r26, r4
    27d4:	ed 91       	ld	r30, X+
    27d6:	fc 91       	ld	r31, X
    27d8:	81 e0       	ldi	r24, 0x01	; 1
    27da:	84 83       	std	Z+4, r24	; 0x04
    27dc:	71 cf       	rjmp	.-286    	; 0x26c0 <dir_register+0x38>
    27de:	f2 e3       	ldi	r31, 0x32	; 50
    27e0:	2f 0e       	add	r2, r31
    27e2:	31 1c       	adc	r3, r1
    27e4:	01 e0       	ldi	r16, 0x01	; 1
    27e6:	10 e0       	ldi	r17, 0x00	; 0
    27e8:	a7 01       	movw	r20, r14
    27ea:	96 01       	movw	r18, r12
    27ec:	b1 01       	movw	r22, r2
    27ee:	d5 01       	movw	r26, r10
    27f0:	11 96       	adiw	r26, 0x01	; 1
    27f2:	8c 91       	ld	r24, X
    27f4:	99 83       	std	Y+1, r25	; 0x01
    27f6:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    27fa:	99 81       	ldd	r25, Y+1	; 0x01
    27fc:	81 11       	cpse	r24, r1
    27fe:	ac cf       	rjmp	.-168    	; 0x2758 <dir_register+0xd0>
    2800:	f5 01       	movw	r30, r10
    2802:	14 82       	std	Z+4, r1	; 0x04
    2804:	62 8c       	ldd	r6, Z+26	; 0x1a
    2806:	73 8c       	ldd	r7, Z+27	; 0x1b
    2808:	84 8c       	ldd	r8, Z+28	; 0x1c
    280a:	95 8c       	ldd	r9, Z+29	; 0x1d
    280c:	68 86       	std	Y+8, r6	; 0x08
    280e:	79 86       	std	Y+9, r7	; 0x09
    2810:	8a 86       	std	Y+10, r8	; 0x0a
    2812:	9b 86       	std	Y+11, r9	; 0x0b
    2814:	62 a0       	ldd	r6, Z+34	; 0x22
    2816:	73 a0       	ldd	r7, Z+35	; 0x23
    2818:	84 a0       	ldd	r8, Z+36	; 0x24
    281a:	95 a0       	ldd	r9, Z+37	; 0x25
    281c:	97 01       	movw	r18, r14
    281e:	86 01       	movw	r16, r12
    2820:	06 19       	sub	r16, r6
    2822:	17 09       	sbc	r17, r7
    2824:	28 09       	sbc	r18, r8
    2826:	39 09       	sbc	r19, r9
    2828:	48 85       	ldd	r20, Y+8	; 0x08
    282a:	59 85       	ldd	r21, Y+9	; 0x09
    282c:	6a 85       	ldd	r22, Y+10	; 0x0a
    282e:	7b 85       	ldd	r23, Y+11	; 0x0b
    2830:	04 17       	cp	r16, r20
    2832:	15 07       	cpc	r17, r21
    2834:	26 07       	cpc	r18, r22
    2836:	37 07       	cpc	r19, r23
    2838:	08 f0       	brcs	.+2      	; 0x283c <dir_register+0x1b4>
    283a:	77 cf       	rjmp	.-274    	; 0x272a <dir_register+0xa2>
    283c:	83 80       	ldd	r8, Z+3	; 0x03
    283e:	91 2c       	mov	r9, r1
    2840:	52 e0       	ldi	r21, 0x02	; 2
    2842:	85 16       	cp	r8, r21
    2844:	91 04       	cpc	r9, r1
    2846:	08 f4       	brcc	.+2      	; 0x284a <dir_register+0x1c2>
    2848:	70 cf       	rjmp	.-288    	; 0x272a <dir_register+0xa2>
    284a:	48 85       	ldd	r20, Y+8	; 0x08
    284c:	59 85       	ldd	r21, Y+9	; 0x09
    284e:	6a 85       	ldd	r22, Y+10	; 0x0a
    2850:	7b 85       	ldd	r23, Y+11	; 0x0b
    2852:	07 c0       	rjmp	.+14     	; 0x2862 <dir_register+0x1da>
    2854:	d5 01       	movw	r26, r10
    2856:	5a 96       	adiw	r26, 0x1a	; 26
    2858:	4d 91       	ld	r20, X+
    285a:	5d 91       	ld	r21, X+
    285c:	6d 91       	ld	r22, X+
    285e:	7c 91       	ld	r23, X
    2860:	5d 97       	sbiw	r26, 0x1d	; 29
    2862:	c4 0e       	add	r12, r20
    2864:	d5 1e       	adc	r13, r21
    2866:	e6 1e       	adc	r14, r22
    2868:	f7 1e       	adc	r15, r23
    286a:	01 e0       	ldi	r16, 0x01	; 1
    286c:	10 e0       	ldi	r17, 0x00	; 0
    286e:	a7 01       	movw	r20, r14
    2870:	96 01       	movw	r18, r12
    2872:	b1 01       	movw	r22, r2
    2874:	d5 01       	movw	r26, r10
    2876:	11 96       	adiw	r26, 0x01	; 1
    2878:	8c 91       	ld	r24, X
    287a:	99 83       	std	Y+1, r25	; 0x01
    287c:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    2880:	b1 e0       	ldi	r27, 0x01	; 1
    2882:	8b 1a       	sub	r8, r27
    2884:	91 08       	sbc	r9, r1
    2886:	99 81       	ldd	r25, Y+1	; 0x01
    2888:	e1 e0       	ldi	r30, 0x01	; 1
    288a:	8e 16       	cp	r8, r30
    288c:	91 04       	cpc	r9, r1
    288e:	11 f7       	brne	.-60     	; 0x2854 <dir_register+0x1cc>
    2890:	4c cf       	rjmp	.-360    	; 0x272a <dir_register+0xa2>

00002892 <follow_path>:
    2892:	2f 92       	push	r2
    2894:	3f 92       	push	r3
    2896:	4f 92       	push	r4
    2898:	5f 92       	push	r5
    289a:	6f 92       	push	r6
    289c:	7f 92       	push	r7
    289e:	8f 92       	push	r8
    28a0:	9f 92       	push	r9
    28a2:	af 92       	push	r10
    28a4:	bf 92       	push	r11
    28a6:	cf 92       	push	r12
    28a8:	df 92       	push	r13
    28aa:	ef 92       	push	r14
    28ac:	ff 92       	push	r15
    28ae:	0f 93       	push	r16
    28b0:	1f 93       	push	r17
    28b2:	cf 93       	push	r28
    28b4:	df 93       	push	r29
    28b6:	00 d0       	rcall	.+0      	; 0x28b8 <follow_path+0x26>
    28b8:	00 d0       	rcall	.+0      	; 0x28ba <follow_path+0x28>
    28ba:	cd b7       	in	r28, 0x3d	; 61
    28bc:	de b7       	in	r29, 0x3e	; 62
    28be:	5c 01       	movw	r10, r24
    28c0:	69 83       	std	Y+1, r22	; 0x01
    28c2:	7a 83       	std	Y+2, r23	; 0x02
    28c4:	db 01       	movw	r26, r22
    28c6:	8c 91       	ld	r24, X
    28c8:	8f 32       	cpi	r24, 0x2F	; 47
    28ca:	09 f4       	brne	.+2      	; 0x28ce <follow_path+0x3c>
    28cc:	75 c2       	rjmp	.+1258   	; 0x2db8 <follow_path+0x526>
    28ce:	8c 35       	cpi	r24, 0x5C	; 92
    28d0:	09 f4       	brne	.+2      	; 0x28d4 <follow_path+0x42>
    28d2:	72 c2       	rjmp	.+1252   	; 0x2db8 <follow_path+0x526>
    28d4:	d5 01       	movw	r26, r10
    28d6:	ed 91       	ld	r30, X+
    28d8:	fc 91       	ld	r31, X
    28da:	82 89       	ldd	r24, Z+18	; 0x12
    28dc:	93 89       	ldd	r25, Z+19	; 0x13
    28de:	a4 89       	ldd	r26, Z+20	; 0x14
    28e0:	b5 89       	ldd	r27, Z+21	; 0x15
    28e2:	f5 01       	movw	r30, r10
    28e4:	86 83       	std	Z+6, r24	; 0x06
    28e6:	97 83       	std	Z+7, r25	; 0x07
    28e8:	a0 87       	std	Z+8, r26	; 0x08
    28ea:	b1 87       	std	Z+9, r27	; 0x09
    28ec:	a9 81       	ldd	r26, Y+1	; 0x01
    28ee:	ba 81       	ldd	r27, Y+2	; 0x02
    28f0:	8c 91       	ld	r24, X
    28f2:	80 32       	cpi	r24, 0x20	; 32
    28f4:	08 f4       	brcc	.+2      	; 0x28f8 <follow_path+0x66>
    28f6:	71 c2       	rjmp	.+1250   	; 0x2dda <follow_path+0x548>
    28f8:	f5 01       	movw	r30, r10
    28fa:	c4 88       	ldd	r12, Z+20	; 0x14
    28fc:	d5 88       	ldd	r13, Z+21	; 0x15
    28fe:	89 81       	ldd	r24, Y+1	; 0x01
    2900:	9a 81       	ldd	r25, Y+2	; 0x02
    2902:	dc 01       	movw	r26, r24
    2904:	2c 91       	ld	r18, X
    2906:	01 96       	adiw	r24, 0x01	; 1
    2908:	2f 32       	cpi	r18, 0x2F	; 47
    290a:	d9 f3       	breq	.-10     	; 0x2902 <follow_path+0x70>
    290c:	2c 35       	cpi	r18, 0x5C	; 92
    290e:	c9 f3       	breq	.-14     	; 0x2902 <follow_path+0x70>
    2910:	00 e2       	ldi	r16, 0x20	; 32
    2912:	f6 01       	movw	r30, r12
    2914:	00 83       	st	Z, r16
    2916:	01 83       	std	Z+1, r16	; 0x01
    2918:	02 83       	std	Z+2, r16	; 0x02
    291a:	03 83       	std	Z+3, r16	; 0x03
    291c:	04 83       	std	Z+4, r16	; 0x04
    291e:	05 83       	std	Z+5, r16	; 0x05
    2920:	06 83       	std	Z+6, r16	; 0x06
    2922:	07 83       	std	Z+7, r16	; 0x07
    2924:	00 87       	std	Z+8, r16	; 0x08
    2926:	01 87       	std	Z+9, r16	; 0x09
    2928:	02 87       	std	Z+10, r16	; 0x0a
    292a:	8c 91       	ld	r24, X
    292c:	8e 32       	cpi	r24, 0x2E	; 46
    292e:	09 f4       	brne	.+2      	; 0x2932 <follow_path+0xa0>
    2930:	4c c0       	rjmp	.+152    	; 0x29ca <follow_path+0x138>
    2932:	20 e0       	ldi	r18, 0x00	; 0
    2934:	30 e0       	ldi	r19, 0x00	; 0
    2936:	80 e0       	ldi	r24, 0x00	; 0
    2938:	90 e0       	ldi	r25, 0x00	; 0
    293a:	48 e0       	ldi	r20, 0x08	; 8
    293c:	50 e0       	ldi	r21, 0x00	; 0
    293e:	10 e0       	ldi	r17, 0x00	; 0
    2940:	bc 01       	movw	r22, r24
    2942:	6f 5f       	subi	r22, 0xFF	; 255
    2944:	7f 4f       	sbci	r23, 0xFF	; 255
    2946:	fd 01       	movw	r30, r26
    2948:	e8 0f       	add	r30, r24
    294a:	f9 1f       	adc	r31, r25
    294c:	00 81       	ld	r16, Z
    294e:	01 32       	cpi	r16, 0x21	; 33
    2950:	08 f4       	brcc	.+2      	; 0x2954 <follow_path+0xc2>
    2952:	dc c2       	rjmp	.+1464   	; 0x2f0c <follow_path+0x67a>
    2954:	0f 32       	cpi	r16, 0x2F	; 47
    2956:	09 f4       	brne	.+2      	; 0x295a <follow_path+0xc8>
    2958:	ba c2       	rjmp	.+1396   	; 0x2ece <follow_path+0x63c>
    295a:	0c 35       	cpi	r16, 0x5C	; 92
    295c:	09 f4       	brne	.+2      	; 0x2960 <follow_path+0xce>
    295e:	b7 c2       	rjmp	.+1390   	; 0x2ece <follow_path+0x63c>
    2960:	0e 32       	cpi	r16, 0x2E	; 46
    2962:	09 f4       	brne	.+2      	; 0x2966 <follow_path+0xd4>
    2964:	e9 c2       	rjmp	.+1490   	; 0x2f38 <follow_path+0x6a6>
    2966:	24 17       	cp	r18, r20
    2968:	35 07       	cpc	r19, r21
    296a:	08 f0       	brcs	.+2      	; 0x296e <follow_path+0xdc>
    296c:	43 c0       	rjmp	.+134    	; 0x29f4 <follow_path+0x162>
    296e:	07 fd       	sbrc	r16, 7
    2970:	4e c2       	rjmp	.+1180   	; 0x2e0e <follow_path+0x57c>
    2972:	ef e7       	ldi	r30, 0x7F	; 127
    2974:	e0 0f       	add	r30, r16
    2976:	ef 31       	cpi	r30, 0x1F	; 31
    2978:	28 f0       	brcs	.+10     	; 0x2984 <follow_path+0xf2>
    297a:	e0 e2       	ldi	r30, 0x20	; 32
    297c:	e0 0f       	add	r30, r16
    297e:	ed 31       	cpi	r30, 0x1D	; 29
    2980:	08 f0       	brcs	.+2      	; 0x2984 <follow_path+0xf2>
    2982:	4f c0       	rjmp	.+158    	; 0x2a22 <follow_path+0x190>
    2984:	02 96       	adiw	r24, 0x02	; 2
    2986:	6a 0f       	add	r22, r26
    2988:	7b 1f       	adc	r23, r27
    298a:	fb 01       	movw	r30, r22
    298c:	f0 80       	ld	r15, Z
    298e:	60 ec       	ldi	r22, 0xC0	; 192
    2990:	6f 0d       	add	r22, r15
    2992:	6f 33       	cpi	r22, 0x3F	; 63
    2994:	20 f0       	brcs	.+8      	; 0x299e <follow_path+0x10c>
    2996:	60 e8       	ldi	r22, 0x80	; 128
    2998:	6f 0d       	add	r22, r15
    299a:	6d 37       	cpi	r22, 0x7D	; 125
    299c:	58 f5       	brcc	.+86     	; 0x29f4 <follow_path+0x162>
    299e:	ba 01       	movw	r22, r20
    29a0:	61 50       	subi	r22, 0x01	; 1
    29a2:	71 09       	sbc	r23, r1
    29a4:	26 17       	cp	r18, r22
    29a6:	37 07       	cpc	r19, r23
    29a8:	28 f5       	brcc	.+74     	; 0x29f4 <follow_path+0x162>
    29aa:	49 01       	movw	r8, r18
    29ac:	ff ef       	ldi	r31, 0xFF	; 255
    29ae:	8f 1a       	sub	r8, r31
    29b0:	9f 0a       	sbc	r9, r31
    29b2:	b6 01       	movw	r22, r12
    29b4:	62 0f       	add	r22, r18
    29b6:	73 1f       	adc	r23, r19
    29b8:	fb 01       	movw	r30, r22
    29ba:	00 83       	st	Z, r16
    29bc:	2e 5f       	subi	r18, 0xFE	; 254
    29be:	3f 4f       	sbci	r19, 0xFF	; 255
    29c0:	8c 0c       	add	r8, r12
    29c2:	9d 1c       	adc	r9, r13
    29c4:	f4 01       	movw	r30, r8
    29c6:	f0 82       	st	Z, r15
    29c8:	bb cf       	rjmp	.-138    	; 0x2940 <follow_path+0xae>
    29ca:	f6 01       	movw	r30, r12
    29cc:	80 83       	st	Z, r24
    29ce:	11 96       	adiw	r26, 0x01	; 1
    29d0:	2c 91       	ld	r18, X
    29d2:	11 97       	sbiw	r26, 0x01	; 1
    29d4:	2e 32       	cpi	r18, 0x2E	; 46
    29d6:	09 f0       	breq	.+2      	; 0x29da <follow_path+0x148>
    29d8:	a2 c2       	rjmp	.+1348   	; 0x2f1e <follow_path+0x68c>
    29da:	21 83       	std	Z+1, r18	; 0x01
    29dc:	12 96       	adiw	r26, 0x02	; 2
    29de:	2c 91       	ld	r18, X
    29e0:	12 97       	sbiw	r26, 0x02	; 2
    29e2:	83 e0       	ldi	r24, 0x03	; 3
    29e4:	90 e0       	ldi	r25, 0x00	; 0
    29e6:	2f 32       	cpi	r18, 0x2F	; 47
    29e8:	d1 f1       	breq	.+116    	; 0x2a5e <follow_path+0x1cc>
    29ea:	2c 35       	cpi	r18, 0x5C	; 92
    29ec:	c1 f1       	breq	.+112    	; 0x2a5e <follow_path+0x1cc>
    29ee:	21 32       	cpi	r18, 0x21	; 33
    29f0:	08 f4       	brcc	.+2      	; 0x29f4 <follow_path+0x162>
    29f2:	0f c2       	rjmp	.+1054   	; 0x2e12 <follow_path+0x580>
    29f4:	86 e0       	ldi	r24, 0x06	; 6
    29f6:	24 96       	adiw	r28, 0x04	; 4
    29f8:	cd bf       	out	0x3d, r28	; 61
    29fa:	de bf       	out	0x3e, r29	; 62
    29fc:	df 91       	pop	r29
    29fe:	cf 91       	pop	r28
    2a00:	1f 91       	pop	r17
    2a02:	0f 91       	pop	r16
    2a04:	ff 90       	pop	r15
    2a06:	ef 90       	pop	r14
    2a08:	df 90       	pop	r13
    2a0a:	cf 90       	pop	r12
    2a0c:	bf 90       	pop	r11
    2a0e:	af 90       	pop	r10
    2a10:	9f 90       	pop	r9
    2a12:	8f 90       	pop	r8
    2a14:	7f 90       	pop	r7
    2a16:	6f 90       	pop	r6
    2a18:	5f 90       	pop	r5
    2a1a:	4f 90       	pop	r4
    2a1c:	3f 90       	pop	r3
    2a1e:	2f 90       	pop	r2
    2a20:	08 95       	ret
    2a22:	e0 2e       	mov	r14, r16
    2a24:	f1 2c       	mov	r15, r1
    2a26:	f2 e2       	ldi	r31, 0x22	; 34
    2a28:	ef 16       	cp	r14, r31
    2a2a:	f1 04       	cpc	r15, r1
    2a2c:	19 f3       	breq	.-58     	; 0x29f4 <follow_path+0x162>
    2a2e:	e7 ef       	ldi	r30, 0xF7	; 247
    2a30:	f0 e2       	ldi	r31, 0x20	; 32
    2a32:	04 c0       	rjmp	.+8      	; 0x2a3c <follow_path+0x1aa>
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	e8 16       	cp	r14, r24
    2a38:	f9 06       	cpc	r15, r25
    2a3a:	e1 f2       	breq	.-72     	; 0x29f4 <follow_path+0x162>
    2a3c:	81 91       	ld	r24, Z+
    2a3e:	81 11       	cpse	r24, r1
    2a40:	f9 cf       	rjmp	.-14     	; 0x2a34 <follow_path+0x1a2>
    2a42:	8f eb       	ldi	r24, 0xBF	; 191
    2a44:	80 0f       	add	r24, r16
    2a46:	8a 31       	cpi	r24, 0x1A	; 26
    2a48:	08 f0       	brcs	.+2      	; 0x2a4c <follow_path+0x1ba>
    2a4a:	39 c2       	rjmp	.+1138   	; 0x2ebe <follow_path+0x62c>
    2a4c:	12 60       	ori	r17, 0x02	; 2
    2a4e:	f6 01       	movw	r30, r12
    2a50:	e2 0f       	add	r30, r18
    2a52:	f3 1f       	adc	r31, r19
    2a54:	00 83       	st	Z, r16
    2a56:	2f 5f       	subi	r18, 0xFF	; 255
    2a58:	3f 4f       	sbci	r19, 0xFF	; 255
    2a5a:	cb 01       	movw	r24, r22
    2a5c:	71 cf       	rjmp	.-286    	; 0x2940 <follow_path+0xae>
    2a5e:	fd 01       	movw	r30, r26
    2a60:	e8 0f       	add	r30, r24
    2a62:	f9 1f       	adc	r31, r25
    2a64:	e9 83       	std	Y+1, r30	; 0x01
    2a66:	fa 83       	std	Y+2, r31	; 0x02
    2a68:	80 e2       	ldi	r24, 0x20	; 32
    2a6a:	d6 01       	movw	r26, r12
    2a6c:	1b 96       	adiw	r26, 0x0b	; 11
    2a6e:	8c 93       	st	X, r24
    2a70:	60 e0       	ldi	r22, 0x00	; 0
    2a72:	70 e0       	ldi	r23, 0x00	; 0
    2a74:	c5 01       	movw	r24, r10
    2a76:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <dir_sdi>
    2a7a:	81 11       	cpse	r24, r1
    2a7c:	b8 c0       	rjmp	.+368    	; 0x2bee <follow_path+0x35c>
    2a7e:	f5 01       	movw	r30, r10
    2a80:	01 90       	ld	r0, Z+
    2a82:	f0 81       	ld	r31, Z
    2a84:	e0 2d       	mov	r30, r0
    2a86:	eb 83       	std	Y+3, r30	; 0x03
    2a88:	fc 83       	std	Y+4, r31	; 0x04
    2a8a:	d5 01       	movw	r26, r10
    2a8c:	1e 96       	adiw	r26, 0x0e	; 14
    2a8e:	4d 90       	ld	r4, X+
    2a90:	5d 90       	ld	r5, X+
    2a92:	6d 90       	ld	r6, X+
    2a94:	7c 90       	ld	r7, X
    2a96:	51 97       	sbiw	r26, 0x11	; 17
    2a98:	c6 a4       	ldd	r12, Z+46	; 0x2e
    2a9a:	d7 a4       	ldd	r13, Z+47	; 0x2f
    2a9c:	e0 a8       	ldd	r14, Z+48	; 0x30
    2a9e:	f1 a8       	ldd	r15, Z+49	; 0x31
    2aa0:	c4 14       	cp	r12, r4
    2aa2:	d5 04       	cpc	r13, r5
    2aa4:	e6 04       	cpc	r14, r6
    2aa6:	f7 04       	cpc	r15, r7
    2aa8:	41 f1       	breq	.+80     	; 0x2afa <follow_path+0x268>
    2aaa:	84 81       	ldd	r24, Z+4	; 0x04
    2aac:	81 11       	cpse	r24, r1
    2aae:	e9 c0       	rjmp	.+466    	; 0x2c82 <follow_path+0x3f0>
    2ab0:	2b 80       	ldd	r2, Y+3	; 0x03
    2ab2:	3c 80       	ldd	r3, Y+4	; 0x04
    2ab4:	f2 e3       	ldi	r31, 0x32	; 50
    2ab6:	2f 0e       	add	r2, r31
    2ab8:	31 1c       	adc	r3, r1
    2aba:	01 e0       	ldi	r16, 0x01	; 1
    2abc:	10 e0       	ldi	r17, 0x00	; 0
    2abe:	a3 01       	movw	r20, r6
    2ac0:	92 01       	movw	r18, r4
    2ac2:	b1 01       	movw	r22, r2
    2ac4:	ab 81       	ldd	r26, Y+3	; 0x03
    2ac6:	bc 81       	ldd	r27, Y+4	; 0x04
    2ac8:	11 96       	adiw	r26, 0x01	; 1
    2aca:	8c 91       	ld	r24, X
    2acc:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    2ad0:	88 23       	and	r24, r24
    2ad2:	59 f0       	breq	.+22     	; 0x2aea <follow_path+0x258>
    2ad4:	8f ef       	ldi	r24, 0xFF	; 255
    2ad6:	9f ef       	ldi	r25, 0xFF	; 255
    2ad8:	dc 01       	movw	r26, r24
    2ada:	eb 81       	ldd	r30, Y+3	; 0x03
    2adc:	fc 81       	ldd	r31, Y+4	; 0x04
    2ade:	86 a7       	std	Z+46, r24	; 0x2e
    2ae0:	97 a7       	std	Z+47, r25	; 0x2f
    2ae2:	a0 ab       	std	Z+48, r26	; 0x30
    2ae4:	b1 ab       	std	Z+49, r27	; 0x31
    2ae6:	81 e0       	ldi	r24, 0x01	; 1
    2ae8:	86 cf       	rjmp	.-244    	; 0x29f6 <follow_path+0x164>
    2aea:	ab 81       	ldd	r26, Y+3	; 0x03
    2aec:	bc 81       	ldd	r27, Y+4	; 0x04
    2aee:	9e 96       	adiw	r26, 0x2e	; 46
    2af0:	4d 92       	st	X+, r4
    2af2:	5d 92       	st	X+, r5
    2af4:	6d 92       	st	X+, r6
    2af6:	7c 92       	st	X, r7
    2af8:	d1 97       	sbiw	r26, 0x31	; 49
    2afa:	f5 01       	movw	r30, r10
    2afc:	62 89       	ldd	r22, Z+18	; 0x12
    2afe:	73 89       	ldd	r23, Z+19	; 0x13
    2b00:	db 01       	movw	r26, r22
    2b02:	2c 91       	ld	r18, X
    2b04:	22 23       	and	r18, r18
    2b06:	09 f4       	brne	.+2      	; 0x2b0a <follow_path+0x278>
    2b08:	52 c1       	rjmp	.+676    	; 0x2dae <follow_path+0x51c>
    2b0a:	1b 96       	adiw	r26, 0x0b	; 11
    2b0c:	4c 91       	ld	r20, X
    2b0e:	1b 97       	sbiw	r26, 0x0b	; 11
    2b10:	43 fd       	sbrc	r20, 3
    2b12:	63 c0       	rjmp	.+198    	; 0x2bda <follow_path+0x348>
    2b14:	04 88       	ldd	r0, Z+20	; 0x14
    2b16:	f5 89       	ldd	r31, Z+21	; 0x15
    2b18:	e0 2d       	mov	r30, r0
    2b1a:	30 e0       	ldi	r19, 0x00	; 0
    2b1c:	80 81       	ld	r24, Z
    2b1e:	90 e0       	ldi	r25, 0x00	; 0
    2b20:	28 17       	cp	r18, r24
    2b22:	39 07       	cpc	r19, r25
    2b24:	09 f0       	breq	.+2      	; 0x2b28 <follow_path+0x296>
    2b26:	59 c0       	rjmp	.+178    	; 0x2bda <follow_path+0x348>
    2b28:	11 96       	adiw	r26, 0x01	; 1
    2b2a:	9c 91       	ld	r25, X
    2b2c:	11 97       	sbiw	r26, 0x01	; 1
    2b2e:	81 81       	ldd	r24, Z+1	; 0x01
    2b30:	98 13       	cpse	r25, r24
    2b32:	53 c0       	rjmp	.+166    	; 0x2bda <follow_path+0x348>
    2b34:	12 96       	adiw	r26, 0x02	; 2
    2b36:	9c 91       	ld	r25, X
    2b38:	12 97       	sbiw	r26, 0x02	; 2
    2b3a:	82 81       	ldd	r24, Z+2	; 0x02
    2b3c:	98 13       	cpse	r25, r24
    2b3e:	4d c0       	rjmp	.+154    	; 0x2bda <follow_path+0x348>
    2b40:	13 96       	adiw	r26, 0x03	; 3
    2b42:	9c 91       	ld	r25, X
    2b44:	13 97       	sbiw	r26, 0x03	; 3
    2b46:	83 81       	ldd	r24, Z+3	; 0x03
    2b48:	98 13       	cpse	r25, r24
    2b4a:	47 c0       	rjmp	.+142    	; 0x2bda <follow_path+0x348>
    2b4c:	14 96       	adiw	r26, 0x04	; 4
    2b4e:	9c 91       	ld	r25, X
    2b50:	14 97       	sbiw	r26, 0x04	; 4
    2b52:	84 81       	ldd	r24, Z+4	; 0x04
    2b54:	98 13       	cpse	r25, r24
    2b56:	41 c0       	rjmp	.+130    	; 0x2bda <follow_path+0x348>
    2b58:	15 96       	adiw	r26, 0x05	; 5
    2b5a:	9c 91       	ld	r25, X
    2b5c:	15 97       	sbiw	r26, 0x05	; 5
    2b5e:	85 81       	ldd	r24, Z+5	; 0x05
    2b60:	98 13       	cpse	r25, r24
    2b62:	3b c0       	rjmp	.+118    	; 0x2bda <follow_path+0x348>
    2b64:	16 96       	adiw	r26, 0x06	; 6
    2b66:	9c 91       	ld	r25, X
    2b68:	16 97       	sbiw	r26, 0x06	; 6
    2b6a:	86 81       	ldd	r24, Z+6	; 0x06
    2b6c:	98 13       	cpse	r25, r24
    2b6e:	35 c0       	rjmp	.+106    	; 0x2bda <follow_path+0x348>
    2b70:	17 96       	adiw	r26, 0x07	; 7
    2b72:	9c 91       	ld	r25, X
    2b74:	17 97       	sbiw	r26, 0x07	; 7
    2b76:	87 81       	ldd	r24, Z+7	; 0x07
    2b78:	98 13       	cpse	r25, r24
    2b7a:	2f c0       	rjmp	.+94     	; 0x2bda <follow_path+0x348>
    2b7c:	18 96       	adiw	r26, 0x08	; 8
    2b7e:	9c 91       	ld	r25, X
    2b80:	18 97       	sbiw	r26, 0x08	; 8
    2b82:	80 85       	ldd	r24, Z+8	; 0x08
    2b84:	98 13       	cpse	r25, r24
    2b86:	29 c0       	rjmp	.+82     	; 0x2bda <follow_path+0x348>
    2b88:	19 96       	adiw	r26, 0x09	; 9
    2b8a:	9c 91       	ld	r25, X
    2b8c:	19 97       	sbiw	r26, 0x09	; 9
    2b8e:	81 85       	ldd	r24, Z+9	; 0x09
    2b90:	98 13       	cpse	r25, r24
    2b92:	23 c0       	rjmp	.+70     	; 0x2bda <follow_path+0x348>
    2b94:	1a 96       	adiw	r26, 0x0a	; 10
    2b96:	9c 91       	ld	r25, X
    2b98:	82 85       	ldd	r24, Z+10	; 0x0a
    2b9a:	98 13       	cpse	r25, r24
    2b9c:	1e c0       	rjmp	.+60     	; 0x2bda <follow_path+0x348>
    2b9e:	83 85       	ldd	r24, Z+11	; 0x0b
    2ba0:	82 fd       	sbrc	r24, 2
    2ba2:	39 c0       	rjmp	.+114    	; 0x2c16 <follow_path+0x384>
    2ba4:	44 ff       	sbrs	r20, 4
    2ba6:	b9 c1       	rjmp	.+882    	; 0x2f1a <follow_path+0x688>
    2ba8:	db 01       	movw	r26, r22
    2baa:	5a 96       	adiw	r26, 0x1a	; 26
    2bac:	8d 91       	ld	r24, X+
    2bae:	9c 91       	ld	r25, X
    2bb0:	5b 97       	sbiw	r26, 0x1b	; 27
    2bb2:	6c 01       	movw	r12, r24
    2bb4:	e1 2c       	mov	r14, r1
    2bb6:	f1 2c       	mov	r15, r1
    2bb8:	d5 01       	movw	r26, r10
    2bba:	2d 91       	ld	r18, X+
    2bbc:	3c 91       	ld	r19, X
    2bbe:	d9 01       	movw	r26, r18
    2bc0:	2c 91       	ld	r18, X
    2bc2:	23 30       	cpi	r18, 0x03	; 3
    2bc4:	09 f4       	brne	.+2      	; 0x2bc8 <follow_path+0x336>
    2bc6:	14 c1       	rjmp	.+552    	; 0x2df0 <follow_path+0x55e>
    2bc8:	d5 01       	movw	r26, r10
    2bca:	16 96       	adiw	r26, 0x06	; 6
    2bcc:	cd 92       	st	X+, r12
    2bce:	dd 92       	st	X+, r13
    2bd0:	ed 92       	st	X+, r14
    2bd2:	fc 92       	st	X, r15
    2bd4:	19 97       	sbiw	r26, 0x09	; 9
    2bd6:	6f 01       	movw	r12, r30
    2bd8:	92 ce       	rjmp	.-732    	; 0x28fe <follow_path+0x6c>
    2bda:	f5 01       	movw	r30, r10
    2bdc:	e4 80       	ldd	r14, Z+4	; 0x04
    2bde:	f5 80       	ldd	r15, Z+5	; 0x05
    2be0:	ff ef       	ldi	r31, 0xFF	; 255
    2be2:	ef 1a       	sub	r14, r31
    2be4:	ff 0a       	sbc	r15, r31
    2be6:	e1 14       	cp	r14, r1
    2be8:	f1 04       	cpc	r15, r1
    2bea:	b9 f4       	brne	.+46     	; 0x2c1a <follow_path+0x388>
    2bec:	84 e0       	ldi	r24, 0x04	; 4
    2bee:	d5 01       	movw	r26, r10
    2bf0:	54 96       	adiw	r26, 0x14	; 20
    2bf2:	ed 91       	ld	r30, X+
    2bf4:	fc 91       	ld	r31, X
    2bf6:	55 97       	sbiw	r26, 0x15	; 21
    2bf8:	93 85       	ldd	r25, Z+11	; 0x0b
    2bfa:	84 30       	cpi	r24, 0x04	; 4
    2bfc:	09 f0       	breq	.+2      	; 0x2c00 <follow_path+0x36e>
    2bfe:	fb ce       	rjmp	.-522    	; 0x29f6 <follow_path+0x164>
    2c00:	95 ff       	sbrs	r25, 5
    2c02:	96 c1       	rjmp	.+812    	; 0x2f30 <follow_path+0x69e>
    2c04:	f5 01       	movw	r30, r10
    2c06:	16 82       	std	Z+6, r1	; 0x06
    2c08:	17 82       	std	Z+7, r1	; 0x07
    2c0a:	10 86       	std	Z+8, r1	; 0x08
    2c0c:	11 86       	std	Z+9, r1	; 0x09
    2c0e:	12 8a       	std	Z+18, r1	; 0x12
    2c10:	13 8a       	std	Z+19, r1	; 0x13
    2c12:	92 ff       	sbrs	r25, 2
    2c14:	71 ce       	rjmp	.-798    	; 0x28f8 <follow_path+0x66>
    2c16:	80 e0       	ldi	r24, 0x00	; 0
    2c18:	ee ce       	rjmp	.-548    	; 0x29f6 <follow_path+0x164>
    2c1a:	d5 01       	movw	r26, r10
    2c1c:	1e 96       	adiw	r26, 0x0e	; 14
    2c1e:	4d 90       	ld	r4, X+
    2c20:	5d 90       	ld	r5, X+
    2c22:	6d 90       	ld	r6, X+
    2c24:	7c 90       	ld	r7, X
    2c26:	51 97       	sbiw	r26, 0x11	; 17
    2c28:	41 14       	cp	r4, r1
    2c2a:	51 04       	cpc	r5, r1
    2c2c:	61 04       	cpc	r6, r1
    2c2e:	71 04       	cpc	r7, r1
    2c30:	e9 f2       	breq	.-70     	; 0x2bec <follow_path+0x35a>
    2c32:	67 01       	movw	r12, r14
    2c34:	bf e0       	ldi	r27, 0x0F	; 15
    2c36:	cb 22       	and	r12, r27
    2c38:	dd 24       	eor	r13, r13
    2c3a:	c1 14       	cp	r12, r1
    2c3c:	d1 04       	cpc	r13, r1
    2c3e:	09 f4       	brne	.+2      	; 0x2c42 <follow_path+0x3b0>
    2c40:	6c c0       	rjmp	.+216    	; 0x2d1a <follow_path+0x488>
    2c42:	f5 01       	movw	r30, r10
    2c44:	01 90       	ld	r0, Z+
    2c46:	f0 81       	ld	r31, Z
    2c48:	e0 2d       	mov	r30, r0
    2c4a:	eb 83       	std	Y+3, r30	; 0x03
    2c4c:	fc 83       	std	Y+4, r31	; 0x04
    2c4e:	f5 01       	movw	r30, r10
    2c50:	e4 82       	std	Z+4, r14	; 0x04
    2c52:	f5 82       	std	Z+5, r15	; 0x05
    2c54:	cc 0c       	add	r12, r12
    2c56:	dd 1c       	adc	r13, r13
    2c58:	c2 94       	swap	r12
    2c5a:	d2 94       	swap	r13
    2c5c:	80 ef       	ldi	r24, 0xF0	; 240
    2c5e:	d8 22       	and	r13, r24
    2c60:	dc 24       	eor	r13, r12
    2c62:	c8 22       	and	r12, r24
    2c64:	dc 24       	eor	r13, r12
    2c66:	f2 e3       	ldi	r31, 0x32	; 50
    2c68:	cf 0e       	add	r12, r31
    2c6a:	d1 1c       	adc	r13, r1
    2c6c:	0b 81       	ldd	r16, Y+3	; 0x03
    2c6e:	1c 81       	ldd	r17, Y+4	; 0x04
    2c70:	c0 0e       	add	r12, r16
    2c72:	d1 1e       	adc	r13, r17
    2c74:	d5 01       	movw	r26, r10
    2c76:	52 96       	adiw	r26, 0x12	; 18
    2c78:	cd 92       	st	X+, r12
    2c7a:	dc 92       	st	X, r13
    2c7c:	53 97       	sbiw	r26, 0x13	; 19
    2c7e:	f8 01       	movw	r30, r16
    2c80:	0b cf       	rjmp	.-490    	; 0x2a98 <follow_path+0x206>
    2c82:	1f 01       	movw	r2, r30
    2c84:	f2 e3       	ldi	r31, 0x32	; 50
    2c86:	2f 0e       	add	r2, r31
    2c88:	31 1c       	adc	r3, r1
    2c8a:	01 e0       	ldi	r16, 0x01	; 1
    2c8c:	10 e0       	ldi	r17, 0x00	; 0
    2c8e:	a7 01       	movw	r20, r14
    2c90:	96 01       	movw	r18, r12
    2c92:	b1 01       	movw	r22, r2
    2c94:	ab 81       	ldd	r26, Y+3	; 0x03
    2c96:	bc 81       	ldd	r27, Y+4	; 0x04
    2c98:	11 96       	adiw	r26, 0x01	; 1
    2c9a:	8c 91       	ld	r24, X
    2c9c:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    2ca0:	81 11       	cpse	r24, r1
    2ca2:	21 cf       	rjmp	.-446    	; 0x2ae6 <follow_path+0x254>
    2ca4:	eb 81       	ldd	r30, Y+3	; 0x03
    2ca6:	fc 81       	ldd	r31, Y+4	; 0x04
    2ca8:	14 82       	std	Z+4, r1	; 0x04
    2caa:	82 8d       	ldd	r24, Z+26	; 0x1a
    2cac:	93 8d       	ldd	r25, Z+27	; 0x1b
    2cae:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2cb0:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2cb2:	42 a1       	ldd	r20, Z+34	; 0x22
    2cb4:	53 a1       	ldd	r21, Z+35	; 0x23
    2cb6:	64 a1       	ldd	r22, Z+36	; 0x24
    2cb8:	75 a1       	ldd	r23, Z+37	; 0x25
    2cba:	97 01       	movw	r18, r14
    2cbc:	86 01       	movw	r16, r12
    2cbe:	04 1b       	sub	r16, r20
    2cc0:	15 0b       	sbc	r17, r21
    2cc2:	26 0b       	sbc	r18, r22
    2cc4:	37 0b       	sbc	r19, r23
    2cc6:	08 17       	cp	r16, r24
    2cc8:	19 07       	cpc	r17, r25
    2cca:	2a 07       	cpc	r18, r26
    2ccc:	3b 07       	cpc	r19, r27
    2cce:	08 f0       	brcs	.+2      	; 0x2cd2 <follow_path+0x440>
    2cd0:	f4 ce       	rjmp	.-536    	; 0x2aba <follow_path+0x228>
    2cd2:	83 80       	ldd	r8, Z+3	; 0x03
    2cd4:	91 2c       	mov	r9, r1
    2cd6:	12 e0       	ldi	r17, 0x02	; 2
    2cd8:	81 16       	cp	r8, r17
    2cda:	91 04       	cpc	r9, r1
    2cdc:	38 f4       	brcc	.+14     	; 0x2cec <follow_path+0x45a>
    2cde:	ed ce       	rjmp	.-550    	; 0x2aba <follow_path+0x228>
    2ce0:	eb 81       	ldd	r30, Y+3	; 0x03
    2ce2:	fc 81       	ldd	r31, Y+4	; 0x04
    2ce4:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ce6:	93 8d       	ldd	r25, Z+27	; 0x1b
    2ce8:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2cea:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2cec:	c8 0e       	add	r12, r24
    2cee:	d9 1e       	adc	r13, r25
    2cf0:	ea 1e       	adc	r14, r26
    2cf2:	fb 1e       	adc	r15, r27
    2cf4:	01 e0       	ldi	r16, 0x01	; 1
    2cf6:	10 e0       	ldi	r17, 0x00	; 0
    2cf8:	a7 01       	movw	r20, r14
    2cfa:	96 01       	movw	r18, r12
    2cfc:	b1 01       	movw	r22, r2
    2cfe:	ab 81       	ldd	r26, Y+3	; 0x03
    2d00:	bc 81       	ldd	r27, Y+4	; 0x04
    2d02:	11 96       	adiw	r26, 0x01	; 1
    2d04:	8c 91       	ld	r24, X
    2d06:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    2d0a:	b1 e0       	ldi	r27, 0x01	; 1
    2d0c:	8b 1a       	sub	r8, r27
    2d0e:	91 08       	sbc	r9, r1
    2d10:	e1 e0       	ldi	r30, 0x01	; 1
    2d12:	8e 16       	cp	r8, r30
    2d14:	91 04       	cpc	r9, r1
    2d16:	21 f7       	brne	.-56     	; 0x2ce0 <follow_path+0x44e>
    2d18:	d0 ce       	rjmp	.-608    	; 0x2aba <follow_path+0x228>
    2d1a:	ff ef       	ldi	r31, 0xFF	; 255
    2d1c:	4f 1a       	sub	r4, r31
    2d1e:	5f 0a       	sbc	r5, r31
    2d20:	6f 0a       	sbc	r6, r31
    2d22:	7f 0a       	sbc	r7, r31
    2d24:	d5 01       	movw	r26, r10
    2d26:	1e 96       	adiw	r26, 0x0e	; 14
    2d28:	4d 92       	st	X+, r4
    2d2a:	5d 92       	st	X+, r5
    2d2c:	6d 92       	st	X+, r6
    2d2e:	7c 92       	st	X, r7
    2d30:	51 97       	sbiw	r26, 0x11	; 17
    2d32:	1a 96       	adiw	r26, 0x0a	; 10
    2d34:	4d 91       	ld	r20, X+
    2d36:	5d 91       	ld	r21, X+
    2d38:	6d 91       	ld	r22, X+
    2d3a:	7c 91       	ld	r23, X
    2d3c:	1d 97       	sbiw	r26, 0x0d	; 13
    2d3e:	41 15       	cp	r20, r1
    2d40:	51 05       	cpc	r21, r1
    2d42:	61 05       	cpc	r22, r1
    2d44:	71 05       	cpc	r23, r1
    2d46:	59 f4       	brne	.+22     	; 0x2d5e <follow_path+0x4cc>
    2d48:	ed 91       	ld	r30, X+
    2d4a:	fc 91       	ld	r31, X
    2d4c:	eb 83       	std	Y+3, r30	; 0x03
    2d4e:	fc 83       	std	Y+4, r31	; 0x04
    2d50:	80 85       	ldd	r24, Z+8	; 0x08
    2d52:	91 85       	ldd	r25, Z+9	; 0x09
    2d54:	e8 16       	cp	r14, r24
    2d56:	f9 06       	cpc	r15, r25
    2d58:	08 f0       	brcs	.+2      	; 0x2d5c <follow_path+0x4ca>
    2d5a:	48 cf       	rjmp	.-368    	; 0x2bec <follow_path+0x35a>
    2d5c:	78 cf       	rjmp	.-272    	; 0x2c4e <follow_path+0x3bc>
    2d5e:	d5 01       	movw	r26, r10
    2d60:	0d 90       	ld	r0, X+
    2d62:	bc 91       	ld	r27, X
    2d64:	a0 2d       	mov	r26, r0
    2d66:	ab 83       	std	Y+3, r26	; 0x03
    2d68:	bc 83       	std	Y+4, r27	; 0x04
    2d6a:	12 96       	adiw	r26, 0x02	; 2
    2d6c:	8c 91       	ld	r24, X
    2d6e:	90 e0       	ldi	r25, 0x00	; 0
    2d70:	01 97       	sbiw	r24, 0x01	; 1
    2d72:	97 01       	movw	r18, r14
    2d74:	32 95       	swap	r19
    2d76:	22 95       	swap	r18
    2d78:	2f 70       	andi	r18, 0x0F	; 15
    2d7a:	23 27       	eor	r18, r19
    2d7c:	3f 70       	andi	r19, 0x0F	; 15
    2d7e:	23 27       	eor	r18, r19
    2d80:	82 23       	and	r24, r18
    2d82:	93 23       	and	r25, r19
    2d84:	89 2b       	or	r24, r25
    2d86:	09 f0       	breq	.+2      	; 0x2d8a <follow_path+0x4f8>
    2d88:	62 cf       	rjmp	.-316    	; 0x2c4e <follow_path+0x3bc>
    2d8a:	42 30       	cpi	r20, 0x02	; 2
    2d8c:	51 05       	cpc	r21, r1
    2d8e:	61 05       	cpc	r22, r1
    2d90:	71 05       	cpc	r23, r1
    2d92:	58 f0       	brcs	.+22     	; 0x2daa <follow_path+0x518>
    2d94:	eb 81       	ldd	r30, Y+3	; 0x03
    2d96:	fc 81       	ldd	r31, Y+4	; 0x04
    2d98:	86 89       	ldd	r24, Z+22	; 0x16
    2d9a:	97 89       	ldd	r25, Z+23	; 0x17
    2d9c:	a0 8d       	ldd	r26, Z+24	; 0x18
    2d9e:	b1 8d       	ldd	r27, Z+25	; 0x19
    2da0:	48 17       	cp	r20, r24
    2da2:	59 07       	cpc	r21, r25
    2da4:	6a 07       	cpc	r22, r26
    2da6:	7b 07       	cpc	r23, r27
    2da8:	d8 f1       	brcs	.+118    	; 0x2e20 <follow_path+0x58e>
    2daa:	82 e0       	ldi	r24, 0x02	; 2
    2dac:	20 cf       	rjmp	.-448    	; 0x2bee <follow_path+0x35c>
    2dae:	04 88       	ldd	r0, Z+20	; 0x14
    2db0:	f5 89       	ldd	r31, Z+21	; 0x15
    2db2:	e0 2d       	mov	r30, r0
    2db4:	93 85       	ldd	r25, Z+11	; 0x0b
    2db6:	24 cf       	rjmp	.-440    	; 0x2c00 <follow_path+0x36e>
    2db8:	e9 81       	ldd	r30, Y+1	; 0x01
    2dba:	fa 81       	ldd	r31, Y+2	; 0x02
    2dbc:	31 96       	adiw	r30, 0x01	; 1
    2dbe:	e9 83       	std	Y+1, r30	; 0x01
    2dc0:	fa 83       	std	Y+2, r31	; 0x02
    2dc2:	d5 01       	movw	r26, r10
    2dc4:	16 96       	adiw	r26, 0x06	; 6
    2dc6:	1d 92       	st	X+, r1
    2dc8:	1d 92       	st	X+, r1
    2dca:	1d 92       	st	X+, r1
    2dcc:	1c 92       	st	X, r1
    2dce:	19 97       	sbiw	r26, 0x09	; 9
    2dd0:	df 01       	movw	r26, r30
    2dd2:	8c 91       	ld	r24, X
    2dd4:	80 32       	cpi	r24, 0x20	; 32
    2dd6:	08 f0       	brcs	.+2      	; 0x2dda <follow_path+0x548>
    2dd8:	8f cd       	rjmp	.-1250   	; 0x28f8 <follow_path+0x66>
    2dda:	60 e0       	ldi	r22, 0x00	; 0
    2ddc:	70 e0       	ldi	r23, 0x00	; 0
    2dde:	c5 01       	movw	r24, r10
    2de0:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <dir_sdi>
    2de4:	d5 01       	movw	r26, r10
    2de6:	52 96       	adiw	r26, 0x12	; 18
    2de8:	1d 92       	st	X+, r1
    2dea:	1c 92       	st	X, r1
    2dec:	53 97       	sbiw	r26, 0x13	; 19
    2dee:	03 ce       	rjmp	.-1018   	; 0x29f6 <follow_path+0x164>
    2df0:	db 01       	movw	r26, r22
    2df2:	54 96       	adiw	r26, 0x14	; 20
    2df4:	4d 91       	ld	r20, X+
    2df6:	5c 91       	ld	r21, X
    2df8:	55 97       	sbiw	r26, 0x15	; 21
    2dfa:	60 e0       	ldi	r22, 0x00	; 0
    2dfc:	70 e0       	ldi	r23, 0x00	; 0
    2dfe:	ba 01       	movw	r22, r20
    2e00:	55 27       	eor	r21, r21
    2e02:	44 27       	eor	r20, r20
    2e04:	c4 2a       	or	r12, r20
    2e06:	d5 2a       	or	r13, r21
    2e08:	e6 2a       	or	r14, r22
    2e0a:	f7 2a       	or	r15, r23
    2e0c:	dd ce       	rjmp	.-582    	; 0x2bc8 <follow_path+0x336>
    2e0e:	13 60       	ori	r17, 0x03	; 3
    2e10:	b0 cd       	rjmp	.-1184   	; 0x2972 <follow_path+0xe0>
    2e12:	8d 01       	movw	r16, r26
    2e14:	08 0f       	add	r16, r24
    2e16:	19 1f       	adc	r17, r25
    2e18:	09 83       	std	Y+1, r16	; 0x01
    2e1a:	1a 83       	std	Y+2, r17	; 0x02
    2e1c:	84 e2       	ldi	r24, 0x24	; 36
    2e1e:	25 ce       	rjmp	.-950    	; 0x2a6a <follow_path+0x1d8>
    2e20:	cf 01       	movw	r24, r30
    2e22:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <get_fat.part.4>
    2e26:	62 30       	cpi	r22, 0x02	; 2
    2e28:	71 05       	cpc	r23, r1
    2e2a:	81 05       	cpc	r24, r1
    2e2c:	91 05       	cpc	r25, r1
    2e2e:	08 f4       	brcc	.+2      	; 0x2e32 <follow_path+0x5a0>
    2e30:	bc cf       	rjmp	.-136    	; 0x2daa <follow_path+0x518>
    2e32:	6f 3f       	cpi	r22, 0xFF	; 255
    2e34:	ff ef       	ldi	r31, 0xFF	; 255
    2e36:	7f 07       	cpc	r23, r31
    2e38:	8f 07       	cpc	r24, r31
    2e3a:	9f 07       	cpc	r25, r31
    2e3c:	09 f4       	brne	.+2      	; 0x2e40 <follow_path+0x5ae>
    2e3e:	76 c0       	rjmp	.+236    	; 0x2f2c <follow_path+0x69a>
    2e40:	d5 01       	movw	r26, r10
    2e42:	0d 90       	ld	r0, X+
    2e44:	bc 91       	ld	r27, X
    2e46:	a0 2d       	mov	r26, r0
    2e48:	ab 83       	std	Y+3, r26	; 0x03
    2e4a:	bc 83       	std	Y+4, r27	; 0x04
    2e4c:	56 96       	adiw	r26, 0x16	; 22
    2e4e:	4d 90       	ld	r4, X+
    2e50:	5d 90       	ld	r5, X+
    2e52:	6d 90       	ld	r6, X+
    2e54:	7c 90       	ld	r7, X
    2e56:	59 97       	sbiw	r26, 0x19	; 25
    2e58:	64 15       	cp	r22, r4
    2e5a:	75 05       	cpc	r23, r5
    2e5c:	86 05       	cpc	r24, r6
    2e5e:	97 05       	cpc	r25, r7
    2e60:	08 f0       	brcs	.+2      	; 0x2e64 <follow_path+0x5d2>
    2e62:	c4 ce       	rjmp	.-632    	; 0x2bec <follow_path+0x35a>
    2e64:	f5 01       	movw	r30, r10
    2e66:	62 87       	std	Z+10, r22	; 0x0a
    2e68:	73 87       	std	Z+11, r23	; 0x0b
    2e6a:	84 87       	std	Z+12, r24	; 0x0c
    2e6c:	95 87       	std	Z+13, r25	; 0x0d
    2e6e:	9b 01       	movw	r18, r22
    2e70:	ac 01       	movw	r20, r24
    2e72:	22 50       	subi	r18, 0x02	; 2
    2e74:	31 09       	sbc	r19, r1
    2e76:	41 09       	sbc	r20, r1
    2e78:	51 09       	sbc	r21, r1
    2e7a:	f2 e0       	ldi	r31, 0x02	; 2
    2e7c:	4f 1a       	sub	r4, r31
    2e7e:	51 08       	sbc	r5, r1
    2e80:	61 08       	sbc	r6, r1
    2e82:	71 08       	sbc	r7, r1
    2e84:	24 15       	cp	r18, r4
    2e86:	35 05       	cpc	r19, r5
    2e88:	46 05       	cpc	r20, r6
    2e8a:	57 05       	cpc	r21, r7
    2e8c:	08 f0       	brcs	.+2      	; 0x2e90 <follow_path+0x5fe>
    2e8e:	4a c0       	rjmp	.+148    	; 0x2f24 <follow_path+0x692>
    2e90:	fd 01       	movw	r30, r26
    2e92:	a2 81       	ldd	r26, Z+2	; 0x02
    2e94:	b0 e0       	ldi	r27, 0x00	; 0
    2e96:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    2e9a:	2b 01       	movw	r4, r22
    2e9c:	3c 01       	movw	r6, r24
    2e9e:	82 a5       	ldd	r24, Z+42	; 0x2a
    2ea0:	93 a5       	ldd	r25, Z+43	; 0x2b
    2ea2:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2ea4:	b5 a5       	ldd	r27, Z+45	; 0x2d
    2ea6:	48 0e       	add	r4, r24
    2ea8:	59 1e       	adc	r5, r25
    2eaa:	6a 1e       	adc	r6, r26
    2eac:	7b 1e       	adc	r7, r27
    2eae:	d5 01       	movw	r26, r10
    2eb0:	1e 96       	adiw	r26, 0x0e	; 14
    2eb2:	4d 92       	st	X+, r4
    2eb4:	5d 92       	st	X+, r5
    2eb6:	6d 92       	st	X+, r6
    2eb8:	7c 92       	st	X, r7
    2eba:	51 97       	sbiw	r26, 0x11	; 17
    2ebc:	c8 ce       	rjmp	.-624    	; 0x2c4e <follow_path+0x3bc>
    2ebe:	8f e9       	ldi	r24, 0x9F	; 159
    2ec0:	80 0f       	add	r24, r16
    2ec2:	8a 31       	cpi	r24, 0x1A	; 26
    2ec4:	08 f0       	brcs	.+2      	; 0x2ec8 <follow_path+0x636>
    2ec6:	c3 cd       	rjmp	.-1146   	; 0x2a4e <follow_path+0x1bc>
    2ec8:	11 60       	ori	r17, 0x01	; 1
    2eca:	00 52       	subi	r16, 0x20	; 32
    2ecc:	c0 cd       	rjmp	.-1152   	; 0x2a4e <follow_path+0x1bc>
    2ece:	cd 01       	movw	r24, r26
    2ed0:	86 0f       	add	r24, r22
    2ed2:	97 1f       	adc	r25, r23
    2ed4:	89 83       	std	Y+1, r24	; 0x01
    2ed6:	9a 83       	std	Y+2, r25	; 0x02
    2ed8:	80 e0       	ldi	r24, 0x00	; 0
    2eda:	23 2b       	or	r18, r19
    2edc:	09 f4       	brne	.+2      	; 0x2ee0 <follow_path+0x64e>
    2ede:	8a cd       	rjmp	.-1260   	; 0x29f4 <follow_path+0x162>
    2ee0:	d6 01       	movw	r26, r12
    2ee2:	9c 91       	ld	r25, X
    2ee4:	95 3e       	cpi	r25, 0xE5	; 229
    2ee6:	11 f4       	brne	.+4      	; 0x2eec <follow_path+0x65a>
    2ee8:	e5 e0       	ldi	r30, 0x05	; 5
    2eea:	ec 93       	st	X, r30
    2eec:	48 30       	cpi	r20, 0x08	; 8
    2eee:	51 05       	cpc	r21, r1
    2ef0:	11 f4       	brne	.+4      	; 0x2ef6 <follow_path+0x664>
    2ef2:	11 0f       	add	r17, r17
    2ef4:	11 0f       	add	r17, r17
    2ef6:	91 2f       	mov	r25, r17
    2ef8:	93 70       	andi	r25, 0x03	; 3
    2efa:	91 30       	cpi	r25, 0x01	; 1
    2efc:	09 f4       	brne	.+2      	; 0x2f00 <follow_path+0x66e>
    2efe:	80 61       	ori	r24, 0x10	; 16
    2f00:	1c 70       	andi	r17, 0x0C	; 12
    2f02:	14 30       	cpi	r17, 0x04	; 4
    2f04:	09 f0       	breq	.+2      	; 0x2f08 <follow_path+0x676>
    2f06:	b1 cd       	rjmp	.-1182   	; 0x2a6a <follow_path+0x1d8>
    2f08:	88 60       	ori	r24, 0x08	; 8
    2f0a:	af cd       	rjmp	.-1186   	; 0x2a6a <follow_path+0x1d8>
    2f0c:	fd 01       	movw	r30, r26
    2f0e:	e6 0f       	add	r30, r22
    2f10:	f7 1f       	adc	r31, r23
    2f12:	e9 83       	std	Y+1, r30	; 0x01
    2f14:	fa 83       	std	Y+2, r31	; 0x02
    2f16:	84 e0       	ldi	r24, 0x04	; 4
    2f18:	e0 cf       	rjmp	.-64     	; 0x2eda <follow_path+0x648>
    2f1a:	85 e0       	ldi	r24, 0x05	; 5
    2f1c:	6c cd       	rjmp	.-1320   	; 0x29f6 <follow_path+0x164>
    2f1e:	82 e0       	ldi	r24, 0x02	; 2
    2f20:	90 e0       	ldi	r25, 0x00	; 0
    2f22:	61 cd       	rjmp	.-1342   	; 0x29e6 <follow_path+0x154>
    2f24:	41 2c       	mov	r4, r1
    2f26:	51 2c       	mov	r5, r1
    2f28:	32 01       	movw	r6, r4
    2f2a:	c1 cf       	rjmp	.-126    	; 0x2eae <follow_path+0x61c>
    2f2c:	81 e0       	ldi	r24, 0x01	; 1
    2f2e:	5f ce       	rjmp	.-834    	; 0x2bee <follow_path+0x35c>
    2f30:	92 ff       	sbrs	r25, 2
    2f32:	f3 cf       	rjmp	.-26     	; 0x2f1a <follow_path+0x688>
    2f34:	84 e0       	ldi	r24, 0x04	; 4
    2f36:	5f cd       	rjmp	.-1346   	; 0x29f6 <follow_path+0x164>
    2f38:	48 30       	cpi	r20, 0x08	; 8
    2f3a:	51 05       	cpc	r21, r1
    2f3c:	09 f0       	breq	.+2      	; 0x2f40 <follow_path+0x6ae>
    2f3e:	5a cd       	rjmp	.-1356   	; 0x29f4 <follow_path+0x162>
    2f40:	11 0f       	add	r17, r17
    2f42:	11 0f       	add	r17, r17
    2f44:	cb 01       	movw	r24, r22
    2f46:	28 e0       	ldi	r18, 0x08	; 8
    2f48:	30 e0       	ldi	r19, 0x00	; 0
    2f4a:	4b e0       	ldi	r20, 0x0B	; 11
    2f4c:	50 e0       	ldi	r21, 0x00	; 0
    2f4e:	f8 cc       	rjmp	.-1552   	; 0x2940 <follow_path+0xae>

00002f50 <find_volume>:
    2f50:	2f 92       	push	r2
    2f52:	3f 92       	push	r3
    2f54:	4f 92       	push	r4
    2f56:	5f 92       	push	r5
    2f58:	6f 92       	push	r6
    2f5a:	7f 92       	push	r7
    2f5c:	8f 92       	push	r8
    2f5e:	9f 92       	push	r9
    2f60:	af 92       	push	r10
    2f62:	bf 92       	push	r11
    2f64:	cf 92       	push	r12
    2f66:	df 92       	push	r13
    2f68:	ef 92       	push	r14
    2f6a:	ff 92       	push	r15
    2f6c:	0f 93       	push	r16
    2f6e:	1f 93       	push	r17
    2f70:	cf 93       	push	r28
    2f72:	df 93       	push	r29
    2f74:	cd b7       	in	r28, 0x3d	; 61
    2f76:	de b7       	in	r29, 0x3e	; 62
    2f78:	a1 97       	sbiw	r28, 0x21	; 33
    2f7a:	cd bf       	out	0x3d, r28	; 61
    2f7c:	de bf       	out	0x3e, r29	; 62
    2f7e:	dc 01       	movw	r26, r24
    2f80:	1d 92       	st	X+, r1
    2f82:	1c 92       	st	X, r1
    2f84:	db 01       	movw	r26, r22
    2f86:	ed 91       	ld	r30, X+
    2f88:	fc 91       	ld	r31, X
    2f8a:	30 97       	sbiw	r30, 0x00	; 0
    2f8c:	a1 f1       	breq	.+104    	; 0x2ff6 <find_volume+0xa6>
    2f8e:	00 81       	ld	r16, Z
    2f90:	01 32       	cpi	r16, 0x21	; 33
    2f92:	60 f0       	brcs	.+24     	; 0x2fac <find_volume+0x5c>
    2f94:	0a 33       	cpi	r16, 0x3A	; 58
    2f96:	79 f1       	breq	.+94     	; 0x2ff6 <find_volume+0xa6>
    2f98:	df 01       	movw	r26, r30
    2f9a:	11 96       	adiw	r26, 0x01	; 1
    2f9c:	fd 01       	movw	r30, r26
    2f9e:	02 c0       	rjmp	.+4      	; 0x2fa4 <find_volume+0x54>
    2fa0:	5a 33       	cpi	r21, 0x3A	; 58
    2fa2:	29 f1       	breq	.+74     	; 0x2fee <find_volume+0x9e>
    2fa4:	9f 01       	movw	r18, r30
    2fa6:	51 91       	ld	r21, Z+
    2fa8:	51 32       	cpi	r21, 0x21	; 33
    2faa:	d0 f7       	brcc	.-12     	; 0x2fa0 <find_volume+0x50>
    2fac:	00 91 9e 25 	lds	r16, 0x259E
    2fb0:	10 e0       	ldi	r17, 0x00	; 0
    2fb2:	f8 01       	movw	r30, r16
    2fb4:	ee 0f       	add	r30, r30
    2fb6:	ff 1f       	adc	r31, r31
    2fb8:	ef 55       	subi	r30, 0x5F	; 95
    2fba:	fa 4d       	sbci	r31, 0xDA	; 218
    2fbc:	a0 80       	ld	r10, Z
    2fbe:	b1 80       	ldd	r11, Z+1	; 0x01
    2fc0:	a1 14       	cp	r10, r1
    2fc2:	b1 04       	cpc	r11, r1
    2fc4:	f1 f1       	breq	.+124    	; 0x3042 <__stack+0x43>
    2fc6:	dc 01       	movw	r26, r24
    2fc8:	ad 92       	st	X+, r10
    2fca:	bc 92       	st	X, r11
    2fcc:	f5 01       	movw	r30, r10
    2fce:	80 81       	ld	r24, Z
    2fd0:	88 23       	and	r24, r24
    2fd2:	41 f1       	breq	.+80     	; 0x3024 <__stack+0x25>
    2fd4:	81 81       	ldd	r24, Z+1	; 0x01
    2fd6:	49 a3       	std	Y+33, r20	; 0x21
    2fd8:	0e 94 a4 2a 	call	0x5548	; 0x5548 <disk_status>
    2fdc:	49 a1       	ldd	r20, Y+33	; 0x21
    2fde:	80 fd       	sbrc	r24, 0
    2fe0:	21 c0       	rjmp	.+66     	; 0x3024 <__stack+0x25>
    2fe2:	44 23       	and	r20, r20
    2fe4:	61 f1       	breq	.+88     	; 0x303e <__stack+0x3f>
    2fe6:	82 ff       	sbrs	r24, 2
    2fe8:	2a c0       	rjmp	.+84     	; 0x303e <__stack+0x3f>
    2fea:	8a e0       	ldi	r24, 0x0A	; 10
    2fec:	05 c0       	rjmp	.+10     	; 0x2ff8 <find_volume+0xa8>
    2fee:	2a 17       	cp	r18, r26
    2ff0:	3b 07       	cpc	r19, r27
    2ff2:	09 f4       	brne	.+2      	; 0x2ff6 <find_volume+0xa6>
    2ff4:	63 c0       	rjmp	.+198    	; 0x30bc <__stack+0xbd>
    2ff6:	8b e0       	ldi	r24, 0x0B	; 11
    2ff8:	a1 96       	adiw	r28, 0x21	; 33
    2ffa:	cd bf       	out	0x3d, r28	; 61
    2ffc:	de bf       	out	0x3e, r29	; 62
    2ffe:	df 91       	pop	r29
    3000:	cf 91       	pop	r28
    3002:	1f 91       	pop	r17
    3004:	0f 91       	pop	r16
    3006:	ff 90       	pop	r15
    3008:	ef 90       	pop	r14
    300a:	df 90       	pop	r13
    300c:	cf 90       	pop	r12
    300e:	bf 90       	pop	r11
    3010:	af 90       	pop	r10
    3012:	9f 90       	pop	r9
    3014:	8f 90       	pop	r8
    3016:	7f 90       	pop	r7
    3018:	6f 90       	pop	r6
    301a:	5f 90       	pop	r5
    301c:	4f 90       	pop	r4
    301e:	3f 90       	pop	r3
    3020:	2f 90       	pop	r2
    3022:	08 95       	ret
    3024:	d5 01       	movw	r26, r10
    3026:	1c 92       	st	X, r1
    3028:	11 96       	adiw	r26, 0x01	; 1
    302a:	0c 93       	st	X, r16
    302c:	80 2f       	mov	r24, r16
    302e:	49 a3       	std	Y+33, r20	; 0x21
    3030:	0e 94 e3 29 	call	0x53c6	; 0x53c6 <disk_initialize>
    3034:	49 a1       	ldd	r20, Y+33	; 0x21
    3036:	80 ff       	sbrs	r24, 0
    3038:	06 c0       	rjmp	.+12     	; 0x3046 <__stack+0x47>
    303a:	83 e0       	ldi	r24, 0x03	; 3
    303c:	dd cf       	rjmp	.-70     	; 0x2ff8 <find_volume+0xa8>
    303e:	80 e0       	ldi	r24, 0x00	; 0
    3040:	db cf       	rjmp	.-74     	; 0x2ff8 <find_volume+0xa8>
    3042:	8c e0       	ldi	r24, 0x0C	; 12
    3044:	d9 cf       	rjmp	.-78     	; 0x2ff8 <find_volume+0xa8>
    3046:	44 23       	and	r20, r20
    3048:	11 f0       	breq	.+4      	; 0x304e <__stack+0x4f>
    304a:	82 fd       	sbrc	r24, 2
    304c:	ce cf       	rjmp	.-100    	; 0x2fea <find_volume+0x9a>
    304e:	f5 01       	movw	r30, r10
    3050:	14 82       	std	Z+4, r1	; 0x04
    3052:	44 24       	eor	r4, r4
    3054:	4a 94       	dec	r4
    3056:	54 2c       	mov	r5, r4
    3058:	32 01       	movw	r6, r4
    305a:	46 a6       	std	Z+46, r4	; 0x2e
    305c:	57 a6       	std	Z+47, r5	; 0x2f
    305e:	60 aa       	std	Z+48, r6	; 0x30
    3060:	71 aa       	std	Z+49, r7	; 0x31
    3062:	15 01       	movw	r2, r10
    3064:	b2 e3       	ldi	r27, 0x32	; 50
    3066:	2b 0e       	add	r2, r27
    3068:	31 1c       	adc	r3, r1
    306a:	01 e0       	ldi	r16, 0x01	; 1
    306c:	10 e0       	ldi	r17, 0x00	; 0
    306e:	20 e0       	ldi	r18, 0x00	; 0
    3070:	30 e0       	ldi	r19, 0x00	; 0
    3072:	a9 01       	movw	r20, r18
    3074:	b1 01       	movw	r22, r2
    3076:	81 81       	ldd	r24, Z+1	; 0x01
    3078:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    307c:	81 11       	cpse	r24, r1
    307e:	2b c0       	rjmp	.+86     	; 0x30d6 <__stack+0xd7>
    3080:	d5 01       	movw	r26, r10
    3082:	9e 96       	adiw	r26, 0x2e	; 46
    3084:	1d 92       	st	X+, r1
    3086:	1d 92       	st	X+, r1
    3088:	1d 92       	st	X+, r1
    308a:	1c 92       	st	X, r1
    308c:	d1 97       	sbiw	r26, 0x31	; 49
    308e:	25 01       	movw	r4, r10
    3090:	b0 ed       	ldi	r27, 0xD0	; 208
    3092:	4b 1a       	sub	r4, r27
    3094:	bd ef       	ldi	r27, 0xFD	; 253
    3096:	5b 0a       	sbc	r5, r27
    3098:	f2 01       	movw	r30, r4
    309a:	80 81       	ld	r24, Z
    309c:	91 81       	ldd	r25, Z+1	; 0x01
    309e:	85 35       	cpi	r24, 0x55	; 85
    30a0:	9a 4a       	sbci	r25, 0xAA	; 170
    30a2:	09 f4       	brne	.+2      	; 0x30a6 <__stack+0xa7>
    30a4:	6e c1       	rjmp	.+732    	; 0x3382 <__stack+0x383>
    30a6:	82 e0       	ldi	r24, 0x02	; 2
    30a8:	c1 2c       	mov	r12, r1
    30aa:	d1 2c       	mov	r13, r1
    30ac:	76 01       	movw	r14, r12
    30ae:	83 30       	cpi	r24, 0x03	; 3
    30b0:	09 f4       	brne	.+2      	; 0x30b4 <__stack+0xb5>
    30b2:	11 c2       	rjmp	.+1058   	; 0x34d6 <__stack+0x4d7>
    30b4:	88 23       	and	r24, r24
    30b6:	d9 f0       	breq	.+54     	; 0x30ee <__stack+0xef>
    30b8:	8d e0       	ldi	r24, 0x0D	; 13
    30ba:	9e cf       	rjmp	.-196    	; 0x2ff8 <find_volume+0xa8>
    30bc:	20 ed       	ldi	r18, 0xD0	; 208
    30be:	20 0f       	add	r18, r16
    30c0:	22 30       	cpi	r18, 0x02	; 2
    30c2:	08 f0       	brcs	.+2      	; 0x30c6 <__stack+0xc7>
    30c4:	98 cf       	rjmp	.-208    	; 0x2ff6 <find_volume+0xa6>
    30c6:	10 e0       	ldi	r17, 0x00	; 0
    30c8:	00 53       	subi	r16, 0x30	; 48
    30ca:	11 09       	sbc	r17, r1
    30cc:	11 96       	adiw	r26, 0x01	; 1
    30ce:	fb 01       	movw	r30, r22
    30d0:	a0 83       	st	Z, r26
    30d2:	b1 83       	std	Z+1, r27	; 0x01
    30d4:	6e cf       	rjmp	.-292    	; 0x2fb2 <find_volume+0x62>
    30d6:	d5 01       	movw	r26, r10
    30d8:	9e 96       	adiw	r26, 0x2e	; 46
    30da:	4d 92       	st	X+, r4
    30dc:	5d 92       	st	X+, r5
    30de:	6d 92       	st	X+, r6
    30e0:	7c 92       	st	X, r7
    30e2:	d1 97       	sbiw	r26, 0x31	; 49
    30e4:	83 e0       	ldi	r24, 0x03	; 3
    30e6:	e0 cf       	rjmp	.-64     	; 0x30a8 <__stack+0xa9>
    30e8:	c1 2c       	mov	r12, r1
    30ea:	d1 2c       	mov	r13, r1
    30ec:	76 01       	movw	r14, r12
    30ee:	d5 01       	movw	r26, r10
    30f0:	dd 96       	adiw	r26, 0x3d	; 61
    30f2:	8d 91       	ld	r24, X+
    30f4:	9c 91       	ld	r25, X
    30f6:	de 97       	sbiw	r26, 0x3e	; 62
    30f8:	81 15       	cp	r24, r1
    30fa:	92 40       	sbci	r25, 0x02	; 2
    30fc:	e9 f6       	brne	.-70     	; 0x30b8 <__stack+0xb9>
    30fe:	f5 01       	movw	r30, r10
    3100:	e8 5b       	subi	r30, 0xB8	; 184
    3102:	ff 4f       	sbci	r31, 0xFF	; 255
    3104:	80 81       	ld	r24, Z
    3106:	91 81       	ldd	r25, Z+1	; 0x01
    3108:	3c 01       	movw	r6, r24
    310a:	81 2c       	mov	r8, r1
    310c:	91 2c       	mov	r9, r1
    310e:	6d 8a       	std	Y+21, r6	; 0x15
    3110:	7e 8a       	std	Y+22, r7	; 0x16
    3112:	8f 8a       	std	Y+23, r8	; 0x17
    3114:	98 8e       	std	Y+24, r9	; 0x18
    3116:	61 14       	cp	r6, r1
    3118:	71 04       	cpc	r7, r1
    311a:	81 04       	cpc	r8, r1
    311c:	91 04       	cpc	r9, r1
    311e:	49 f4       	brne	.+18     	; 0x3132 <__stack+0x133>
    3120:	3e 96       	adiw	r30, 0x0e	; 14
    3122:	60 80       	ld	r6, Z
    3124:	71 80       	ldd	r7, Z+1	; 0x01
    3126:	82 80       	ldd	r8, Z+2	; 0x02
    3128:	93 80       	ldd	r9, Z+3	; 0x03
    312a:	6d 8a       	std	Y+21, r6	; 0x15
    312c:	7e 8a       	std	Y+22, r7	; 0x16
    312e:	8f 8a       	std	Y+23, r8	; 0x17
    3130:	98 8e       	std	Y+24, r9	; 0x18
    3132:	d5 01       	movw	r26, r10
    3134:	5a 96       	adiw	r26, 0x1a	; 26
    3136:	6d 92       	st	X+, r6
    3138:	7d 92       	st	X+, r7
    313a:	8d 92       	st	X+, r8
    313c:	9c 92       	st	X, r9
    313e:	5d 97       	sbiw	r26, 0x1d	; 29
    3140:	f5 01       	movw	r30, r10
    3142:	ee 5b       	subi	r30, 0xBE	; 190
    3144:	ff 4f       	sbci	r31, 0xFF	; 255
    3146:	a0 81       	ld	r26, Z
    3148:	f5 01       	movw	r30, r10
    314a:	a3 83       	std	Z+3, r26	; 0x03
    314c:	8f ef       	ldi	r24, 0xFF	; 255
    314e:	8a 0f       	add	r24, r26
    3150:	82 30       	cpi	r24, 0x02	; 2
    3152:	08 f0       	brcs	.+2      	; 0x3156 <__stack+0x157>
    3154:	b1 cf       	rjmp	.-158    	; 0x30b8 <__stack+0xb9>
    3156:	b0 e0       	ldi	r27, 0x00	; 0
    3158:	a4 01       	movw	r20, r8
    315a:	93 01       	movw	r18, r6
    315c:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    3160:	6d 8f       	std	Y+29, r22	; 0x1d
    3162:	7e 8f       	std	Y+30, r23	; 0x1e
    3164:	8f 8f       	std	Y+31, r24	; 0x1f
    3166:	98 a3       	std	Y+32, r25	; 0x20
    3168:	27 ad       	ldd	r18, Z+63	; 0x3f
    316a:	22 83       	std	Z+2, r18	; 0x02
    316c:	22 23       	and	r18, r18
    316e:	09 f4       	brne	.+2      	; 0x3172 <__stack+0x173>
    3170:	a3 cf       	rjmp	.-186    	; 0x30b8 <__stack+0xb9>
    3172:	42 2f       	mov	r20, r18
    3174:	50 e0       	ldi	r21, 0x00	; 0
    3176:	ca 01       	movw	r24, r20
    3178:	01 97       	sbiw	r24, 0x01	; 1
    317a:	84 23       	and	r24, r20
    317c:	95 23       	and	r25, r21
    317e:	89 2b       	or	r24, r25
    3180:	09 f0       	breq	.+2      	; 0x3184 <__stack+0x185>
    3182:	9a cf       	rjmp	.-204    	; 0x30b8 <__stack+0xb9>
    3184:	ed 5b       	subi	r30, 0xBD	; 189
    3186:	ff 4f       	sbci	r31, 0xFF	; 255
    3188:	00 81       	ld	r16, Z
    318a:	11 81       	ldd	r17, Z+1	; 0x01
    318c:	d5 01       	movw	r26, r10
    318e:	18 96       	adiw	r26, 0x08	; 8
    3190:	0d 93       	st	X+, r16
    3192:	1c 93       	st	X, r17
    3194:	19 97       	sbiw	r26, 0x09	; 9
    3196:	c8 01       	movw	r24, r16
    3198:	8f 70       	andi	r24, 0x0F	; 15
    319a:	99 27       	eor	r25, r25
    319c:	89 2b       	or	r24, r25
    319e:	09 f0       	breq	.+2      	; 0x31a2 <__stack+0x1a3>
    31a0:	8b cf       	rjmp	.-234    	; 0x30b8 <__stack+0xb9>
    31a2:	32 96       	adiw	r30, 0x02	; 2
    31a4:	60 81       	ld	r22, Z
    31a6:	71 81       	ldd	r23, Z+1	; 0x01
    31a8:	cb 01       	movw	r24, r22
    31aa:	a0 e0       	ldi	r26, 0x00	; 0
    31ac:	b0 e0       	ldi	r27, 0x00	; 0
    31ae:	00 97       	sbiw	r24, 0x00	; 0
    31b0:	a1 05       	cpc	r26, r1
    31b2:	b1 05       	cpc	r27, r1
    31b4:	29 f4       	brne	.+10     	; 0x31c0 <__stack+0x1c1>
    31b6:	3d 96       	adiw	r30, 0x0d	; 13
    31b8:	80 81       	ld	r24, Z
    31ba:	91 81       	ldd	r25, Z+1	; 0x01
    31bc:	a2 81       	ldd	r26, Z+2	; 0x02
    31be:	b3 81       	ldd	r27, Z+3	; 0x03
    31c0:	f5 01       	movw	r30, r10
    31c2:	e0 5c       	subi	r30, 0xC0	; 192
    31c4:	ff 4f       	sbci	r31, 0xFF	; 255
    31c6:	40 81       	ld	r20, Z
    31c8:	51 81       	ldd	r21, Z+1	; 0x01
    31ca:	41 15       	cp	r20, r1
    31cc:	51 05       	cpc	r21, r1
    31ce:	09 f4       	brne	.+2      	; 0x31d2 <__stack+0x1d3>
    31d0:	73 cf       	rjmp	.-282    	; 0x30b8 <__stack+0xb9>
    31d2:	3a 01       	movw	r6, r20
    31d4:	81 2c       	mov	r8, r1
    31d6:	91 2c       	mov	r9, r1
    31d8:	69 8e       	std	Y+25, r6	; 0x19
    31da:	7a 8e       	std	Y+26, r7	; 0x1a
    31dc:	8b 8e       	std	Y+27, r8	; 0x1b
    31de:	9c 8e       	std	Y+28, r9	; 0x1c
    31e0:	a8 01       	movw	r20, r16
    31e2:	52 95       	swap	r21
    31e4:	42 95       	swap	r20
    31e6:	4f 70       	andi	r20, 0x0F	; 15
    31e8:	45 27       	eor	r20, r21
    31ea:	5f 70       	andi	r21, 0x0F	; 15
    31ec:	45 27       	eor	r20, r21
    31ee:	64 0e       	add	r6, r20
    31f0:	75 1e       	adc	r7, r21
    31f2:	81 1c       	adc	r8, r1
    31f4:	91 1c       	adc	r9, r1
    31f6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    31f8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    31fa:	6f 8d       	ldd	r22, Y+31	; 0x1f
    31fc:	78 a1       	ldd	r23, Y+32	; 0x20
    31fe:	64 0e       	add	r6, r20
    3200:	75 1e       	adc	r7, r21
    3202:	86 1e       	adc	r8, r22
    3204:	97 1e       	adc	r9, r23
    3206:	69 8a       	std	Y+17, r6	; 0x11
    3208:	7a 8a       	std	Y+18, r7	; 0x12
    320a:	8b 8a       	std	Y+19, r8	; 0x13
    320c:	9c 8a       	std	Y+20, r9	; 0x14
    320e:	86 15       	cp	r24, r6
    3210:	97 05       	cpc	r25, r7
    3212:	a8 05       	cpc	r26, r8
    3214:	b9 05       	cpc	r27, r9
    3216:	08 f4       	brcc	.+2      	; 0x321a <__stack+0x21b>
    3218:	4f cf       	rjmp	.-354    	; 0x30b8 <__stack+0xb9>
    321a:	bc 01       	movw	r22, r24
    321c:	cd 01       	movw	r24, r26
    321e:	66 19       	sub	r22, r6
    3220:	77 09       	sbc	r23, r7
    3222:	88 09       	sbc	r24, r8
    3224:	99 09       	sbc	r25, r9
    3226:	30 e0       	ldi	r19, 0x00	; 0
    3228:	40 e0       	ldi	r20, 0x00	; 0
    322a:	50 e0       	ldi	r21, 0x00	; 0
    322c:	0e 94 7b 38 	call	0x70f6	; 0x70f6 <__udivmodsi4>
    3230:	21 15       	cp	r18, r1
    3232:	31 05       	cpc	r19, r1
    3234:	41 05       	cpc	r20, r1
    3236:	51 05       	cpc	r21, r1
    3238:	09 f4       	brne	.+2      	; 0x323c <__stack+0x23d>
    323a:	3e cf       	rjmp	.-388    	; 0x30b8 <__stack+0xb9>
    323c:	26 3f       	cpi	r18, 0xF6	; 246
    323e:	6f e0       	ldi	r22, 0x0F	; 15
    3240:	36 07       	cpc	r19, r22
    3242:	41 05       	cpc	r20, r1
    3244:	51 05       	cpc	r21, r1
    3246:	08 f4       	brcc	.+2      	; 0x324a <__stack+0x24b>
    3248:	ff c2       	rjmp	.+1534   	; 0x3848 <__stack+0x849>
    324a:	26 3f       	cpi	r18, 0xF6	; 246
    324c:	7f ef       	ldi	r23, 0xFF	; 255
    324e:	37 07       	cpc	r19, r23
    3250:	41 05       	cpc	r20, r1
    3252:	51 05       	cpc	r21, r1
    3254:	08 f0       	brcs	.+2      	; 0x3258 <__stack+0x259>
    3256:	b4 c2       	rjmp	.+1384   	; 0x37c0 <__stack+0x7c1>
    3258:	62 e0       	ldi	r22, 0x02	; 2
    325a:	36 2e       	mov	r3, r22
    325c:	29 01       	movw	r4, r18
    325e:	3a 01       	movw	r6, r20
    3260:	f2 e0       	ldi	r31, 0x02	; 2
    3262:	4f 0e       	add	r4, r31
    3264:	51 1c       	adc	r5, r1
    3266:	61 1c       	adc	r6, r1
    3268:	71 1c       	adc	r7, r1
    326a:	d5 01       	movw	r26, r10
    326c:	56 96       	adiw	r26, 0x16	; 22
    326e:	4d 92       	st	X+, r4
    3270:	5d 92       	st	X+, r5
    3272:	6d 92       	st	X+, r6
    3274:	7c 92       	st	X, r7
    3276:	59 97       	sbiw	r26, 0x19	; 25
    3278:	f5 01       	movw	r30, r10
    327a:	c6 8e       	std	Z+30, r12	; 0x1e
    327c:	d7 8e       	std	Z+31, r13	; 0x1f
    327e:	e0 a2       	std	Z+32, r14	; 0x20
    3280:	f1 a2       	std	Z+33, r15	; 0x21
    3282:	89 8d       	ldd	r24, Y+25	; 0x19
    3284:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3286:	ab 8d       	ldd	r26, Y+27	; 0x1b
    3288:	bc 8d       	ldd	r27, Y+28	; 0x1c
    328a:	8c 0d       	add	r24, r12
    328c:	9d 1d       	adc	r25, r13
    328e:	ae 1d       	adc	r26, r14
    3290:	bf 1d       	adc	r27, r15
    3292:	82 a3       	std	Z+34, r24	; 0x22
    3294:	93 a3       	std	Z+35, r25	; 0x23
    3296:	a4 a3       	std	Z+36, r26	; 0x24
    3298:	b5 a3       	std	Z+37, r27	; 0x25
    329a:	49 89       	ldd	r20, Y+17	; 0x11
    329c:	5a 89       	ldd	r21, Y+18	; 0x12
    329e:	6b 89       	ldd	r22, Y+19	; 0x13
    32a0:	7c 89       	ldd	r23, Y+20	; 0x14
    32a2:	4c 0d       	add	r20, r12
    32a4:	5d 1d       	adc	r21, r13
    32a6:	6e 1d       	adc	r22, r14
    32a8:	7f 1d       	adc	r23, r15
    32aa:	42 a7       	std	Z+42, r20	; 0x2a
    32ac:	53 a7       	std	Z+43, r21	; 0x2b
    32ae:	64 a7       	std	Z+44, r22	; 0x2c
    32b0:	75 a7       	std	Z+45, r23	; 0x2d
    32b2:	01 2b       	or	r16, r17
    32b4:	09 f4       	brne	.+2      	; 0x32b8 <__stack+0x2b9>
    32b6:	00 cf       	rjmp	.-512    	; 0x30b8 <__stack+0xb9>
    32b8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    32ba:	3e 8d       	ldd	r19, Y+30	; 0x1e
    32bc:	4f 8d       	ldd	r20, Y+31	; 0x1f
    32be:	58 a1       	ldd	r21, Y+32	; 0x20
    32c0:	82 0f       	add	r24, r18
    32c2:	93 1f       	adc	r25, r19
    32c4:	a4 1f       	adc	r26, r20
    32c6:	b5 1f       	adc	r27, r21
    32c8:	f5 01       	movw	r30, r10
    32ca:	86 a3       	std	Z+38, r24	; 0x26
    32cc:	97 a3       	std	Z+39, r25	; 0x27
    32ce:	a0 a7       	std	Z+40, r26	; 0x28
    32d0:	b1 a7       	std	Z+41, r27	; 0x29
    32d2:	f2 e0       	ldi	r31, 0x02	; 2
    32d4:	3f 16       	cp	r3, r31
    32d6:	09 f4       	brne	.+2      	; 0x32da <__stack+0x2db>
    32d8:	6c c2       	rjmp	.+1240   	; 0x37b2 <__stack+0x7b3>
    32da:	a3 e0       	ldi	r26, 0x03	; 3
    32dc:	b0 e0       	ldi	r27, 0x00	; 0
    32de:	a3 01       	movw	r20, r6
    32e0:	92 01       	movw	r18, r4
    32e2:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    32e6:	96 95       	lsr	r25
    32e8:	87 95       	ror	r24
    32ea:	77 95       	ror	r23
    32ec:	67 95       	ror	r22
    32ee:	21 e0       	ldi	r18, 0x01	; 1
    32f0:	42 22       	and	r4, r18
    32f2:	55 24       	eor	r5, r5
    32f4:	66 24       	eor	r6, r6
    32f6:	77 24       	eor	r7, r7
    32f8:	64 0d       	add	r22, r4
    32fa:	75 1d       	adc	r23, r5
    32fc:	86 1d       	adc	r24, r6
    32fe:	97 1d       	adc	r25, r7
    3300:	33 24       	eor	r3, r3
    3302:	33 94       	inc	r3
    3304:	dc 01       	movw	r26, r24
    3306:	cb 01       	movw	r24, r22
    3308:	81 50       	subi	r24, 0x01	; 1
    330a:	9e 4f       	sbci	r25, 0xFE	; 254
    330c:	af 4f       	sbci	r26, 0xFF	; 255
    330e:	bf 4f       	sbci	r27, 0xFF	; 255
    3310:	19 e0       	ldi	r17, 0x09	; 9
    3312:	b6 95       	lsr	r27
    3314:	a7 95       	ror	r26
    3316:	97 95       	ror	r25
    3318:	87 95       	ror	r24
    331a:	1a 95       	dec	r17
    331c:	d1 f7       	brne	.-12     	; 0x3312 <__stack+0x313>
    331e:	6d 88       	ldd	r6, Y+21	; 0x15
    3320:	7e 88       	ldd	r7, Y+22	; 0x16
    3322:	8f 88       	ldd	r8, Y+23	; 0x17
    3324:	98 8c       	ldd	r9, Y+24	; 0x18
    3326:	68 16       	cp	r6, r24
    3328:	79 06       	cpc	r7, r25
    332a:	8a 06       	cpc	r8, r26
    332c:	9b 06       	cpc	r9, r27
    332e:	08 f4       	brcc	.+2      	; 0x3332 <__stack+0x333>
    3330:	c3 ce       	rjmp	.-634    	; 0x30b8 <__stack+0xb9>
    3332:	8f ef       	ldi	r24, 0xFF	; 255
    3334:	9f ef       	ldi	r25, 0xFF	; 255
    3336:	dc 01       	movw	r26, r24
    3338:	f5 01       	movw	r30, r10
    333a:	86 87       	std	Z+14, r24	; 0x0e
    333c:	97 87       	std	Z+15, r25	; 0x0f
    333e:	a0 8b       	std	Z+16, r26	; 0x10
    3340:	b1 8b       	std	Z+17, r27	; 0x11
    3342:	82 87       	std	Z+10, r24	; 0x0a
    3344:	93 87       	std	Z+11, r25	; 0x0b
    3346:	a4 87       	std	Z+12, r26	; 0x0c
    3348:	b5 87       	std	Z+13, r27	; 0x0d
    334a:	80 e8       	ldi	r24, 0x80	; 128
    334c:	85 83       	std	Z+5, r24	; 0x05
    334e:	f3 e0       	ldi	r31, 0x03	; 3
    3350:	3f 16       	cp	r3, r31
    3352:	09 f4       	brne	.+2      	; 0x3356 <__stack+0x357>
    3354:	e1 c1       	rjmp	.+962    	; 0x3718 <__stack+0x719>
    3356:	d5 01       	movw	r26, r10
    3358:	3c 92       	st	X, r3
    335a:	80 91 9f 25 	lds	r24, 0x259F
    335e:	90 91 a0 25 	lds	r25, 0x25A0
    3362:	01 96       	adiw	r24, 0x01	; 1
    3364:	80 93 9f 25 	sts	0x259F, r24
    3368:	90 93 a0 25 	sts	0x25A0, r25
    336c:	16 96       	adiw	r26, 0x06	; 6
    336e:	8d 93       	st	X+, r24
    3370:	9c 93       	st	X, r25
    3372:	17 97       	sbiw	r26, 0x07	; 7
    3374:	f5 01       	movw	r30, r10
    3376:	12 8a       	std	Z+18, r1	; 0x12
    3378:	13 8a       	std	Z+19, r1	; 0x13
    337a:	14 8a       	std	Z+20, r1	; 0x14
    337c:	15 8a       	std	Z+21, r1	; 0x15
    337e:	80 e0       	ldi	r24, 0x00	; 0
    3380:	3b ce       	rjmp	.-906    	; 0x2ff8 <find_volume+0xa8>
    3382:	95 01       	movw	r18, r10
    3384:	28 59       	subi	r18, 0x98	; 152
    3386:	3f 4f       	sbci	r19, 0xFF	; 255
    3388:	29 8b       	std	Y+17, r18	; 0x11
    338a:	3a 8b       	std	Y+18, r19	; 0x12
    338c:	f9 01       	movw	r30, r18
    338e:	80 81       	ld	r24, Z
    3390:	91 81       	ldd	r25, Z+1	; 0x01
    3392:	a2 81       	ldd	r26, Z+2	; 0x02
    3394:	b3 81       	ldd	r27, Z+3	; 0x03
    3396:	bb 27       	eor	r27, r27
    3398:	86 34       	cpi	r24, 0x46	; 70
    339a:	91 44       	sbci	r25, 0x41	; 65
    339c:	a4 45       	sbci	r26, 0x54	; 84
    339e:	b1 05       	cpc	r27, r1
    33a0:	09 f4       	brne	.+2      	; 0x33a4 <__stack+0x3a5>
    33a2:	b8 c1       	rjmp	.+880    	; 0x3714 <__stack+0x715>
    33a4:	24 5e       	subi	r18, 0xE4	; 228
    33a6:	3f 4f       	sbci	r19, 0xFF	; 255
    33a8:	2d 8b       	std	Y+21, r18	; 0x15
    33aa:	3e 8b       	std	Y+22, r19	; 0x16
    33ac:	f9 01       	movw	r30, r18
    33ae:	80 81       	ld	r24, Z
    33b0:	91 81       	ldd	r25, Z+1	; 0x01
    33b2:	a2 81       	ldd	r26, Z+2	; 0x02
    33b4:	b3 81       	ldd	r27, Z+3	; 0x03
    33b6:	bb 27       	eor	r27, r27
    33b8:	86 34       	cpi	r24, 0x46	; 70
    33ba:	91 44       	sbci	r25, 0x41	; 65
    33bc:	a4 45       	sbci	r26, 0x54	; 84
    33be:	b1 05       	cpc	r27, r1
    33c0:	09 f4       	brne	.+2      	; 0x33c4 <__stack+0x3c5>
    33c2:	92 ce       	rjmp	.-732    	; 0x30e8 <__stack+0xe9>
    33c4:	f5 01       	movw	r30, r10
    33c6:	ec 50       	subi	r30, 0x0C	; 12
    33c8:	fe 4f       	sbci	r31, 0xFE	; 254
    33ca:	80 81       	ld	r24, Z
    33cc:	88 23       	and	r24, r24
    33ce:	09 f4       	brne	.+2      	; 0x33d2 <__stack+0x3d3>
    33d0:	9d c1       	rjmp	.+826    	; 0x370c <__stack+0x70d>
    33d2:	34 96       	adiw	r30, 0x04	; 4
    33d4:	80 81       	ld	r24, Z
    33d6:	91 81       	ldd	r25, Z+1	; 0x01
    33d8:	a2 81       	ldd	r26, Z+2	; 0x02
    33da:	b3 81       	ldd	r27, Z+3	; 0x03
    33dc:	89 83       	std	Y+1, r24	; 0x01
    33de:	9a 83       	std	Y+2, r25	; 0x02
    33e0:	ab 83       	std	Y+3, r26	; 0x03
    33e2:	bc 83       	std	Y+4, r27	; 0x04
    33e4:	f5 01       	movw	r30, r10
    33e6:	ec 5f       	subi	r30, 0xFC	; 252
    33e8:	fd 4f       	sbci	r31, 0xFD	; 253
    33ea:	80 81       	ld	r24, Z
    33ec:	88 23       	and	r24, r24
    33ee:	09 f4       	brne	.+2      	; 0x33f2 <__stack+0x3f3>
    33f0:	89 c1       	rjmp	.+786    	; 0x3704 <__stack+0x705>
    33f2:	34 96       	adiw	r30, 0x04	; 4
    33f4:	80 81       	ld	r24, Z
    33f6:	91 81       	ldd	r25, Z+1	; 0x01
    33f8:	a2 81       	ldd	r26, Z+2	; 0x02
    33fa:	b3 81       	ldd	r27, Z+3	; 0x03
    33fc:	8d 83       	std	Y+5, r24	; 0x05
    33fe:	9e 83       	std	Y+6, r25	; 0x06
    3400:	af 83       	std	Y+7, r26	; 0x07
    3402:	b8 87       	std	Y+8, r27	; 0x08
    3404:	f5 01       	movw	r30, r10
    3406:	ec 5e       	subi	r30, 0xEC	; 236
    3408:	fd 4f       	sbci	r31, 0xFD	; 253
    340a:	80 81       	ld	r24, Z
    340c:	88 23       	and	r24, r24
    340e:	09 f4       	brne	.+2      	; 0x3412 <__stack+0x413>
    3410:	75 c1       	rjmp	.+746    	; 0x36fc <__stack+0x6fd>
    3412:	34 96       	adiw	r30, 0x04	; 4
    3414:	80 81       	ld	r24, Z
    3416:	91 81       	ldd	r25, Z+1	; 0x01
    3418:	a2 81       	ldd	r26, Z+2	; 0x02
    341a:	b3 81       	ldd	r27, Z+3	; 0x03
    341c:	89 87       	std	Y+9, r24	; 0x09
    341e:	9a 87       	std	Y+10, r25	; 0x0a
    3420:	ab 87       	std	Y+11, r26	; 0x0b
    3422:	bc 87       	std	Y+12, r27	; 0x0c
    3424:	f5 01       	movw	r30, r10
    3426:	ec 5d       	subi	r30, 0xDC	; 220
    3428:	fd 4f       	sbci	r31, 0xFD	; 253
    342a:	80 81       	ld	r24, Z
    342c:	88 23       	and	r24, r24
    342e:	09 f4       	brne	.+2      	; 0x3432 <__stack+0x433>
    3430:	61 c1       	rjmp	.+706    	; 0x36f4 <__stack+0x6f5>
    3432:	34 96       	adiw	r30, 0x04	; 4
    3434:	80 81       	ld	r24, Z
    3436:	91 81       	ldd	r25, Z+1	; 0x01
    3438:	a2 81       	ldd	r26, Z+2	; 0x02
    343a:	b3 81       	ldd	r27, Z+3	; 0x03
    343c:	8d 87       	std	Y+13, r24	; 0x0d
    343e:	9e 87       	std	Y+14, r25	; 0x0e
    3440:	af 87       	std	Y+15, r26	; 0x0f
    3442:	b8 8b       	std	Y+16, r27	; 0x10
    3444:	c9 80       	ldd	r12, Y+1	; 0x01
    3446:	da 80       	ldd	r13, Y+2	; 0x02
    3448:	eb 80       	ldd	r14, Y+3	; 0x03
    344a:	fc 80       	ldd	r15, Y+4	; 0x04
    344c:	c1 14       	cp	r12, r1
    344e:	d1 04       	cpc	r13, r1
    3450:	e1 04       	cpc	r14, r1
    3452:	f1 04       	cpc	r15, r1
    3454:	09 f0       	breq	.+2      	; 0x3458 <__stack+0x459>
    3456:	41 c0       	rjmp	.+130    	; 0x34da <__stack+0x4db>
    3458:	cd 80       	ldd	r12, Y+5	; 0x05
    345a:	de 80       	ldd	r13, Y+6	; 0x06
    345c:	ef 80       	ldd	r14, Y+7	; 0x07
    345e:	f8 84       	ldd	r15, Y+8	; 0x08
    3460:	c1 14       	cp	r12, r1
    3462:	d1 04       	cpc	r13, r1
    3464:	e1 04       	cpc	r14, r1
    3466:	f1 04       	cpc	r15, r1
    3468:	09 f0       	breq	.+2      	; 0x346c <__stack+0x46d>
    346a:	7d c0       	rjmp	.+250    	; 0x3566 <__stack+0x567>
    346c:	c9 84       	ldd	r12, Y+9	; 0x09
    346e:	da 84       	ldd	r13, Y+10	; 0x0a
    3470:	eb 84       	ldd	r14, Y+11	; 0x0b
    3472:	fc 84       	ldd	r15, Y+12	; 0x0c
    3474:	c1 14       	cp	r12, r1
    3476:	d1 04       	cpc	r13, r1
    3478:	e1 04       	cpc	r14, r1
    347a:	f1 04       	cpc	r15, r1
    347c:	09 f0       	breq	.+2      	; 0x3480 <__stack+0x481>
    347e:	53 c0       	rjmp	.+166    	; 0x3526 <__stack+0x527>
    3480:	cd 84       	ldd	r12, Y+13	; 0x0d
    3482:	de 84       	ldd	r13, Y+14	; 0x0e
    3484:	ef 84       	ldd	r14, Y+15	; 0x0f
    3486:	f8 88       	ldd	r15, Y+16	; 0x10
    3488:	c1 14       	cp	r12, r1
    348a:	d1 04       	cpc	r13, r1
    348c:	e1 04       	cpc	r14, r1
    348e:	f1 04       	cpc	r15, r1
    3490:	09 f4       	brne	.+2      	; 0x3494 <__stack+0x495>
    3492:	12 ce       	rjmp	.-988    	; 0x30b8 <__stack+0xb9>
    3494:	f5 01       	movw	r30, r10
    3496:	14 82       	std	Z+4, r1	; 0x04
    3498:	66 24       	eor	r6, r6
    349a:	6a 94       	dec	r6
    349c:	76 2c       	mov	r7, r6
    349e:	43 01       	movw	r8, r6
    34a0:	66 a6       	std	Z+46, r6	; 0x2e
    34a2:	77 a6       	std	Z+47, r7	; 0x2f
    34a4:	80 aa       	std	Z+48, r8	; 0x30
    34a6:	91 aa       	std	Z+49, r9	; 0x31
    34a8:	bf ef       	ldi	r27, 0xFF	; 255
    34aa:	cb 16       	cp	r12, r27
    34ac:	db 06       	cpc	r13, r27
    34ae:	eb 06       	cpc	r14, r27
    34b0:	fb 06       	cpc	r15, r27
    34b2:	09 f4       	brne	.+2      	; 0x34b6 <__stack+0x4b7>
    34b4:	aa c0       	rjmp	.+340    	; 0x360a <__stack+0x60b>
    34b6:	01 e0       	ldi	r16, 0x01	; 1
    34b8:	10 e0       	ldi	r17, 0x00	; 0
    34ba:	a7 01       	movw	r20, r14
    34bc:	96 01       	movw	r18, r12
    34be:	b1 01       	movw	r22, r2
    34c0:	81 81       	ldd	r24, Z+1	; 0x01
    34c2:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    34c6:	88 23       	and	r24, r24
    34c8:	09 f4       	brne	.+2      	; 0x34cc <__stack+0x4cd>
    34ca:	98 c0       	rjmp	.+304    	; 0x35fc <__stack+0x5fd>
    34cc:	f5 01       	movw	r30, r10
    34ce:	66 a6       	std	Z+46, r6	; 0x2e
    34d0:	77 a6       	std	Z+47, r7	; 0x2f
    34d2:	80 aa       	std	Z+48, r8	; 0x30
    34d4:	91 aa       	std	Z+49, r9	; 0x31
    34d6:	81 e0       	ldi	r24, 0x01	; 1
    34d8:	8f cd       	rjmp	.-1250   	; 0x2ff8 <find_volume+0xa8>
    34da:	d5 01       	movw	r26, r10
    34dc:	14 96       	adiw	r26, 0x04	; 4
    34de:	1c 92       	st	X, r1
    34e0:	66 24       	eor	r6, r6
    34e2:	6a 94       	dec	r6
    34e4:	76 2c       	mov	r7, r6
    34e6:	43 01       	movw	r8, r6
    34e8:	f5 01       	movw	r30, r10
    34ea:	66 a6       	std	Z+46, r6	; 0x2e
    34ec:	77 a6       	std	Z+47, r7	; 0x2f
    34ee:	80 aa       	std	Z+48, r8	; 0x30
    34f0:	91 aa       	std	Z+49, r9	; 0x31
    34f2:	ff ef       	ldi	r31, 0xFF	; 255
    34f4:	cf 16       	cp	r12, r31
    34f6:	df 06       	cpc	r13, r31
    34f8:	ef 06       	cpc	r14, r31
    34fa:	ff 06       	cpc	r15, r31
    34fc:	09 f4       	brne	.+2      	; 0x3500 <__stack+0x501>
    34fe:	af c0       	rjmp	.+350    	; 0x365e <__stack+0x65f>
    3500:	01 e0       	ldi	r16, 0x01	; 1
    3502:	10 e0       	ldi	r17, 0x00	; 0
    3504:	a7 01       	movw	r20, r14
    3506:	96 01       	movw	r18, r12
    3508:	b1 01       	movw	r22, r2
    350a:	d5 01       	movw	r26, r10
    350c:	11 96       	adiw	r26, 0x01	; 1
    350e:	8c 91       	ld	r24, X
    3510:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    3514:	88 23       	and	r24, r24
    3516:	09 f4       	brne	.+2      	; 0x351a <__stack+0x51b>
    3518:	9b c0       	rjmp	.+310    	; 0x3650 <__stack+0x651>
    351a:	f5 01       	movw	r30, r10
    351c:	66 a6       	std	Z+46, r6	; 0x2e
    351e:	77 a6       	std	Z+47, r7	; 0x2f
    3520:	80 aa       	std	Z+48, r8	; 0x30
    3522:	91 aa       	std	Z+49, r9	; 0x31
    3524:	99 cf       	rjmp	.-206    	; 0x3458 <__stack+0x459>
    3526:	f5 01       	movw	r30, r10
    3528:	14 82       	std	Z+4, r1	; 0x04
    352a:	66 24       	eor	r6, r6
    352c:	6a 94       	dec	r6
    352e:	76 2c       	mov	r7, r6
    3530:	43 01       	movw	r8, r6
    3532:	66 a6       	std	Z+46, r6	; 0x2e
    3534:	77 a6       	std	Z+47, r7	; 0x2f
    3536:	80 aa       	std	Z+48, r8	; 0x30
    3538:	91 aa       	std	Z+49, r9	; 0x31
    353a:	bf ef       	ldi	r27, 0xFF	; 255
    353c:	cb 16       	cp	r12, r27
    353e:	db 06       	cpc	r13, r27
    3540:	eb 06       	cpc	r14, r27
    3542:	fb 06       	cpc	r15, r27
    3544:	c9 f1       	breq	.+114    	; 0x35b8 <__stack+0x5b9>
    3546:	01 e0       	ldi	r16, 0x01	; 1
    3548:	10 e0       	ldi	r17, 0x00	; 0
    354a:	a7 01       	movw	r20, r14
    354c:	96 01       	movw	r18, r12
    354e:	b1 01       	movw	r22, r2
    3550:	81 81       	ldd	r24, Z+1	; 0x01
    3552:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    3556:	88 23       	and	r24, r24
    3558:	41 f1       	breq	.+80     	; 0x35aa <__stack+0x5ab>
    355a:	f5 01       	movw	r30, r10
    355c:	66 a6       	std	Z+46, r6	; 0x2e
    355e:	77 a6       	std	Z+47, r7	; 0x2f
    3560:	80 aa       	std	Z+48, r8	; 0x30
    3562:	91 aa       	std	Z+49, r9	; 0x31
    3564:	8d cf       	rjmp	.-230    	; 0x3480 <__stack+0x481>
    3566:	f5 01       	movw	r30, r10
    3568:	14 82       	std	Z+4, r1	; 0x04
    356a:	66 24       	eor	r6, r6
    356c:	6a 94       	dec	r6
    356e:	76 2c       	mov	r7, r6
    3570:	43 01       	movw	r8, r6
    3572:	66 a6       	std	Z+46, r6	; 0x2e
    3574:	77 a6       	std	Z+47, r7	; 0x2f
    3576:	80 aa       	std	Z+48, r8	; 0x30
    3578:	91 aa       	std	Z+49, r9	; 0x31
    357a:	bf ef       	ldi	r27, 0xFF	; 255
    357c:	cb 16       	cp	r12, r27
    357e:	db 06       	cpc	r13, r27
    3580:	eb 06       	cpc	r14, r27
    3582:	fb 06       	cpc	r15, r27
    3584:	09 f4       	brne	.+2      	; 0x3588 <__stack+0x589>
    3586:	94 c0       	rjmp	.+296    	; 0x36b0 <__stack+0x6b1>
    3588:	01 e0       	ldi	r16, 0x01	; 1
    358a:	10 e0       	ldi	r17, 0x00	; 0
    358c:	a7 01       	movw	r20, r14
    358e:	96 01       	movw	r18, r12
    3590:	b1 01       	movw	r22, r2
    3592:	81 81       	ldd	r24, Z+1	; 0x01
    3594:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    3598:	88 23       	and	r24, r24
    359a:	09 f4       	brne	.+2      	; 0x359e <__stack+0x59f>
    359c:	82 c0       	rjmp	.+260    	; 0x36a2 <__stack+0x6a3>
    359e:	f5 01       	movw	r30, r10
    35a0:	66 a6       	std	Z+46, r6	; 0x2e
    35a2:	77 a6       	std	Z+47, r7	; 0x2f
    35a4:	80 aa       	std	Z+48, r8	; 0x30
    35a6:	91 aa       	std	Z+49, r9	; 0x31
    35a8:	61 cf       	rjmp	.-318    	; 0x346c <__stack+0x46d>
    35aa:	d5 01       	movw	r26, r10
    35ac:	9e 96       	adiw	r26, 0x2e	; 46
    35ae:	cd 92       	st	X+, r12
    35b0:	dd 92       	st	X+, r13
    35b2:	ed 92       	st	X+, r14
    35b4:	fc 92       	st	X, r15
    35b6:	d1 97       	sbiw	r26, 0x31	; 49
    35b8:	f2 01       	movw	r30, r4
    35ba:	80 81       	ld	r24, Z
    35bc:	91 81       	ldd	r25, Z+1	; 0x01
    35be:	85 35       	cpi	r24, 0x55	; 85
    35c0:	9a 4a       	sbci	r25, 0xAA	; 170
    35c2:	09 f0       	breq	.+2      	; 0x35c6 <__stack+0x5c7>
    35c4:	5d cf       	rjmp	.-326    	; 0x3480 <__stack+0x481>
    35c6:	e9 89       	ldd	r30, Y+17	; 0x11
    35c8:	fa 89       	ldd	r31, Y+18	; 0x12
    35ca:	80 81       	ld	r24, Z
    35cc:	91 81       	ldd	r25, Z+1	; 0x01
    35ce:	a2 81       	ldd	r26, Z+2	; 0x02
    35d0:	b3 81       	ldd	r27, Z+3	; 0x03
    35d2:	bb 27       	eor	r27, r27
    35d4:	86 34       	cpi	r24, 0x46	; 70
    35d6:	91 44       	sbci	r25, 0x41	; 65
    35d8:	a4 45       	sbci	r26, 0x54	; 84
    35da:	b1 05       	cpc	r27, r1
    35dc:	09 f4       	brne	.+2      	; 0x35e0 <__stack+0x5e1>
    35de:	87 cd       	rjmp	.-1266   	; 0x30ee <__stack+0xef>
    35e0:	ed 89       	ldd	r30, Y+21	; 0x15
    35e2:	fe 89       	ldd	r31, Y+22	; 0x16
    35e4:	80 81       	ld	r24, Z
    35e6:	91 81       	ldd	r25, Z+1	; 0x01
    35e8:	a2 81       	ldd	r26, Z+2	; 0x02
    35ea:	b3 81       	ldd	r27, Z+3	; 0x03
    35ec:	bb 27       	eor	r27, r27
    35ee:	86 34       	cpi	r24, 0x46	; 70
    35f0:	91 44       	sbci	r25, 0x41	; 65
    35f2:	a4 45       	sbci	r26, 0x54	; 84
    35f4:	b1 05       	cpc	r27, r1
    35f6:	09 f0       	breq	.+2      	; 0x35fa <__stack+0x5fb>
    35f8:	43 cf       	rjmp	.-378    	; 0x3480 <__stack+0x481>
    35fa:	79 cd       	rjmp	.-1294   	; 0x30ee <__stack+0xef>
    35fc:	d5 01       	movw	r26, r10
    35fe:	9e 96       	adiw	r26, 0x2e	; 46
    3600:	cd 92       	st	X+, r12
    3602:	dd 92       	st	X+, r13
    3604:	ed 92       	st	X+, r14
    3606:	fc 92       	st	X, r15
    3608:	d1 97       	sbiw	r26, 0x31	; 49
    360a:	d2 01       	movw	r26, r4
    360c:	8d 91       	ld	r24, X+
    360e:	9c 91       	ld	r25, X
    3610:	85 35       	cpi	r24, 0x55	; 85
    3612:	9a 4a       	sbci	r25, 0xAA	; 170
    3614:	09 f0       	breq	.+2      	; 0x3618 <__stack+0x619>
    3616:	50 cd       	rjmp	.-1376   	; 0x30b8 <__stack+0xb9>
    3618:	e9 89       	ldd	r30, Y+17	; 0x11
    361a:	fa 89       	ldd	r31, Y+18	; 0x12
    361c:	80 81       	ld	r24, Z
    361e:	91 81       	ldd	r25, Z+1	; 0x01
    3620:	a2 81       	ldd	r26, Z+2	; 0x02
    3622:	b3 81       	ldd	r27, Z+3	; 0x03
    3624:	bb 27       	eor	r27, r27
    3626:	86 34       	cpi	r24, 0x46	; 70
    3628:	91 44       	sbci	r25, 0x41	; 65
    362a:	a4 45       	sbci	r26, 0x54	; 84
    362c:	b1 05       	cpc	r27, r1
    362e:	09 f4       	brne	.+2      	; 0x3632 <__stack+0x633>
    3630:	5e cd       	rjmp	.-1348   	; 0x30ee <__stack+0xef>
    3632:	ed 89       	ldd	r30, Y+21	; 0x15
    3634:	fe 89       	ldd	r31, Y+22	; 0x16
    3636:	80 81       	ld	r24, Z
    3638:	91 81       	ldd	r25, Z+1	; 0x01
    363a:	a2 81       	ldd	r26, Z+2	; 0x02
    363c:	b3 81       	ldd	r27, Z+3	; 0x03
    363e:	bb 27       	eor	r27, r27
    3640:	86 34       	cpi	r24, 0x46	; 70
    3642:	91 44       	sbci	r25, 0x41	; 65
    3644:	a4 45       	sbci	r26, 0x54	; 84
    3646:	b1 05       	cpc	r27, r1
    3648:	09 f4       	brne	.+2      	; 0x364c <__stack+0x64d>
    364a:	51 cd       	rjmp	.-1374   	; 0x30ee <__stack+0xef>
    364c:	8d e0       	ldi	r24, 0x0D	; 13
    364e:	d4 cc       	rjmp	.-1624   	; 0x2ff8 <find_volume+0xa8>
    3650:	d5 01       	movw	r26, r10
    3652:	9e 96       	adiw	r26, 0x2e	; 46
    3654:	cd 92       	st	X+, r12
    3656:	dd 92       	st	X+, r13
    3658:	ed 92       	st	X+, r14
    365a:	fc 92       	st	X, r15
    365c:	d1 97       	sbiw	r26, 0x31	; 49
    365e:	d2 01       	movw	r26, r4
    3660:	8d 91       	ld	r24, X+
    3662:	9c 91       	ld	r25, X
    3664:	85 35       	cpi	r24, 0x55	; 85
    3666:	9a 4a       	sbci	r25, 0xAA	; 170
    3668:	09 f0       	breq	.+2      	; 0x366c <__stack+0x66d>
    366a:	f6 ce       	rjmp	.-532    	; 0x3458 <__stack+0x459>
    366c:	e9 89       	ldd	r30, Y+17	; 0x11
    366e:	fa 89       	ldd	r31, Y+18	; 0x12
    3670:	80 81       	ld	r24, Z
    3672:	91 81       	ldd	r25, Z+1	; 0x01
    3674:	a2 81       	ldd	r26, Z+2	; 0x02
    3676:	b3 81       	ldd	r27, Z+3	; 0x03
    3678:	bb 27       	eor	r27, r27
    367a:	86 34       	cpi	r24, 0x46	; 70
    367c:	91 44       	sbci	r25, 0x41	; 65
    367e:	a4 45       	sbci	r26, 0x54	; 84
    3680:	b1 05       	cpc	r27, r1
    3682:	09 f4       	brne	.+2      	; 0x3686 <__stack+0x687>
    3684:	34 cd       	rjmp	.-1432   	; 0x30ee <__stack+0xef>
    3686:	ed 89       	ldd	r30, Y+21	; 0x15
    3688:	fe 89       	ldd	r31, Y+22	; 0x16
    368a:	80 81       	ld	r24, Z
    368c:	91 81       	ldd	r25, Z+1	; 0x01
    368e:	a2 81       	ldd	r26, Z+2	; 0x02
    3690:	b3 81       	ldd	r27, Z+3	; 0x03
    3692:	bb 27       	eor	r27, r27
    3694:	86 34       	cpi	r24, 0x46	; 70
    3696:	91 44       	sbci	r25, 0x41	; 65
    3698:	a4 45       	sbci	r26, 0x54	; 84
    369a:	b1 05       	cpc	r27, r1
    369c:	09 f0       	breq	.+2      	; 0x36a0 <__stack+0x6a1>
    369e:	dc ce       	rjmp	.-584    	; 0x3458 <__stack+0x459>
    36a0:	26 cd       	rjmp	.-1460   	; 0x30ee <__stack+0xef>
    36a2:	d5 01       	movw	r26, r10
    36a4:	9e 96       	adiw	r26, 0x2e	; 46
    36a6:	cd 92       	st	X+, r12
    36a8:	dd 92       	st	X+, r13
    36aa:	ed 92       	st	X+, r14
    36ac:	fc 92       	st	X, r15
    36ae:	d1 97       	sbiw	r26, 0x31	; 49
    36b0:	f2 01       	movw	r30, r4
    36b2:	80 81       	ld	r24, Z
    36b4:	91 81       	ldd	r25, Z+1	; 0x01
    36b6:	85 35       	cpi	r24, 0x55	; 85
    36b8:	9a 4a       	sbci	r25, 0xAA	; 170
    36ba:	09 f0       	breq	.+2      	; 0x36be <__stack+0x6bf>
    36bc:	d7 ce       	rjmp	.-594    	; 0x346c <__stack+0x46d>
    36be:	e9 89       	ldd	r30, Y+17	; 0x11
    36c0:	fa 89       	ldd	r31, Y+18	; 0x12
    36c2:	80 81       	ld	r24, Z
    36c4:	91 81       	ldd	r25, Z+1	; 0x01
    36c6:	a2 81       	ldd	r26, Z+2	; 0x02
    36c8:	b3 81       	ldd	r27, Z+3	; 0x03
    36ca:	bb 27       	eor	r27, r27
    36cc:	86 34       	cpi	r24, 0x46	; 70
    36ce:	91 44       	sbci	r25, 0x41	; 65
    36d0:	a4 45       	sbci	r26, 0x54	; 84
    36d2:	b1 05       	cpc	r27, r1
    36d4:	09 f4       	brne	.+2      	; 0x36d8 <__stack+0x6d9>
    36d6:	0b cd       	rjmp	.-1514   	; 0x30ee <__stack+0xef>
    36d8:	ed 89       	ldd	r30, Y+21	; 0x15
    36da:	fe 89       	ldd	r31, Y+22	; 0x16
    36dc:	80 81       	ld	r24, Z
    36de:	91 81       	ldd	r25, Z+1	; 0x01
    36e0:	a2 81       	ldd	r26, Z+2	; 0x02
    36e2:	b3 81       	ldd	r27, Z+3	; 0x03
    36e4:	bb 27       	eor	r27, r27
    36e6:	86 34       	cpi	r24, 0x46	; 70
    36e8:	91 44       	sbci	r25, 0x41	; 65
    36ea:	a4 45       	sbci	r26, 0x54	; 84
    36ec:	b1 05       	cpc	r27, r1
    36ee:	09 f0       	breq	.+2      	; 0x36f2 <__stack+0x6f3>
    36f0:	bd ce       	rjmp	.-646    	; 0x346c <__stack+0x46d>
    36f2:	fd cc       	rjmp	.-1542   	; 0x30ee <__stack+0xef>
    36f4:	80 e0       	ldi	r24, 0x00	; 0
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	dc 01       	movw	r26, r24
    36fa:	a0 ce       	rjmp	.-704    	; 0x343c <__stack+0x43d>
    36fc:	80 e0       	ldi	r24, 0x00	; 0
    36fe:	90 e0       	ldi	r25, 0x00	; 0
    3700:	dc 01       	movw	r26, r24
    3702:	8c ce       	rjmp	.-744    	; 0x341c <__stack+0x41d>
    3704:	80 e0       	ldi	r24, 0x00	; 0
    3706:	90 e0       	ldi	r25, 0x00	; 0
    3708:	dc 01       	movw	r26, r24
    370a:	78 ce       	rjmp	.-784    	; 0x33fc <__stack+0x3fd>
    370c:	80 e0       	ldi	r24, 0x00	; 0
    370e:	90 e0       	ldi	r25, 0x00	; 0
    3710:	dc 01       	movw	r26, r24
    3712:	64 ce       	rjmp	.-824    	; 0x33dc <__stack+0x3dd>
    3714:	80 e0       	ldi	r24, 0x00	; 0
    3716:	c8 cc       	rjmp	.-1648   	; 0x30a8 <__stack+0xa9>
    3718:	f5 01       	movw	r30, r10
    371a:	ee 59       	subi	r30, 0x9E	; 158
    371c:	ff 4f       	sbci	r31, 0xFF	; 255
    371e:	80 81       	ld	r24, Z
    3720:	91 81       	ldd	r25, Z+1	; 0x01
    3722:	01 97       	sbiw	r24, 0x01	; 1
    3724:	09 f0       	breq	.+2      	; 0x3728 <__stack+0x729>
    3726:	17 ce       	rjmp	.-978    	; 0x3356 <__stack+0x357>
    3728:	b7 01       	movw	r22, r14
    372a:	a6 01       	movw	r20, r12
    372c:	4f 5f       	subi	r20, 0xFF	; 255
    372e:	5f 4f       	sbci	r21, 0xFF	; 255
    3730:	6f 4f       	sbci	r22, 0xFF	; 255
    3732:	7f 4f       	sbci	r23, 0xFF	; 255
    3734:	c5 01       	movw	r24, r10
    3736:	0e 94 59 04 	call	0x8b2	; 0x8b2 <move_window>
    373a:	81 11       	cpse	r24, r1
    373c:	0c ce       	rjmp	.-1000   	; 0x3356 <__stack+0x357>
    373e:	d5 01       	movw	r26, r10
    3740:	15 96       	adiw	r26, 0x05	; 5
    3742:	1c 92       	st	X, r1
    3744:	f5 01       	movw	r30, r10
    3746:	e0 5d       	subi	r30, 0xD0	; 208
    3748:	fd 4f       	sbci	r31, 0xFD	; 253
    374a:	80 81       	ld	r24, Z
    374c:	91 81       	ldd	r25, Z+1	; 0x01
    374e:	85 35       	cpi	r24, 0x55	; 85
    3750:	9a 4a       	sbci	r25, 0xAA	; 170
    3752:	09 f0       	breq	.+2      	; 0x3756 <__stack+0x757>
    3754:	00 ce       	rjmp	.-1024   	; 0x3356 <__stack+0x357>
    3756:	f5 01       	movw	r30, r10
    3758:	82 a9       	ldd	r24, Z+50	; 0x32
    375a:	93 a9       	ldd	r25, Z+51	; 0x33
    375c:	a4 a9       	ldd	r26, Z+52	; 0x34
    375e:	b5 a9       	ldd	r27, Z+53	; 0x35
    3760:	82 35       	cpi	r24, 0x52	; 82
    3762:	92 45       	sbci	r25, 0x52	; 82
    3764:	a1 46       	sbci	r26, 0x61	; 97
    3766:	b1 44       	sbci	r27, 0x41	; 65
    3768:	09 f0       	breq	.+2      	; 0x376c <__stack+0x76d>
    376a:	f5 cd       	rjmp	.-1046   	; 0x3356 <__stack+0x357>
    376c:	f5 01       	movw	r30, r10
    376e:	ea 5e       	subi	r30, 0xEA	; 234
    3770:	fd 4f       	sbci	r31, 0xFD	; 253
    3772:	80 81       	ld	r24, Z
    3774:	91 81       	ldd	r25, Z+1	; 0x01
    3776:	a2 81       	ldd	r26, Z+2	; 0x02
    3778:	b3 81       	ldd	r27, Z+3	; 0x03
    377a:	82 37       	cpi	r24, 0x72	; 114
    377c:	92 47       	sbci	r25, 0x72	; 114
    377e:	a1 44       	sbci	r26, 0x41	; 65
    3780:	b1 46       	sbci	r27, 0x61	; 97
    3782:	09 f0       	breq	.+2      	; 0x3786 <__stack+0x787>
    3784:	e8 cd       	rjmp	.-1072   	; 0x3356 <__stack+0x357>
    3786:	34 96       	adiw	r30, 0x04	; 4
    3788:	80 81       	ld	r24, Z
    378a:	91 81       	ldd	r25, Z+1	; 0x01
    378c:	a2 81       	ldd	r26, Z+2	; 0x02
    378e:	b3 81       	ldd	r27, Z+3	; 0x03
    3790:	f5 01       	movw	r30, r10
    3792:	86 87       	std	Z+14, r24	; 0x0e
    3794:	97 87       	std	Z+15, r25	; 0x0f
    3796:	a0 8b       	std	Z+16, r26	; 0x10
    3798:	b1 8b       	std	Z+17, r27	; 0x11
    379a:	e2 5e       	subi	r30, 0xE2	; 226
    379c:	fd 4f       	sbci	r31, 0xFD	; 253
    379e:	80 81       	ld	r24, Z
    37a0:	91 81       	ldd	r25, Z+1	; 0x01
    37a2:	a2 81       	ldd	r26, Z+2	; 0x02
    37a4:	b3 81       	ldd	r27, Z+3	; 0x03
    37a6:	f5 01       	movw	r30, r10
    37a8:	82 87       	std	Z+10, r24	; 0x0a
    37aa:	93 87       	std	Z+11, r25	; 0x0b
    37ac:	a4 87       	std	Z+12, r26	; 0x0c
    37ae:	b5 87       	std	Z+13, r27	; 0x0d
    37b0:	d2 cd       	rjmp	.-1116   	; 0x3356 <__stack+0x357>
    37b2:	c3 01       	movw	r24, r6
    37b4:	b2 01       	movw	r22, r4
    37b6:	66 0f       	add	r22, r22
    37b8:	77 1f       	adc	r23, r23
    37ba:	88 1f       	adc	r24, r24
    37bc:	99 1f       	adc	r25, r25
    37be:	a2 cd       	rjmp	.-1212   	; 0x3304 <__stack+0x305>
    37c0:	29 01       	movw	r4, r18
    37c2:	3a 01       	movw	r6, r20
    37c4:	b2 e0       	ldi	r27, 0x02	; 2
    37c6:	4b 0e       	add	r4, r27
    37c8:	51 1c       	adc	r5, r1
    37ca:	61 1c       	adc	r6, r1
    37cc:	71 1c       	adc	r7, r1
    37ce:	f5 01       	movw	r30, r10
    37d0:	46 8a       	std	Z+22, r4	; 0x16
    37d2:	57 8a       	std	Z+23, r5	; 0x17
    37d4:	60 8e       	std	Z+24, r6	; 0x18
    37d6:	71 8e       	std	Z+25, r7	; 0x19
    37d8:	c6 8e       	std	Z+30, r12	; 0x1e
    37da:	d7 8e       	std	Z+31, r13	; 0x1f
    37dc:	e0 a2       	std	Z+32, r14	; 0x20
    37de:	f1 a2       	std	Z+33, r15	; 0x21
    37e0:	89 8d       	ldd	r24, Y+25	; 0x19
    37e2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    37e4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    37e6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    37e8:	8c 0d       	add	r24, r12
    37ea:	9d 1d       	adc	r25, r13
    37ec:	ae 1d       	adc	r26, r14
    37ee:	bf 1d       	adc	r27, r15
    37f0:	82 a3       	std	Z+34, r24	; 0x22
    37f2:	93 a3       	std	Z+35, r25	; 0x23
    37f4:	a4 a3       	std	Z+36, r26	; 0x24
    37f6:	b5 a3       	std	Z+37, r27	; 0x25
    37f8:	89 89       	ldd	r24, Y+17	; 0x11
    37fa:	9a 89       	ldd	r25, Y+18	; 0x12
    37fc:	ab 89       	ldd	r26, Y+19	; 0x13
    37fe:	bc 89       	ldd	r27, Y+20	; 0x14
    3800:	8c 0d       	add	r24, r12
    3802:	9d 1d       	adc	r25, r13
    3804:	ae 1d       	adc	r26, r14
    3806:	bf 1d       	adc	r27, r15
    3808:	82 a7       	std	Z+42, r24	; 0x2a
    380a:	93 a7       	std	Z+43, r25	; 0x2b
    380c:	a4 a7       	std	Z+44, r26	; 0x2c
    380e:	b5 a7       	std	Z+45, r27	; 0x2d
    3810:	01 2b       	or	r16, r17
    3812:	09 f0       	breq	.+2      	; 0x3816 <__stack+0x817>
    3814:	51 cc       	rjmp	.-1886   	; 0x30b8 <__stack+0xb9>
    3816:	f5 01       	movw	r30, r10
    3818:	e2 5a       	subi	r30, 0xA2	; 162
    381a:	ff 4f       	sbci	r31, 0xFF	; 255
    381c:	80 81       	ld	r24, Z
    381e:	91 81       	ldd	r25, Z+1	; 0x01
    3820:	a2 81       	ldd	r26, Z+2	; 0x02
    3822:	b3 81       	ldd	r27, Z+3	; 0x03
    3824:	f5 01       	movw	r30, r10
    3826:	86 a3       	std	Z+38, r24	; 0x26
    3828:	97 a3       	std	Z+39, r25	; 0x27
    382a:	a0 a7       	std	Z+40, r26	; 0x28
    382c:	b1 a7       	std	Z+41, r27	; 0x29
    382e:	c3 01       	movw	r24, r6
    3830:	b2 01       	movw	r22, r4
    3832:	66 0f       	add	r22, r22
    3834:	77 1f       	adc	r23, r23
    3836:	88 1f       	adc	r24, r24
    3838:	99 1f       	adc	r25, r25
    383a:	66 0f       	add	r22, r22
    383c:	77 1f       	adc	r23, r23
    383e:	88 1f       	adc	r24, r24
    3840:	99 1f       	adc	r25, r25
    3842:	43 e0       	ldi	r20, 0x03	; 3
    3844:	34 2e       	mov	r3, r20
    3846:	5e cd       	rjmp	.-1348   	; 0x3304 <__stack+0x305>
    3848:	33 24       	eor	r3, r3
    384a:	33 94       	inc	r3
    384c:	07 cd       	rjmp	.-1522   	; 0x325c <__stack+0x25d>

0000384e <f_mount>:
    384e:	cf 93       	push	r28
    3850:	df 93       	push	r29
    3852:	00 d0       	rcall	.+0      	; 0x3854 <f_mount+0x6>
    3854:	00 d0       	rcall	.+0      	; 0x3856 <f_mount+0x8>
    3856:	cd b7       	in	r28, 0x3d	; 61
    3858:	de b7       	in	r29, 0x3e	; 62
    385a:	89 83       	std	Y+1, r24	; 0x01
    385c:	9a 83       	std	Y+2, r25	; 0x02
    385e:	6b 83       	std	Y+3, r22	; 0x03
    3860:	7c 83       	std	Y+4, r23	; 0x04
    3862:	e6 2f       	mov	r30, r22
    3864:	f7 2f       	mov	r31, r23
    3866:	30 97       	sbiw	r30, 0x00	; 0
    3868:	a1 f1       	breq	.+104    	; 0x38d2 <f_mount+0x84>
    386a:	60 81       	ld	r22, Z
    386c:	61 32       	cpi	r22, 0x21	; 33
    386e:	68 f0       	brcs	.+26     	; 0x388a <f_mount+0x3c>
    3870:	6a 33       	cpi	r22, 0x3A	; 58
    3872:	79 f1       	breq	.+94     	; 0x38d2 <f_mount+0x84>
    3874:	9f 01       	movw	r18, r30
    3876:	2f 5f       	subi	r18, 0xFF	; 255
    3878:	3f 4f       	sbci	r19, 0xFF	; 255
    387a:	f9 01       	movw	r30, r18
    387c:	02 c0       	rjmp	.+4      	; 0x3882 <f_mount+0x34>
    387e:	5a 33       	cpi	r21, 0x3A	; 58
    3880:	29 f1       	breq	.+74     	; 0x38cc <f_mount+0x7e>
    3882:	cf 01       	movw	r24, r30
    3884:	51 91       	ld	r21, Z+
    3886:	51 32       	cpi	r21, 0x21	; 33
    3888:	d0 f7       	brcc	.-12     	; 0x387e <f_mount+0x30>
    388a:	80 91 9e 25 	lds	r24, 0x259E
    388e:	90 e0       	ldi	r25, 0x00	; 0
    3890:	88 0f       	add	r24, r24
    3892:	99 1f       	adc	r25, r25
    3894:	fc 01       	movw	r30, r24
    3896:	ef 55       	subi	r30, 0x5F	; 95
    3898:	fa 4d       	sbci	r31, 0xDA	; 218
    389a:	01 90       	ld	r0, Z+
    389c:	f0 81       	ld	r31, Z
    389e:	e0 2d       	mov	r30, r0
    38a0:	30 97       	sbiw	r30, 0x00	; 0
    38a2:	09 f0       	breq	.+2      	; 0x38a6 <f_mount+0x58>
    38a4:	10 82       	st	Z, r1
    38a6:	e9 81       	ldd	r30, Y+1	; 0x01
    38a8:	fa 81       	ldd	r31, Y+2	; 0x02
    38aa:	30 97       	sbiw	r30, 0x00	; 0
    38ac:	31 f1       	breq	.+76     	; 0x38fa <f_mount+0xac>
    38ae:	10 82       	st	Z, r1
    38b0:	dc 01       	movw	r26, r24
    38b2:	af 55       	subi	r26, 0x5F	; 95
    38b4:	ba 4d       	sbci	r27, 0xDA	; 218
    38b6:	ed 93       	st	X+, r30
    38b8:	fc 93       	st	X, r31
    38ba:	41 30       	cpi	r20, 0x01	; 1
    38bc:	89 f0       	breq	.+34     	; 0x38e0 <f_mount+0x92>
    38be:	80 e0       	ldi	r24, 0x00	; 0
    38c0:	24 96       	adiw	r28, 0x04	; 4
    38c2:	cd bf       	out	0x3d, r28	; 61
    38c4:	de bf       	out	0x3e, r29	; 62
    38c6:	df 91       	pop	r29
    38c8:	cf 91       	pop	r28
    38ca:	08 95       	ret
    38cc:	82 17       	cp	r24, r18
    38ce:	93 07       	cpc	r25, r19
    38d0:	d9 f0       	breq	.+54     	; 0x3908 <f_mount+0xba>
    38d2:	8b e0       	ldi	r24, 0x0B	; 11
    38d4:	24 96       	adiw	r28, 0x04	; 4
    38d6:	cd bf       	out	0x3d, r28	; 61
    38d8:	de bf       	out	0x3e, r29	; 62
    38da:	df 91       	pop	r29
    38dc:	cf 91       	pop	r28
    38de:	08 95       	ret
    38e0:	40 e0       	ldi	r20, 0x00	; 0
    38e2:	be 01       	movw	r22, r28
    38e4:	6d 5f       	subi	r22, 0xFD	; 253
    38e6:	7f 4f       	sbci	r23, 0xFF	; 255
    38e8:	ce 01       	movw	r24, r28
    38ea:	01 96       	adiw	r24, 0x01	; 1
    38ec:	31 db       	rcall	.-2462   	; 0x2f50 <find_volume>
    38ee:	24 96       	adiw	r28, 0x04	; 4
    38f0:	cd bf       	out	0x3d, r28	; 61
    38f2:	de bf       	out	0x3e, r29	; 62
    38f4:	df 91       	pop	r29
    38f6:	cf 91       	pop	r28
    38f8:	08 95       	ret
    38fa:	fc 01       	movw	r30, r24
    38fc:	ef 55       	subi	r30, 0x5F	; 95
    38fe:	fa 4d       	sbci	r31, 0xDA	; 218
    3900:	10 82       	st	Z, r1
    3902:	11 82       	std	Z+1, r1	; 0x01
    3904:	80 e0       	ldi	r24, 0x00	; 0
    3906:	dc cf       	rjmp	.-72     	; 0x38c0 <f_mount+0x72>
    3908:	80 ed       	ldi	r24, 0xD0	; 208
    390a:	86 0f       	add	r24, r22
    390c:	82 30       	cpi	r24, 0x02	; 2
    390e:	08 f7       	brcc	.-62     	; 0x38d2 <f_mount+0x84>
    3910:	86 2f       	mov	r24, r22
    3912:	90 e0       	ldi	r25, 0x00	; 0
    3914:	c0 97       	sbiw	r24, 0x30	; 48
    3916:	bc cf       	rjmp	.-136    	; 0x3890 <f_mount+0x42>

00003918 <f_open>:
    3918:	2f 92       	push	r2
    391a:	3f 92       	push	r3
    391c:	4f 92       	push	r4
    391e:	5f 92       	push	r5
    3920:	6f 92       	push	r6
    3922:	7f 92       	push	r7
    3924:	8f 92       	push	r8
    3926:	9f 92       	push	r9
    3928:	af 92       	push	r10
    392a:	bf 92       	push	r11
    392c:	cf 92       	push	r12
    392e:	df 92       	push	r13
    3930:	ef 92       	push	r14
    3932:	ff 92       	push	r15
    3934:	0f 93       	push	r16
    3936:	1f 93       	push	r17
    3938:	cf 93       	push	r28
    393a:	df 93       	push	r29
    393c:	cd b7       	in	r28, 0x3d	; 61
    393e:	de b7       	in	r29, 0x3e	; 62
    3940:	c4 54       	subi	r28, 0x44	; 68
    3942:	d1 09       	sbc	r29, r1
    3944:	cd bf       	out	0x3d, r28	; 61
    3946:	de bf       	out	0x3e, r29	; 62
    3948:	6c 01       	movw	r12, r24
    394a:	5b 01       	movw	r10, r22
    394c:	94 2e       	mov	r9, r20
    394e:	00 97       	sbiw	r24, 0x00	; 0
    3950:	09 f4       	brne	.+2      	; 0x3954 <f_open+0x3c>
    3952:	56 c0       	rjmp	.+172    	; 0x3a00 <f_open+0xe8>
    3954:	dc 01       	movw	r26, r24
    3956:	1d 92       	st	X+, r1
    3958:	1c 92       	st	X, r1
    395a:	61 15       	cp	r22, r1
    395c:	71 05       	cpc	r23, r1
    395e:	c1 f1       	breq	.+112    	; 0x39d0 <f_open+0xb8>
    3960:	fb 01       	movw	r30, r22
    3962:	00 81       	ld	r16, Z
    3964:	01 32       	cpi	r16, 0x21	; 33
    3966:	68 f0       	brcs	.+26     	; 0x3982 <f_open+0x6a>
    3968:	0a 33       	cpi	r16, 0x3A	; 58
    396a:	91 f1       	breq	.+100    	; 0x39d0 <f_open+0xb8>
    396c:	9b 01       	movw	r18, r22
    396e:	2f 5f       	subi	r18, 0xFF	; 255
    3970:	3f 4f       	sbci	r19, 0xFF	; 255
    3972:	f9 01       	movw	r30, r18
    3974:	02 c0       	rjmp	.+4      	; 0x397a <f_open+0x62>
    3976:	4a 33       	cpi	r20, 0x3A	; 58
    3978:	39 f1       	breq	.+78     	; 0x39c8 <f_open+0xb0>
    397a:	cf 01       	movw	r24, r30
    397c:	41 91       	ld	r20, Z+
    397e:	41 32       	cpi	r20, 0x21	; 33
    3980:	d0 f7       	brcc	.-12     	; 0x3976 <f_open+0x5e>
    3982:	00 91 9e 25 	lds	r16, 0x259E
    3986:	10 e0       	ldi	r17, 0x00	; 0
    3988:	f8 01       	movw	r30, r16
    398a:	ee 0f       	add	r30, r30
    398c:	ff 1f       	adc	r31, r31
    398e:	ef 55       	subi	r30, 0x5F	; 95
    3990:	fa 4d       	sbci	r31, 0xDA	; 218
    3992:	20 80       	ld	r2, Z
    3994:	31 80       	ldd	r3, Z+1	; 0x01
    3996:	21 14       	cp	r2, r1
    3998:	31 04       	cpc	r3, r1
    399a:	f1 f1       	breq	.+124    	; 0x3a18 <f_open+0x100>
    399c:	29 2d       	mov	r18, r9
    399e:	2e 71       	andi	r18, 0x1E	; 30
    39a0:	f2 2e       	mov	r15, r18
    39a2:	29 82       	std	Y+1, r2	; 0x01
    39a4:	3a 82       	std	Y+2, r3	; 0x02
    39a6:	d1 01       	movw	r26, r2
    39a8:	8c 91       	ld	r24, X
    39aa:	88 23       	and	r24, r24
    39ac:	59 f1       	breq	.+86     	; 0x3a04 <f_open+0xec>
    39ae:	11 96       	adiw	r26, 0x01	; 1
    39b0:	8c 91       	ld	r24, X
    39b2:	0e 94 a4 2a 	call	0x5548	; 0x5548 <disk_status>
    39b6:	80 fd       	sbrc	r24, 0
    39b8:	25 c0       	rjmp	.+74     	; 0x3a04 <f_open+0xec>
    39ba:	ff 20       	and	r15, r15
    39bc:	09 f4       	brne	.+2      	; 0x39c0 <f_open+0xa8>
    39be:	be c1       	rjmp	.+892    	; 0x3d3c <f_open+0x424>
    39c0:	82 ff       	sbrs	r24, 2
    39c2:	bc c1       	rjmp	.+888    	; 0x3d3c <f_open+0x424>
    39c4:	8a e0       	ldi	r24, 0x0A	; 10
    39c6:	05 c0       	rjmp	.+10     	; 0x39d2 <f_open+0xba>
    39c8:	28 17       	cp	r18, r24
    39ca:	39 07       	cpc	r19, r25
    39cc:	09 f4       	brne	.+2      	; 0x39d0 <f_open+0xb8>
    39ce:	58 c0       	rjmp	.+176    	; 0x3a80 <f_open+0x168>
    39d0:	8b e0       	ldi	r24, 0x0B	; 11
    39d2:	cc 5b       	subi	r28, 0xBC	; 188
    39d4:	df 4f       	sbci	r29, 0xFF	; 255
    39d6:	cd bf       	out	0x3d, r28	; 61
    39d8:	de bf       	out	0x3e, r29	; 62
    39da:	df 91       	pop	r29
    39dc:	cf 91       	pop	r28
    39de:	1f 91       	pop	r17
    39e0:	0f 91       	pop	r16
    39e2:	ff 90       	pop	r15
    39e4:	ef 90       	pop	r14
    39e6:	df 90       	pop	r13
    39e8:	cf 90       	pop	r12
    39ea:	bf 90       	pop	r11
    39ec:	af 90       	pop	r10
    39ee:	9f 90       	pop	r9
    39f0:	8f 90       	pop	r8
    39f2:	7f 90       	pop	r7
    39f4:	6f 90       	pop	r6
    39f6:	5f 90       	pop	r5
    39f8:	4f 90       	pop	r4
    39fa:	3f 90       	pop	r3
    39fc:	2f 90       	pop	r2
    39fe:	08 95       	ret
    3a00:	89 e0       	ldi	r24, 0x09	; 9
    3a02:	e7 cf       	rjmp	.-50     	; 0x39d2 <f_open+0xba>
    3a04:	f1 01       	movw	r30, r2
    3a06:	10 82       	st	Z, r1
    3a08:	01 83       	std	Z+1, r16	; 0x01
    3a0a:	80 2f       	mov	r24, r16
    3a0c:	0e 94 e3 29 	call	0x53c6	; 0x53c6 <disk_initialize>
    3a10:	80 ff       	sbrs	r24, 0
    3a12:	04 c0       	rjmp	.+8      	; 0x3a1c <f_open+0x104>
    3a14:	83 e0       	ldi	r24, 0x03	; 3
    3a16:	dd cf       	rjmp	.-70     	; 0x39d2 <f_open+0xba>
    3a18:	8c e0       	ldi	r24, 0x0C	; 12
    3a1a:	db cf       	rjmp	.-74     	; 0x39d2 <f_open+0xba>
    3a1c:	ff 20       	and	r15, r15
    3a1e:	11 f0       	breq	.+4      	; 0x3a24 <f_open+0x10c>
    3a20:	82 fd       	sbrc	r24, 2
    3a22:	d0 cf       	rjmp	.-96     	; 0x39c4 <f_open+0xac>
    3a24:	d1 01       	movw	r26, r2
    3a26:	14 96       	adiw	r26, 0x04	; 4
    3a28:	1c 92       	st	X, r1
    3a2a:	14 97       	sbiw	r26, 0x04	; 4
    3a2c:	44 24       	eor	r4, r4
    3a2e:	4a 94       	dec	r4
    3a30:	54 2c       	mov	r5, r4
    3a32:	32 01       	movw	r6, r4
    3a34:	f1 01       	movw	r30, r2
    3a36:	46 a6       	std	Z+46, r4	; 0x2e
    3a38:	57 a6       	std	Z+47, r5	; 0x2f
    3a3a:	60 aa       	std	Z+48, r6	; 0x30
    3a3c:	71 aa       	std	Z+49, r7	; 0x31
    3a3e:	71 01       	movw	r14, r2
    3a40:	f2 e3       	ldi	r31, 0x32	; 50
    3a42:	ef 0e       	add	r14, r31
    3a44:	f1 1c       	adc	r15, r1
    3a46:	01 e0       	ldi	r16, 0x01	; 1
    3a48:	10 e0       	ldi	r17, 0x00	; 0
    3a4a:	20 e0       	ldi	r18, 0x00	; 0
    3a4c:	30 e0       	ldi	r19, 0x00	; 0
    3a4e:	a9 01       	movw	r20, r18
    3a50:	b7 01       	movw	r22, r14
    3a52:	11 96       	adiw	r26, 0x01	; 1
    3a54:	8c 91       	ld	r24, X
    3a56:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    3a5a:	88 23       	and	r24, r24
    3a5c:	09 f4       	brne	.+2      	; 0x3a60 <f_open+0x148>
    3a5e:	70 c3       	rjmp	.+1760   	; 0x4140 <f_open+0x828>
    3a60:	f1 01       	movw	r30, r2
    3a62:	46 a6       	std	Z+46, r4	; 0x2e
    3a64:	57 a6       	std	Z+47, r5	; 0x2f
    3a66:	60 aa       	std	Z+48, r6	; 0x30
    3a68:	71 aa       	std	Z+49, r7	; 0x31
    3a6a:	83 e0       	ldi	r24, 0x03	; 3
    3a6c:	41 2c       	mov	r4, r1
    3a6e:	51 2c       	mov	r5, r1
    3a70:	32 01       	movw	r6, r4
    3a72:	83 30       	cpi	r24, 0x03	; 3
    3a74:	09 f4       	brne	.+2      	; 0x3a78 <f_open+0x160>
    3a76:	2c c4       	rjmp	.+2136   	; 0x42d0 <f_open+0x9b8>
    3a78:	88 23       	and	r24, r24
    3a7a:	89 f0       	breq	.+34     	; 0x3a9e <f_open+0x186>
    3a7c:	8d e0       	ldi	r24, 0x0D	; 13
    3a7e:	a9 cf       	rjmp	.-174    	; 0x39d2 <f_open+0xba>
    3a80:	80 ed       	ldi	r24, 0xD0	; 208
    3a82:	80 0f       	add	r24, r16
    3a84:	82 30       	cpi	r24, 0x02	; 2
    3a86:	08 f0       	brcs	.+2      	; 0x3a8a <f_open+0x172>
    3a88:	a3 cf       	rjmp	.-186    	; 0x39d0 <f_open+0xb8>
    3a8a:	10 e0       	ldi	r17, 0x00	; 0
    3a8c:	00 53       	subi	r16, 0x30	; 48
    3a8e:	11 09       	sbc	r17, r1
    3a90:	f2 e0       	ldi	r31, 0x02	; 2
    3a92:	af 0e       	add	r10, r31
    3a94:	b1 1c       	adc	r11, r1
    3a96:	78 cf       	rjmp	.-272    	; 0x3988 <f_open+0x70>
    3a98:	41 2c       	mov	r4, r1
    3a9a:	51 2c       	mov	r5, r1
    3a9c:	32 01       	movw	r6, r4
    3a9e:	d1 01       	movw	r26, r2
    3aa0:	dd 96       	adiw	r26, 0x3d	; 61
    3aa2:	8d 91       	ld	r24, X+
    3aa4:	9c 91       	ld	r25, X
    3aa6:	de 97       	sbiw	r26, 0x3e	; 62
    3aa8:	81 15       	cp	r24, r1
    3aaa:	92 40       	sbci	r25, 0x02	; 2
    3aac:	39 f7       	brne	.-50     	; 0x3a7c <f_open+0x164>
    3aae:	f1 01       	movw	r30, r2
    3ab0:	e8 5b       	subi	r30, 0xB8	; 184
    3ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab4:	80 81       	ld	r24, Z
    3ab6:	91 81       	ldd	r25, Z+1	; 0x01
    3ab8:	7c 01       	movw	r14, r24
    3aba:	00 e0       	ldi	r16, 0x00	; 0
    3abc:	10 e0       	ldi	r17, 0x00	; 0
    3abe:	ef a2       	std	Y+39, r14	; 0x27
    3ac0:	f8 a6       	std	Y+40, r15	; 0x28
    3ac2:	09 a7       	std	Y+41, r16	; 0x29
    3ac4:	1a a7       	std	Y+42, r17	; 0x2a
    3ac6:	e1 14       	cp	r14, r1
    3ac8:	f1 04       	cpc	r15, r1
    3aca:	01 05       	cpc	r16, r1
    3acc:	11 05       	cpc	r17, r1
    3ace:	59 f4       	brne	.+22     	; 0x3ae6 <f_open+0x1ce>
    3ad0:	3e 96       	adiw	r30, 0x0e	; 14
    3ad2:	00 81       	ld	r16, Z
    3ad4:	11 81       	ldd	r17, Z+1	; 0x01
    3ad6:	22 81       	ldd	r18, Z+2	; 0x02
    3ad8:	33 81       	ldd	r19, Z+3	; 0x03
    3ada:	0f a3       	std	Y+39, r16	; 0x27
    3adc:	18 a7       	std	Y+40, r17	; 0x28
    3ade:	29 a7       	std	Y+41, r18	; 0x29
    3ae0:	3a a7       	std	Y+42, r19	; 0x2a
    3ae2:	78 01       	movw	r14, r16
    3ae4:	89 01       	movw	r16, r18
    3ae6:	d1 01       	movw	r26, r2
    3ae8:	5a 96       	adiw	r26, 0x1a	; 26
    3aea:	ed 92       	st	X+, r14
    3aec:	fd 92       	st	X+, r15
    3aee:	0d 93       	st	X+, r16
    3af0:	1c 93       	st	X, r17
    3af2:	5d 97       	sbiw	r26, 0x1d	; 29
    3af4:	f1 01       	movw	r30, r2
    3af6:	ee 5b       	subi	r30, 0xBE	; 190
    3af8:	ff 4f       	sbci	r31, 0xFF	; 255
    3afa:	a0 81       	ld	r26, Z
    3afc:	f1 01       	movw	r30, r2
    3afe:	a3 83       	std	Z+3, r26	; 0x03
    3b00:	8f ef       	ldi	r24, 0xFF	; 255
    3b02:	8a 0f       	add	r24, r26
    3b04:	82 30       	cpi	r24, 0x02	; 2
    3b06:	08 f0       	brcs	.+2      	; 0x3b0a <f_open+0x1f2>
    3b08:	b9 cf       	rjmp	.-142    	; 0x3a7c <f_open+0x164>
    3b0a:	b0 e0       	ldi	r27, 0x00	; 0
    3b0c:	a8 01       	movw	r20, r16
    3b0e:	97 01       	movw	r18, r14
    3b10:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    3b14:	6f ab       	std	Y+55, r22	; 0x37
    3b16:	78 af       	std	Y+56, r23	; 0x38
    3b18:	89 af       	std	Y+57, r24	; 0x39
    3b1a:	9a af       	std	Y+58, r25	; 0x3a
    3b1c:	27 ad       	ldd	r18, Z+63	; 0x3f
    3b1e:	22 83       	std	Z+2, r18	; 0x02
    3b20:	22 23       	and	r18, r18
    3b22:	09 f4       	brne	.+2      	; 0x3b26 <f_open+0x20e>
    3b24:	ab cf       	rjmp	.-170    	; 0x3a7c <f_open+0x164>
    3b26:	42 2f       	mov	r20, r18
    3b28:	50 e0       	ldi	r21, 0x00	; 0
    3b2a:	ca 01       	movw	r24, r20
    3b2c:	01 97       	sbiw	r24, 0x01	; 1
    3b2e:	84 23       	and	r24, r20
    3b30:	95 23       	and	r25, r21
    3b32:	89 2b       	or	r24, r25
    3b34:	09 f0       	breq	.+2      	; 0x3b38 <f_open+0x220>
    3b36:	a2 cf       	rjmp	.-188    	; 0x3a7c <f_open+0x164>
    3b38:	ed 5b       	subi	r30, 0xBD	; 189
    3b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b3c:	e0 80       	ld	r14, Z
    3b3e:	f1 80       	ldd	r15, Z+1	; 0x01
    3b40:	ef a6       	std	Y+47, r14	; 0x2f
    3b42:	f8 aa       	std	Y+48, r15	; 0x30
    3b44:	d1 01       	movw	r26, r2
    3b46:	18 96       	adiw	r26, 0x08	; 8
    3b48:	ed 92       	st	X+, r14
    3b4a:	fc 92       	st	X, r15
    3b4c:	19 97       	sbiw	r26, 0x09	; 9
    3b4e:	c7 01       	movw	r24, r14
    3b50:	8f 70       	andi	r24, 0x0F	; 15
    3b52:	99 27       	eor	r25, r25
    3b54:	89 2b       	or	r24, r25
    3b56:	09 f0       	breq	.+2      	; 0x3b5a <f_open+0x242>
    3b58:	91 cf       	rjmp	.-222    	; 0x3a7c <f_open+0x164>
    3b5a:	32 96       	adiw	r30, 0x02	; 2
    3b5c:	60 81       	ld	r22, Z
    3b5e:	71 81       	ldd	r23, Z+1	; 0x01
    3b60:	cb 01       	movw	r24, r22
    3b62:	a0 e0       	ldi	r26, 0x00	; 0
    3b64:	b0 e0       	ldi	r27, 0x00	; 0
    3b66:	00 97       	sbiw	r24, 0x00	; 0
    3b68:	a1 05       	cpc	r26, r1
    3b6a:	b1 05       	cpc	r27, r1
    3b6c:	29 f4       	brne	.+10     	; 0x3b78 <f_open+0x260>
    3b6e:	3d 96       	adiw	r30, 0x0d	; 13
    3b70:	80 81       	ld	r24, Z
    3b72:	91 81       	ldd	r25, Z+1	; 0x01
    3b74:	a2 81       	ldd	r26, Z+2	; 0x02
    3b76:	b3 81       	ldd	r27, Z+3	; 0x03
    3b78:	f1 01       	movw	r30, r2
    3b7a:	e0 5c       	subi	r30, 0xC0	; 192
    3b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b7e:	40 81       	ld	r20, Z
    3b80:	51 81       	ldd	r21, Z+1	; 0x01
    3b82:	41 15       	cp	r20, r1
    3b84:	51 05       	cpc	r21, r1
    3b86:	09 f4       	brne	.+2      	; 0x3b8a <f_open+0x272>
    3b88:	79 cf       	rjmp	.-270    	; 0x3a7c <f_open+0x164>
    3b8a:	7a 01       	movw	r14, r20
    3b8c:	00 e0       	ldi	r16, 0x00	; 0
    3b8e:	10 e0       	ldi	r17, 0x00	; 0
    3b90:	eb aa       	std	Y+51, r14	; 0x33
    3b92:	fc aa       	std	Y+52, r15	; 0x34
    3b94:	0d ab       	std	Y+53, r16	; 0x35
    3b96:	1e ab       	std	Y+54, r17	; 0x36
    3b98:	4f a5       	ldd	r20, Y+47	; 0x2f
    3b9a:	58 a9       	ldd	r21, Y+48	; 0x30
    3b9c:	52 95       	swap	r21
    3b9e:	42 95       	swap	r20
    3ba0:	4f 70       	andi	r20, 0x0F	; 15
    3ba2:	45 27       	eor	r20, r21
    3ba4:	5f 70       	andi	r21, 0x0F	; 15
    3ba6:	45 27       	eor	r20, r21
    3ba8:	e4 0e       	add	r14, r20
    3baa:	f5 1e       	adc	r15, r21
    3bac:	01 1d       	adc	r16, r1
    3bae:	11 1d       	adc	r17, r1
    3bb0:	4f a9       	ldd	r20, Y+55	; 0x37
    3bb2:	58 ad       	ldd	r21, Y+56	; 0x38
    3bb4:	69 ad       	ldd	r22, Y+57	; 0x39
    3bb6:	7a ad       	ldd	r23, Y+58	; 0x3a
    3bb8:	e4 0e       	add	r14, r20
    3bba:	f5 1e       	adc	r15, r21
    3bbc:	06 1f       	adc	r16, r22
    3bbe:	17 1f       	adc	r17, r23
    3bc0:	8e 15       	cp	r24, r14
    3bc2:	9f 05       	cpc	r25, r15
    3bc4:	a0 07       	cpc	r26, r16
    3bc6:	b1 07       	cpc	r27, r17
    3bc8:	08 f4       	brcc	.+2      	; 0x3bcc <f_open+0x2b4>
    3bca:	58 cf       	rjmp	.-336    	; 0x3a7c <f_open+0x164>
    3bcc:	bc 01       	movw	r22, r24
    3bce:	cd 01       	movw	r24, r26
    3bd0:	6e 19       	sub	r22, r14
    3bd2:	7f 09       	sbc	r23, r15
    3bd4:	80 0b       	sbc	r24, r16
    3bd6:	91 0b       	sbc	r25, r17
    3bd8:	30 e0       	ldi	r19, 0x00	; 0
    3bda:	40 e0       	ldi	r20, 0x00	; 0
    3bdc:	50 e0       	ldi	r21, 0x00	; 0
    3bde:	0e 94 7b 38 	call	0x70f6	; 0x70f6 <__udivmodsi4>
    3be2:	21 15       	cp	r18, r1
    3be4:	31 05       	cpc	r19, r1
    3be6:	41 05       	cpc	r20, r1
    3be8:	51 05       	cpc	r21, r1
    3bea:	09 f4       	brne	.+2      	; 0x3bee <f_open+0x2d6>
    3bec:	47 cf       	rjmp	.-370    	; 0x3a7c <f_open+0x164>
    3bee:	26 3f       	cpi	r18, 0xF6	; 246
    3bf0:	6f e0       	ldi	r22, 0x0F	; 15
    3bf2:	36 07       	cpc	r19, r22
    3bf4:	41 05       	cpc	r20, r1
    3bf6:	51 05       	cpc	r21, r1
    3bf8:	08 f4       	brcc	.+2      	; 0x3bfc <f_open+0x2e4>
    3bfa:	ab c7       	rjmp	.+3926   	; 0x4b52 <f_open+0x123a>
    3bfc:	26 3f       	cpi	r18, 0xF6	; 246
    3bfe:	7f ef       	ldi	r23, 0xFF	; 255
    3c00:	37 07       	cpc	r19, r23
    3c02:	41 05       	cpc	r20, r1
    3c04:	51 05       	cpc	r21, r1
    3c06:	08 f0       	brcs	.+2      	; 0x3c0a <f_open+0x2f2>
    3c08:	5d c7       	rjmp	.+3770   	; 0x4ac4 <f_open+0x11ac>
    3c0a:	82 e0       	ldi	r24, 0x02	; 2
    3c0c:	88 2e       	mov	r8, r24
    3c0e:	ca 01       	movw	r24, r20
    3c10:	b9 01       	movw	r22, r18
    3c12:	6e 5f       	subi	r22, 0xFE	; 254
    3c14:	7f 4f       	sbci	r23, 0xFF	; 255
    3c16:	8f 4f       	sbci	r24, 0xFF	; 255
    3c18:	9f 4f       	sbci	r25, 0xFF	; 255
    3c1a:	6b a7       	std	Y+43, r22	; 0x2b
    3c1c:	7c a7       	std	Y+44, r23	; 0x2c
    3c1e:	8d a7       	std	Y+45, r24	; 0x2d
    3c20:	9e a7       	std	Y+46, r25	; 0x2e
    3c22:	d1 01       	movw	r26, r2
    3c24:	56 96       	adiw	r26, 0x16	; 22
    3c26:	6d 93       	st	X+, r22
    3c28:	7d 93       	st	X+, r23
    3c2a:	8d 93       	st	X+, r24
    3c2c:	9c 93       	st	X, r25
    3c2e:	59 97       	sbiw	r26, 0x19	; 25
    3c30:	f1 01       	movw	r30, r2
    3c32:	46 8e       	std	Z+30, r4	; 0x1e
    3c34:	57 8e       	std	Z+31, r5	; 0x1f
    3c36:	60 a2       	std	Z+32, r6	; 0x20
    3c38:	71 a2       	std	Z+33, r7	; 0x21
    3c3a:	8b a9       	ldd	r24, Y+51	; 0x33
    3c3c:	9c a9       	ldd	r25, Y+52	; 0x34
    3c3e:	ad a9       	ldd	r26, Y+53	; 0x35
    3c40:	be a9       	ldd	r27, Y+54	; 0x36
    3c42:	84 0d       	add	r24, r4
    3c44:	95 1d       	adc	r25, r5
    3c46:	a6 1d       	adc	r26, r6
    3c48:	b7 1d       	adc	r27, r7
    3c4a:	82 a3       	std	Z+34, r24	; 0x22
    3c4c:	93 a3       	std	Z+35, r25	; 0x23
    3c4e:	a4 a3       	std	Z+36, r26	; 0x24
    3c50:	b5 a3       	std	Z+37, r27	; 0x25
    3c52:	b8 01       	movw	r22, r16
    3c54:	a7 01       	movw	r20, r14
    3c56:	44 0d       	add	r20, r4
    3c58:	55 1d       	adc	r21, r5
    3c5a:	66 1d       	adc	r22, r6
    3c5c:	77 1d       	adc	r23, r7
    3c5e:	42 a7       	std	Z+42, r20	; 0x2a
    3c60:	53 a7       	std	Z+43, r21	; 0x2b
    3c62:	64 a7       	std	Z+44, r22	; 0x2c
    3c64:	75 a7       	std	Z+45, r23	; 0x2d
    3c66:	ef a4       	ldd	r14, Y+47	; 0x2f
    3c68:	f8 a8       	ldd	r15, Y+48	; 0x30
    3c6a:	ef 28       	or	r14, r15
    3c6c:	09 f4       	brne	.+2      	; 0x3c70 <f_open+0x358>
    3c6e:	06 cf       	rjmp	.-500    	; 0x3a7c <f_open+0x164>
    3c70:	ef a8       	ldd	r14, Y+55	; 0x37
    3c72:	f8 ac       	ldd	r15, Y+56	; 0x38
    3c74:	09 ad       	ldd	r16, Y+57	; 0x39
    3c76:	1a ad       	ldd	r17, Y+58	; 0x3a
    3c78:	8e 0d       	add	r24, r14
    3c7a:	9f 1d       	adc	r25, r15
    3c7c:	a0 1f       	adc	r26, r16
    3c7e:	b1 1f       	adc	r27, r17
    3c80:	f1 01       	movw	r30, r2
    3c82:	86 a3       	std	Z+38, r24	; 0x26
    3c84:	97 a3       	std	Z+39, r25	; 0x27
    3c86:	a0 a7       	std	Z+40, r26	; 0x28
    3c88:	b1 a7       	std	Z+41, r27	; 0x29
    3c8a:	f2 e0       	ldi	r31, 0x02	; 2
    3c8c:	8f 16       	cp	r8, r31
    3c8e:	09 f4       	brne	.+2      	; 0x3c92 <f_open+0x37a>
    3c90:	10 c7       	rjmp	.+3616   	; 0x4ab2 <f_open+0x119a>
    3c92:	a3 e0       	ldi	r26, 0x03	; 3
    3c94:	b0 e0       	ldi	r27, 0x00	; 0
    3c96:	2b a5       	ldd	r18, Y+43	; 0x2b
    3c98:	3c a5       	ldd	r19, Y+44	; 0x2c
    3c9a:	4d a5       	ldd	r20, Y+45	; 0x2d
    3c9c:	5e a5       	ldd	r21, Y+46	; 0x2e
    3c9e:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    3ca2:	96 95       	lsr	r25
    3ca4:	87 95       	ror	r24
    3ca6:	77 95       	ror	r23
    3ca8:	67 95       	ror	r22
    3caa:	89 01       	movw	r16, r18
    3cac:	9a 01       	movw	r18, r20
    3cae:	01 70       	andi	r16, 0x01	; 1
    3cb0:	11 27       	eor	r17, r17
    3cb2:	22 27       	eor	r18, r18
    3cb4:	33 27       	eor	r19, r19
    3cb6:	60 0f       	add	r22, r16
    3cb8:	71 1f       	adc	r23, r17
    3cba:	82 1f       	adc	r24, r18
    3cbc:	93 1f       	adc	r25, r19
    3cbe:	88 24       	eor	r8, r8
    3cc0:	83 94       	inc	r8
    3cc2:	dc 01       	movw	r26, r24
    3cc4:	cb 01       	movw	r24, r22
    3cc6:	81 50       	subi	r24, 0x01	; 1
    3cc8:	9e 4f       	sbci	r25, 0xFE	; 254
    3cca:	af 4f       	sbci	r26, 0xFF	; 255
    3ccc:	bf 4f       	sbci	r27, 0xFF	; 255
    3cce:	e9 e0       	ldi	r30, 0x09	; 9
    3cd0:	b6 95       	lsr	r27
    3cd2:	a7 95       	ror	r26
    3cd4:	97 95       	ror	r25
    3cd6:	87 95       	ror	r24
    3cd8:	ea 95       	dec	r30
    3cda:	d1 f7       	brne	.-12     	; 0x3cd0 <f_open+0x3b8>
    3cdc:	ef a0       	ldd	r14, Y+39	; 0x27
    3cde:	f8 a4       	ldd	r15, Y+40	; 0x28
    3ce0:	09 a5       	ldd	r16, Y+41	; 0x29
    3ce2:	1a a5       	ldd	r17, Y+42	; 0x2a
    3ce4:	e8 16       	cp	r14, r24
    3ce6:	f9 06       	cpc	r15, r25
    3ce8:	0a 07       	cpc	r16, r26
    3cea:	1b 07       	cpc	r17, r27
    3cec:	08 f4       	brcc	.+2      	; 0x3cf0 <f_open+0x3d8>
    3cee:	c6 ce       	rjmp	.-628    	; 0x3a7c <f_open+0x164>
    3cf0:	8f ef       	ldi	r24, 0xFF	; 255
    3cf2:	9f ef       	ldi	r25, 0xFF	; 255
    3cf4:	dc 01       	movw	r26, r24
    3cf6:	f1 01       	movw	r30, r2
    3cf8:	86 87       	std	Z+14, r24	; 0x0e
    3cfa:	97 87       	std	Z+15, r25	; 0x0f
    3cfc:	a0 8b       	std	Z+16, r26	; 0x10
    3cfe:	b1 8b       	std	Z+17, r27	; 0x11
    3d00:	82 87       	std	Z+10, r24	; 0x0a
    3d02:	93 87       	std	Z+11, r25	; 0x0b
    3d04:	a4 87       	std	Z+12, r26	; 0x0c
    3d06:	b5 87       	std	Z+13, r27	; 0x0d
    3d08:	80 e8       	ldi	r24, 0x80	; 128
    3d0a:	85 83       	std	Z+5, r24	; 0x05
    3d0c:	f3 e0       	ldi	r31, 0x03	; 3
    3d0e:	8f 16       	cp	r8, r31
    3d10:	09 f4       	brne	.+2      	; 0x3d14 <f_open+0x3fc>
    3d12:	82 c6       	rjmp	.+3332   	; 0x4a18 <f_open+0x1100>
    3d14:	d1 01       	movw	r26, r2
    3d16:	8c 92       	st	X, r8
    3d18:	80 91 9f 25 	lds	r24, 0x259F
    3d1c:	90 91 a0 25 	lds	r25, 0x25A0
    3d20:	01 96       	adiw	r24, 0x01	; 1
    3d22:	80 93 9f 25 	sts	0x259F, r24
    3d26:	90 93 a0 25 	sts	0x25A0, r25
    3d2a:	16 96       	adiw	r26, 0x06	; 6
    3d2c:	8d 93       	st	X+, r24
    3d2e:	9c 93       	st	X, r25
    3d30:	17 97       	sbiw	r26, 0x07	; 7
    3d32:	f1 01       	movw	r30, r2
    3d34:	12 8a       	std	Z+18, r1	; 0x12
    3d36:	13 8a       	std	Z+19, r1	; 0x13
    3d38:	14 8a       	std	Z+20, r1	; 0x14
    3d3a:	15 8a       	std	Z+21, r1	; 0x15
    3d3c:	09 2d       	mov	r16, r9
    3d3e:	0f 71       	andi	r16, 0x1F	; 31
    3d40:	0f a3       	std	Y+39, r16	; 0x27
    3d42:	ce 01       	movw	r24, r28
    3d44:	47 96       	adiw	r24, 0x17	; 23
    3d46:	8d 8b       	std	Y+21, r24	; 0x15
    3d48:	9e 8b       	std	Y+22, r25	; 0x16
    3d4a:	b5 01       	movw	r22, r10
    3d4c:	46 97       	sbiw	r24, 0x16	; 22
    3d4e:	0e 94 49 14 	call	0x2892	; 0x2892 <follow_path>
    3d52:	2b 88       	ldd	r2, Y+19	; 0x13
    3d54:	3c 88       	ldd	r3, Y+20	; 0x14
    3d56:	88 23       	and	r24, r24
    3d58:	09 f4       	brne	.+2      	; 0x3d5c <f_open+0x444>
    3d5a:	6f c1       	rjmp	.+734    	; 0x403a <f_open+0x722>
    3d5c:	99 2d       	mov	r25, r9
    3d5e:	9c 71       	andi	r25, 0x1C	; 28
    3d60:	09 f4       	brne	.+2      	; 0x3d64 <f_open+0x44c>
    3d62:	37 ce       	rjmp	.-914    	; 0x39d2 <f_open+0xba>
    3d64:	84 30       	cpi	r24, 0x04	; 4
    3d66:	09 f0       	breq	.+2      	; 0x3d6a <f_open+0x452>
    3d68:	34 ce       	rjmp	.-920    	; 0x39d2 <f_open+0xba>
    3d6a:	ce 01       	movw	r24, r28
    3d6c:	01 96       	adiw	r24, 0x01	; 1
    3d6e:	0e 94 44 13 	call	0x2688	; 0x2688 <dir_register>
    3d72:	ff a1       	ldd	r31, Y+39	; 0x27
    3d74:	f8 60       	ori	r31, 0x08	; 8
    3d76:	ff a3       	std	Y+39, r31	; 0x27
    3d78:	2b 88       	ldd	r2, Y+19	; 0x13
    3d7a:	3c 88       	ldd	r3, Y+20	; 0x14
    3d7c:	81 11       	cpse	r24, r1
    3d7e:	29 ce       	rjmp	.-942    	; 0x39d2 <f_open+0xba>
    3d80:	ef a0       	ldd	r14, Y+39	; 0x27
    3d82:	e3 fe       	sbrs	r14, 3
    3d84:	d9 c1       	rjmp	.+946    	; 0x4138 <f_open+0x820>
    3d86:	80 e0       	ldi	r24, 0x00	; 0
    3d88:	90 e0       	ldi	r25, 0x00	; 0
    3d8a:	af e4       	ldi	r26, 0x4F	; 79
    3d8c:	b5 e4       	ldi	r27, 0x45	; 69
    3d8e:	f1 01       	movw	r30, r2
    3d90:	86 87       	std	Z+14, r24	; 0x0e
    3d92:	97 87       	std	Z+15, r25	; 0x0f
    3d94:	a0 8b       	std	Z+16, r26	; 0x10
    3d96:	b1 8b       	std	Z+17, r27	; 0x11
    3d98:	13 86       	std	Z+11, r1	; 0x0b
    3d9a:	14 8e       	std	Z+28, r1	; 0x1c
    3d9c:	15 8e       	std	Z+29, r1	; 0x1d
    3d9e:	16 8e       	std	Z+30, r1	; 0x1e
    3da0:	17 8e       	std	Z+31, r1	; 0x1f
    3da2:	e9 80       	ldd	r14, Y+1	; 0x01
    3da4:	fa 80       	ldd	r15, Y+2	; 0x02
    3da6:	82 8d       	ldd	r24, Z+26	; 0x1a
    3da8:	93 8d       	ldd	r25, Z+27	; 0x1b
    3daa:	8c 01       	movw	r16, r24
    3dac:	20 e0       	ldi	r18, 0x00	; 0
    3dae:	30 e0       	ldi	r19, 0x00	; 0
    3db0:	0f a7       	std	Y+47, r16	; 0x2f
    3db2:	18 ab       	std	Y+48, r17	; 0x30
    3db4:	29 ab       	std	Y+49, r18	; 0x31
    3db6:	3a ab       	std	Y+50, r19	; 0x32
    3db8:	d7 01       	movw	r26, r14
    3dba:	8c 91       	ld	r24, X
    3dbc:	83 30       	cpi	r24, 0x03	; 3
    3dbe:	09 f4       	brne	.+2      	; 0x3dc2 <f_open+0x4aa>
    3dc0:	89 c2       	rjmp	.+1298   	; 0x42d4 <f_open+0x9bc>
    3dc2:	d1 01       	movw	r26, r2
    3dc4:	5a 96       	adiw	r26, 0x1a	; 26
    3dc6:	1d 92       	st	X+, r1
    3dc8:	1c 92       	st	X, r1
    3dca:	5b 97       	sbiw	r26, 0x1b	; 27
    3dcc:	54 96       	adiw	r26, 0x14	; 20
    3dce:	1d 92       	st	X+, r1
    3dd0:	1c 92       	st	X, r1
    3dd2:	55 97       	sbiw	r26, 0x15	; 21
    3dd4:	81 e0       	ldi	r24, 0x01	; 1
    3dd6:	f7 01       	movw	r30, r14
    3dd8:	84 83       	std	Z+4, r24	; 0x04
    3dda:	01 2b       	or	r16, r17
    3ddc:	02 2b       	or	r16, r18
    3dde:	03 2b       	or	r16, r19
    3de0:	09 f4       	brne	.+2      	; 0x3de4 <f_open+0x4cc>
    3de2:	4a c1       	rjmp	.+660    	; 0x4078 <f_open+0x760>
    3de4:	26 a5       	ldd	r18, Z+46	; 0x2e
    3de6:	37 a5       	ldd	r19, Z+47	; 0x2f
    3de8:	40 a9       	ldd	r20, Z+48	; 0x30
    3dea:	51 a9       	ldd	r21, Z+49	; 0x31
    3dec:	2f ab       	std	Y+55, r18	; 0x37
    3dee:	38 af       	std	Y+56, r19	; 0x38
    3df0:	49 af       	std	Y+57, r20	; 0x39
    3df2:	5a af       	std	Y+58, r21	; 0x3a
    3df4:	0f a5       	ldd	r16, Y+47	; 0x2f
    3df6:	18 a9       	ldd	r17, Y+48	; 0x30
    3df8:	29 a9       	ldd	r18, Y+49	; 0x31
    3dfa:	3a a9       	ldd	r19, Y+50	; 0x32
    3dfc:	02 30       	cpi	r16, 0x02	; 2
    3dfe:	11 05       	cpc	r17, r1
    3e00:	21 05       	cpc	r18, r1
    3e02:	31 05       	cpc	r19, r1
    3e04:	48 f0       	brcs	.+18     	; 0x3e18 <f_open+0x500>
    3e06:	86 89       	ldd	r24, Z+22	; 0x16
    3e08:	97 89       	ldd	r25, Z+23	; 0x17
    3e0a:	a0 8d       	ldd	r26, Z+24	; 0x18
    3e0c:	b1 8d       	ldd	r27, Z+25	; 0x19
    3e0e:	08 17       	cp	r16, r24
    3e10:	19 07       	cpc	r17, r25
    3e12:	2a 07       	cpc	r18, r26
    3e14:	3b 07       	cpc	r19, r27
    3e16:	10 f0       	brcs	.+4      	; 0x3e1c <f_open+0x504>
    3e18:	82 e0       	ldi	r24, 0x02	; 2
    3e1a:	db cd       	rjmp	.-1098   	; 0x39d2 <f_open+0xba>
    3e1c:	0b a7       	std	Y+43, r16	; 0x2b
    3e1e:	1c a7       	std	Y+44, r17	; 0x2c
    3e20:	2d a7       	std	Y+45, r18	; 0x2d
    3e22:	3e a7       	std	Y+46, r19	; 0x2e
    3e24:	87 01       	movw	r16, r14
    3e26:	0e 5c       	subi	r16, 0xCE	; 206
    3e28:	1f 4f       	sbci	r17, 0xFF	; 255
    3e2a:	23 96       	adiw	r28, 0x03	; 3
    3e2c:	2e ae       	std	Y+62, r2	; 0x3e
    3e2e:	3f ae       	std	Y+63, r3	; 0x3f
    3e30:	23 97       	sbiw	r28, 0x03	; 3
    3e32:	57 01       	movw	r10, r14
    3e34:	25 96       	adiw	r28, 0x05	; 5
    3e36:	ce ae       	std	Y+62, r12	; 0x3e
    3e38:	df ae       	std	Y+63, r13	; 0x3f
    3e3a:	25 97       	sbiw	r28, 0x05	; 5
    3e3c:	cb a4       	ldd	r12, Y+43	; 0x2b
    3e3e:	dc a4       	ldd	r13, Y+44	; 0x2c
    3e40:	ed a4       	ldd	r14, Y+45	; 0x2d
    3e42:	fe a4       	ldd	r15, Y+46	; 0x2e
    3e44:	18 01       	movw	r2, r16
    3e46:	27 c0       	rjmp	.+78     	; 0x3e96 <f_open+0x57e>
    3e48:	00 e0       	ldi	r16, 0x00	; 0
    3e4a:	10 e0       	ldi	r17, 0x00	; 0
    3e4c:	98 01       	movw	r18, r16
    3e4e:	b7 01       	movw	r22, r14
    3e50:	a6 01       	movw	r20, r12
    3e52:	c5 01       	movw	r24, r10
    3e54:	0e 94 a8 05 	call	0xb50	; 0xb50 <put_fat.part.6>
    3e58:	81 11       	cpse	r24, r1
    3e5a:	bb cd       	rjmp	.-1162   	; 0x39d2 <f_open+0xba>
    3e5c:	f5 01       	movw	r30, r10
    3e5e:	86 85       	ldd	r24, Z+14	; 0x0e
    3e60:	97 85       	ldd	r25, Z+15	; 0x0f
    3e62:	a0 89       	ldd	r26, Z+16	; 0x10
    3e64:	b1 89       	ldd	r27, Z+17	; 0x11
    3e66:	8f 3f       	cpi	r24, 0xFF	; 255
    3e68:	ff ef       	ldi	r31, 0xFF	; 255
    3e6a:	9f 07       	cpc	r25, r31
    3e6c:	af 07       	cpc	r26, r31
    3e6e:	bf 07       	cpc	r27, r31
    3e70:	59 f0       	breq	.+22     	; 0x3e88 <f_open+0x570>
    3e72:	01 96       	adiw	r24, 0x01	; 1
    3e74:	a1 1d       	adc	r26, r1
    3e76:	b1 1d       	adc	r27, r1
    3e78:	f5 01       	movw	r30, r10
    3e7a:	86 87       	std	Z+14, r24	; 0x0e
    3e7c:	97 87       	std	Z+15, r25	; 0x0f
    3e7e:	a0 8b       	std	Z+16, r26	; 0x10
    3e80:	b1 8b       	std	Z+17, r27	; 0x11
    3e82:	85 81       	ldd	r24, Z+5	; 0x05
    3e84:	81 60       	ori	r24, 0x01	; 1
    3e86:	85 83       	std	Z+5, r24	; 0x05
    3e88:	f5 01       	movw	r30, r10
    3e8a:	86 89       	ldd	r24, Z+22	; 0x16
    3e8c:	97 89       	ldd	r25, Z+23	; 0x17
    3e8e:	a0 8d       	ldd	r26, Z+24	; 0x18
    3e90:	b1 8d       	ldd	r27, Z+25	; 0x19
    3e92:	73 01       	movw	r14, r6
    3e94:	62 01       	movw	r12, r4
    3e96:	c8 16       	cp	r12, r24
    3e98:	d9 06       	cpc	r13, r25
    3e9a:	ea 06       	cpc	r14, r26
    3e9c:	fb 06       	cpc	r15, r27
    3e9e:	08 f0       	brcs	.+2      	; 0x3ea2 <f_open+0x58a>
    3ea0:	ae c4       	rjmp	.+2396   	; 0x47fe <f_open+0xee6>
    3ea2:	12 e0       	ldi	r17, 0x02	; 2
    3ea4:	c1 16       	cp	r12, r17
    3ea6:	d1 04       	cpc	r13, r1
    3ea8:	e1 04       	cpc	r14, r1
    3eaa:	f1 04       	cpc	r15, r1
    3eac:	08 f4       	brcc	.+2      	; 0x3eb0 <f_open+0x598>
    3eae:	b4 cf       	rjmp	.-152    	; 0x3e18 <f_open+0x500>
    3eb0:	d5 01       	movw	r26, r10
    3eb2:	8c 91       	ld	r24, X
    3eb4:	82 30       	cpi	r24, 0x02	; 2
    3eb6:	09 f4       	brne	.+2      	; 0x3eba <f_open+0x5a2>
    3eb8:	70 c2       	rjmp	.+1248   	; 0x439a <f_open+0xa82>
    3eba:	83 30       	cpi	r24, 0x03	; 3
    3ebc:	09 f4       	brne	.+2      	; 0x3ec0 <f_open+0x5a8>
    3ebe:	1a c2       	rjmp	.+1076   	; 0x42f4 <f_open+0x9dc>
    3ec0:	81 30       	cpi	r24, 0x01	; 1
    3ec2:	09 f0       	breq	.+2      	; 0x3ec6 <f_open+0x5ae>
    3ec4:	a9 cf       	rjmp	.-174    	; 0x3e18 <f_open+0x500>
    3ec6:	f6 01       	movw	r30, r12
    3ec8:	f6 95       	lsr	r31
    3eca:	e7 95       	ror	r30
    3ecc:	ec 0d       	add	r30, r12
    3ece:	fd 1d       	adc	r31, r13
    3ed0:	eb ab       	std	Y+51, r30	; 0x33
    3ed2:	fc ab       	std	Y+52, r31	; 0x34
    3ed4:	92 96       	adiw	r26, 0x22	; 34
    3ed6:	8d 91       	ld	r24, X+
    3ed8:	9d 91       	ld	r25, X+
    3eda:	0d 90       	ld	r0, X+
    3edc:	bc 91       	ld	r27, X
    3ede:	a0 2d       	mov	r26, r0
    3ee0:	9f 01       	movw	r18, r30
    3ee2:	23 2f       	mov	r18, r19
    3ee4:	33 27       	eor	r19, r19
    3ee6:	26 95       	lsr	r18
    3ee8:	2c 01       	movw	r4, r24
    3eea:	3d 01       	movw	r6, r26
    3eec:	42 0e       	add	r4, r18
    3eee:	53 1e       	adc	r5, r19
    3ef0:	61 1c       	adc	r6, r1
    3ef2:	71 1c       	adc	r7, r1
    3ef4:	f5 01       	movw	r30, r10
    3ef6:	06 a5       	ldd	r16, Z+46	; 0x2e
    3ef8:	17 a5       	ldd	r17, Z+47	; 0x2f
    3efa:	20 a9       	ldd	r18, Z+48	; 0x30
    3efc:	31 a9       	ldd	r19, Z+49	; 0x31
    3efe:	0b a7       	std	Y+43, r16	; 0x2b
    3f00:	1c a7       	std	Y+44, r17	; 0x2c
    3f02:	2d a7       	std	Y+45, r18	; 0x2d
    3f04:	3e a7       	std	Y+46, r19	; 0x2e
    3f06:	40 16       	cp	r4, r16
    3f08:	51 06       	cpc	r5, r17
    3f0a:	62 06       	cpc	r6, r18
    3f0c:	73 06       	cpc	r7, r19
    3f0e:	09 f4       	brne	.+2      	; 0x3f12 <f_open+0x5fa>
    3f10:	1e c4       	rjmp	.+2108   	; 0x474e <f_open+0xe36>
    3f12:	84 81       	ldd	r24, Z+4	; 0x04
    3f14:	81 11       	cpse	r24, r1
    3f16:	cc c3       	rjmp	.+1944   	; 0x46b0 <f_open+0xd98>
    3f18:	01 e0       	ldi	r16, 0x01	; 1
    3f1a:	10 e0       	ldi	r17, 0x00	; 0
    3f1c:	a3 01       	movw	r20, r6
    3f1e:	92 01       	movw	r18, r4
    3f20:	b1 01       	movw	r22, r2
    3f22:	d5 01       	movw	r26, r10
    3f24:	11 96       	adiw	r26, 0x01	; 1
    3f26:	8c 91       	ld	r24, X
    3f28:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    3f2c:	81 11       	cpse	r24, r1
    3f2e:	01 c3       	rjmp	.+1538   	; 0x4532 <f_open+0xc1a>
    3f30:	d5 01       	movw	r26, r10
    3f32:	9e 96       	adiw	r26, 0x2e	; 46
    3f34:	4d 92       	st	X+, r4
    3f36:	5d 92       	st	X+, r5
    3f38:	6d 92       	st	X+, r6
    3f3a:	7c 92       	st	X, r7
    3f3c:	d1 97       	sbiw	r26, 0x31	; 49
    3f3e:	92 96       	adiw	r26, 0x22	; 34
    3f40:	8d 91       	ld	r24, X+
    3f42:	9d 91       	ld	r25, X+
    3f44:	0d 90       	ld	r0, X+
    3f46:	bc 91       	ld	r27, X
    3f48:	a0 2d       	mov	r26, r0
    3f4a:	4b ae       	std	Y+59, r4	; 0x3b
    3f4c:	5c ae       	std	Y+60, r5	; 0x3c
    3f4e:	6d ae       	std	Y+61, r6	; 0x3d
    3f50:	7e ae       	std	Y+62, r7	; 0x3e
    3f52:	eb a9       	ldd	r30, Y+51	; 0x33
    3f54:	fc a9       	ldd	r31, Y+52	; 0x34
    3f56:	31 96       	adiw	r30, 0x01	; 1
    3f58:	21 96       	adiw	r28, 0x01	; 1
    3f5a:	ee af       	std	Y+62, r30	; 0x3e
    3f5c:	ff af       	std	Y+63, r31	; 0x3f
    3f5e:	21 97       	sbiw	r28, 0x01	; 1
    3f60:	eb a9       	ldd	r30, Y+51	; 0x33
    3f62:	fc a9       	ldd	r31, Y+52	; 0x34
    3f64:	f1 70       	andi	r31, 0x01	; 1
    3f66:	ea 0d       	add	r30, r10
    3f68:	fb 1d       	adc	r31, r11
    3f6a:	02 a9       	ldd	r16, Z+50	; 0x32
    3f6c:	0b ab       	std	Y+51, r16	; 0x33
    3f6e:	21 96       	adiw	r28, 0x01	; 1
    3f70:	2e ad       	ldd	r18, Y+62	; 0x3e
    3f72:	3f ad       	ldd	r19, Y+63	; 0x3f
    3f74:	21 97       	sbiw	r28, 0x01	; 1
    3f76:	23 2f       	mov	r18, r19
    3f78:	33 27       	eor	r19, r19
    3f7a:	26 95       	lsr	r18
    3f7c:	ac 01       	movw	r20, r24
    3f7e:	bd 01       	movw	r22, r26
    3f80:	42 0f       	add	r20, r18
    3f82:	53 1f       	adc	r21, r19
    3f84:	61 1d       	adc	r22, r1
    3f86:	71 1d       	adc	r23, r1
    3f88:	4b a7       	std	Y+43, r20	; 0x2b
    3f8a:	5c a7       	std	Y+44, r21	; 0x2c
    3f8c:	6d a7       	std	Y+45, r22	; 0x2d
    3f8e:	7e a7       	std	Y+46, r23	; 0x2e
    3f90:	44 16       	cp	r4, r20
    3f92:	55 06       	cpc	r5, r21
    3f94:	66 06       	cpc	r6, r22
    3f96:	77 06       	cpc	r7, r23
    3f98:	f9 f0       	breq	.+62     	; 0x3fd8 <f_open+0x6c0>
    3f9a:	d5 01       	movw	r26, r10
    3f9c:	14 96       	adiw	r26, 0x04	; 4
    3f9e:	8c 91       	ld	r24, X
    3fa0:	14 97       	sbiw	r26, 0x04	; 4
    3fa2:	81 11       	cpse	r24, r1
    3fa4:	f5 c4       	rjmp	.+2538   	; 0x4990 <f_open+0x1078>
    3fa6:	01 e0       	ldi	r16, 0x01	; 1
    3fa8:	10 e0       	ldi	r17, 0x00	; 0
    3faa:	2b a5       	ldd	r18, Y+43	; 0x2b
    3fac:	3c a5       	ldd	r19, Y+44	; 0x2c
    3fae:	4d a5       	ldd	r20, Y+45	; 0x2d
    3fb0:	5e a5       	ldd	r21, Y+46	; 0x2e
    3fb2:	b1 01       	movw	r22, r2
    3fb4:	d5 01       	movw	r26, r10
    3fb6:	11 96       	adiw	r26, 0x01	; 1
    3fb8:	8c 91       	ld	r24, X
    3fba:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    3fbe:	81 11       	cpse	r24, r1
    3fc0:	b8 c2       	rjmp	.+1392   	; 0x4532 <f_open+0xc1a>
    3fc2:	0b a5       	ldd	r16, Y+43	; 0x2b
    3fc4:	1c a5       	ldd	r17, Y+44	; 0x2c
    3fc6:	2d a5       	ldd	r18, Y+45	; 0x2d
    3fc8:	3e a5       	ldd	r19, Y+46	; 0x2e
    3fca:	d5 01       	movw	r26, r10
    3fcc:	9e 96       	adiw	r26, 0x2e	; 46
    3fce:	0d 93       	st	X+, r16
    3fd0:	1d 93       	st	X+, r17
    3fd2:	2d 93       	st	X+, r18
    3fd4:	3c 93       	st	X, r19
    3fd6:	d1 97       	sbiw	r26, 0x31	; 49
    3fd8:	21 96       	adiw	r28, 0x01	; 1
    3fda:	ee ad       	ldd	r30, Y+62	; 0x3e
    3fdc:	ff ad       	ldd	r31, Y+63	; 0x3f
    3fde:	21 97       	sbiw	r28, 0x01	; 1
    3fe0:	f1 70       	andi	r31, 0x01	; 1
    3fe2:	ea 0d       	add	r30, r10
    3fe4:	fb 1d       	adc	r31, r11
    3fe6:	82 a9       	ldd	r24, Z+50	; 0x32
    3fe8:	9b a9       	ldd	r25, Y+51	; 0x33
    3fea:	49 2e       	mov	r4, r25
    3fec:	51 2c       	mov	r5, r1
    3fee:	58 2a       	or	r5, r24
    3ff0:	c0 fe       	sbrs	r12, 0
    3ff2:	c9 c4       	rjmp	.+2450   	; 0x4986 <f_open+0x106e>
    3ff4:	52 94       	swap	r5
    3ff6:	42 94       	swap	r4
    3ff8:	8f e0       	ldi	r24, 0x0F	; 15
    3ffa:	48 22       	and	r4, r24
    3ffc:	45 24       	eor	r4, r5
    3ffe:	58 22       	and	r5, r24
    4000:	45 24       	eor	r4, r5
    4002:	61 2c       	mov	r6, r1
    4004:	71 2c       	mov	r7, r1
    4006:	41 14       	cp	r4, r1
    4008:	51 04       	cpc	r5, r1
    400a:	61 04       	cpc	r6, r1
    400c:	71 04       	cpc	r7, r1
    400e:	09 f4       	brne	.+2      	; 0x4012 <f_open+0x6fa>
    4010:	f6 c3       	rjmp	.+2028   	; 0x47fe <f_open+0xee6>
    4012:	e1 e0       	ldi	r30, 0x01	; 1
    4014:	4e 16       	cp	r4, r30
    4016:	51 04       	cpc	r5, r1
    4018:	61 04       	cpc	r6, r1
    401a:	71 04       	cpc	r7, r1
    401c:	09 f4       	brne	.+2      	; 0x4020 <f_open+0x708>
    401e:	fc ce       	rjmp	.-520    	; 0x3e18 <f_open+0x500>
    4020:	f5 01       	movw	r30, r10
    4022:	86 89       	ldd	r24, Z+22	; 0x16
    4024:	97 89       	ldd	r25, Z+23	; 0x17
    4026:	a0 8d       	ldd	r26, Z+24	; 0x18
    4028:	b1 8d       	ldd	r27, Z+25	; 0x19
    402a:	c8 16       	cp	r12, r24
    402c:	d9 06       	cpc	r13, r25
    402e:	ea 06       	cpc	r14, r26
    4030:	fb 06       	cpc	r15, r27
    4032:	08 f4       	brcc	.+2      	; 0x4036 <f_open+0x71e>
    4034:	09 cf       	rjmp	.-494    	; 0x3e48 <f_open+0x530>
    4036:	82 e0       	ldi	r24, 0x02	; 2
    4038:	cc cc       	rjmp	.-1640   	; 0x39d2 <f_open+0xba>
    403a:	21 14       	cp	r2, r1
    403c:	31 04       	cpc	r3, r1
    403e:	09 f4       	brne	.+2      	; 0x4042 <f_open+0x72a>
    4040:	91 c0       	rjmp	.+290    	; 0x4164 <f_open+0x84c>
    4042:	89 2d       	mov	r24, r9
    4044:	8c 71       	andi	r24, 0x1C	; 28
    4046:	09 f4       	brne	.+2      	; 0x404a <f_open+0x732>
    4048:	56 c0       	rjmp	.+172    	; 0x40f6 <f_open+0x7de>
    404a:	d1 01       	movw	r26, r2
    404c:	1b 96       	adiw	r26, 0x0b	; 11
    404e:	8c 91       	ld	r24, X
    4050:	81 71       	andi	r24, 0x11	; 17
    4052:	09 f0       	breq	.+2      	; 0x4056 <f_open+0x73e>
    4054:	60 c0       	rjmp	.+192    	; 0x4116 <f_open+0x7fe>
    4056:	92 fe       	sbrs	r9, 2
    4058:	93 ce       	rjmp	.-730    	; 0x3d80 <f_open+0x468>
    405a:	88 e0       	ldi	r24, 0x08	; 8
    405c:	ba cc       	rjmp	.-1676   	; 0x39d2 <f_open+0xba>
    405e:	0f a9       	ldd	r16, Y+55	; 0x37
    4060:	18 ad       	ldd	r17, Y+56	; 0x38
    4062:	29 ad       	ldd	r18, Y+57	; 0x39
    4064:	3a ad       	ldd	r19, Y+58	; 0x3a
    4066:	d7 01       	movw	r26, r14
    4068:	9e 96       	adiw	r26, 0x2e	; 46
    406a:	0d 93       	st	X+, r16
    406c:	1d 93       	st	X+, r17
    406e:	2d 93       	st	X+, r18
    4070:	3c 93       	st	X, r19
    4072:	d1 97       	sbiw	r26, 0x31	; 49
    4074:	e9 80       	ldd	r14, Y+1	; 0x01
    4076:	fa 80       	ldd	r15, Y+2	; 0x02
    4078:	ff a1       	ldd	r31, Y+39	; 0x27
    407a:	f0 62       	ori	r31, 0x20	; 32
    407c:	ff a3       	std	Y+39, r31	; 0x27
    407e:	0f 2f       	mov	r16, r31
    4080:	f7 01       	movw	r30, r14
    4082:	86 a5       	ldd	r24, Z+46	; 0x2e
    4084:	97 a5       	ldd	r25, Z+47	; 0x2f
    4086:	a0 a9       	ldd	r26, Z+48	; 0x30
    4088:	b1 a9       	ldd	r27, Z+49	; 0x31
    408a:	f6 01       	movw	r30, r12
    408c:	82 8f       	std	Z+26, r24	; 0x1a
    408e:	93 8f       	std	Z+27, r25	; 0x1b
    4090:	a4 8f       	std	Z+28, r26	; 0x1c
    4092:	b5 8f       	std	Z+29, r27	; 0x1d
    4094:	26 8e       	std	Z+30, r2	; 0x1e
    4096:	37 8e       	std	Z+31, r3	; 0x1f
    4098:	04 83       	std	Z+4, r16	; 0x04
    409a:	15 82       	std	Z+5, r1	; 0x05
    409c:	d1 01       	movw	r26, r2
    409e:	5a 96       	adiw	r26, 0x1a	; 26
    40a0:	8d 91       	ld	r24, X+
    40a2:	9c 91       	ld	r25, X
    40a4:	5b 97       	sbiw	r26, 0x1b	; 27
    40a6:	a0 e0       	ldi	r26, 0x00	; 0
    40a8:	b0 e0       	ldi	r27, 0x00	; 0
    40aa:	f7 01       	movw	r30, r14
    40ac:	20 81       	ld	r18, Z
    40ae:	23 30       	cpi	r18, 0x03	; 3
    40b0:	a1 f1       	breq	.+104    	; 0x411a <f_open+0x802>
    40b2:	f6 01       	movw	r30, r12
    40b4:	86 87       	std	Z+14, r24	; 0x0e
    40b6:	97 87       	std	Z+15, r25	; 0x0f
    40b8:	a0 8b       	std	Z+16, r26	; 0x10
    40ba:	b1 8b       	std	Z+17, r27	; 0x11
    40bc:	f1 01       	movw	r30, r2
    40be:	84 8d       	ldd	r24, Z+28	; 0x1c
    40c0:	95 8d       	ldd	r25, Z+29	; 0x1d
    40c2:	a6 8d       	ldd	r26, Z+30	; 0x1e
    40c4:	b7 8d       	ldd	r27, Z+31	; 0x1f
    40c6:	f6 01       	movw	r30, r12
    40c8:	82 87       	std	Z+10, r24	; 0x0a
    40ca:	93 87       	std	Z+11, r25	; 0x0b
    40cc:	a4 87       	std	Z+12, r26	; 0x0c
    40ce:	b5 87       	std	Z+13, r27	; 0x0d
    40d0:	16 82       	std	Z+6, r1	; 0x06
    40d2:	17 82       	std	Z+7, r1	; 0x07
    40d4:	10 86       	std	Z+8, r1	; 0x08
    40d6:	11 86       	std	Z+9, r1	; 0x09
    40d8:	16 8a       	std	Z+22, r1	; 0x16
    40da:	17 8a       	std	Z+23, r1	; 0x17
    40dc:	10 8e       	std	Z+24, r1	; 0x18
    40de:	11 8e       	std	Z+25, r1	; 0x19
    40e0:	e0 82       	st	Z, r14
    40e2:	f1 82       	std	Z+1, r15	; 0x01
    40e4:	d7 01       	movw	r26, r14
    40e6:	16 96       	adiw	r26, 0x06	; 6
    40e8:	8d 91       	ld	r24, X+
    40ea:	9c 91       	ld	r25, X
    40ec:	17 97       	sbiw	r26, 0x07	; 7
    40ee:	82 83       	std	Z+2, r24	; 0x02
    40f0:	93 83       	std	Z+3, r25	; 0x03
    40f2:	80 e0       	ldi	r24, 0x00	; 0
    40f4:	6e cc       	rjmp	.-1828   	; 0x39d2 <f_open+0xba>
    40f6:	f1 01       	movw	r30, r2
    40f8:	83 85       	ldd	r24, Z+11	; 0x0b
    40fa:	84 fd       	sbrc	r24, 4
    40fc:	1b c0       	rjmp	.+54     	; 0x4134 <f_open+0x81c>
    40fe:	91 fe       	sbrs	r9, 1
    4100:	02 c0       	rjmp	.+4      	; 0x4106 <f_open+0x7ee>
    4102:	80 fd       	sbrc	r24, 0
    4104:	08 c0       	rjmp	.+16     	; 0x4116 <f_open+0x7fe>
    4106:	89 2d       	mov	r24, r9
    4108:	88 70       	andi	r24, 0x08	; 8
    410a:	e9 80       	ldd	r14, Y+1	; 0x01
    410c:	fa 80       	ldd	r15, Y+2	; 0x02
    410e:	81 11       	cpse	r24, r1
    4110:	b3 cf       	rjmp	.-154    	; 0x4078 <f_open+0x760>
    4112:	0f a1       	ldd	r16, Y+39	; 0x27
    4114:	b5 cf       	rjmp	.-150    	; 0x4080 <f_open+0x768>
    4116:	87 e0       	ldi	r24, 0x07	; 7
    4118:	5c cc       	rjmp	.-1864   	; 0x39d2 <f_open+0xba>
    411a:	f1 01       	movw	r30, r2
    411c:	44 89       	ldd	r20, Z+20	; 0x14
    411e:	55 89       	ldd	r21, Z+21	; 0x15
    4120:	60 e0       	ldi	r22, 0x00	; 0
    4122:	70 e0       	ldi	r23, 0x00	; 0
    4124:	ba 01       	movw	r22, r20
    4126:	55 27       	eor	r21, r21
    4128:	44 27       	eor	r20, r20
    412a:	84 2b       	or	r24, r20
    412c:	95 2b       	or	r25, r21
    412e:	a6 2b       	or	r26, r22
    4130:	b7 2b       	or	r27, r23
    4132:	bf cf       	rjmp	.-130    	; 0x40b2 <f_open+0x79a>
    4134:	84 e0       	ldi	r24, 0x04	; 4
    4136:	4d cc       	rjmp	.-1894   	; 0x39d2 <f_open+0xba>
    4138:	e9 80       	ldd	r14, Y+1	; 0x01
    413a:	fa 80       	ldd	r15, Y+2	; 0x02
    413c:	0f a1       	ldd	r16, Y+39	; 0x27
    413e:	a0 cf       	rjmp	.-192    	; 0x4080 <f_open+0x768>
    4140:	f1 01       	movw	r30, r2
    4142:	16 a6       	std	Z+46, r1	; 0x2e
    4144:	17 a6       	std	Z+47, r1	; 0x2f
    4146:	10 aa       	std	Z+48, r1	; 0x30
    4148:	11 aa       	std	Z+49, r1	; 0x31
    414a:	81 01       	movw	r16, r2
    414c:	00 5d       	subi	r16, 0xD0	; 208
    414e:	1d 4f       	sbci	r17, 0xFD	; 253
    4150:	0f a3       	std	Y+39, r16	; 0x27
    4152:	18 a7       	std	Y+40, r17	; 0x28
    4154:	d8 01       	movw	r26, r16
    4156:	8d 91       	ld	r24, X+
    4158:	9c 91       	ld	r25, X
    415a:	85 35       	cpi	r24, 0x55	; 85
    415c:	9a 4a       	sbci	r25, 0xAA	; 170
    415e:	21 f0       	breq	.+8      	; 0x4168 <f_open+0x850>
    4160:	82 e0       	ldi	r24, 0x02	; 2
    4162:	84 cc       	rjmp	.-1784   	; 0x3a6c <f_open+0x154>
    4164:	86 e0       	ldi	r24, 0x06	; 6
    4166:	fa cd       	rjmp	.-1036   	; 0x3d5c <f_open+0x444>
    4168:	f1 01       	movw	r30, r2
    416a:	e8 59       	subi	r30, 0x98	; 152
    416c:	ff 4f       	sbci	r31, 0xFF	; 255
    416e:	ef a7       	std	Y+47, r30	; 0x2f
    4170:	f8 ab       	std	Y+48, r31	; 0x30
    4172:	80 81       	ld	r24, Z
    4174:	91 81       	ldd	r25, Z+1	; 0x01
    4176:	a2 81       	ldd	r26, Z+2	; 0x02
    4178:	b3 81       	ldd	r27, Z+3	; 0x03
    417a:	bb 27       	eor	r27, r27
    417c:	86 34       	cpi	r24, 0x46	; 70
    417e:	91 44       	sbci	r25, 0x41	; 65
    4180:	a4 45       	sbci	r26, 0x54	; 84
    4182:	b1 05       	cpc	r27, r1
    4184:	09 f4       	brne	.+2      	; 0x4188 <f_open+0x870>
    4186:	fd c3       	rjmp	.+2042   	; 0x4982 <f_open+0x106a>
    4188:	81 01       	movw	r16, r2
    418a:	0c 57       	subi	r16, 0x7C	; 124
    418c:	1f 4f       	sbci	r17, 0xFF	; 255
    418e:	0b a7       	std	Y+43, r16	; 0x2b
    4190:	1c a7       	std	Y+44, r17	; 0x2c
    4192:	f8 01       	movw	r30, r16
    4194:	80 81       	ld	r24, Z
    4196:	91 81       	ldd	r25, Z+1	; 0x01
    4198:	a2 81       	ldd	r26, Z+2	; 0x02
    419a:	b3 81       	ldd	r27, Z+3	; 0x03
    419c:	bb 27       	eor	r27, r27
    419e:	86 34       	cpi	r24, 0x46	; 70
    41a0:	91 44       	sbci	r25, 0x41	; 65
    41a2:	a4 45       	sbci	r26, 0x54	; 84
    41a4:	b1 05       	cpc	r27, r1
    41a6:	09 f4       	brne	.+2      	; 0x41aa <f_open+0x892>
    41a8:	77 cc       	rjmp	.-1810   	; 0x3a98 <f_open+0x180>
    41aa:	f1 01       	movw	r30, r2
    41ac:	ec 50       	subi	r30, 0x0C	; 12
    41ae:	fe 4f       	sbci	r31, 0xFE	; 254
    41b0:	80 81       	ld	r24, Z
    41b2:	88 23       	and	r24, r24
    41b4:	09 f4       	brne	.+2      	; 0x41b8 <f_open+0x8a0>
    41b6:	e1 c3       	rjmp	.+1986   	; 0x497a <f_open+0x1062>
    41b8:	34 96       	adiw	r30, 0x04	; 4
    41ba:	80 81       	ld	r24, Z
    41bc:	91 81       	ldd	r25, Z+1	; 0x01
    41be:	a2 81       	ldd	r26, Z+2	; 0x02
    41c0:	b3 81       	ldd	r27, Z+3	; 0x03
    41c2:	8f 8b       	std	Y+23, r24	; 0x17
    41c4:	98 8f       	std	Y+24, r25	; 0x18
    41c6:	a9 8f       	std	Y+25, r26	; 0x19
    41c8:	ba 8f       	std	Y+26, r27	; 0x1a
    41ca:	f1 01       	movw	r30, r2
    41cc:	ec 5f       	subi	r30, 0xFC	; 252
    41ce:	fd 4f       	sbci	r31, 0xFD	; 253
    41d0:	80 81       	ld	r24, Z
    41d2:	88 23       	and	r24, r24
    41d4:	09 f4       	brne	.+2      	; 0x41d8 <f_open+0x8c0>
    41d6:	cd c3       	rjmp	.+1946   	; 0x4972 <f_open+0x105a>
    41d8:	34 96       	adiw	r30, 0x04	; 4
    41da:	80 81       	ld	r24, Z
    41dc:	91 81       	ldd	r25, Z+1	; 0x01
    41de:	a2 81       	ldd	r26, Z+2	; 0x02
    41e0:	b3 81       	ldd	r27, Z+3	; 0x03
    41e2:	8b 8f       	std	Y+27, r24	; 0x1b
    41e4:	9c 8f       	std	Y+28, r25	; 0x1c
    41e6:	ad 8f       	std	Y+29, r26	; 0x1d
    41e8:	be 8f       	std	Y+30, r27	; 0x1e
    41ea:	f1 01       	movw	r30, r2
    41ec:	ec 5e       	subi	r30, 0xEC	; 236
    41ee:	fd 4f       	sbci	r31, 0xFD	; 253
    41f0:	80 81       	ld	r24, Z
    41f2:	88 23       	and	r24, r24
    41f4:	09 f4       	brne	.+2      	; 0x41f8 <f_open+0x8e0>
    41f6:	b9 c3       	rjmp	.+1906   	; 0x496a <f_open+0x1052>
    41f8:	34 96       	adiw	r30, 0x04	; 4
    41fa:	80 81       	ld	r24, Z
    41fc:	91 81       	ldd	r25, Z+1	; 0x01
    41fe:	a2 81       	ldd	r26, Z+2	; 0x02
    4200:	b3 81       	ldd	r27, Z+3	; 0x03
    4202:	8f 8f       	std	Y+31, r24	; 0x1f
    4204:	98 a3       	std	Y+32, r25	; 0x20
    4206:	a9 a3       	std	Y+33, r26	; 0x21
    4208:	ba a3       	std	Y+34, r27	; 0x22
    420a:	f1 01       	movw	r30, r2
    420c:	ec 5d       	subi	r30, 0xDC	; 220
    420e:	fd 4f       	sbci	r31, 0xFD	; 253
    4210:	80 81       	ld	r24, Z
    4212:	88 23       	and	r24, r24
    4214:	09 f4       	brne	.+2      	; 0x4218 <f_open+0x900>
    4216:	a5 c3       	rjmp	.+1866   	; 0x4962 <f_open+0x104a>
    4218:	34 96       	adiw	r30, 0x04	; 4
    421a:	80 81       	ld	r24, Z
    421c:	91 81       	ldd	r25, Z+1	; 0x01
    421e:	a2 81       	ldd	r26, Z+2	; 0x02
    4220:	b3 81       	ldd	r27, Z+3	; 0x03
    4222:	8b a3       	std	Y+35, r24	; 0x23
    4224:	9c a3       	std	Y+36, r25	; 0x24
    4226:	ad a3       	std	Y+37, r26	; 0x25
    4228:	be a3       	std	Y+38, r27	; 0x26
    422a:	4f 88       	ldd	r4, Y+23	; 0x17
    422c:	58 8c       	ldd	r5, Y+24	; 0x18
    422e:	69 8c       	ldd	r6, Y+25	; 0x19
    4230:	7a 8c       	ldd	r7, Y+26	; 0x1a
    4232:	41 14       	cp	r4, r1
    4234:	51 04       	cpc	r5, r1
    4236:	61 04       	cpc	r6, r1
    4238:	71 04       	cpc	r7, r1
    423a:	09 f0       	breq	.+2      	; 0x423e <f_open+0x926>
    423c:	f6 c0       	rjmp	.+492    	; 0x442a <f_open+0xb12>
    423e:	4b 8c       	ldd	r4, Y+27	; 0x1b
    4240:	5c 8c       	ldd	r5, Y+28	; 0x1c
    4242:	6d 8c       	ldd	r6, Y+29	; 0x1d
    4244:	7e 8c       	ldd	r7, Y+30	; 0x1e
    4246:	41 14       	cp	r4, r1
    4248:	51 04       	cpc	r5, r1
    424a:	61 04       	cpc	r6, r1
    424c:	71 04       	cpc	r7, r1
    424e:	09 f0       	breq	.+2      	; 0x4252 <f_open+0x93a>
    4250:	44 c1       	rjmp	.+648    	; 0x44da <f_open+0xbc2>
    4252:	4f 8c       	ldd	r4, Y+31	; 0x1f
    4254:	58 a0       	ldd	r5, Y+32	; 0x20
    4256:	69 a0       	ldd	r6, Y+33	; 0x21
    4258:	7a a0       	ldd	r7, Y+34	; 0x22
    425a:	41 14       	cp	r4, r1
    425c:	51 04       	cpc	r5, r1
    425e:	61 04       	cpc	r6, r1
    4260:	71 04       	cpc	r7, r1
    4262:	09 f0       	breq	.+2      	; 0x4266 <f_open+0x94e>
    4264:	0e c1       	rjmp	.+540    	; 0x4482 <f_open+0xb6a>
    4266:	4b a0       	ldd	r4, Y+35	; 0x23
    4268:	5c a0       	ldd	r5, Y+36	; 0x24
    426a:	6d a0       	ldd	r6, Y+37	; 0x25
    426c:	7e a0       	ldd	r7, Y+38	; 0x26
    426e:	41 14       	cp	r4, r1
    4270:	51 04       	cpc	r5, r1
    4272:	61 04       	cpc	r6, r1
    4274:	71 04       	cpc	r7, r1
    4276:	09 f4       	brne	.+2      	; 0x427a <f_open+0x962>
    4278:	01 cc       	rjmp	.-2046   	; 0x3a7c <f_open+0x164>
    427a:	d1 01       	movw	r26, r2
    427c:	14 96       	adiw	r26, 0x04	; 4
    427e:	1c 92       	st	X, r1
    4280:	14 97       	sbiw	r26, 0x04	; 4
    4282:	0f ef       	ldi	r16, 0xFF	; 255
    4284:	1f ef       	ldi	r17, 0xFF	; 255
    4286:	98 01       	movw	r18, r16
    4288:	9e 96       	adiw	r26, 0x2e	; 46
    428a:	0d 93       	st	X+, r16
    428c:	1d 93       	st	X+, r17
    428e:	2d 93       	st	X+, r18
    4290:	3c 93       	st	X, r19
    4292:	d1 97       	sbiw	r26, 0x31	; 49
    4294:	bf ef       	ldi	r27, 0xFF	; 255
    4296:	4b 16       	cp	r4, r27
    4298:	5b 06       	cpc	r5, r27
    429a:	6b 06       	cpc	r6, r27
    429c:	7b 06       	cpc	r7, r27
    429e:	09 f4       	brne	.+2      	; 0x42a2 <f_open+0x98a>
    42a0:	62 c2       	rjmp	.+1220   	; 0x4766 <f_open+0xe4e>
    42a2:	01 e0       	ldi	r16, 0x01	; 1
    42a4:	10 e0       	ldi	r17, 0x00	; 0
    42a6:	a3 01       	movw	r20, r6
    42a8:	92 01       	movw	r18, r4
    42aa:	b7 01       	movw	r22, r14
    42ac:	f1 01       	movw	r30, r2
    42ae:	81 81       	ldd	r24, Z+1	; 0x01
    42b0:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    42b4:	88 23       	and	r24, r24
    42b6:	09 f4       	brne	.+2      	; 0x42ba <f_open+0x9a2>
    42b8:	4f c2       	rjmp	.+1182   	; 0x4758 <f_open+0xe40>
    42ba:	ee 24       	eor	r14, r14
    42bc:	ea 94       	dec	r14
    42be:	fe 2c       	mov	r15, r14
    42c0:	87 01       	movw	r16, r14
    42c2:	d1 01       	movw	r26, r2
    42c4:	9e 96       	adiw	r26, 0x2e	; 46
    42c6:	ed 92       	st	X+, r14
    42c8:	fd 92       	st	X+, r15
    42ca:	0d 93       	st	X+, r16
    42cc:	1c 93       	st	X, r17
    42ce:	d1 97       	sbiw	r26, 0x31	; 49
    42d0:	81 e0       	ldi	r24, 0x01	; 1
    42d2:	7f cb       	rjmp	.-2306   	; 0x39d2 <f_open+0xba>
    42d4:	84 89       	ldd	r24, Z+20	; 0x14
    42d6:	95 89       	ldd	r25, Z+21	; 0x15
    42d8:	a0 e0       	ldi	r26, 0x00	; 0
    42da:	b0 e0       	ldi	r27, 0x00	; 0
    42dc:	dc 01       	movw	r26, r24
    42de:	99 27       	eor	r25, r25
    42e0:	88 27       	eor	r24, r24
    42e2:	08 2b       	or	r16, r24
    42e4:	19 2b       	or	r17, r25
    42e6:	2a 2b       	or	r18, r26
    42e8:	3b 2b       	or	r19, r27
    42ea:	0f a7       	std	Y+47, r16	; 0x2f
    42ec:	18 ab       	std	Y+48, r17	; 0x30
    42ee:	29 ab       	std	Y+49, r18	; 0x31
    42f0:	3a ab       	std	Y+50, r19	; 0x32
    42f2:	67 cd       	rjmp	.-1330   	; 0x3dc2 <f_open+0x4aa>
    42f4:	97 01       	movw	r18, r14
    42f6:	86 01       	movw	r16, r12
    42f8:	a7 e0       	ldi	r26, 0x07	; 7
    42fa:	36 95       	lsr	r19
    42fc:	27 95       	ror	r18
    42fe:	17 95       	ror	r17
    4300:	07 95       	ror	r16
    4302:	aa 95       	dec	r26
    4304:	d1 f7       	brne	.-12     	; 0x42fa <f_open+0x9e2>
    4306:	f5 01       	movw	r30, r10
    4308:	82 a1       	ldd	r24, Z+34	; 0x22
    430a:	93 a1       	ldd	r25, Z+35	; 0x23
    430c:	a4 a1       	ldd	r26, Z+36	; 0x24
    430e:	b5 a1       	ldd	r27, Z+37	; 0x25
    4310:	08 0f       	add	r16, r24
    4312:	19 1f       	adc	r17, r25
    4314:	2a 1f       	adc	r18, r26
    4316:	3b 1f       	adc	r19, r27
    4318:	0b a7       	std	Y+43, r16	; 0x2b
    431a:	1c a7       	std	Y+44, r17	; 0x2c
    431c:	2d a7       	std	Y+45, r18	; 0x2d
    431e:	3e a7       	std	Y+46, r19	; 0x2e
    4320:	46 a4       	ldd	r4, Z+46	; 0x2e
    4322:	57 a4       	ldd	r5, Z+47	; 0x2f
    4324:	60 a8       	ldd	r6, Z+48	; 0x30
    4326:	71 a8       	ldd	r7, Z+49	; 0x31
    4328:	04 15       	cp	r16, r4
    432a:	15 05       	cpc	r17, r5
    432c:	26 05       	cpc	r18, r6
    432e:	37 05       	cpc	r19, r7
    4330:	e1 f0       	breq	.+56     	; 0x436a <f_open+0xa52>
    4332:	84 81       	ldd	r24, Z+4	; 0x04
    4334:	81 11       	cpse	r24, r1
    4336:	76 c1       	rjmp	.+748    	; 0x4624 <f_open+0xd0c>
    4338:	01 e0       	ldi	r16, 0x01	; 1
    433a:	10 e0       	ldi	r17, 0x00	; 0
    433c:	2b a5       	ldd	r18, Y+43	; 0x2b
    433e:	3c a5       	ldd	r19, Y+44	; 0x2c
    4340:	4d a5       	ldd	r20, Y+45	; 0x2d
    4342:	5e a5       	ldd	r21, Y+46	; 0x2e
    4344:	b1 01       	movw	r22, r2
    4346:	d5 01       	movw	r26, r10
    4348:	11 96       	adiw	r26, 0x01	; 1
    434a:	8c 91       	ld	r24, X
    434c:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    4350:	81 11       	cpse	r24, r1
    4352:	ef c0       	rjmp	.+478    	; 0x4532 <f_open+0xc1a>
    4354:	0b a5       	ldd	r16, Y+43	; 0x2b
    4356:	1c a5       	ldd	r17, Y+44	; 0x2c
    4358:	2d a5       	ldd	r18, Y+45	; 0x2d
    435a:	3e a5       	ldd	r19, Y+46	; 0x2e
    435c:	d5 01       	movw	r26, r10
    435e:	9e 96       	adiw	r26, 0x2e	; 46
    4360:	0d 93       	st	X+, r16
    4362:	1d 93       	st	X+, r17
    4364:	2d 93       	st	X+, r18
    4366:	3c 93       	st	X, r19
    4368:	d1 97       	sbiw	r26, 0x31	; 49
    436a:	d7 01       	movw	r26, r14
    436c:	c6 01       	movw	r24, r12
    436e:	88 0f       	add	r24, r24
    4370:	99 1f       	adc	r25, r25
    4372:	aa 1f       	adc	r26, r26
    4374:	bb 1f       	adc	r27, r27
    4376:	88 0f       	add	r24, r24
    4378:	99 1f       	adc	r25, r25
    437a:	aa 1f       	adc	r26, r26
    437c:	bb 1f       	adc	r27, r27
    437e:	8c 7f       	andi	r24, 0xFC	; 252
    4380:	91 70       	andi	r25, 0x01	; 1
    4382:	aa 27       	eor	r26, r26
    4384:	bb 27       	eor	r27, r27
    4386:	f5 01       	movw	r30, r10
    4388:	e8 0f       	add	r30, r24
    438a:	f9 1f       	adc	r31, r25
    438c:	42 a8       	ldd	r4, Z+50	; 0x32
    438e:	53 a8       	ldd	r5, Z+51	; 0x33
    4390:	64 a8       	ldd	r6, Z+52	; 0x34
    4392:	75 a8       	ldd	r7, Z+53	; 0x35
    4394:	bf e0       	ldi	r27, 0x0F	; 15
    4396:	7b 22       	and	r7, r27
    4398:	36 ce       	rjmp	.-916    	; 0x4006 <f_open+0x6ee>
    439a:	33 27       	eor	r19, r19
    439c:	2f 2d       	mov	r18, r15
    439e:	1e 2d       	mov	r17, r14
    43a0:	0d 2d       	mov	r16, r13
    43a2:	f5 01       	movw	r30, r10
    43a4:	82 a1       	ldd	r24, Z+34	; 0x22
    43a6:	93 a1       	ldd	r25, Z+35	; 0x23
    43a8:	a4 a1       	ldd	r26, Z+36	; 0x24
    43aa:	b5 a1       	ldd	r27, Z+37	; 0x25
    43ac:	08 0f       	add	r16, r24
    43ae:	19 1f       	adc	r17, r25
    43b0:	2a 1f       	adc	r18, r26
    43b2:	3b 1f       	adc	r19, r27
    43b4:	0b a7       	std	Y+43, r16	; 0x2b
    43b6:	1c a7       	std	Y+44, r17	; 0x2c
    43b8:	2d a7       	std	Y+45, r18	; 0x2d
    43ba:	3e a7       	std	Y+46, r19	; 0x2e
    43bc:	46 a4       	ldd	r4, Z+46	; 0x2e
    43be:	57 a4       	ldd	r5, Z+47	; 0x2f
    43c0:	60 a8       	ldd	r6, Z+48	; 0x30
    43c2:	71 a8       	ldd	r7, Z+49	; 0x31
    43c4:	04 15       	cp	r16, r4
    43c6:	15 05       	cpc	r17, r5
    43c8:	26 05       	cpc	r18, r6
    43ca:	37 05       	cpc	r19, r7
    43cc:	e1 f0       	breq	.+56     	; 0x4406 <f_open+0xaee>
    43ce:	84 81       	ldd	r24, Z+4	; 0x04
    43d0:	81 11       	cpse	r24, r1
    43d2:	e1 c0       	rjmp	.+450    	; 0x4596 <f_open+0xc7e>
    43d4:	01 e0       	ldi	r16, 0x01	; 1
    43d6:	10 e0       	ldi	r17, 0x00	; 0
    43d8:	2b a5       	ldd	r18, Y+43	; 0x2b
    43da:	3c a5       	ldd	r19, Y+44	; 0x2c
    43dc:	4d a5       	ldd	r20, Y+45	; 0x2d
    43de:	5e a5       	ldd	r21, Y+46	; 0x2e
    43e0:	b1 01       	movw	r22, r2
    43e2:	d5 01       	movw	r26, r10
    43e4:	11 96       	adiw	r26, 0x01	; 1
    43e6:	8c 91       	ld	r24, X
    43e8:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    43ec:	81 11       	cpse	r24, r1
    43ee:	a1 c0       	rjmp	.+322    	; 0x4532 <f_open+0xc1a>
    43f0:	0b a5       	ldd	r16, Y+43	; 0x2b
    43f2:	1c a5       	ldd	r17, Y+44	; 0x2c
    43f4:	2d a5       	ldd	r18, Y+45	; 0x2d
    43f6:	3e a5       	ldd	r19, Y+46	; 0x2e
    43f8:	d5 01       	movw	r26, r10
    43fa:	9e 96       	adiw	r26, 0x2e	; 46
    43fc:	0d 93       	st	X+, r16
    43fe:	1d 93       	st	X+, r17
    4400:	2d 93       	st	X+, r18
    4402:	3c 93       	st	X, r19
    4404:	d1 97       	sbiw	r26, 0x31	; 49
    4406:	d7 01       	movw	r26, r14
    4408:	c6 01       	movw	r24, r12
    440a:	88 0f       	add	r24, r24
    440c:	99 1f       	adc	r25, r25
    440e:	aa 1f       	adc	r26, r26
    4410:	bb 1f       	adc	r27, r27
    4412:	8e 7f       	andi	r24, 0xFE	; 254
    4414:	91 70       	andi	r25, 0x01	; 1
    4416:	aa 27       	eor	r26, r26
    4418:	bb 27       	eor	r27, r27
    441a:	f5 01       	movw	r30, r10
    441c:	e8 0f       	add	r30, r24
    441e:	f9 1f       	adc	r31, r25
    4420:	42 a8       	ldd	r4, Z+50	; 0x32
    4422:	53 a8       	ldd	r5, Z+51	; 0x33
    4424:	61 2c       	mov	r6, r1
    4426:	71 2c       	mov	r7, r1
    4428:	ee cd       	rjmp	.-1060   	; 0x4006 <f_open+0x6ee>
    442a:	d1 01       	movw	r26, r2
    442c:	14 96       	adiw	r26, 0x04	; 4
    442e:	1c 92       	st	X, r1
    4430:	14 97       	sbiw	r26, 0x04	; 4
    4432:	0f ef       	ldi	r16, 0xFF	; 255
    4434:	1f ef       	ldi	r17, 0xFF	; 255
    4436:	98 01       	movw	r18, r16
    4438:	9e 96       	adiw	r26, 0x2e	; 46
    443a:	0d 93       	st	X+, r16
    443c:	1d 93       	st	X+, r17
    443e:	2d 93       	st	X+, r18
    4440:	3c 93       	st	X, r19
    4442:	d1 97       	sbiw	r26, 0x31	; 49
    4444:	bf ef       	ldi	r27, 0xFF	; 255
    4446:	4b 16       	cp	r4, r27
    4448:	5b 06       	cpc	r5, r27
    444a:	6b 06       	cpc	r6, r27
    444c:	7b 06       	cpc	r7, r27
    444e:	09 f4       	brne	.+2      	; 0x4452 <f_open+0xb3a>
    4450:	b3 c1       	rjmp	.+870    	; 0x47b8 <f_open+0xea0>
    4452:	01 e0       	ldi	r16, 0x01	; 1
    4454:	10 e0       	ldi	r17, 0x00	; 0
    4456:	a3 01       	movw	r20, r6
    4458:	92 01       	movw	r18, r4
    445a:	b7 01       	movw	r22, r14
    445c:	d1 01       	movw	r26, r2
    445e:	11 96       	adiw	r26, 0x01	; 1
    4460:	8c 91       	ld	r24, X
    4462:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    4466:	88 23       	and	r24, r24
    4468:	09 f4       	brne	.+2      	; 0x446c <f_open+0xb54>
    446a:	a1 c1       	rjmp	.+834    	; 0x47ae <f_open+0xe96>
    446c:	0f ef       	ldi	r16, 0xFF	; 255
    446e:	1f ef       	ldi	r17, 0xFF	; 255
    4470:	98 01       	movw	r18, r16
    4472:	d1 01       	movw	r26, r2
    4474:	9e 96       	adiw	r26, 0x2e	; 46
    4476:	0d 93       	st	X+, r16
    4478:	1d 93       	st	X+, r17
    447a:	2d 93       	st	X+, r18
    447c:	3c 93       	st	X, r19
    447e:	d1 97       	sbiw	r26, 0x31	; 49
    4480:	de ce       	rjmp	.-580    	; 0x423e <f_open+0x926>
    4482:	d1 01       	movw	r26, r2
    4484:	14 96       	adiw	r26, 0x04	; 4
    4486:	1c 92       	st	X, r1
    4488:	14 97       	sbiw	r26, 0x04	; 4
    448a:	0f ef       	ldi	r16, 0xFF	; 255
    448c:	1f ef       	ldi	r17, 0xFF	; 255
    448e:	98 01       	movw	r18, r16
    4490:	9e 96       	adiw	r26, 0x2e	; 46
    4492:	0d 93       	st	X+, r16
    4494:	1d 93       	st	X+, r17
    4496:	2d 93       	st	X+, r18
    4498:	3c 93       	st	X, r19
    449a:	d1 97       	sbiw	r26, 0x31	; 49
    449c:	bf ef       	ldi	r27, 0xFF	; 255
    449e:	4b 16       	cp	r4, r27
    44a0:	5b 06       	cpc	r5, r27
    44a2:	6b 06       	cpc	r6, r27
    44a4:	7b 06       	cpc	r7, r27
    44a6:	09 f4       	brne	.+2      	; 0x44aa <f_open+0xb92>
    44a8:	53 c0       	rjmp	.+166    	; 0x4550 <f_open+0xc38>
    44aa:	01 e0       	ldi	r16, 0x01	; 1
    44ac:	10 e0       	ldi	r17, 0x00	; 0
    44ae:	a3 01       	movw	r20, r6
    44b0:	92 01       	movw	r18, r4
    44b2:	b7 01       	movw	r22, r14
    44b4:	d1 01       	movw	r26, r2
    44b6:	11 96       	adiw	r26, 0x01	; 1
    44b8:	8c 91       	ld	r24, X
    44ba:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    44be:	88 23       	and	r24, r24
    44c0:	09 f4       	brne	.+2      	; 0x44c4 <f_open+0xbac>
    44c2:	41 c0       	rjmp	.+130    	; 0x4546 <f_open+0xc2e>
    44c4:	0f ef       	ldi	r16, 0xFF	; 255
    44c6:	1f ef       	ldi	r17, 0xFF	; 255
    44c8:	98 01       	movw	r18, r16
    44ca:	d1 01       	movw	r26, r2
    44cc:	9e 96       	adiw	r26, 0x2e	; 46
    44ce:	0d 93       	st	X+, r16
    44d0:	1d 93       	st	X+, r17
    44d2:	2d 93       	st	X+, r18
    44d4:	3c 93       	st	X, r19
    44d6:	d1 97       	sbiw	r26, 0x31	; 49
    44d8:	c6 ce       	rjmp	.-628    	; 0x4266 <f_open+0x94e>
    44da:	d1 01       	movw	r26, r2
    44dc:	14 96       	adiw	r26, 0x04	; 4
    44de:	1c 92       	st	X, r1
    44e0:	14 97       	sbiw	r26, 0x04	; 4
    44e2:	0f ef       	ldi	r16, 0xFF	; 255
    44e4:	1f ef       	ldi	r17, 0xFF	; 255
    44e6:	98 01       	movw	r18, r16
    44e8:	9e 96       	adiw	r26, 0x2e	; 46
    44ea:	0d 93       	st	X+, r16
    44ec:	1d 93       	st	X+, r17
    44ee:	2d 93       	st	X+, r18
    44f0:	3c 93       	st	X, r19
    44f2:	d1 97       	sbiw	r26, 0x31	; 49
    44f4:	bf ef       	ldi	r27, 0xFF	; 255
    44f6:	4b 16       	cp	r4, r27
    44f8:	5b 06       	cpc	r5, r27
    44fa:	6b 06       	cpc	r6, r27
    44fc:	7b 06       	cpc	r7, r27
    44fe:	09 f4       	brne	.+2      	; 0x4502 <f_open+0xbea>
    4500:	c7 c1       	rjmp	.+910    	; 0x4890 <f_open+0xf78>
    4502:	01 e0       	ldi	r16, 0x01	; 1
    4504:	10 e0       	ldi	r17, 0x00	; 0
    4506:	a3 01       	movw	r20, r6
    4508:	92 01       	movw	r18, r4
    450a:	b7 01       	movw	r22, r14
    450c:	d1 01       	movw	r26, r2
    450e:	11 96       	adiw	r26, 0x01	; 1
    4510:	8c 91       	ld	r24, X
    4512:	0e 94 ab 2a 	call	0x5556	; 0x5556 <disk_read>
    4516:	88 23       	and	r24, r24
    4518:	09 f4       	brne	.+2      	; 0x451c <f_open+0xc04>
    451a:	b5 c1       	rjmp	.+874    	; 0x4886 <f_open+0xf6e>
    451c:	0f ef       	ldi	r16, 0xFF	; 255
    451e:	1f ef       	ldi	r17, 0xFF	; 255
    4520:	98 01       	movw	r18, r16
    4522:	d1 01       	movw	r26, r2
    4524:	9e 96       	adiw	r26, 0x2e	; 46
    4526:	0d 93       	st	X+, r16
    4528:	1d 93       	st	X+, r17
    452a:	2d 93       	st	X+, r18
    452c:	3c 93       	st	X, r19
    452e:	d1 97       	sbiw	r26, 0x31	; 49
    4530:	90 ce       	rjmp	.-736    	; 0x4252 <f_open+0x93a>
    4532:	8f ef       	ldi	r24, 0xFF	; 255
    4534:	9f ef       	ldi	r25, 0xFF	; 255
    4536:	dc 01       	movw	r26, r24
    4538:	f5 01       	movw	r30, r10
    453a:	86 a7       	std	Z+46, r24	; 0x2e
    453c:	97 a7       	std	Z+47, r25	; 0x2f
    453e:	a0 ab       	std	Z+48, r26	; 0x30
    4540:	b1 ab       	std	Z+49, r27	; 0x31
    4542:	81 e0       	ldi	r24, 0x01	; 1
    4544:	46 ca       	rjmp	.-2932   	; 0x39d2 <f_open+0xba>
    4546:	f1 01       	movw	r30, r2
    4548:	46 a6       	std	Z+46, r4	; 0x2e
    454a:	57 a6       	std	Z+47, r5	; 0x2f
    454c:	60 aa       	std	Z+48, r6	; 0x30
    454e:	71 aa       	std	Z+49, r7	; 0x31
    4550:	ef a1       	ldd	r30, Y+39	; 0x27
    4552:	f8 a5       	ldd	r31, Y+40	; 0x28
    4554:	80 81       	ld	r24, Z
    4556:	91 81       	ldd	r25, Z+1	; 0x01
    4558:	85 35       	cpi	r24, 0x55	; 85
    455a:	9a 4a       	sbci	r25, 0xAA	; 170
    455c:	09 f0       	breq	.+2      	; 0x4560 <f_open+0xc48>
    455e:	83 ce       	rjmp	.-762    	; 0x4266 <f_open+0x94e>
    4560:	ef a5       	ldd	r30, Y+47	; 0x2f
    4562:	f8 a9       	ldd	r31, Y+48	; 0x30
    4564:	80 81       	ld	r24, Z
    4566:	91 81       	ldd	r25, Z+1	; 0x01
    4568:	a2 81       	ldd	r26, Z+2	; 0x02
    456a:	b3 81       	ldd	r27, Z+3	; 0x03
    456c:	bb 27       	eor	r27, r27
    456e:	86 34       	cpi	r24, 0x46	; 70
    4570:	91 44       	sbci	r25, 0x41	; 65
    4572:	a4 45       	sbci	r26, 0x54	; 84
    4574:	b1 05       	cpc	r27, r1
    4576:	09 f4       	brne	.+2      	; 0x457a <f_open+0xc62>
    4578:	92 ca       	rjmp	.-2780   	; 0x3a9e <f_open+0x186>
    457a:	eb a5       	ldd	r30, Y+43	; 0x2b
    457c:	fc a5       	ldd	r31, Y+44	; 0x2c
    457e:	80 81       	ld	r24, Z
    4580:	91 81       	ldd	r25, Z+1	; 0x01
    4582:	a2 81       	ldd	r26, Z+2	; 0x02
    4584:	b3 81       	ldd	r27, Z+3	; 0x03
    4586:	bb 27       	eor	r27, r27
    4588:	86 34       	cpi	r24, 0x46	; 70
    458a:	91 44       	sbci	r25, 0x41	; 65
    458c:	a4 45       	sbci	r26, 0x54	; 84
    458e:	b1 05       	cpc	r27, r1
    4590:	09 f0       	breq	.+2      	; 0x4594 <f_open+0xc7c>
    4592:	69 ce       	rjmp	.-814    	; 0x4266 <f_open+0x94e>
    4594:	84 ca       	rjmp	.-2808   	; 0x3a9e <f_open+0x186>
    4596:	01 e0       	ldi	r16, 0x01	; 1
    4598:	10 e0       	ldi	r17, 0x00	; 0
    459a:	a3 01       	movw	r20, r6
    459c:	92 01       	movw	r18, r4
    459e:	b1 01       	movw	r22, r2
    45a0:	81 81       	ldd	r24, Z+1	; 0x01
    45a2:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    45a6:	81 11       	cpse	r24, r1
    45a8:	93 ce       	rjmp	.-730    	; 0x42d0 <f_open+0x9b8>
    45aa:	d5 01       	movw	r26, r10
    45ac:	14 96       	adiw	r26, 0x04	; 4
    45ae:	1c 92       	st	X, r1
    45b0:	14 97       	sbiw	r26, 0x04	; 4
    45b2:	5a 96       	adiw	r26, 0x1a	; 26
    45b4:	8d 91       	ld	r24, X+
    45b6:	9d 91       	ld	r25, X+
    45b8:	0d 90       	ld	r0, X+
    45ba:	bc 91       	ld	r27, X
    45bc:	a0 2d       	mov	r26, r0
    45be:	f5 01       	movw	r30, r10
    45c0:	42 a1       	ldd	r20, Z+34	; 0x22
    45c2:	53 a1       	ldd	r21, Z+35	; 0x23
    45c4:	64 a1       	ldd	r22, Z+36	; 0x24
    45c6:	75 a1       	ldd	r23, Z+37	; 0x25
    45c8:	93 01       	movw	r18, r6
    45ca:	82 01       	movw	r16, r4
    45cc:	04 1b       	sub	r16, r20
    45ce:	15 0b       	sbc	r17, r21
    45d0:	26 0b       	sbc	r18, r22
    45d2:	37 0b       	sbc	r19, r23
    45d4:	08 17       	cp	r16, r24
    45d6:	19 07       	cpc	r17, r25
    45d8:	2a 07       	cpc	r18, r26
    45da:	3b 07       	cpc	r19, r27
    45dc:	08 f0       	brcs	.+2      	; 0x45e0 <f_open+0xcc8>
    45de:	fa ce       	rjmp	.-524    	; 0x43d4 <f_open+0xabc>
    45e0:	83 80       	ldd	r8, Z+3	; 0x03
    45e2:	91 2c       	mov	r9, r1
    45e4:	12 e0       	ldi	r17, 0x02	; 2
    45e6:	81 16       	cp	r8, r17
    45e8:	91 04       	cpc	r9, r1
    45ea:	30 f4       	brcc	.+12     	; 0x45f8 <f_open+0xce0>
    45ec:	f3 ce       	rjmp	.-538    	; 0x43d4 <f_open+0xabc>
    45ee:	f5 01       	movw	r30, r10
    45f0:	82 8d       	ldd	r24, Z+26	; 0x1a
    45f2:	93 8d       	ldd	r25, Z+27	; 0x1b
    45f4:	a4 8d       	ldd	r26, Z+28	; 0x1c
    45f6:	b5 8d       	ldd	r27, Z+29	; 0x1d
    45f8:	48 0e       	add	r4, r24
    45fa:	59 1e       	adc	r5, r25
    45fc:	6a 1e       	adc	r6, r26
    45fe:	7b 1e       	adc	r7, r27
    4600:	01 e0       	ldi	r16, 0x01	; 1
    4602:	10 e0       	ldi	r17, 0x00	; 0
    4604:	a3 01       	movw	r20, r6
    4606:	92 01       	movw	r18, r4
    4608:	b1 01       	movw	r22, r2
    460a:	d5 01       	movw	r26, r10
    460c:	11 96       	adiw	r26, 0x01	; 1
    460e:	8c 91       	ld	r24, X
    4610:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    4614:	b1 e0       	ldi	r27, 0x01	; 1
    4616:	8b 1a       	sub	r8, r27
    4618:	91 08       	sbc	r9, r1
    461a:	e1 e0       	ldi	r30, 0x01	; 1
    461c:	8e 16       	cp	r8, r30
    461e:	91 04       	cpc	r9, r1
    4620:	31 f7       	brne	.-52     	; 0x45ee <f_open+0xcd6>
    4622:	d8 ce       	rjmp	.-592    	; 0x43d4 <f_open+0xabc>
    4624:	01 e0       	ldi	r16, 0x01	; 1
    4626:	10 e0       	ldi	r17, 0x00	; 0
    4628:	a3 01       	movw	r20, r6
    462a:	92 01       	movw	r18, r4
    462c:	b1 01       	movw	r22, r2
    462e:	81 81       	ldd	r24, Z+1	; 0x01
    4630:	0e 94 2a 2b 	call	0x5654	; 0x5654 <disk_write>
    4634:	81 11       	cpse	r24, r1
    4636:	4c ce       	rjmp	.-872    	; 0x42d0 <f_open+0x9b8>
    4638:	d5 01       	movw	r26, r10
    463a:	14 96       	adiw	r26, 0x04	; 4
    463c:	1c 92       	st	X, r1
    463e:	14 97       	sbiw	r26, 0x04	; 4
    4640:	5a 96       	adiw	r26, 0x1a	; 26
    4642:	8d 91       	ld	r24, X+
    4644:	9d 91       	ld	r25, X+
    4646:	0d 90       	ld	r0, X+
    4648:	bc 91       	ld	r27, X
    464a:	a0 2d       	mov	r26, r0
    464c:	f5 01       	movw	r30, r10
    464e:	42 a1       	ldd	r20, Z+34	; 0x22
    4650:	53 a1       	ldd	r21, Z+35	; 0x23
    4652:	64 a1       	ldd	r22, Z+36	; 0x24
    4654:	75 a1       	ldd	r23, Z+37	; 0x25
    4656:	93 01       	movw	r18, r6
    4658:	82 01       	movw	r16, r4
    465a:	04 1b       	sub	r16, r20
    465c:	15 0b       	sbc	r17, r21
    465e:	26 0b       	sbc	r18, r22
    4660:	37 0b       	sbc	r19, r23
    4662:	08 17       	cp	r16, r24
    4664:	19 07       	cpc	r17, r25
    4666:	2a 07       	cpc	r18, r26
    4668:	3b 07       	cpc	r19, r27
    466a:	08 f0       	brcs	.+2      	; 0x466e <f_open+0xd56>
    466c:	65 ce       	rjmp	.-822    	; 0x4338 <f_open+0xa20>
    466e:	83 80       	ldd	r8, Z+3	; 0x03
    4670:	91 2c       	mov	r9, r1
    4672:	12 e0       	ldi	r17, 0x02	; 2
    4674:	81 16       	cp	r8, r17
    4676:	91 04       	cpc	r9, r1
    4678:	30 f4       	brcc	.+12     	; 0x4686 <f_open+0xd6e>
    467a:	5e ce       	rjmp	.-836    	; 0x4338 <f_open+0xa20>
    467c:	f5 01       	movw	r30, r10
    467e:	82 8d       	ldd	r24, Z+26	; 0x1a
    4680:	93 8d       	ldd	r25, Z+27	; 0x1b
    4682:	a4 8d       	ldd	r26, Z+28	; 0x1c
    4684:	b5 8d       	ldd	r27, Z+29	; 0x1d
    4686:	48 0e       	add	r4, r24
    4688:	59 1e       	adc	r5, r25
    468a:	6a 1e       	adc	r6, r26
    468c:	7b 1e       	adc	r7, r27
    468e:	01 e0       	ldi	r16, 0x01	; 1
    4690:	10 e0       	ldi	r17, 0x00	; 0
    4692:	a3 01       	movw	r20, r6
    4694:	92 01       	movw	r18, r4
    4696:	b1 01       	movw	r22, r2
    4698:	d5 01       	movw	r26, r10
    469a:	11 96       	adiw	r26, 0x01	; 1
    469c:	8c 91       	ld	r24, X
    469e:	da d7       	rcall	.+4020   	; 0x5654 <disk_write>
    46a0:	b1 e0       	ldi	r27, 0x01	; 1
    46a2:	8b 1a       	sub	r8, r27
    46a4:	91 08       	sbc	r9, r1
    46a6:	e1 e0       	ldi	r30, 0x01	; 1
    46a8:	8e 16       	cp	r8, r30
    46aa:	91 04       	cpc	r9, r1
    46ac:	39 f7       	brne	.-50     	; 0x467c <f_open+0xd64>
    46ae:	44 ce       	rjmp	.-888    	; 0x4338 <f_open+0xa20>
    46b0:	01 e0       	ldi	r16, 0x01	; 1
    46b2:	10 e0       	ldi	r17, 0x00	; 0
    46b4:	2b a5       	ldd	r18, Y+43	; 0x2b
    46b6:	3c a5       	ldd	r19, Y+44	; 0x2c
    46b8:	4d a5       	ldd	r20, Y+45	; 0x2d
    46ba:	5e a5       	ldd	r21, Y+46	; 0x2e
    46bc:	b1 01       	movw	r22, r2
    46be:	81 81       	ldd	r24, Z+1	; 0x01
    46c0:	c9 d7       	rcall	.+3986   	; 0x5654 <disk_write>
    46c2:	81 11       	cpse	r24, r1
    46c4:	05 ce       	rjmp	.-1014   	; 0x42d0 <f_open+0x9b8>
    46c6:	d5 01       	movw	r26, r10
    46c8:	14 96       	adiw	r26, 0x04	; 4
    46ca:	1c 92       	st	X, r1
    46cc:	14 97       	sbiw	r26, 0x04	; 4
    46ce:	5a 96       	adiw	r26, 0x1a	; 26
    46d0:	8d 91       	ld	r24, X+
    46d2:	9d 91       	ld	r25, X+
    46d4:	0d 90       	ld	r0, X+
    46d6:	bc 91       	ld	r27, X
    46d8:	a0 2d       	mov	r26, r0
    46da:	f5 01       	movw	r30, r10
    46dc:	42 a1       	ldd	r20, Z+34	; 0x22
    46de:	53 a1       	ldd	r21, Z+35	; 0x23
    46e0:	64 a1       	ldd	r22, Z+36	; 0x24
    46e2:	75 a1       	ldd	r23, Z+37	; 0x25
    46e4:	0b a5       	ldd	r16, Y+43	; 0x2b
    46e6:	1c a5       	ldd	r17, Y+44	; 0x2c
    46e8:	2d a5       	ldd	r18, Y+45	; 0x2d
    46ea:	3e a5       	ldd	r19, Y+46	; 0x2e
    46ec:	04 1b       	sub	r16, r20
    46ee:	15 0b       	sbc	r17, r21
    46f0:	26 0b       	sbc	r18, r22
    46f2:	37 0b       	sbc	r19, r23
    46f4:	08 17       	cp	r16, r24
    46f6:	19 07       	cpc	r17, r25
    46f8:	2a 07       	cpc	r18, r26
    46fa:	3b 07       	cpc	r19, r27
    46fc:	08 f0       	brcs	.+2      	; 0x4700 <f_open+0xde8>
    46fe:	0c cc       	rjmp	.-2024   	; 0x3f18 <f_open+0x600>
    4700:	83 80       	ldd	r8, Z+3	; 0x03
    4702:	91 2c       	mov	r9, r1
    4704:	12 e0       	ldi	r17, 0x02	; 2
    4706:	81 16       	cp	r8, r17
    4708:	91 04       	cpc	r9, r1
    470a:	30 f4       	brcc	.+12     	; 0x4718 <f_open+0xe00>
    470c:	05 cc       	rjmp	.-2038   	; 0x3f18 <f_open+0x600>
    470e:	f5 01       	movw	r30, r10
    4710:	82 8d       	ldd	r24, Z+26	; 0x1a
    4712:	93 8d       	ldd	r25, Z+27	; 0x1b
    4714:	a4 8d       	ldd	r26, Z+28	; 0x1c
    4716:	b5 8d       	ldd	r27, Z+29	; 0x1d
    4718:	2b a5       	ldd	r18, Y+43	; 0x2b
    471a:	3c a5       	ldd	r19, Y+44	; 0x2c
    471c:	4d a5       	ldd	r20, Y+45	; 0x2d
    471e:	5e a5       	ldd	r21, Y+46	; 0x2e
    4720:	28 0f       	add	r18, r24
    4722:	39 1f       	adc	r19, r25
    4724:	4a 1f       	adc	r20, r26
    4726:	5b 1f       	adc	r21, r27
    4728:	2b a7       	std	Y+43, r18	; 0x2b
    472a:	3c a7       	std	Y+44, r19	; 0x2c
    472c:	4d a7       	std	Y+45, r20	; 0x2d
    472e:	5e a7       	std	Y+46, r21	; 0x2e
    4730:	01 e0       	ldi	r16, 0x01	; 1
    4732:	10 e0       	ldi	r17, 0x00	; 0
    4734:	b1 01       	movw	r22, r2
    4736:	d5 01       	movw	r26, r10
    4738:	11 96       	adiw	r26, 0x01	; 1
    473a:	8c 91       	ld	r24, X
    473c:	8b d7       	rcall	.+3862   	; 0x5654 <disk_write>
    473e:	b1 e0       	ldi	r27, 0x01	; 1
    4740:	8b 1a       	sub	r8, r27
    4742:	91 08       	sbc	r9, r1
    4744:	e1 e0       	ldi	r30, 0x01	; 1
    4746:	8e 16       	cp	r8, r30
    4748:	91 04       	cpc	r9, r1
    474a:	09 f7       	brne	.-62     	; 0x470e <f_open+0xdf6>
    474c:	e5 cb       	rjmp	.-2102   	; 0x3f18 <f_open+0x600>
    474e:	4b ae       	std	Y+59, r4	; 0x3b
    4750:	5c ae       	std	Y+60, r5	; 0x3c
    4752:	6d ae       	std	Y+61, r6	; 0x3d
    4754:	7e ae       	std	Y+62, r7	; 0x3e
    4756:	fd cb       	rjmp	.-2054   	; 0x3f52 <f_open+0x63a>
    4758:	d1 01       	movw	r26, r2
    475a:	9e 96       	adiw	r26, 0x2e	; 46
    475c:	4d 92       	st	X+, r4
    475e:	5d 92       	st	X+, r5
    4760:	6d 92       	st	X+, r6
    4762:	7c 92       	st	X, r7
    4764:	d1 97       	sbiw	r26, 0x31	; 49
    4766:	af a1       	ldd	r26, Y+39	; 0x27
    4768:	b8 a5       	ldd	r27, Y+40	; 0x28
    476a:	8d 91       	ld	r24, X+
    476c:	9c 91       	ld	r25, X
    476e:	85 35       	cpi	r24, 0x55	; 85
    4770:	9a 4a       	sbci	r25, 0xAA	; 170
    4772:	09 f0       	breq	.+2      	; 0x4776 <f_open+0xe5e>
    4774:	83 c9       	rjmp	.-3322   	; 0x3a7c <f_open+0x164>
    4776:	ef a5       	ldd	r30, Y+47	; 0x2f
    4778:	f8 a9       	ldd	r31, Y+48	; 0x30
    477a:	80 81       	ld	r24, Z
    477c:	91 81       	ldd	r25, Z+1	; 0x01
    477e:	a2 81       	ldd	r26, Z+2	; 0x02
    4780:	b3 81       	ldd	r27, Z+3	; 0x03
    4782:	bb 27       	eor	r27, r27
    4784:	86 34       	cpi	r24, 0x46	; 70
    4786:	91 44       	sbci	r25, 0x41	; 65
    4788:	a4 45       	sbci	r26, 0x54	; 84
    478a:	b1 05       	cpc	r27, r1
    478c:	09 f4       	brne	.+2      	; 0x4790 <f_open+0xe78>
    478e:	87 c9       	rjmp	.-3314   	; 0x3a9e <f_open+0x186>
    4790:	eb a5       	ldd	r30, Y+43	; 0x2b
    4792:	fc a5       	ldd	r31, Y+44	; 0x2c
    4794:	80 81       	ld	r24, Z
    4796:	91 81       	ldd	r25, Z+1	; 0x01
    4798:	a2 81       	ldd	r26, Z+2	; 0x02
    479a:	b3 81       	ldd	r27, Z+3	; 0x03
    479c:	bb 27       	eor	r27, r27
    479e:	86 34       	cpi	r24, 0x46	; 70
    47a0:	91 44       	sbci	r25, 0x41	; 65
    47a2:	a4 45       	sbci	r26, 0x54	; 84
    47a4:	b1 05       	cpc	r27, r1
    47a6:	09 f4       	brne	.+2      	; 0x47aa <f_open+0xe92>
    47a8:	7a c9       	rjmp	.-3340   	; 0x3a9e <f_open+0x186>
    47aa:	8d e0       	ldi	r24, 0x0D	; 13
    47ac:	12 c9       	rjmp	.-3548   	; 0x39d2 <f_open+0xba>
    47ae:	f1 01       	movw	r30, r2
    47b0:	46 a6       	std	Z+46, r4	; 0x2e
    47b2:	57 a6       	std	Z+47, r5	; 0x2f
    47b4:	60 aa       	std	Z+48, r6	; 0x30
    47b6:	71 aa       	std	Z+49, r7	; 0x31
    47b8:	ef a1       	ldd	r30, Y+39	; 0x27
    47ba:	f8 a5       	ldd	r31, Y+40	; 0x28
    47bc:	80 81       	ld	r24, Z
    47be:	91 81       	ldd	r25, Z+1	; 0x01
    47c0:	85 35       	cpi	r24, 0x55	; 85
    47c2:	9a 4a       	sbci	r25, 0xAA	; 170
    47c4:	09 f0       	breq	.+2      	; 0x47c8 <f_open+0xeb0>
    47c6:	3b cd       	rjmp	.-1418   	; 0x423e <f_open+0x926>
    47c8:	ef a5       	ldd	r30, Y+47	; 0x2f
    47ca:	f8 a9       	ldd	r31, Y+48	; 0x30
    47cc:	80 81       	ld	r24, Z
    47ce:	91 81       	ldd	r25, Z+1	; 0x01
    47d0:	a2 81       	ldd	r26, Z+2	; 0x02
    47d2:	b3 81       	ldd	r27, Z+3	; 0x03
    47d4:	bb 27       	eor	r27, r27
    47d6:	86 34       	cpi	r24, 0x46	; 70
    47d8:	91 44       	sbci	r25, 0x41	; 65
    47da:	a4 45       	sbci	r26, 0x54	; 84
    47dc:	b1 05       	cpc	r27, r1
    47de:	09 f4       	brne	.+2      	; 0x47e2 <f_open+0xeca>
    47e0:	5e c9       	rjmp	.-3396   	; 0x3a9e <f_open+0x186>
    47e2:	eb a5       	ldd	r30, Y+43	; 0x2b
    47e4:	fc a5       	ldd	r31, Y+44	; 0x2c
    47e6:	80 81       	ld	r24, Z
    47e8:	91 81       	ldd	r25, Z+1	; 0x01
    47ea:	a2 81       	ldd	r26, Z+2	; 0x02
    47ec:	b3 81       	ldd	r27, Z+3	; 0x03
    47ee:	bb 27       	eor	r27, r27
    47f0:	86 34       	cpi	r24, 0x46	; 70
    47f2:	91 44       	sbci	r25, 0x41	; 65
    47f4:	a4 45       	sbci	r26, 0x54	; 84
    47f6:	b1 05       	cpc	r27, r1
    47f8:	09 f0       	breq	.+2      	; 0x47fc <f_open+0xee4>
    47fa:	21 cd       	rjmp	.-1470   	; 0x423e <f_open+0x926>
    47fc:	50 c9       	rjmp	.-3424   	; 0x3a9e <f_open+0x186>
    47fe:	23 96       	adiw	r28, 0x03	; 3
    4800:	2e ac       	ldd	r2, Y+62	; 0x3e
    4802:	3f ac       	ldd	r3, Y+63	; 0x3f
    4804:	23 97       	sbiw	r28, 0x03	; 3
    4806:	25 96       	adiw	r28, 0x05	; 5
    4808:	ce ac       	ldd	r12, Y+62	; 0x3e
    480a:	df ac       	ldd	r13, Y+63	; 0x3f
    480c:	25 97       	sbiw	r28, 0x05	; 5
    480e:	e9 80       	ldd	r14, Y+1	; 0x01
    4810:	fa 80       	ldd	r15, Y+2	; 0x02
    4812:	8f a5       	ldd	r24, Y+47	; 0x2f
    4814:	98 a9       	ldd	r25, Y+48	; 0x30
    4816:	a9 a9       	ldd	r26, Y+49	; 0x31
    4818:	ba a9       	ldd	r27, Y+50	; 0x32
    481a:	01 97       	sbiw	r24, 0x01	; 1
    481c:	a1 09       	sbc	r26, r1
    481e:	b1 09       	sbc	r27, r1
    4820:	f7 01       	movw	r30, r14
    4822:	82 87       	std	Z+10, r24	; 0x0a
    4824:	93 87       	std	Z+11, r25	; 0x0b
    4826:	a4 87       	std	Z+12, r26	; 0x0c
    4828:	b5 87       	std	Z+13, r27	; 0x0d
    482a:	46 a4       	ldd	r4, Z+46	; 0x2e
    482c:	57 a4       	ldd	r5, Z+47	; 0x2f
    482e:	60 a8       	ldd	r6, Z+48	; 0x30
    4830:	71 a8       	ldd	r7, Z+49	; 0x31
    4832:	0f a9       	ldd	r16, Y+55	; 0x37
    4834:	18 ad       	ldd	r17, Y+56	; 0x38
    4836:	29 ad       	ldd	r18, Y+57	; 0x39
    4838:	3a ad       	ldd	r19, Y+58	; 0x3a
    483a:	04 15       	cp	r16, r4
    483c:	15 05       	cpc	r17, r5
    483e:	26 05       	cpc	r18, r6
    4840:	37 05       	cpc	r19, r7
    4842:	09 f4       	brne	.+2      	; 0x4846 <f_open+0xf2e>
    4844:	19 cc       	rjmp	.-1998   	; 0x4078 <f_open+0x760>
    4846:	d7 01       	movw	r26, r14
    4848:	14 96       	adiw	r26, 0x04	; 4
    484a:	8c 91       	ld	r24, X
    484c:	81 11       	cpse	r24, r1
    484e:	43 c0       	rjmp	.+134    	; 0x48d6 <f_open+0xfbe>
    4850:	f7 01       	movw	r30, r14
    4852:	f2 96       	adiw	r30, 0x32	; 50
    4854:	4f 01       	movw	r8, r30
    4856:	01 e0       	ldi	r16, 0x01	; 1
    4858:	10 e0       	ldi	r17, 0x00	; 0
    485a:	2f a9       	ldd	r18, Y+55	; 0x37
    485c:	38 ad       	ldd	r19, Y+56	; 0x38
    485e:	49 ad       	ldd	r20, Y+57	; 0x39
    4860:	5a ad       	ldd	r21, Y+58	; 0x3a
    4862:	b4 01       	movw	r22, r8
    4864:	d7 01       	movw	r26, r14
    4866:	11 96       	adiw	r26, 0x01	; 1
    4868:	8c 91       	ld	r24, X
    486a:	75 d6       	rcall	.+3306   	; 0x5556 <disk_read>
    486c:	88 23       	and	r24, r24
    486e:	09 f4       	brne	.+2      	; 0x4872 <f_open+0xf5a>
    4870:	f6 cb       	rjmp	.-2068   	; 0x405e <f_open+0x746>
    4872:	8f ef       	ldi	r24, 0xFF	; 255
    4874:	9f ef       	ldi	r25, 0xFF	; 255
    4876:	dc 01       	movw	r26, r24
    4878:	f7 01       	movw	r30, r14
    487a:	86 a7       	std	Z+46, r24	; 0x2e
    487c:	97 a7       	std	Z+47, r25	; 0x2f
    487e:	a0 ab       	std	Z+48, r26	; 0x30
    4880:	b1 ab       	std	Z+49, r27	; 0x31
    4882:	81 e0       	ldi	r24, 0x01	; 1
    4884:	a6 c8       	rjmp	.-3764   	; 0x39d2 <f_open+0xba>
    4886:	f1 01       	movw	r30, r2
    4888:	46 a6       	std	Z+46, r4	; 0x2e
    488a:	57 a6       	std	Z+47, r5	; 0x2f
    488c:	60 aa       	std	Z+48, r6	; 0x30
    488e:	71 aa       	std	Z+49, r7	; 0x31
    4890:	ef a1       	ldd	r30, Y+39	; 0x27
    4892:	f8 a5       	ldd	r31, Y+40	; 0x28
    4894:	80 81       	ld	r24, Z
    4896:	91 81       	ldd	r25, Z+1	; 0x01
    4898:	85 35       	cpi	r24, 0x55	; 85
    489a:	9a 4a       	sbci	r25, 0xAA	; 170
    489c:	09 f0       	breq	.+2      	; 0x48a0 <f_open+0xf88>
    489e:	d9 cc       	rjmp	.-1614   	; 0x4252 <f_open+0x93a>
    48a0:	ef a5       	ldd	r30, Y+47	; 0x2f
    48a2:	f8 a9       	ldd	r31, Y+48	; 0x30
    48a4:	80 81       	ld	r24, Z
    48a6:	91 81       	ldd	r25, Z+1	; 0x01
    48a8:	a2 81       	ldd	r26, Z+2	; 0x02
    48aa:	b3 81       	ldd	r27, Z+3	; 0x03
    48ac:	bb 27       	eor	r27, r27
    48ae:	86 34       	cpi	r24, 0x46	; 70
    48b0:	91 44       	sbci	r25, 0x41	; 65
    48b2:	a4 45       	sbci	r26, 0x54	; 84
    48b4:	b1 05       	cpc	r27, r1
    48b6:	09 f4       	brne	.+2      	; 0x48ba <f_open+0xfa2>
    48b8:	f2 c8       	rjmp	.-3612   	; 0x3a9e <f_open+0x186>
    48ba:	eb a5       	ldd	r30, Y+43	; 0x2b
    48bc:	fc a5       	ldd	r31, Y+44	; 0x2c
    48be:	80 81       	ld	r24, Z
    48c0:	91 81       	ldd	r25, Z+1	; 0x01
    48c2:	a2 81       	ldd	r26, Z+2	; 0x02
    48c4:	b3 81       	ldd	r27, Z+3	; 0x03
    48c6:	bb 27       	eor	r27, r27
    48c8:	86 34       	cpi	r24, 0x46	; 70
    48ca:	91 44       	sbci	r25, 0x41	; 65
    48cc:	a4 45       	sbci	r26, 0x54	; 84
    48ce:	b1 05       	cpc	r27, r1
    48d0:	09 f0       	breq	.+2      	; 0x48d4 <f_open+0xfbc>
    48d2:	bf cc       	rjmp	.-1666   	; 0x4252 <f_open+0x93a>
    48d4:	e4 c8       	rjmp	.-3640   	; 0x3a9e <f_open+0x186>
    48d6:	47 01       	movw	r8, r14
    48d8:	f2 e3       	ldi	r31, 0x32	; 50
    48da:	8f 0e       	add	r8, r31
    48dc:	91 1c       	adc	r9, r1
    48de:	01 e0       	ldi	r16, 0x01	; 1
    48e0:	10 e0       	ldi	r17, 0x00	; 0
    48e2:	a3 01       	movw	r20, r6
    48e4:	92 01       	movw	r18, r4
    48e6:	b4 01       	movw	r22, r8
    48e8:	d7 01       	movw	r26, r14
    48ea:	11 96       	adiw	r26, 0x01	; 1
    48ec:	8c 91       	ld	r24, X
    48ee:	b2 d6       	rcall	.+3428   	; 0x5654 <disk_write>
    48f0:	81 11       	cpse	r24, r1
    48f2:	ee cc       	rjmp	.-1572   	; 0x42d0 <f_open+0x9b8>
    48f4:	f7 01       	movw	r30, r14
    48f6:	14 82       	std	Z+4, r1	; 0x04
    48f8:	82 a1       	ldd	r24, Z+34	; 0x22
    48fa:	93 a1       	ldd	r25, Z+35	; 0x23
    48fc:	a4 a1       	ldd	r26, Z+36	; 0x24
    48fe:	b5 a1       	ldd	r27, Z+37	; 0x25
    4900:	b3 01       	movw	r22, r6
    4902:	a2 01       	movw	r20, r4
    4904:	48 1b       	sub	r20, r24
    4906:	59 0b       	sbc	r21, r25
    4908:	6a 0b       	sbc	r22, r26
    490a:	7b 0b       	sbc	r23, r27
    490c:	82 8d       	ldd	r24, Z+26	; 0x1a
    490e:	93 8d       	ldd	r25, Z+27	; 0x1b
    4910:	a4 8d       	ldd	r26, Z+28	; 0x1c
    4912:	b5 8d       	ldd	r27, Z+29	; 0x1d
    4914:	48 17       	cp	r20, r24
    4916:	59 07       	cpc	r21, r25
    4918:	6a 07       	cpc	r22, r26
    491a:	7b 07       	cpc	r23, r27
    491c:	08 f0       	brcs	.+2      	; 0x4920 <f_open+0x1008>
    491e:	9b cf       	rjmp	.-202    	; 0x4856 <f_open+0xf3e>
    4920:	a3 80       	ldd	r10, Z+3	; 0x03
    4922:	b1 2c       	mov	r11, r1
    4924:	f2 e0       	ldi	r31, 0x02	; 2
    4926:	af 16       	cp	r10, r31
    4928:	b1 04       	cpc	r11, r1
    492a:	30 f4       	brcc	.+12     	; 0x4938 <f_open+0x1020>
    492c:	94 cf       	rjmp	.-216    	; 0x4856 <f_open+0xf3e>
    492e:	f7 01       	movw	r30, r14
    4930:	82 8d       	ldd	r24, Z+26	; 0x1a
    4932:	93 8d       	ldd	r25, Z+27	; 0x1b
    4934:	a4 8d       	ldd	r26, Z+28	; 0x1c
    4936:	b5 8d       	ldd	r27, Z+29	; 0x1d
    4938:	48 0e       	add	r4, r24
    493a:	59 1e       	adc	r5, r25
    493c:	6a 1e       	adc	r6, r26
    493e:	7b 1e       	adc	r7, r27
    4940:	01 e0       	ldi	r16, 0x01	; 1
    4942:	10 e0       	ldi	r17, 0x00	; 0
    4944:	a3 01       	movw	r20, r6
    4946:	92 01       	movw	r18, r4
    4948:	b4 01       	movw	r22, r8
    494a:	d7 01       	movw	r26, r14
    494c:	11 96       	adiw	r26, 0x01	; 1
    494e:	8c 91       	ld	r24, X
    4950:	81 d6       	rcall	.+3330   	; 0x5654 <disk_write>
    4952:	b1 e0       	ldi	r27, 0x01	; 1
    4954:	ab 1a       	sub	r10, r27
    4956:	b1 08       	sbc	r11, r1
    4958:	e1 e0       	ldi	r30, 0x01	; 1
    495a:	ae 16       	cp	r10, r30
    495c:	b1 04       	cpc	r11, r1
    495e:	39 f7       	brne	.-50     	; 0x492e <f_open+0x1016>
    4960:	7a cf       	rjmp	.-268    	; 0x4856 <f_open+0xf3e>
    4962:	80 e0       	ldi	r24, 0x00	; 0
    4964:	90 e0       	ldi	r25, 0x00	; 0
    4966:	dc 01       	movw	r26, r24
    4968:	5c cc       	rjmp	.-1864   	; 0x4222 <f_open+0x90a>
    496a:	80 e0       	ldi	r24, 0x00	; 0
    496c:	90 e0       	ldi	r25, 0x00	; 0
    496e:	dc 01       	movw	r26, r24
    4970:	48 cc       	rjmp	.-1904   	; 0x4202 <f_open+0x8ea>
    4972:	80 e0       	ldi	r24, 0x00	; 0
    4974:	90 e0       	ldi	r25, 0x00	; 0
    4976:	dc 01       	movw	r26, r24
    4978:	34 cc       	rjmp	.-1944   	; 0x41e2 <f_open+0x8ca>
    497a:	80 e0       	ldi	r24, 0x00	; 0
    497c:	90 e0       	ldi	r25, 0x00	; 0
    497e:	dc 01       	movw	r26, r24
    4980:	20 cc       	rjmp	.-1984   	; 0x41c2 <f_open+0x8aa>
    4982:	80 e0       	ldi	r24, 0x00	; 0
    4984:	73 c8       	rjmp	.-3866   	; 0x3a6c <f_open+0x154>
    4986:	af e0       	ldi	r26, 0x0F	; 15
    4988:	5a 22       	and	r5, r26
    498a:	61 2c       	mov	r6, r1
    498c:	71 2c       	mov	r7, r1
    498e:	3b cb       	rjmp	.-2442   	; 0x4006 <f_open+0x6ee>
    4990:	01 e0       	ldi	r16, 0x01	; 1
    4992:	10 e0       	ldi	r17, 0x00	; 0
    4994:	a3 01       	movw	r20, r6
    4996:	92 01       	movw	r18, r4
    4998:	b1 01       	movw	r22, r2
    499a:	11 96       	adiw	r26, 0x01	; 1
    499c:	8c 91       	ld	r24, X
    499e:	5a d6       	rcall	.+3252   	; 0x5654 <disk_write>
    49a0:	81 11       	cpse	r24, r1
    49a2:	96 cc       	rjmp	.-1748   	; 0x42d0 <f_open+0x9b8>
    49a4:	f5 01       	movw	r30, r10
    49a6:	14 82       	std	Z+4, r1	; 0x04
    49a8:	82 a1       	ldd	r24, Z+34	; 0x22
    49aa:	93 a1       	ldd	r25, Z+35	; 0x23
    49ac:	a4 a1       	ldd	r26, Z+36	; 0x24
    49ae:	b5 a1       	ldd	r27, Z+37	; 0x25
    49b0:	48 1a       	sub	r4, r24
    49b2:	59 0a       	sbc	r5, r25
    49b4:	6a 0a       	sbc	r6, r26
    49b6:	7b 0a       	sbc	r7, r27
    49b8:	82 8d       	ldd	r24, Z+26	; 0x1a
    49ba:	93 8d       	ldd	r25, Z+27	; 0x1b
    49bc:	a4 8d       	ldd	r26, Z+28	; 0x1c
    49be:	b5 8d       	ldd	r27, Z+29	; 0x1d
    49c0:	48 16       	cp	r4, r24
    49c2:	59 06       	cpc	r5, r25
    49c4:	6a 06       	cpc	r6, r26
    49c6:	7b 06       	cpc	r7, r27
    49c8:	08 f0       	brcs	.+2      	; 0x49cc <f_open+0x10b4>
    49ca:	ed ca       	rjmp	.-2598   	; 0x3fa6 <f_open+0x68e>
    49cc:	83 80       	ldd	r8, Z+3	; 0x03
    49ce:	91 2c       	mov	r9, r1
    49d0:	f2 e0       	ldi	r31, 0x02	; 2
    49d2:	8f 16       	cp	r8, r31
    49d4:	91 04       	cpc	r9, r1
    49d6:	08 f4       	brcc	.+2      	; 0x49da <f_open+0x10c2>
    49d8:	e6 ca       	rjmp	.-2612   	; 0x3fa6 <f_open+0x68e>
    49da:	4b ac       	ldd	r4, Y+59	; 0x3b
    49dc:	5c ac       	ldd	r5, Y+60	; 0x3c
    49de:	6d ac       	ldd	r6, Y+61	; 0x3d
    49e0:	7e ac       	ldd	r7, Y+62	; 0x3e
    49e2:	05 c0       	rjmp	.+10     	; 0x49ee <f_open+0x10d6>
    49e4:	f5 01       	movw	r30, r10
    49e6:	82 8d       	ldd	r24, Z+26	; 0x1a
    49e8:	93 8d       	ldd	r25, Z+27	; 0x1b
    49ea:	a4 8d       	ldd	r26, Z+28	; 0x1c
    49ec:	b5 8d       	ldd	r27, Z+29	; 0x1d
    49ee:	48 0e       	add	r4, r24
    49f0:	59 1e       	adc	r5, r25
    49f2:	6a 1e       	adc	r6, r26
    49f4:	7b 1e       	adc	r7, r27
    49f6:	01 e0       	ldi	r16, 0x01	; 1
    49f8:	10 e0       	ldi	r17, 0x00	; 0
    49fa:	a3 01       	movw	r20, r6
    49fc:	92 01       	movw	r18, r4
    49fe:	b1 01       	movw	r22, r2
    4a00:	d5 01       	movw	r26, r10
    4a02:	11 96       	adiw	r26, 0x01	; 1
    4a04:	8c 91       	ld	r24, X
    4a06:	26 d6       	rcall	.+3148   	; 0x5654 <disk_write>
    4a08:	b1 e0       	ldi	r27, 0x01	; 1
    4a0a:	8b 1a       	sub	r8, r27
    4a0c:	91 08       	sbc	r9, r1
    4a0e:	e1 e0       	ldi	r30, 0x01	; 1
    4a10:	8e 16       	cp	r8, r30
    4a12:	91 04       	cpc	r9, r1
    4a14:	39 f7       	brne	.-50     	; 0x49e4 <f_open+0x10cc>
    4a16:	c7 ca       	rjmp	.-2674   	; 0x3fa6 <f_open+0x68e>
    4a18:	f1 01       	movw	r30, r2
    4a1a:	ee 59       	subi	r30, 0x9E	; 158
    4a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a1e:	80 81       	ld	r24, Z
    4a20:	91 81       	ldd	r25, Z+1	; 0x01
    4a22:	01 97       	sbiw	r24, 0x01	; 1
    4a24:	09 f0       	breq	.+2      	; 0x4a28 <f_open+0x1110>
    4a26:	76 c9       	rjmp	.-3348   	; 0x3d14 <f_open+0x3fc>
    4a28:	b3 01       	movw	r22, r6
    4a2a:	a2 01       	movw	r20, r4
    4a2c:	4f 5f       	subi	r20, 0xFF	; 255
    4a2e:	5f 4f       	sbci	r21, 0xFF	; 255
    4a30:	6f 4f       	sbci	r22, 0xFF	; 255
    4a32:	7f 4f       	sbci	r23, 0xFF	; 255
    4a34:	c1 01       	movw	r24, r2
    4a36:	0e 94 59 04 	call	0x8b2	; 0x8b2 <move_window>
    4a3a:	81 11       	cpse	r24, r1
    4a3c:	6b c9       	rjmp	.-3370   	; 0x3d14 <f_open+0x3fc>
    4a3e:	d1 01       	movw	r26, r2
    4a40:	15 96       	adiw	r26, 0x05	; 5
    4a42:	1c 92       	st	X, r1
    4a44:	f1 01       	movw	r30, r2
    4a46:	e0 5d       	subi	r30, 0xD0	; 208
    4a48:	fd 4f       	sbci	r31, 0xFD	; 253
    4a4a:	80 81       	ld	r24, Z
    4a4c:	91 81       	ldd	r25, Z+1	; 0x01
    4a4e:	85 35       	cpi	r24, 0x55	; 85
    4a50:	9a 4a       	sbci	r25, 0xAA	; 170
    4a52:	09 f0       	breq	.+2      	; 0x4a56 <f_open+0x113e>
    4a54:	5f c9       	rjmp	.-3394   	; 0x3d14 <f_open+0x3fc>
    4a56:	f1 01       	movw	r30, r2
    4a58:	82 a9       	ldd	r24, Z+50	; 0x32
    4a5a:	93 a9       	ldd	r25, Z+51	; 0x33
    4a5c:	a4 a9       	ldd	r26, Z+52	; 0x34
    4a5e:	b5 a9       	ldd	r27, Z+53	; 0x35
    4a60:	82 35       	cpi	r24, 0x52	; 82
    4a62:	92 45       	sbci	r25, 0x52	; 82
    4a64:	a1 46       	sbci	r26, 0x61	; 97
    4a66:	b1 44       	sbci	r27, 0x41	; 65
    4a68:	09 f0       	breq	.+2      	; 0x4a6c <f_open+0x1154>
    4a6a:	54 c9       	rjmp	.-3416   	; 0x3d14 <f_open+0x3fc>
    4a6c:	f1 01       	movw	r30, r2
    4a6e:	ea 5e       	subi	r30, 0xEA	; 234
    4a70:	fd 4f       	sbci	r31, 0xFD	; 253
    4a72:	80 81       	ld	r24, Z
    4a74:	91 81       	ldd	r25, Z+1	; 0x01
    4a76:	a2 81       	ldd	r26, Z+2	; 0x02
    4a78:	b3 81       	ldd	r27, Z+3	; 0x03
    4a7a:	82 37       	cpi	r24, 0x72	; 114
    4a7c:	92 47       	sbci	r25, 0x72	; 114
    4a7e:	a1 44       	sbci	r26, 0x41	; 65
    4a80:	b1 46       	sbci	r27, 0x61	; 97
    4a82:	09 f0       	breq	.+2      	; 0x4a86 <f_open+0x116e>
    4a84:	47 c9       	rjmp	.-3442   	; 0x3d14 <f_open+0x3fc>
    4a86:	34 96       	adiw	r30, 0x04	; 4
    4a88:	80 81       	ld	r24, Z
    4a8a:	91 81       	ldd	r25, Z+1	; 0x01
    4a8c:	a2 81       	ldd	r26, Z+2	; 0x02
    4a8e:	b3 81       	ldd	r27, Z+3	; 0x03
    4a90:	f1 01       	movw	r30, r2
    4a92:	86 87       	std	Z+14, r24	; 0x0e
    4a94:	97 87       	std	Z+15, r25	; 0x0f
    4a96:	a0 8b       	std	Z+16, r26	; 0x10
    4a98:	b1 8b       	std	Z+17, r27	; 0x11
    4a9a:	e2 5e       	subi	r30, 0xE2	; 226
    4a9c:	fd 4f       	sbci	r31, 0xFD	; 253
    4a9e:	80 81       	ld	r24, Z
    4aa0:	91 81       	ldd	r25, Z+1	; 0x01
    4aa2:	a2 81       	ldd	r26, Z+2	; 0x02
    4aa4:	b3 81       	ldd	r27, Z+3	; 0x03
    4aa6:	f1 01       	movw	r30, r2
    4aa8:	82 87       	std	Z+10, r24	; 0x0a
    4aaa:	93 87       	std	Z+11, r25	; 0x0b
    4aac:	a4 87       	std	Z+12, r26	; 0x0c
    4aae:	b5 87       	std	Z+13, r27	; 0x0d
    4ab0:	31 c9       	rjmp	.-3486   	; 0x3d14 <f_open+0x3fc>
    4ab2:	6b a5       	ldd	r22, Y+43	; 0x2b
    4ab4:	7c a5       	ldd	r23, Y+44	; 0x2c
    4ab6:	8d a5       	ldd	r24, Y+45	; 0x2d
    4ab8:	9e a5       	ldd	r25, Y+46	; 0x2e
    4aba:	66 0f       	add	r22, r22
    4abc:	77 1f       	adc	r23, r23
    4abe:	88 1f       	adc	r24, r24
    4ac0:	99 1f       	adc	r25, r25
    4ac2:	ff c8       	rjmp	.-3586   	; 0x3cc2 <f_open+0x3aa>
    4ac4:	ba 01       	movw	r22, r20
    4ac6:	a9 01       	movw	r20, r18
    4ac8:	4e 5f       	subi	r20, 0xFE	; 254
    4aca:	5f 4f       	sbci	r21, 0xFF	; 255
    4acc:	6f 4f       	sbci	r22, 0xFF	; 255
    4ace:	7f 4f       	sbci	r23, 0xFF	; 255
    4ad0:	d1 01       	movw	r26, r2
    4ad2:	56 96       	adiw	r26, 0x16	; 22
    4ad4:	4d 93       	st	X+, r20
    4ad6:	5d 93       	st	X+, r21
    4ad8:	6d 93       	st	X+, r22
    4ada:	7c 93       	st	X, r23
    4adc:	59 97       	sbiw	r26, 0x19	; 25
    4ade:	f1 01       	movw	r30, r2
    4ae0:	46 8e       	std	Z+30, r4	; 0x1e
    4ae2:	57 8e       	std	Z+31, r5	; 0x1f
    4ae4:	60 a2       	std	Z+32, r6	; 0x20
    4ae6:	71 a2       	std	Z+33, r7	; 0x21
    4ae8:	8b a9       	ldd	r24, Y+51	; 0x33
    4aea:	9c a9       	ldd	r25, Y+52	; 0x34
    4aec:	ad a9       	ldd	r26, Y+53	; 0x35
    4aee:	be a9       	ldd	r27, Y+54	; 0x36
    4af0:	84 0d       	add	r24, r4
    4af2:	95 1d       	adc	r25, r5
    4af4:	a6 1d       	adc	r26, r6
    4af6:	b7 1d       	adc	r27, r7
    4af8:	82 a3       	std	Z+34, r24	; 0x22
    4afa:	93 a3       	std	Z+35, r25	; 0x23
    4afc:	a4 a3       	std	Z+36, r26	; 0x24
    4afe:	b5 a3       	std	Z+37, r27	; 0x25
    4b00:	d8 01       	movw	r26, r16
    4b02:	c7 01       	movw	r24, r14
    4b04:	84 0d       	add	r24, r4
    4b06:	95 1d       	adc	r25, r5
    4b08:	a6 1d       	adc	r26, r6
    4b0a:	b7 1d       	adc	r27, r7
    4b0c:	82 a7       	std	Z+42, r24	; 0x2a
    4b0e:	93 a7       	std	Z+43, r25	; 0x2b
    4b10:	a4 a7       	std	Z+44, r26	; 0x2c
    4b12:	b5 a7       	std	Z+45, r27	; 0x2d
    4b14:	ef a4       	ldd	r14, Y+47	; 0x2f
    4b16:	f8 a8       	ldd	r15, Y+48	; 0x30
    4b18:	ef 28       	or	r14, r15
    4b1a:	11 f0       	breq	.+4      	; 0x4b20 <f_open+0x1208>
    4b1c:	0c 94 3e 1d 	jmp	0x3a7c	; 0x3a7c <f_open+0x164>
    4b20:	f1 01       	movw	r30, r2
    4b22:	e2 5a       	subi	r30, 0xA2	; 162
    4b24:	ff 4f       	sbci	r31, 0xFF	; 255
    4b26:	80 81       	ld	r24, Z
    4b28:	91 81       	ldd	r25, Z+1	; 0x01
    4b2a:	a2 81       	ldd	r26, Z+2	; 0x02
    4b2c:	b3 81       	ldd	r27, Z+3	; 0x03
    4b2e:	f1 01       	movw	r30, r2
    4b30:	86 a3       	std	Z+38, r24	; 0x26
    4b32:	97 a3       	std	Z+39, r25	; 0x27
    4b34:	a0 a7       	std	Z+40, r26	; 0x28
    4b36:	b1 a7       	std	Z+41, r27	; 0x29
    4b38:	cb 01       	movw	r24, r22
    4b3a:	ba 01       	movw	r22, r20
    4b3c:	66 0f       	add	r22, r22
    4b3e:	77 1f       	adc	r23, r23
    4b40:	88 1f       	adc	r24, r24
    4b42:	99 1f       	adc	r25, r25
    4b44:	66 0f       	add	r22, r22
    4b46:	77 1f       	adc	r23, r23
    4b48:	88 1f       	adc	r24, r24
    4b4a:	99 1f       	adc	r25, r25
    4b4c:	13 e0       	ldi	r17, 0x03	; 3
    4b4e:	81 2e       	mov	r8, r17
    4b50:	b8 c8       	rjmp	.-3728   	; 0x3cc2 <f_open+0x3aa>
    4b52:	88 24       	eor	r8, r8
    4b54:	83 94       	inc	r8
    4b56:	5b c8       	rjmp	.-3914   	; 0x3c0e <f_open+0x2f6>

00004b58 <f_read>:
    4b58:	2f 92       	push	r2
    4b5a:	3f 92       	push	r3
    4b5c:	4f 92       	push	r4
    4b5e:	5f 92       	push	r5
    4b60:	6f 92       	push	r6
    4b62:	7f 92       	push	r7
    4b64:	8f 92       	push	r8
    4b66:	9f 92       	push	r9
    4b68:	af 92       	push	r10
    4b6a:	bf 92       	push	r11
    4b6c:	cf 92       	push	r12
    4b6e:	df 92       	push	r13
    4b70:	ef 92       	push	r14
    4b72:	ff 92       	push	r15
    4b74:	0f 93       	push	r16
    4b76:	1f 93       	push	r17
    4b78:	cf 93       	push	r28
    4b7a:	df 93       	push	r29
    4b7c:	cd b7       	in	r28, 0x3d	; 61
    4b7e:	de b7       	in	r29, 0x3e	; 62
    4b80:	2c 97       	sbiw	r28, 0x0c	; 12
    4b82:	cd bf       	out	0x3d, r28	; 61
    4b84:	de bf       	out	0x3e, r29	; 62
    4b86:	1c 01       	movw	r2, r24
    4b88:	2b 01       	movw	r4, r22
    4b8a:	4a 01       	movw	r8, r20
    4b8c:	29 83       	std	Y+1, r18	; 0x01
    4b8e:	3a 83       	std	Y+2, r19	; 0x02
    4b90:	d9 01       	movw	r26, r18
    4b92:	1d 92       	st	X+, r1
    4b94:	1c 92       	st	X, r1
    4b96:	00 97       	sbiw	r24, 0x00	; 0
    4b98:	49 f0       	breq	.+18     	; 0x4bac <f_read+0x54>
    4b9a:	dc 01       	movw	r26, r24
    4b9c:	ed 91       	ld	r30, X+
    4b9e:	fc 91       	ld	r31, X
    4ba0:	11 97       	sbiw	r26, 0x01	; 1
    4ba2:	30 97       	sbiw	r30, 0x00	; 0
    4ba4:	19 f0       	breq	.+6      	; 0x4bac <f_read+0x54>
    4ba6:	80 81       	ld	r24, Z
    4ba8:	81 11       	cpse	r24, r1
    4baa:	17 c0       	rjmp	.+46     	; 0x4bda <f_read+0x82>
    4bac:	89 e0       	ldi	r24, 0x09	; 9
    4bae:	2c 96       	adiw	r28, 0x0c	; 12
    4bb0:	cd bf       	out	0x3d, r28	; 61
    4bb2:	de bf       	out	0x3e, r29	; 62
    4bb4:	df 91       	pop	r29
    4bb6:	cf 91       	pop	r28
    4bb8:	1f 91       	pop	r17
    4bba:	0f 91       	pop	r16
    4bbc:	ff 90       	pop	r15
    4bbe:	ef 90       	pop	r14
    4bc0:	df 90       	pop	r13
    4bc2:	cf 90       	pop	r12
    4bc4:	bf 90       	pop	r11
    4bc6:	af 90       	pop	r10
    4bc8:	9f 90       	pop	r9
    4bca:	8f 90       	pop	r8
    4bcc:	7f 90       	pop	r7
    4bce:	6f 90       	pop	r6
    4bd0:	5f 90       	pop	r5
    4bd2:	4f 90       	pop	r4
    4bd4:	3f 90       	pop	r3
    4bd6:	2f 90       	pop	r2
    4bd8:	08 95       	ret
    4bda:	26 81       	ldd	r18, Z+6	; 0x06
    4bdc:	37 81       	ldd	r19, Z+7	; 0x07
    4bde:	12 96       	adiw	r26, 0x02	; 2
    4be0:	8d 91       	ld	r24, X+
    4be2:	9c 91       	ld	r25, X
    4be4:	13 97       	sbiw	r26, 0x03	; 3
    4be6:	28 17       	cp	r18, r24
    4be8:	39 07       	cpc	r19, r25
    4bea:	01 f7       	brne	.-64     	; 0x4bac <f_read+0x54>
    4bec:	81 81       	ldd	r24, Z+1	; 0x01
    4bee:	ac d4       	rcall	.+2392   	; 0x5548 <disk_status>
    4bf0:	80 ff       	sbrs	r24, 0
    4bf2:	02 c0       	rjmp	.+4      	; 0x4bf8 <f_read+0xa0>
    4bf4:	83 e0       	ldi	r24, 0x03	; 3
    4bf6:	db cf       	rjmp	.-74     	; 0x4bae <f_read+0x56>
    4bf8:	d1 01       	movw	r26, r2
    4bfa:	15 96       	adiw	r26, 0x05	; 5
    4bfc:	8c 91       	ld	r24, X
    4bfe:	81 11       	cpse	r24, r1
    4c00:	d6 cf       	rjmp	.-84     	; 0x4bae <f_read+0x56>
    4c02:	f1 01       	movw	r30, r2
    4c04:	84 81       	ldd	r24, Z+4	; 0x04
    4c06:	80 fd       	sbrc	r24, 0
    4c08:	02 c0       	rjmp	.+4      	; 0x4c0e <f_read+0xb6>
    4c0a:	87 e0       	ldi	r24, 0x07	; 7
    4c0c:	d0 cf       	rjmp	.-96     	; 0x4bae <f_read+0x56>
    4c0e:	86 81       	ldd	r24, Z+6	; 0x06
    4c10:	97 81       	ldd	r25, Z+7	; 0x07
    4c12:	a0 85       	ldd	r26, Z+8	; 0x08
    4c14:	b1 85       	ldd	r27, Z+9	; 0x09
    4c16:	42 85       	ldd	r20, Z+10	; 0x0a
    4c18:	53 85       	ldd	r21, Z+11	; 0x0b
    4c1a:	64 85       	ldd	r22, Z+12	; 0x0c
    4c1c:	75 85       	ldd	r23, Z+13	; 0x0d
    4c1e:	48 1b       	sub	r20, r24
    4c20:	59 0b       	sbc	r21, r25
    4c22:	6a 0b       	sbc	r22, r26
    4c24:	7b 0b       	sbc	r23, r27
    4c26:	64 01       	movw	r12, r8
    4c28:	e1 2c       	mov	r14, r1
    4c2a:	f1 2c       	mov	r15, r1
    4c2c:	4c 15       	cp	r20, r12
    4c2e:	5d 05       	cpc	r21, r13
    4c30:	6e 05       	cpc	r22, r14
    4c32:	7f 05       	cpc	r23, r15
    4c34:	08 f4       	brcc	.+2      	; 0x4c38 <f_read+0xe0>
    4c36:	4a 01       	movw	r8, r20
    4c38:	81 14       	cp	r8, r1
    4c3a:	91 04       	cpc	r9, r1
    4c3c:	09 f4       	brne	.+2      	; 0x4c40 <f_read+0xe8>
    4c3e:	bf c0       	rjmp	.+382    	; 0x4dbe <f_read+0x266>
    4c40:	34 01       	movw	r6, r8
    4c42:	ac 01       	movw	r20, r24
    4c44:	bd 01       	movw	r22, r26
    4c46:	51 70       	andi	r21, 0x01	; 1
    4c48:	66 27       	eor	r22, r22
    4c4a:	77 27       	eor	r23, r23
    4c4c:	f1 01       	movw	r30, r2
    4c4e:	45 2b       	or	r20, r21
    4c50:	46 2b       	or	r20, r22
    4c52:	47 2b       	or	r20, r23
    4c54:	09 f4       	brne	.+2      	; 0x4c58 <f_read+0x100>
    4c56:	b5 c0       	rjmp	.+362    	; 0x4dc2 <f_read+0x26a>
    4c58:	06 89       	ldd	r16, Z+22	; 0x16
    4c5a:	17 89       	ldd	r17, Z+23	; 0x17
    4c5c:	20 8d       	ldd	r18, Z+24	; 0x18
    4c5e:	31 8d       	ldd	r19, Z+25	; 0x19
    4c60:	0b 83       	std	Y+3, r16	; 0x03
    4c62:	1c 83       	std	Y+4, r17	; 0x04
    4c64:	2d 83       	std	Y+5, r18	; 0x05
    4c66:	3e 83       	std	Y+6, r19	; 0x06
    4c68:	00 81       	ld	r16, Z
    4c6a:	11 81       	ldd	r17, Z+1	; 0x01
    4c6c:	0b 87       	std	Y+11, r16	; 0x0b
    4c6e:	1c 87       	std	Y+12, r17	; 0x0c
    4c70:	9c 01       	movw	r18, r24
    4c72:	31 70       	andi	r19, 0x01	; 1
    4c74:	e1 2c       	mov	r14, r1
    4c76:	52 e0       	ldi	r21, 0x02	; 2
    4c78:	f5 2e       	mov	r15, r21
    4c7a:	e2 1a       	sub	r14, r18
    4c7c:	f3 0a       	sbc	r15, r19
    4c7e:	6e 14       	cp	r6, r14
    4c80:	7f 04       	cpc	r7, r15
    4c82:	08 f4       	brcc	.+2      	; 0x4c86 <f_read+0x12e>
    4c84:	73 01       	movw	r14, r6
    4c86:	eb 85       	ldd	r30, Y+11	; 0x0b
    4c88:	fc 85       	ldd	r31, Y+12	; 0x0c
    4c8a:	86 a4       	ldd	r8, Z+46	; 0x2e
    4c8c:	97 a4       	ldd	r9, Z+47	; 0x2f
    4c8e:	a0 a8       	ldd	r10, Z+48	; 0x30
    4c90:	b1 a8       	ldd	r11, Z+49	; 0x31
    4c92:	0b 81       	ldd	r16, Y+3	; 0x03
    4c94:	1c 81       	ldd	r17, Y+4	; 0x04
    4c96:	2d 81       	ldd	r18, Y+5	; 0x05
    4c98:	3e 81       	ldd	r19, Y+6	; 0x06
    4c9a:	80 16       	cp	r8, r16
    4c9c:	91 06       	cpc	r9, r17
    4c9e:	a2 06       	cpc	r10, r18
    4ca0:	b3 06       	cpc	r11, r19
    4ca2:	e1 f1       	breq	.+120    	; 0x4d1c <f_read+0x1c4>
    4ca4:	84 81       	ldd	r24, Z+4	; 0x04
    4ca6:	81 11       	cpse	r24, r1
    4ca8:	5e c1       	rjmp	.+700    	; 0x4f66 <f_read+0x40e>
    4caa:	eb 85       	ldd	r30, Y+11	; 0x0b
    4cac:	fc 85       	ldd	r31, Y+12	; 0x0c
    4cae:	f2 96       	adiw	r30, 0x32	; 50
    4cb0:	ef 83       	std	Y+7, r30	; 0x07
    4cb2:	f8 87       	std	Y+8, r31	; 0x08
    4cb4:	01 e0       	ldi	r16, 0x01	; 1
    4cb6:	10 e0       	ldi	r17, 0x00	; 0
    4cb8:	2b 81       	ldd	r18, Y+3	; 0x03
    4cba:	3c 81       	ldd	r19, Y+4	; 0x04
    4cbc:	4d 81       	ldd	r20, Y+5	; 0x05
    4cbe:	5e 81       	ldd	r21, Y+6	; 0x06
    4cc0:	6f 81       	ldd	r22, Y+7	; 0x07
    4cc2:	78 85       	ldd	r23, Y+8	; 0x08
    4cc4:	ab 85       	ldd	r26, Y+11	; 0x0b
    4cc6:	bc 85       	ldd	r27, Y+12	; 0x0c
    4cc8:	11 96       	adiw	r26, 0x01	; 1
    4cca:	8c 91       	ld	r24, X
    4ccc:	44 d4       	rcall	.+2184   	; 0x5556 <disk_read>
    4cce:	88 23       	and	r24, r24
    4cd0:	71 f0       	breq	.+28     	; 0x4cee <f_read+0x196>
    4cd2:	ab 84       	ldd	r10, Y+11	; 0x0b
    4cd4:	bc 84       	ldd	r11, Y+12	; 0x0c
    4cd6:	8f ef       	ldi	r24, 0xFF	; 255
    4cd8:	9f ef       	ldi	r25, 0xFF	; 255
    4cda:	dc 01       	movw	r26, r24
    4cdc:	f5 01       	movw	r30, r10
    4cde:	86 a7       	std	Z+46, r24	; 0x2e
    4ce0:	97 a7       	std	Z+47, r25	; 0x2f
    4ce2:	a0 ab       	std	Z+48, r26	; 0x30
    4ce4:	b1 ab       	std	Z+49, r27	; 0x31
    4ce6:	81 e0       	ldi	r24, 0x01	; 1
    4ce8:	f1 01       	movw	r30, r2
    4cea:	85 83       	std	Z+5, r24	; 0x05
    4cec:	60 cf       	rjmp	.-320    	; 0x4bae <f_read+0x56>
    4cee:	0b 81       	ldd	r16, Y+3	; 0x03
    4cf0:	1c 81       	ldd	r17, Y+4	; 0x04
    4cf2:	2d 81       	ldd	r18, Y+5	; 0x05
    4cf4:	3e 81       	ldd	r19, Y+6	; 0x06
    4cf6:	ab 85       	ldd	r26, Y+11	; 0x0b
    4cf8:	bc 85       	ldd	r27, Y+12	; 0x0c
    4cfa:	9e 96       	adiw	r26, 0x2e	; 46
    4cfc:	0d 93       	st	X+, r16
    4cfe:	1d 93       	st	X+, r17
    4d00:	2d 93       	st	X+, r18
    4d02:	3c 93       	st	X, r19
    4d04:	d1 97       	sbiw	r26, 0x31	; 49
    4d06:	f1 01       	movw	r30, r2
    4d08:	01 90       	ld	r0, Z+
    4d0a:	f0 81       	ld	r31, Z
    4d0c:	e0 2d       	mov	r30, r0
    4d0e:	eb 87       	std	Y+11, r30	; 0x0b
    4d10:	fc 87       	std	Y+12, r31	; 0x0c
    4d12:	f1 01       	movw	r30, r2
    4d14:	86 81       	ldd	r24, Z+6	; 0x06
    4d16:	97 81       	ldd	r25, Z+7	; 0x07
    4d18:	a0 85       	ldd	r26, Z+8	; 0x08
    4d1a:	b1 85       	ldd	r27, Z+9	; 0x09
    4d1c:	ac 01       	movw	r20, r24
    4d1e:	bd 01       	movw	r22, r26
    4d20:	51 70       	andi	r21, 0x01	; 1
    4d22:	66 27       	eor	r22, r22
    4d24:	77 27       	eor	r23, r23
    4d26:	4e 5c       	subi	r20, 0xCE	; 206
    4d28:	5f 4f       	sbci	r21, 0xFF	; 255
    4d2a:	0b 85       	ldd	r16, Y+11	; 0x0b
    4d2c:	1c 85       	ldd	r17, Y+12	; 0x0c
    4d2e:	40 0f       	add	r20, r16
    4d30:	51 1f       	adc	r21, r17
    4d32:	12 e0       	ldi	r17, 0x02	; 2
    4d34:	e1 16       	cp	r14, r17
    4d36:	f1 04       	cpc	r15, r1
    4d38:	08 f4       	brcc	.+2      	; 0x4d3c <f_read+0x1e4>
    4d3a:	81 c1       	rjmp	.+770    	; 0x503e <f_read+0x4e6>
    4d3c:	6a 01       	movw	r12, r20
    4d3e:	97 01       	movw	r18, r14
    4d40:	f2 01       	movw	r30, r4
    4d42:	4c 01       	movw	r8, r24
    4d44:	5d 01       	movw	r10, r26
    4d46:	d6 01       	movw	r26, r12
    4d48:	6d 91       	ld	r22, X+
    4d4a:	7d 91       	ld	r23, X+
    4d4c:	6d 01       	movw	r12, r26
    4d4e:	61 93       	st	Z+, r22
    4d50:	71 93       	st	Z+, r23
    4d52:	22 50       	subi	r18, 0x02	; 2
    4d54:	31 09       	sbc	r19, r1
    4d56:	22 30       	cpi	r18, 0x02	; 2
    4d58:	31 05       	cpc	r19, r1
    4d5a:	a8 f7       	brcc	.-22     	; 0x4d46 <f_read+0x1ee>
    4d5c:	d5 01       	movw	r26, r10
    4d5e:	c4 01       	movw	r24, r8
    4d60:	97 01       	movw	r18, r14
    4d62:	22 50       	subi	r18, 0x02	; 2
    4d64:	31 09       	sbc	r19, r1
    4d66:	2e 7f       	andi	r18, 0xFE	; 254
    4d68:	2e 5f       	subi	r18, 0xFE	; 254
    4d6a:	3f 4f       	sbci	r19, 0xFF	; 255
    4d6c:	f2 01       	movw	r30, r4
    4d6e:	e2 0f       	add	r30, r18
    4d70:	f3 1f       	adc	r31, r19
    4d72:	42 0f       	add	r20, r18
    4d74:	53 1f       	adc	r21, r19
    4d76:	97 01       	movw	r18, r14
    4d78:	21 70       	andi	r18, 0x01	; 1
    4d7a:	33 27       	eor	r19, r19
    4d7c:	23 2b       	or	r18, r19
    4d7e:	41 f0       	breq	.+16     	; 0x4d90 <f_read+0x238>
    4d80:	da 01       	movw	r26, r20
    4d82:	8c 91       	ld	r24, X
    4d84:	80 83       	st	Z, r24
    4d86:	f1 01       	movw	r30, r2
    4d88:	86 81       	ldd	r24, Z+6	; 0x06
    4d8a:	97 81       	ldd	r25, Z+7	; 0x07
    4d8c:	a0 85       	ldd	r26, Z+8	; 0x08
    4d8e:	b1 85       	ldd	r27, Z+9	; 0x09
    4d90:	4e 0c       	add	r4, r14
    4d92:	5f 1c       	adc	r5, r15
    4d94:	8e 0d       	add	r24, r14
    4d96:	9f 1d       	adc	r25, r15
    4d98:	a1 1d       	adc	r26, r1
    4d9a:	b1 1d       	adc	r27, r1
    4d9c:	f1 01       	movw	r30, r2
    4d9e:	86 83       	std	Z+6, r24	; 0x06
    4da0:	97 83       	std	Z+7, r25	; 0x07
    4da2:	a0 87       	std	Z+8, r26	; 0x08
    4da4:	b1 87       	std	Z+9, r27	; 0x09
    4da6:	e9 81       	ldd	r30, Y+1	; 0x01
    4da8:	fa 81       	ldd	r31, Y+2	; 0x02
    4daa:	20 81       	ld	r18, Z
    4dac:	31 81       	ldd	r19, Z+1	; 0x01
    4dae:	2e 0d       	add	r18, r14
    4db0:	3f 1d       	adc	r19, r15
    4db2:	20 83       	st	Z, r18
    4db4:	31 83       	std	Z+1, r19	; 0x01
    4db6:	6e 18       	sub	r6, r14
    4db8:	7f 08       	sbc	r7, r15
    4dba:	09 f0       	breq	.+2      	; 0x4dbe <f_read+0x266>
    4dbc:	42 cf       	rjmp	.-380    	; 0x4c42 <f_read+0xea>
    4dbe:	80 e0       	ldi	r24, 0x00	; 0
    4dc0:	f6 ce       	rjmp	.-532    	; 0x4bae <f_read+0x56>
    4dc2:	01 90       	ld	r0, Z+
    4dc4:	f0 81       	ld	r31, Z
    4dc6:	e0 2d       	mov	r30, r0
    4dc8:	eb 87       	std	Y+11, r30	; 0x0b
    4dca:	fc 87       	std	Y+12, r31	; 0x0c
    4dcc:	92 80       	ldd	r9, Z+2	; 0x02
    4dce:	9a 94       	dec	r9
    4dd0:	ac 01       	movw	r20, r24
    4dd2:	bd 01       	movw	r22, r26
    4dd4:	19 e0       	ldi	r17, 0x09	; 9
    4dd6:	76 95       	lsr	r23
    4dd8:	67 95       	ror	r22
    4dda:	57 95       	ror	r21
    4ddc:	47 95       	ror	r20
    4dde:	1a 95       	dec	r17
    4de0:	d1 f7       	brne	.-12     	; 0x4dd6 <f_read+0x27e>
    4de2:	94 22       	and	r9, r20
    4de4:	09 f4       	brne	.+2      	; 0x4de8 <f_read+0x290>
    4de6:	87 c0       	rjmp	.+270    	; 0x4ef6 <f_read+0x39e>
    4de8:	f1 01       	movw	r30, r2
    4dea:	82 89       	ldd	r24, Z+18	; 0x12
    4dec:	93 89       	ldd	r25, Z+19	; 0x13
    4dee:	a4 89       	ldd	r26, Z+20	; 0x14
    4df0:	b5 89       	ldd	r27, Z+21	; 0x15
    4df2:	eb 85       	ldd	r30, Y+11	; 0x0b
    4df4:	fc 85       	ldd	r31, Y+12	; 0x0c
    4df6:	9c 01       	movw	r18, r24
    4df8:	ad 01       	movw	r20, r26
    4dfa:	22 50       	subi	r18, 0x02	; 2
    4dfc:	31 09       	sbc	r19, r1
    4dfe:	41 09       	sbc	r20, r1
    4e00:	51 09       	sbc	r21, r1
    4e02:	86 89       	ldd	r24, Z+22	; 0x16
    4e04:	97 89       	ldd	r25, Z+23	; 0x17
    4e06:	a0 8d       	ldd	r26, Z+24	; 0x18
    4e08:	b1 8d       	ldd	r27, Z+25	; 0x19
    4e0a:	02 97       	sbiw	r24, 0x02	; 2
    4e0c:	a1 09       	sbc	r26, r1
    4e0e:	b1 09       	sbc	r27, r1
    4e10:	28 17       	cp	r18, r24
    4e12:	39 07       	cpc	r19, r25
    4e14:	4a 07       	cpc	r20, r26
    4e16:	5b 07       	cpc	r21, r27
    4e18:	08 f0       	brcs	.+2      	; 0x4e1c <f_read+0x2c4>
    4e1a:	18 c1       	rjmp	.+560    	; 0x504c <f_read+0x4f4>
    4e1c:	e2 81       	ldd	r30, Z+2	; 0x02
    4e1e:	ae 2f       	mov	r26, r30
    4e20:	b0 e0       	ldi	r27, 0x00	; 0
    4e22:	0e 94 b2 38 	call	0x7164	; 0x7164 <__muluhisi3>
    4e26:	ab 85       	ldd	r26, Y+11	; 0x0b
    4e28:	bc 85       	ldd	r27, Y+12	; 0x0c
    4e2a:	9a 96       	adiw	r26, 0x2a	; 42
    4e2c:	cd 90       	ld	r12, X+
    4e2e:	dd 90       	ld	r13, X+
    4e30:	ed 90       	ld	r14, X+
    4e32:	fc 90       	ld	r15, X
    4e34:	9d 97       	sbiw	r26, 0x2d	; 45
    4e36:	6c 0d       	add	r22, r12
    4e38:	7d 1d       	adc	r23, r13
    4e3a:	8e 1d       	adc	r24, r14
    4e3c:	9f 1d       	adc	r25, r15
    4e3e:	61 15       	cp	r22, r1
    4e40:	71 05       	cpc	r23, r1
    4e42:	81 05       	cpc	r24, r1
    4e44:	91 05       	cpc	r25, r1
    4e46:	09 f4       	brne	.+2      	; 0x4e4a <f_read+0x2f2>
    4e48:	01 c1       	rjmp	.+514    	; 0x504c <f_read+0x4f4>
    4e4a:	6b 01       	movw	r12, r22
    4e4c:	7c 01       	movw	r14, r24
    4e4e:	c9 0c       	add	r12, r9
    4e50:	d1 1c       	adc	r13, r1
    4e52:	e1 1c       	adc	r14, r1
    4e54:	f1 1c       	adc	r15, r1
    4e56:	53 01       	movw	r10, r6
    4e58:	ab 2c       	mov	r10, r11
    4e5a:	bb 24       	eor	r11, r11
    4e5c:	a6 94       	lsr	r10
    4e5e:	a1 14       	cp	r10, r1
    4e60:	b1 04       	cpc	r11, r1
    4e62:	09 f4       	brne	.+2      	; 0x4e66 <f_read+0x30e>
    4e64:	6e c0       	rjmp	.+220    	; 0x4f42 <f_read+0x3ea>
    4e66:	89 2d       	mov	r24, r9
    4e68:	90 e0       	ldi	r25, 0x00	; 0
    4e6a:	ac 01       	movw	r20, r24
    4e6c:	4a 0d       	add	r20, r10
    4e6e:	5b 1d       	adc	r21, r11
    4e70:	2e 2f       	mov	r18, r30
    4e72:	30 e0       	ldi	r19, 0x00	; 0
    4e74:	24 17       	cp	r18, r20
    4e76:	35 07       	cpc	r19, r21
    4e78:	18 f4       	brcc	.+6      	; 0x4e80 <f_read+0x328>
    4e7a:	59 01       	movw	r10, r18
    4e7c:	a8 1a       	sub	r10, r24
    4e7e:	b9 0a       	sbc	r11, r25
    4e80:	85 01       	movw	r16, r10
    4e82:	a7 01       	movw	r20, r14
    4e84:	96 01       	movw	r18, r12
    4e86:	b2 01       	movw	r22, r4
    4e88:	ab 85       	ldd	r26, Y+11	; 0x0b
    4e8a:	bc 85       	ldd	r27, Y+12	; 0x0c
    4e8c:	11 96       	adiw	r26, 0x01	; 1
    4e8e:	8c 91       	ld	r24, X
    4e90:	62 d3       	rcall	.+1732   	; 0x5556 <disk_read>
    4e92:	81 11       	cpse	r24, r1
    4e94:	28 cf       	rjmp	.-432    	; 0x4ce6 <f_read+0x18e>
    4e96:	d1 01       	movw	r26, r2
    4e98:	ed 91       	ld	r30, X+
    4e9a:	fc 91       	ld	r31, X
    4e9c:	84 81       	ldd	r24, Z+4	; 0x04
    4e9e:	88 23       	and	r24, r24
    4ea0:	01 f1       	breq	.+64     	; 0x4ee2 <f_read+0x38a>
    4ea2:	86 a5       	ldd	r24, Z+46	; 0x2e
    4ea4:	97 a5       	ldd	r25, Z+47	; 0x2f
    4ea6:	a0 a9       	ldd	r26, Z+48	; 0x30
    4ea8:	b1 a9       	ldd	r27, Z+49	; 0x31
    4eaa:	8c 19       	sub	r24, r12
    4eac:	9d 09       	sbc	r25, r13
    4eae:	ae 09       	sbc	r26, r14
    4eb0:	bf 09       	sbc	r27, r15
    4eb2:	a5 01       	movw	r20, r10
    4eb4:	60 e0       	ldi	r22, 0x00	; 0
    4eb6:	70 e0       	ldi	r23, 0x00	; 0
    4eb8:	84 17       	cp	r24, r20
    4eba:	95 07       	cpc	r25, r21
    4ebc:	a6 07       	cpc	r26, r22
    4ebe:	b7 07       	cpc	r27, r23
    4ec0:	80 f4       	brcc	.+32     	; 0x4ee2 <f_read+0x38a>
    4ec2:	dc 01       	movw	r26, r24
    4ec4:	ba 2f       	mov	r27, r26
    4ec6:	aa 27       	eor	r26, r26
    4ec8:	bb 0f       	add	r27, r27
    4eca:	a4 0d       	add	r26, r4
    4ecc:	b5 1d       	adc	r27, r5
    4ece:	f2 96       	adiw	r30, 0x32	; 50
    4ed0:	ad 01       	movw	r20, r26
    4ed2:	5e 5f       	subi	r21, 0xFE	; 254
    4ed4:	81 91       	ld	r24, Z+
    4ed6:	91 91       	ld	r25, Z+
    4ed8:	8d 93       	st	X+, r24
    4eda:	9d 93       	st	X+, r25
    4edc:	a4 17       	cp	r26, r20
    4ede:	b5 07       	cpc	r27, r21
    4ee0:	c9 f7       	brne	.-14     	; 0x4ed4 <f_read+0x37c>
    4ee2:	75 01       	movw	r14, r10
    4ee4:	fe 2c       	mov	r15, r14
    4ee6:	ee 24       	eor	r14, r14
    4ee8:	ff 0c       	add	r15, r15
    4eea:	f1 01       	movw	r30, r2
    4eec:	86 81       	ldd	r24, Z+6	; 0x06
    4eee:	97 81       	ldd	r25, Z+7	; 0x07
    4ef0:	a0 85       	ldd	r26, Z+8	; 0x08
    4ef2:	b1 85       	ldd	r27, Z+9	; 0x09
    4ef4:	4d cf       	rjmp	.-358    	; 0x4d90 <f_read+0x238>
    4ef6:	89 2b       	or	r24, r25
    4ef8:	8a 2b       	or	r24, r26
    4efa:	8b 2b       	or	r24, r27
    4efc:	09 f0       	breq	.+2      	; 0x4f00 <f_read+0x3a8>
    4efe:	85 c0       	rjmp	.+266    	; 0x500a <f_read+0x4b2>
    4f00:	d1 01       	movw	r26, r2
    4f02:	1e 96       	adiw	r26, 0x0e	; 14
    4f04:	6d 91       	ld	r22, X+
    4f06:	7d 91       	ld	r23, X+
    4f08:	8d 91       	ld	r24, X+
    4f0a:	9c 91       	ld	r25, X
    4f0c:	51 97       	sbiw	r26, 0x11	; 17
    4f0e:	62 30       	cpi	r22, 0x02	; 2
    4f10:	71 05       	cpc	r23, r1
    4f12:	81 05       	cpc	r24, r1
    4f14:	91 05       	cpc	r25, r1
    4f16:	08 f4       	brcc	.+2      	; 0x4f1a <f_read+0x3c2>
    4f18:	8d c0       	rjmp	.+282    	; 0x5034 <f_read+0x4dc>
    4f1a:	6f 3f       	cpi	r22, 0xFF	; 255
    4f1c:	ff ef       	ldi	r31, 0xFF	; 255
    4f1e:	7f 07       	cpc	r23, r31
    4f20:	8f 07       	cpc	r24, r31
    4f22:	9f 07       	cpc	r25, r31
    4f24:	09 f4       	brne	.+2      	; 0x4f28 <f_read+0x3d0>
    4f26:	96 c0       	rjmp	.+300    	; 0x5054 <f_read+0x4fc>
    4f28:	f1 01       	movw	r30, r2
    4f2a:	62 8b       	std	Z+18, r22	; 0x12
    4f2c:	73 8b       	std	Z+19, r23	; 0x13
    4f2e:	84 8b       	std	Z+20, r24	; 0x14
    4f30:	95 8b       	std	Z+21, r25	; 0x15
    4f32:	00 81       	ld	r16, Z
    4f34:	11 81       	ldd	r17, Z+1	; 0x01
    4f36:	0b 87       	std	Y+11, r16	; 0x0b
    4f38:	1c 87       	std	Y+12, r17	; 0x0c
    4f3a:	dc 01       	movw	r26, r24
    4f3c:	cb 01       	movw	r24, r22
    4f3e:	f8 01       	movw	r30, r16
    4f40:	5a cf       	rjmp	.-332    	; 0x4df6 <f_read+0x29e>
    4f42:	d1 01       	movw	r26, r2
    4f44:	56 96       	adiw	r26, 0x16	; 22
    4f46:	cd 92       	st	X+, r12
    4f48:	dd 92       	st	X+, r13
    4f4a:	ed 92       	st	X+, r14
    4f4c:	fc 92       	st	X, r15
    4f4e:	59 97       	sbiw	r26, 0x19	; 25
    4f50:	16 96       	adiw	r26, 0x06	; 6
    4f52:	8d 91       	ld	r24, X+
    4f54:	9d 91       	ld	r25, X+
    4f56:	0d 90       	ld	r0, X+
    4f58:	bc 91       	ld	r27, X
    4f5a:	a0 2d       	mov	r26, r0
    4f5c:	cb 82       	std	Y+3, r12	; 0x03
    4f5e:	dc 82       	std	Y+4, r13	; 0x04
    4f60:	ed 82       	std	Y+5, r14	; 0x05
    4f62:	fe 82       	std	Y+6, r15	; 0x06
    4f64:	85 ce       	rjmp	.-758    	; 0x4c70 <f_read+0x118>
    4f66:	f2 96       	adiw	r30, 0x32	; 50
    4f68:	ef 83       	std	Y+7, r30	; 0x07
    4f6a:	f8 87       	std	Y+8, r31	; 0x08
    4f6c:	01 e0       	ldi	r16, 0x01	; 1
    4f6e:	10 e0       	ldi	r17, 0x00	; 0
    4f70:	a5 01       	movw	r20, r10
    4f72:	94 01       	movw	r18, r8
    4f74:	bf 01       	movw	r22, r30
    4f76:	ab 85       	ldd	r26, Y+11	; 0x0b
    4f78:	bc 85       	ldd	r27, Y+12	; 0x0c
    4f7a:	11 96       	adiw	r26, 0x01	; 1
    4f7c:	8c 91       	ld	r24, X
    4f7e:	6a d3       	rcall	.+1748   	; 0x5654 <disk_write>
    4f80:	81 11       	cpse	r24, r1
    4f82:	b1 ce       	rjmp	.-670    	; 0x4ce6 <f_read+0x18e>
    4f84:	eb 85       	ldd	r30, Y+11	; 0x0b
    4f86:	fc 85       	ldd	r31, Y+12	; 0x0c
    4f88:	14 82       	std	Z+4, r1	; 0x04
    4f8a:	42 8d       	ldd	r20, Z+26	; 0x1a
    4f8c:	53 8d       	ldd	r21, Z+27	; 0x1b
    4f8e:	64 8d       	ldd	r22, Z+28	; 0x1c
    4f90:	75 8d       	ldd	r23, Z+29	; 0x1d
    4f92:	82 a1       	ldd	r24, Z+34	; 0x22
    4f94:	93 a1       	ldd	r25, Z+35	; 0x23
    4f96:	a4 a1       	ldd	r26, Z+36	; 0x24
    4f98:	b5 a1       	ldd	r27, Z+37	; 0x25
    4f9a:	95 01       	movw	r18, r10
    4f9c:	84 01       	movw	r16, r8
    4f9e:	08 1b       	sub	r16, r24
    4fa0:	19 0b       	sbc	r17, r25
    4fa2:	2a 0b       	sbc	r18, r26
    4fa4:	3b 0b       	sbc	r19, r27
    4fa6:	04 17       	cp	r16, r20
    4fa8:	15 07       	cpc	r17, r21
    4faa:	26 07       	cpc	r18, r22
    4fac:	37 07       	cpc	r19, r23
    4fae:	08 f0       	brcs	.+2      	; 0x4fb2 <f_read+0x45a>
    4fb0:	81 ce       	rjmp	.-766    	; 0x4cb4 <f_read+0x15c>
    4fb2:	c3 80       	ldd	r12, Z+3	; 0x03
    4fb4:	d1 2c       	mov	r13, r1
    4fb6:	12 e0       	ldi	r17, 0x02	; 2
    4fb8:	c1 16       	cp	r12, r17
    4fba:	d1 04       	cpc	r13, r1
    4fbc:	08 f4       	brcc	.+2      	; 0x4fc0 <f_read+0x468>
    4fbe:	7a ce       	rjmp	.-780    	; 0x4cb4 <f_read+0x15c>
    4fc0:	e9 86       	std	Y+9, r14	; 0x09
    4fc2:	fa 86       	std	Y+10, r15	; 0x0a
    4fc4:	ef 80       	ldd	r14, Y+7	; 0x07
    4fc6:	f8 84       	ldd	r15, Y+8	; 0x08
    4fc8:	ab 85       	ldd	r26, Y+11	; 0x0b
    4fca:	bc 85       	ldd	r27, Y+12	; 0x0c
    4fcc:	08 c0       	rjmp	.+16     	; 0x4fde <f_read+0x486>
    4fce:	ab 85       	ldd	r26, Y+11	; 0x0b
    4fd0:	bc 85       	ldd	r27, Y+12	; 0x0c
    4fd2:	5a 96       	adiw	r26, 0x1a	; 26
    4fd4:	4d 91       	ld	r20, X+
    4fd6:	5d 91       	ld	r21, X+
    4fd8:	6d 91       	ld	r22, X+
    4fda:	7c 91       	ld	r23, X
    4fdc:	5d 97       	sbiw	r26, 0x1d	; 29
    4fde:	84 0e       	add	r8, r20
    4fe0:	95 1e       	adc	r9, r21
    4fe2:	a6 1e       	adc	r10, r22
    4fe4:	b7 1e       	adc	r11, r23
    4fe6:	01 e0       	ldi	r16, 0x01	; 1
    4fe8:	10 e0       	ldi	r17, 0x00	; 0
    4fea:	a5 01       	movw	r20, r10
    4fec:	94 01       	movw	r18, r8
    4fee:	b7 01       	movw	r22, r14
    4ff0:	11 96       	adiw	r26, 0x01	; 1
    4ff2:	8c 91       	ld	r24, X
    4ff4:	2f d3       	rcall	.+1630   	; 0x5654 <disk_write>
    4ff6:	b1 e0       	ldi	r27, 0x01	; 1
    4ff8:	cb 1a       	sub	r12, r27
    4ffa:	d1 08       	sbc	r13, r1
    4ffc:	e1 e0       	ldi	r30, 0x01	; 1
    4ffe:	ce 16       	cp	r12, r30
    5000:	d1 04       	cpc	r13, r1
    5002:	29 f7       	brne	.-54     	; 0x4fce <f_read+0x476>
    5004:	e9 84       	ldd	r14, Y+9	; 0x09
    5006:	fa 84       	ldd	r15, Y+10	; 0x0a
    5008:	55 ce       	rjmp	.-854    	; 0x4cb4 <f_read+0x15c>
    500a:	f1 01       	movw	r30, r2
    500c:	42 89       	ldd	r20, Z+18	; 0x12
    500e:	53 89       	ldd	r21, Z+19	; 0x13
    5010:	64 89       	ldd	r22, Z+20	; 0x14
    5012:	75 89       	ldd	r23, Z+21	; 0x15
    5014:	42 30       	cpi	r20, 0x02	; 2
    5016:	51 05       	cpc	r21, r1
    5018:	61 05       	cpc	r22, r1
    501a:	71 05       	cpc	r23, r1
    501c:	58 f0       	brcs	.+22     	; 0x5034 <f_read+0x4dc>
    501e:	eb 85       	ldd	r30, Y+11	; 0x0b
    5020:	fc 85       	ldd	r31, Y+12	; 0x0c
    5022:	86 89       	ldd	r24, Z+22	; 0x16
    5024:	97 89       	ldd	r25, Z+23	; 0x17
    5026:	a0 8d       	ldd	r26, Z+24	; 0x18
    5028:	b1 8d       	ldd	r27, Z+25	; 0x19
    502a:	48 17       	cp	r20, r24
    502c:	59 07       	cpc	r21, r25
    502e:	6a 07       	cpc	r22, r26
    5030:	7b 07       	cpc	r23, r27
    5032:	40 f0       	brcs	.+16     	; 0x5044 <f_read+0x4ec>
    5034:	82 e0       	ldi	r24, 0x02	; 2
    5036:	d1 01       	movw	r26, r2
    5038:	15 96       	adiw	r26, 0x05	; 5
    503a:	8c 93       	st	X, r24
    503c:	b8 cd       	rjmp	.-1168   	; 0x4bae <f_read+0x56>
    503e:	97 01       	movw	r18, r14
    5040:	f2 01       	movw	r30, r4
    5042:	9c ce       	rjmp	.-712    	; 0x4d7c <f_read+0x224>
    5044:	cf 01       	movw	r24, r30
    5046:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <get_fat.part.4>
    504a:	61 cf       	rjmp	.-318    	; 0x4f0e <f_read+0x3b6>
    504c:	82 e0       	ldi	r24, 0x02	; 2
    504e:	f1 01       	movw	r30, r2
    5050:	85 83       	std	Z+5, r24	; 0x05
    5052:	ad cd       	rjmp	.-1190   	; 0x4bae <f_read+0x56>
    5054:	81 e0       	ldi	r24, 0x01	; 1
    5056:	d1 01       	movw	r26, r2
    5058:	15 96       	adiw	r26, 0x05	; 5
    505a:	8c 93       	st	X, r24
    505c:	a8 cd       	rjmp	.-1200   	; 0x4bae <f_read+0x56>

0000505e <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
    505e:	2f 92       	push	r2
    5060:	3f 92       	push	r3
    5062:	4f 92       	push	r4
    5064:	5f 92       	push	r5
    5066:	6f 92       	push	r6
    5068:	7f 92       	push	r7
    506a:	8f 92       	push	r8
    506c:	9f 92       	push	r9
    506e:	af 92       	push	r10
    5070:	bf 92       	push	r11
    5072:	cf 92       	push	r12
    5074:	df 92       	push	r13
    5076:	ef 92       	push	r14
    5078:	ff 92       	push	r15
    507a:	0f 93       	push	r16
    507c:	1f 93       	push	r17
    507e:	cf 93       	push	r28
    5080:	df 93       	push	r29
    5082:	ec 01       	movw	r28, r24
)
{
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
    5084:	00 97       	sbiw	r24, 0x00	; 0
    5086:	39 f0       	breq	.+14     	; 0x5096 <f_close+0x38>
    5088:	e8 81       	ld	r30, Y
    508a:	f9 81       	ldd	r31, Y+1	; 0x01
    508c:	30 97       	sbiw	r30, 0x00	; 0
    508e:	19 f0       	breq	.+6      	; 0x5096 <f_close+0x38>
    5090:	80 81       	ld	r24, Z
    5092:	81 11       	cpse	r24, r1
    5094:	14 c0       	rjmp	.+40     	; 0x50be <f_close+0x60>
		return FR_INVALID_OBJECT;
    5096:	89 e0       	ldi	r24, 0x09	; 9
			unlock_fs(fs, FR_OK);		/* Unlock volume */
#endif
		}
	}
	return res;
}
    5098:	df 91       	pop	r29
    509a:	cf 91       	pop	r28
    509c:	1f 91       	pop	r17
    509e:	0f 91       	pop	r16
    50a0:	ff 90       	pop	r15
    50a2:	ef 90       	pop	r14
    50a4:	df 90       	pop	r13
    50a6:	cf 90       	pop	r12
    50a8:	bf 90       	pop	r11
    50aa:	af 90       	pop	r10
    50ac:	9f 90       	pop	r9
    50ae:	8f 90       	pop	r8
    50b0:	7f 90       	pop	r7
    50b2:	6f 90       	pop	r6
    50b4:	5f 90       	pop	r5
    50b6:	4f 90       	pop	r4
    50b8:	3f 90       	pop	r3
    50ba:	2f 90       	pop	r2
    50bc:	08 95       	ret
)
{
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
    50be:	26 81       	ldd	r18, Z+6	; 0x06
    50c0:	37 81       	ldd	r19, Z+7	; 0x07
    50c2:	8a 81       	ldd	r24, Y+2	; 0x02
    50c4:	9b 81       	ldd	r25, Y+3	; 0x03
    50c6:	28 17       	cp	r18, r24
    50c8:	39 07       	cpc	r19, r25
    50ca:	29 f7       	brne	.-54     	; 0x5096 <f_close+0x38>
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */

	if (disk_status(fil->fs->drv) & STA_NOINIT)
    50cc:	81 81       	ldd	r24, Z+1	; 0x01
    50ce:	3c d2       	rcall	.+1144   	; 0x5548 <disk_status>
    50d0:	80 ff       	sbrs	r24, 0
    50d2:	02 c0       	rjmp	.+4      	; 0x50d8 <f_close+0x7a>
		return FR_NOT_READY;
    50d4:	83 e0       	ldi	r24, 0x03	; 3
    50d6:	e0 cf       	rjmp	.-64     	; 0x5098 <f_close+0x3a>
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
	if (res == FR_OK) {
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
    50d8:	8c 81       	ldd	r24, Y+4	; 0x04
    50da:	85 fd       	sbrc	r24, 5
    50dc:	16 c0       	rjmp	.+44     	; 0x510a <f_close+0xac>
)
{
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
    50de:	e8 81       	ld	r30, Y
    50e0:	f9 81       	ldd	r31, Y+1	; 0x01
    50e2:	30 97       	sbiw	r30, 0x00	; 0
    50e4:	c1 f2       	breq	.-80     	; 0x5096 <f_close+0x38>
    50e6:	80 81       	ld	r24, Z
    50e8:	88 23       	and	r24, r24
    50ea:	a9 f2       	breq	.-86     	; 0x5096 <f_close+0x38>
    50ec:	26 81       	ldd	r18, Z+6	; 0x06
    50ee:	37 81       	ldd	r19, Z+7	; 0x07
    50f0:	8a 81       	ldd	r24, Y+2	; 0x02
    50f2:	9b 81       	ldd	r25, Y+3	; 0x03
    50f4:	28 17       	cp	r18, r24
    50f6:	39 07       	cpc	r19, r25
    50f8:	71 f6       	brne	.-100    	; 0x5096 <f_close+0x38>
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */

	if (disk_status(fil->fs->drv) & STA_NOINIT)
    50fa:	81 81       	ldd	r24, Z+1	; 0x01
    50fc:	25 d2       	rcall	.+1098   	; 0x5548 <disk_status>
    50fe:	80 fd       	sbrc	r24, 0
    5100:	e9 cf       	rjmp	.-46     	; 0x50d4 <f_close+0x76>
#endif
#if _FS_LOCK
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
    5102:	18 82       	st	Y, r1
    5104:	19 82       	std	Y+1, r1	; 0x01
    5106:	80 e0       	ldi	r24, 0x00	; 0
    5108:	c7 cf       	rjmp	.-114    	; 0x5098 <f_close+0x3a>
					LEAVE_FF(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
    510a:	4a 8c       	ldd	r4, Y+26	; 0x1a
    510c:	5b 8c       	ldd	r5, Y+27	; 0x1b
    510e:	6c 8c       	ldd	r6, Y+28	; 0x1c
    5110:	7d 8c       	ldd	r7, Y+29	; 0x1d
    5112:	a8 80       	ld	r10, Y
    5114:	b9 80       	ldd	r11, Y+1	; 0x01
)
{
	FRESULT res = FR_OK;


	if (sector != fs->winsect) {	/* Window offset changed? */
    5116:	f5 01       	movw	r30, r10
    5118:	c6 a4       	ldd	r12, Z+46	; 0x2e
    511a:	d7 a4       	ldd	r13, Z+47	; 0x2f
    511c:	e0 a8       	ldd	r14, Z+48	; 0x30
    511e:	f1 a8       	ldd	r15, Z+49	; 0x31
    5120:	4c 14       	cp	r4, r12
    5122:	5d 04       	cpc	r5, r13
    5124:	6e 04       	cpc	r6, r14
    5126:	7f 04       	cpc	r7, r15
    5128:	01 f1       	breq	.+64     	; 0x516a <f_close+0x10c>
	DWORD wsect;
	UINT nf;
	FRESULT res = FR_OK;


	if (fs->wflag) {	/* Write back the sector if it is dirty */
    512a:	84 81       	ldd	r24, Z+4	; 0x04
		wsect = fs->winsect;	/* Current sector number */
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
    512c:	15 01       	movw	r2, r10
    512e:	f2 e3       	ldi	r31, 0x32	; 50
    5130:	2f 0e       	add	r2, r31
    5132:	31 1c       	adc	r3, r1
	DWORD wsect;
	UINT nf;
	FRESULT res = FR_OK;


	if (fs->wflag) {	/* Write back the sector if it is dirty */
    5134:	81 11       	cpse	r24, r1
    5136:	46 c0       	rjmp	.+140    	; 0x51c4 <f_close+0x166>
	if (sector != fs->winsect) {	/* Window offset changed? */
#if !_FS_READONLY
		res = sync_window(fs);		/* Write-back changes */
#endif
		if (res == FR_OK) {			/* Fill sector window with new data */
			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
    5138:	01 e0       	ldi	r16, 0x01	; 1
    513a:	10 e0       	ldi	r17, 0x00	; 0
    513c:	a3 01       	movw	r20, r6
    513e:	92 01       	movw	r18, r4
    5140:	b1 01       	movw	r22, r2
    5142:	f5 01       	movw	r30, r10
    5144:	81 81       	ldd	r24, Z+1	; 0x01
    5146:	07 d2       	rcall	.+1038   	; 0x5556 <disk_read>
    5148:	88 23       	and	r24, r24
    514a:	51 f0       	breq	.+20     	; 0x5160 <f_close+0x102>
				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
				res = FR_DISK_ERR;
			}
			fs->winsect = sector;
    514c:	8f ef       	ldi	r24, 0xFF	; 255
    514e:	9f ef       	ldi	r25, 0xFF	; 255
    5150:	dc 01       	movw	r26, r24
    5152:	f5 01       	movw	r30, r10
    5154:	86 a7       	std	Z+46, r24	; 0x2e
    5156:	97 a7       	std	Z+47, r25	; 0x2f
    5158:	a0 ab       	std	Z+48, r26	; 0x30
    515a:	b1 ab       	std	Z+49, r27	; 0x31
    515c:	81 e0       	ldi	r24, 0x01	; 1
    515e:	9c cf       	rjmp	.-200    	; 0x5098 <f_close+0x3a>
    5160:	f5 01       	movw	r30, r10
    5162:	46 a6       	std	Z+46, r4	; 0x2e
    5164:	57 a6       	std	Z+47, r5	; 0x2f
    5166:	60 aa       	std	Z+48, r6	; 0x30
    5168:	71 aa       	std	Z+49, r7	; 0x31
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
			if (res == FR_OK) {
				dir = fp->dir_ptr;
    516a:	ee 8d       	ldd	r30, Y+30	; 0x1e
    516c:	ff 8d       	ldd	r31, Y+31	; 0x1f
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
    516e:	83 85       	ldd	r24, Z+11	; 0x0b
    5170:	80 62       	ori	r24, 0x20	; 32
    5172:	83 87       	std	Z+11, r24	; 0x0b
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
    5174:	8a 85       	ldd	r24, Y+10	; 0x0a
    5176:	9b 85       	ldd	r25, Y+11	; 0x0b
    5178:	ac 85       	ldd	r26, Y+12	; 0x0c
    517a:	bd 85       	ldd	r27, Y+13	; 0x0d
    517c:	84 8f       	std	Z+28, r24	; 0x1c
    517e:	95 8f       	std	Z+29, r25	; 0x1d
    5180:	a6 8f       	std	Z+30, r26	; 0x1e
    5182:	b7 8f       	std	Z+31, r27	; 0x1f
				st_clust(dir, fp->sclust);					/* Update start cluster */
    5184:	8e 85       	ldd	r24, Y+14	; 0x0e
    5186:	9f 85       	ldd	r25, Y+15	; 0x0f
    5188:	a8 89       	ldd	r26, Y+16	; 0x10
    518a:	b9 89       	ldd	r27, Y+17	; 0x11
void st_clust (
	BYTE* dir,	/* Pointer to the directory entry */
	DWORD cl	/* Value to be set */
)
{
	ST_WORD(dir+DIR_FstClusLO, cl);
    518c:	82 8f       	std	Z+26, r24	; 0x1a
    518e:	93 8f       	std	Z+27, r25	; 0x1b
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
    5190:	a4 8b       	std	Z+20, r26	; 0x14
    5192:	b5 8b       	std	Z+21, r27	; 0x15
				dir = fp->dir_ptr;
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
				st_clust(dir, fp->sclust);					/* Update start cluster */
				tm = GET_FATTIME();							/* Update updated time */
				ST_DWORD(dir+DIR_WrtTime, tm);
    5194:	80 e0       	ldi	r24, 0x00	; 0
    5196:	90 e0       	ldi	r25, 0x00	; 0
    5198:	af e4       	ldi	r26, 0x4F	; 79
    519a:	b5 e4       	ldi	r27, 0x45	; 69
    519c:	86 8b       	std	Z+22, r24	; 0x16
    519e:	97 8b       	std	Z+23, r25	; 0x17
    51a0:	a0 8f       	std	Z+24, r26	; 0x18
    51a2:	b1 8f       	std	Z+25, r27	; 0x19
				ST_WORD(dir+DIR_LstAccDate, 0);
    51a4:	12 8a       	std	Z+18, r1	; 0x12
    51a6:	13 8a       	std	Z+19, r1	; 0x13
				fp->flag &= ~FA__WRITTEN;
    51a8:	8c 81       	ldd	r24, Y+4	; 0x04
    51aa:	8f 7d       	andi	r24, 0xDF	; 223
    51ac:	8c 83       	std	Y+4, r24	; 0x04
				fp->fs->wflag = 1;
    51ae:	e8 81       	ld	r30, Y
    51b0:	f9 81       	ldd	r31, Y+1	; 0x01
    51b2:	81 e0       	ldi	r24, 0x01	; 1
    51b4:	84 83       	std	Z+4, r24	; 0x04
				res = sync_fs(fp->fs);
    51b6:	88 81       	ld	r24, Y
    51b8:	99 81       	ldd	r25, Y+1	; 0x01
    51ba:	0e 94 e7 04 	call	0x9ce	; 0x9ce <sync_fs>
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
	if (res == FR_OK)
    51be:	81 11       	cpse	r24, r1
    51c0:	6b cf       	rjmp	.-298    	; 0x5098 <f_close+0x3a>
    51c2:	8d cf       	rjmp	.-230    	; 0x50de <f_close+0x80>
	FRESULT res = FR_OK;


	if (fs->wflag) {	/* Write back the sector if it is dirty */
		wsect = fs->winsect;	/* Current sector number */
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
    51c4:	01 e0       	ldi	r16, 0x01	; 1
    51c6:	10 e0       	ldi	r17, 0x00	; 0
    51c8:	a7 01       	movw	r20, r14
    51ca:	96 01       	movw	r18, r12
    51cc:	b1 01       	movw	r22, r2
    51ce:	f5 01       	movw	r30, r10
    51d0:	81 81       	ldd	r24, Z+1	; 0x01
    51d2:	40 d2       	rcall	.+1152   	; 0x5654 <disk_write>
    51d4:	81 11       	cpse	r24, r1
    51d6:	c2 cf       	rjmp	.-124    	; 0x515c <f_close+0xfe>
			res = FR_DISK_ERR;
		} else {
			fs->wflag = 0;
    51d8:	f5 01       	movw	r30, r10
    51da:	14 82       	std	Z+4, r1	; 0x04
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
    51dc:	82 8d       	ldd	r24, Z+26	; 0x1a
    51de:	93 8d       	ldd	r25, Z+27	; 0x1b
    51e0:	a4 8d       	ldd	r26, Z+28	; 0x1c
    51e2:	b5 8d       	ldd	r27, Z+29	; 0x1d
    51e4:	42 a1       	ldd	r20, Z+34	; 0x22
    51e6:	53 a1       	ldd	r21, Z+35	; 0x23
    51e8:	64 a1       	ldd	r22, Z+36	; 0x24
    51ea:	75 a1       	ldd	r23, Z+37	; 0x25
    51ec:	97 01       	movw	r18, r14
    51ee:	86 01       	movw	r16, r12
    51f0:	04 1b       	sub	r16, r20
    51f2:	15 0b       	sbc	r17, r21
    51f4:	26 0b       	sbc	r18, r22
    51f6:	37 0b       	sbc	r19, r23
    51f8:	08 17       	cp	r16, r24
    51fa:	19 07       	cpc	r17, r25
    51fc:	2a 07       	cpc	r18, r26
    51fe:	3b 07       	cpc	r19, r27
    5200:	08 f0       	brcs	.+2      	; 0x5204 <f_close+0x1a6>
    5202:	9a cf       	rjmp	.-204    	; 0x5138 <f_close+0xda>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
    5204:	83 80       	ldd	r8, Z+3	; 0x03
    5206:	91 2c       	mov	r9, r1
    5208:	12 e0       	ldi	r17, 0x02	; 2
    520a:	81 16       	cp	r8, r17
    520c:	91 04       	cpc	r9, r1
    520e:	30 f4       	brcc	.+12     	; 0x521c <f_close+0x1be>
    5210:	93 cf       	rjmp	.-218    	; 0x5138 <f_close+0xda>
    5212:	f5 01       	movw	r30, r10
    5214:	82 8d       	ldd	r24, Z+26	; 0x1a
    5216:	93 8d       	ldd	r25, Z+27	; 0x1b
    5218:	a4 8d       	ldd	r26, Z+28	; 0x1c
    521a:	b5 8d       	ldd	r27, Z+29	; 0x1d
					wsect += fs->fsize;
    521c:	c8 0e       	add	r12, r24
    521e:	d9 1e       	adc	r13, r25
    5220:	ea 1e       	adc	r14, r26
    5222:	fb 1e       	adc	r15, r27
					disk_write(fs->drv, fs->win, wsect, 1);
    5224:	01 e0       	ldi	r16, 0x01	; 1
    5226:	10 e0       	ldi	r17, 0x00	; 0
    5228:	a7 01       	movw	r20, r14
    522a:	96 01       	movw	r18, r12
    522c:	b1 01       	movw	r22, r2
    522e:	f5 01       	movw	r30, r10
    5230:	81 81       	ldd	r24, Z+1	; 0x01
    5232:	10 d2       	rcall	.+1056   	; 0x5654 <disk_write>
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
			res = FR_DISK_ERR;
		} else {
			fs->wflag = 0;
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
    5234:	f1 e0       	ldi	r31, 0x01	; 1
    5236:	8f 1a       	sub	r8, r31
    5238:	91 08       	sbc	r9, r1
    523a:	01 e0       	ldi	r16, 0x01	; 1
    523c:	80 16       	cp	r8, r16
    523e:	91 04       	cpc	r9, r1
    5240:	41 f7       	brne	.-48     	; 0x5212 <f_close+0x1b4>
    5242:	7a cf       	rjmp	.-268    	; 0x5138 <f_close+0xda>

00005244 <rcvr_datablock>:
static
int rcvr_datablock (
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count (must be multiple of 4) */
)
{
    5244:	ef 92       	push	r14
    5246:	ff 92       	push	r15
    5248:	0f 93       	push	r16
    524a:	1f 93       	push	r17
    524c:	cf 93       	push	r28
    524e:	df 93       	push	r29
    5250:	7c 01       	movw	r14, r24
    5252:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
    5254:	24 e1       	ldi	r18, 0x14	; 20
    5256:	20 93 a7 25 	sts	0x25A7, r18
    525a:	04 c0       	rjmp	.+8      	; 0x5264 <rcvr_datablock+0x20>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    525c:	20 91 a7 25 	lds	r18, 0x25A7
    5260:	22 23       	and	r18, r18
    5262:	39 f0       	breq	.+14     	; 0x5272 <rcvr_datablock+0x2e>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5264:	8f ef       	ldi	r24, 0xFF	; 255
    5266:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    526a:	8f 3f       	cpi	r24, 0xFF	; 255
    526c:	b9 f3       	breq	.-18     	; 0x525c <rcvr_datablock+0x18>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    526e:	8e 3f       	cpi	r24, 0xFE	; 254
    5270:	49 f0       	breq	.+18     	; 0x5284 <rcvr_datablock+0x40>
    5272:	80 e0       	ldi	r24, 0x00	; 0
    5274:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
    5276:	df 91       	pop	r29
    5278:	cf 91       	pop	r28
    527a:	1f 91       	pop	r17
    527c:	0f 91       	pop	r16
    527e:	ff 90       	pop	r15
    5280:	ef 90       	pop	r14
    5282:	08 95       	ret
    5284:	e7 01       	movw	r28, r14
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    5286:	8f ef       	ldi	r24, 0xFF	; 255
    5288:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    528c:	88 83       	st	Y, r24
		*p++ = spi_wr_rd(0xff);
    528e:	8f ef       	ldi	r24, 0xFF	; 255
    5290:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5294:	89 83       	std	Y+1, r24	; 0x01
		
	} while (cnt -= 2);
    5296:	02 50       	subi	r16, 0x02	; 2
    5298:	11 09       	sbc	r17, r1
    529a:	22 96       	adiw	r28, 0x02	; 2
    529c:	01 15       	cp	r16, r1
    529e:	11 05       	cpc	r17, r1
    52a0:	91 f7       	brne	.-28     	; 0x5286 <rcvr_datablock+0x42>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    52a2:	8f ef       	ldi	r24, 0xFF	; 255
    52a4:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    52a8:	8f ef       	ldi	r24, 0xFF	; 255
    52aa:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    52ae:	81 e0       	ldi	r24, 0x01	; 1
    52b0:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
    52b2:	df 91       	pop	r29
    52b4:	cf 91       	pop	r28
    52b6:	1f 91       	pop	r17
    52b8:	0f 91       	pop	r16
    52ba:	ff 90       	pop	r15
    52bc:	ef 90       	pop	r14
    52be:	08 95       	ret

000052c0 <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
    52c0:	ef 92       	push	r14
    52c2:	ff 92       	push	r15
    52c4:	0f 93       	push	r16
    52c6:	1f 93       	push	r17
    52c8:	cf 93       	push	r28
    52ca:	df 93       	push	r29
    52cc:	c8 2f       	mov	r28, r24
    52ce:	14 2f       	mov	r17, r20
    52d0:	05 2f       	mov	r16, r21
    52d2:	f6 2e       	mov	r15, r22
    52d4:	e7 2e       	mov	r14, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
    52d6:	87 fd       	sbrc	r24, 7
    52d8:	63 c0       	rjmp	.+198    	; 0x53a0 <send_cmd+0xe0>
		res = send_cmd(CMD55, 0);
		if (res > 1) return res;
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
    52da:	cc 30       	cpi	r28, 0x0C	; 12
    52dc:	09 f4       	brne	.+2      	; 0x52e0 <send_cmd+0x20>
    52de:	4a c0       	rjmp	.+148    	; 0x5374 <send_cmd+0xb4>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    52e0:	d0 e1       	ldi	r29, 0x10	; 16
    52e2:	d0 93 45 06 	sts	0x0645, r29
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    52e6:	8f ef       	ldi	r24, 0xFF	; 255
    52e8:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();
    52ec:	d0 93 46 06 	sts	0x0646, r29
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    52f0:	8f ef       	ldi	r24, 0xFF	; 255
    52f2:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    52f6:	82 e3       	ldi	r24, 0x32	; 50
    52f8:	80 93 a6 25 	sts	0x25A6, r24
    52fc:	04 c0       	rjmp	.+8      	; 0x5306 <send_cmd+0x46>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    52fe:	90 91 a6 25 	lds	r25, 0x25A6
    5302:	99 23       	and	r25, r25
    5304:	49 f1       	breq	.+82     	; 0x5358 <send_cmd+0x98>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5306:	8f ef       	ldi	r24, 0xFF	; 255
    5308:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    530c:	8f 3f       	cpi	r24, 0xFF	; 255
    530e:	b9 f7       	brne	.-18     	; 0x52fe <send_cmd+0x3e>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5310:	8c 2f       	mov	r24, r28
    5312:	80 64       	ori	r24, 0x40	; 64
    5314:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5318:	8e 2d       	mov	r24, r14
    531a:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    531e:	8f 2d       	mov	r24, r15
    5320:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5324:	80 2f       	mov	r24, r16
    5326:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    532a:	81 2f       	mov	r24, r17
    532c:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
    5330:	c1 11       	cpse	r28, r1
    5332:	3f c0       	rjmp	.+126    	; 0x53b2 <send_cmd+0xf2>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5334:	85 e9       	ldi	r24, 0x95	; 149
    5336:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
    533a:	ca e0       	ldi	r28, 0x0A	; 10
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    533c:	8f ef       	ldi	r24, 0xFF	; 255
    533e:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);
    5342:	87 ff       	sbrs	r24, 7
    5344:	02 c0       	rjmp	.+4      	; 0x534a <send_cmd+0x8a>
    5346:	c1 50       	subi	r28, 0x01	; 1
    5348:	c9 f7       	brne	.-14     	; 0x533c <send_cmd+0x7c>

	return res;			/* Return with the response value */
}
    534a:	df 91       	pop	r29
    534c:	cf 91       	pop	r28
    534e:	1f 91       	pop	r17
    5350:	0f 91       	pop	r16
    5352:	ff 90       	pop	r15
    5354:	ef 90       	pop	r14
    5356:	08 95       	ret
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    5358:	80 e1       	ldi	r24, 0x10	; 16
    535a:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    535e:	8f ef       	ldi	r24, 0xFF	; 255
    5360:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
    5364:	8f ef       	ldi	r24, 0xFF	; 255
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
    5366:	df 91       	pop	r29
    5368:	cf 91       	pop	r28
    536a:	1f 91       	pop	r17
    536c:	0f 91       	pop	r16
    536e:	ff 90       	pop	r15
    5370:	ef 90       	pop	r14
    5372:	08 95       	ret
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5374:	8c e4       	ldi	r24, 0x4C	; 76
    5376:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    537a:	8e 2d       	mov	r24, r14
    537c:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5380:	8f 2d       	mov	r24, r15
    5382:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5386:	80 2f       	mov	r24, r16
    5388:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    538c:	81 2f       	mov	r24, r17
    538e:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5392:	81 e0       	ldi	r24, 0x01	; 1
    5394:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5398:	8f ef       	ldi	r24, 0xFF	; 255
    539a:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    539e:	cd cf       	rjmp	.-102    	; 0x533a <send_cmd+0x7a>
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
		res = send_cmd(CMD55, 0);
    53a0:	40 e0       	ldi	r20, 0x00	; 0
    53a2:	50 e0       	ldi	r21, 0x00	; 0
    53a4:	ba 01       	movw	r22, r20
    53a6:	87 e3       	ldi	r24, 0x37	; 55
    53a8:	8b df       	rcall	.-234    	; 0x52c0 <send_cmd>
		if (res > 1) return res;
    53aa:	82 30       	cpi	r24, 0x02	; 2
    53ac:	70 f6       	brcc	.-100    	; 0x534a <send_cmd+0x8a>
{
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
    53ae:	cf 77       	andi	r28, 0x7F	; 127
    53b0:	94 cf       	rjmp	.-216    	; 0x52da <send_cmd+0x1a>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
    53b2:	c8 30       	cpi	r28, 0x08	; 8
    53b4:	21 f4       	brne	.+8      	; 0x53be <send_cmd+0xfe>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    53b6:	87 e8       	ldi	r24, 0x87	; 135
    53b8:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    53bc:	be cf       	rjmp	.-132    	; 0x533a <send_cmd+0x7a>
    53be:	81 e0       	ldi	r24, 0x01	; 1
    53c0:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    53c4:	ba cf       	rjmp	.-140    	; 0x533a <send_cmd+0x7a>

000053c6 <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
    53c6:	ef 92       	push	r14
    53c8:	ff 92       	push	r15
    53ca:	0f 93       	push	r16
    53cc:	1f 93       	push	r17
    53ce:	cf 93       	push	r28
    53d0:	df 93       	push	r29
    53d2:	00 d0       	rcall	.+0      	; 0x53d4 <disk_initialize+0xe>
    53d4:	00 d0       	rcall	.+0      	; 0x53d6 <disk_initialize+0x10>
    53d6:	cd b7       	in	r28, 0x3d	; 61
    53d8:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
    53da:	88 23       	and	r24, r24
    53dc:	59 f0       	breq	.+22     	; 0x53f4 <disk_initialize+0x2e>
    53de:	81 e0       	ldi	r24, 0x01	; 1
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
    53e0:	24 96       	adiw	r28, 0x04	; 4
    53e2:	cd bf       	out	0x3d, r28	; 61
    53e4:	de bf       	out	0x3e, r29	; 62
    53e6:	df 91       	pop	r29
    53e8:	cf 91       	pop	r28
    53ea:	1f 91       	pop	r17
    53ec:	0f 91       	pop	r16
    53ee:	ff 90       	pop	r15
    53f0:	ef 90       	pop	r14
    53f2:	08 95       	ret

static
void power_off (void)
{
	//TCC1.CTRLA = TC_CLKSEL_OFF_gc;
	spi_off();
    53f4:	0e 94 db 34 	call	0x69b6	; 0x69b6 <spi_off>
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
    53f8:	80 91 04 20 	lds	r24, 0x2004
    53fc:	81 ff       	sbrs	r24, 1
    53fe:	03 c0       	rjmp	.+6      	; 0x5406 <disk_initialize+0x40>
		FCLK_FAST();
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
    5400:	80 91 04 20 	lds	r24, 0x2004
    5404:	ed cf       	rjmp	.-38     	; 0x53e0 <disk_initialize+0x1a>
	//Used to check for a timeout, not needed
	//TCC1.CTRLA = TC_CLKSEL_DIV1_gc;
	//TCC1.PER = F_CPU/DIVIDER;
	//TCC1.INTCTRLA = TC_OVFINTLVL_LO_gc;
	
	spi_on();
    5406:	0e 94 d1 34 	call	0x69a2	; 0x69a2 <spi_on>

	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	FCLK_SLOW();
    540a:	82 ed       	ldi	r24, 0xD2	; 210
    540c:	80 93 c0 08 	sts	0x08C0, r24
    5410:	1a e0       	ldi	r17, 0x0A	; 10
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5412:	8f ef       	ldi	r24, 0xFF	; 255
    5414:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5418:	11 50       	subi	r17, 0x01	; 1
	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
    541a:	d9 f7       	brne	.-10     	; 0x5412 <disk_initialize+0x4c>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
    541c:	40 e0       	ldi	r20, 0x00	; 0
    541e:	50 e0       	ldi	r21, 0x00	; 0
    5420:	ba 01       	movw	r22, r20
    5422:	80 e0       	ldi	r24, 0x00	; 0
    5424:	4d df       	rcall	.-358    	; 0x52c0 <send_cmd>
    5426:	81 30       	cpi	r24, 0x01	; 1
    5428:	59 f0       	breq	.+22     	; 0x5440 <disk_initialize+0x7a>
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
    542a:	10 92 a5 25 	sts	0x25A5, r1
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    542e:	80 e1       	ldi	r24, 0x10	; 16
    5430:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5434:	8f ef       	ldi	r24, 0xFF	; 255
    5436:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>

static
void power_off (void)
{
	//TCC1.CTRLA = TC_CLKSEL_OFF_gc;
	spi_off();
    543a:	0e 94 db 34 	call	0x69b6	; 0x69b6 <spi_off>
    543e:	e0 cf       	rjmp	.-64     	; 0x5400 <disk_initialize+0x3a>
	FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
    5440:	84 e6       	ldi	r24, 0x64	; 100
    5442:	80 93 a7 25 	sts	0x25A7, r24
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
    5446:	4a ea       	ldi	r20, 0xAA	; 170
    5448:	51 e0       	ldi	r21, 0x01	; 1
    544a:	60 e0       	ldi	r22, 0x00	; 0
    544c:	70 e0       	ldi	r23, 0x00	; 0
    544e:	88 e0       	ldi	r24, 0x08	; 8
    5450:	37 df       	rcall	.-402    	; 0x52c0 <send_cmd>
    5452:	81 30       	cpi	r24, 0x01	; 1
    5454:	09 f0       	breq	.+2      	; 0x5458 <disk_initialize+0x92>
    5456:	50 c0       	rjmp	.+160    	; 0x54f8 <disk_initialize+0x132>
    5458:	7e 01       	movw	r14, r28
    545a:	85 e0       	ldi	r24, 0x05	; 5
    545c:	e8 0e       	add	r14, r24
    545e:	f1 1c       	adc	r15, r1
    5460:	8e 01       	movw	r16, r28
    5462:	0f 5f       	subi	r16, 0xFF	; 255
    5464:	1f 4f       	sbci	r17, 0xFF	; 255
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5466:	8f ef       	ldi	r24, 0xFF	; 255
    5468:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
    546c:	f8 01       	movw	r30, r16
    546e:	81 93       	st	Z+, r24
    5470:	8f 01       	movw	r16, r30
    5472:	ee 15       	cp	r30, r14
    5474:	ff 05       	cpc	r31, r15
    5476:	b9 f7       	brne	.-18     	; 0x5466 <disk_initialize+0xa0>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
    5478:	8b 81       	ldd	r24, Y+3	; 0x03
    547a:	81 30       	cpi	r24, 0x01	; 1
    547c:	b1 f6       	brne	.-84     	; 0x542a <disk_initialize+0x64>
    547e:	8c 81       	ldd	r24, Y+4	; 0x04
    5480:	8a 3a       	cpi	r24, 0xAA	; 170
    5482:	99 f6       	brne	.-90     	; 0x542a <disk_initialize+0x64>
    5484:	08 c0       	rjmp	.+16     	; 0x5496 <disk_initialize+0xd0>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
    5486:	40 e0       	ldi	r20, 0x00	; 0
    5488:	50 e0       	ldi	r21, 0x00	; 0
    548a:	60 e0       	ldi	r22, 0x00	; 0
    548c:	70 e4       	ldi	r23, 0x40	; 64
    548e:	89 ea       	ldi	r24, 0xA9	; 169
    5490:	17 df       	rcall	.-466    	; 0x52c0 <send_cmd>
    5492:	88 23       	and	r24, r24
    5494:	21 f0       	breq	.+8      	; 0x549e <disk_initialize+0xd8>
    5496:	80 91 a7 25 	lds	r24, 0x25A7
    549a:	81 11       	cpse	r24, r1
    549c:	f4 cf       	rjmp	.-24     	; 0x5486 <disk_initialize+0xc0>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
    549e:	80 91 a7 25 	lds	r24, 0x25A7
    54a2:	88 23       	and	r24, r24
    54a4:	09 f4       	brne	.+2      	; 0x54a8 <disk_initialize+0xe2>
    54a6:	c1 cf       	rjmp	.-126    	; 0x542a <disk_initialize+0x64>
    54a8:	40 e0       	ldi	r20, 0x00	; 0
    54aa:	50 e0       	ldi	r21, 0x00	; 0
    54ac:	ba 01       	movw	r22, r20
    54ae:	8a e3       	ldi	r24, 0x3A	; 58
    54b0:	07 df       	rcall	.-498    	; 0x52c0 <send_cmd>
    54b2:	81 11       	cpse	r24, r1
    54b4:	ba cf       	rjmp	.-140    	; 0x542a <disk_initialize+0x64>
    54b6:	8e 01       	movw	r16, r28
    54b8:	0f 5f       	subi	r16, 0xFF	; 255
    54ba:	1f 4f       	sbci	r17, 0xFF	; 255
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    54bc:	8f ef       	ldi	r24, 0xFF	; 255
    54be:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
    54c2:	f8 01       	movw	r30, r16
    54c4:	81 93       	st	Z+, r24
    54c6:	8f 01       	movw	r16, r30
    54c8:	ee 16       	cp	r14, r30
    54ca:	ff 06       	cpc	r15, r31
    54cc:	b9 f7       	brne	.-18     	; 0x54bc <disk_initialize+0xf6>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    54ce:	89 81       	ldd	r24, Y+1	; 0x01
    54d0:	86 fd       	sbrc	r24, 6
    54d2:	38 c0       	rjmp	.+112    	; 0x5544 <disk_initialize+0x17e>
    54d4:	04 e0       	ldi	r16, 0x04	; 4
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
    54d6:	00 93 a5 25 	sts	0x25A5, r16
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    54da:	80 e1       	ldi	r24, 0x10	; 16
    54dc:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    54e0:	8f ef       	ldi	r24, 0xFF	; 255
    54e2:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	}
	CardType = ty;
	deselect();

	if (ty) {			/* Initialization succeded */
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
    54e6:	80 91 04 20 	lds	r24, 0x2004
    54ea:	8e 7f       	andi	r24, 0xFE	; 254
    54ec:	80 93 04 20 	sts	0x2004, r24
		FCLK_FAST();
    54f0:	80 ed       	ldi	r24, 0xD0	; 208
    54f2:	80 93 c0 08 	sts	0x08C0, r24
    54f6:	84 cf       	rjmp	.-248    	; 0x5400 <disk_initialize+0x3a>
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
    54f8:	40 e0       	ldi	r20, 0x00	; 0
    54fa:	50 e0       	ldi	r21, 0x00	; 0
    54fc:	ba 01       	movw	r22, r20
    54fe:	89 ea       	ldi	r24, 0xA9	; 169
    5500:	df de       	rcall	.-578    	; 0x52c0 <send_cmd>
    5502:	82 30       	cpi	r24, 0x02	; 2
    5504:	e0 f0       	brcs	.+56     	; 0x553e <disk_initialize+0x178>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
    5506:	01 e0       	ldi	r16, 0x01	; 1
    5508:	11 e0       	ldi	r17, 0x01	; 1
    550a:	07 c0       	rjmp	.+14     	; 0x551a <disk_initialize+0x154>
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
    550c:	40 e0       	ldi	r20, 0x00	; 0
    550e:	50 e0       	ldi	r21, 0x00	; 0
    5510:	ba 01       	movw	r22, r20
    5512:	81 2f       	mov	r24, r17
    5514:	d5 de       	rcall	.-598    	; 0x52c0 <send_cmd>
    5516:	88 23       	and	r24, r24
    5518:	21 f0       	breq	.+8      	; 0x5522 <disk_initialize+0x15c>
    551a:	90 91 a7 25 	lds	r25, 0x25A7
    551e:	91 11       	cpse	r25, r1
    5520:	f5 cf       	rjmp	.-22     	; 0x550c <disk_initialize+0x146>
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
    5522:	80 91 a7 25 	lds	r24, 0x25A7
    5526:	88 23       	and	r24, r24
    5528:	09 f4       	brne	.+2      	; 0x552c <disk_initialize+0x166>
    552a:	7f cf       	rjmp	.-258    	; 0x542a <disk_initialize+0x64>
    552c:	40 e0       	ldi	r20, 0x00	; 0
    552e:	52 e0       	ldi	r21, 0x02	; 2
    5530:	60 e0       	ldi	r22, 0x00	; 0
    5532:	70 e0       	ldi	r23, 0x00	; 0
    5534:	80 e1       	ldi	r24, 0x10	; 16
    5536:	c4 de       	rcall	.-632    	; 0x52c0 <send_cmd>
    5538:	81 11       	cpse	r24, r1
    553a:	77 cf       	rjmp	.-274    	; 0x542a <disk_initialize+0x64>
    553c:	cc cf       	rjmp	.-104    	; 0x54d6 <disk_initialize+0x110>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
    553e:	02 e0       	ldi	r16, 0x02	; 2
    5540:	19 ea       	ldi	r17, 0xA9	; 169
    5542:	eb cf       	rjmp	.-42     	; 0x551a <disk_initialize+0x154>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    5544:	0c e0       	ldi	r16, 0x0C	; 12
    5546:	c7 cf       	rjmp	.-114    	; 0x54d6 <disk_initialize+0x110>

00005548 <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    5548:	81 11       	cpse	r24, r1
    554a:	03 c0       	rjmp	.+6      	; 0x5552 <disk_status+0xa>
	return Stat;
    554c:	80 91 04 20 	lds	r24, 0x2004
    5550:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    5552:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
    5554:	08 95       	ret

00005556 <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
    5556:	cf 92       	push	r12
    5558:	df 92       	push	r13
    555a:	ef 92       	push	r14
    555c:	ff 92       	push	r15
    555e:	0f 93       	push	r16
    5560:	1f 93       	push	r17
    5562:	cf 93       	push	r28
    5564:	df 93       	push	r29
    5566:	f6 2e       	mov	r15, r22
    5568:	e7 2e       	mov	r14, r23
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
    556a:	88 23       	and	r24, r24
    556c:	59 f0       	breq	.+22     	; 0x5584 <disk_read+0x2e>
    556e:	c4 e0       	ldi	r28, 0x04	; 4
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    5570:	8c 2f       	mov	r24, r28
    5572:	df 91       	pop	r29
    5574:	cf 91       	pop	r28
    5576:	1f 91       	pop	r17
    5578:	0f 91       	pop	r16
    557a:	ff 90       	pop	r15
    557c:	ef 90       	pop	r14
    557e:	df 90       	pop	r13
    5580:	cf 90       	pop	r12
    5582:	08 95       	ret
)
{
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
    5584:	01 15       	cp	r16, r1
    5586:	11 05       	cpc	r17, r1
    5588:	91 f3       	breq	.-28     	; 0x556e <disk_read+0x18>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    558a:	80 91 04 20 	lds	r24, 0x2004
    558e:	80 ff       	sbrs	r24, 0
    5590:	02 c0       	rjmp	.+4      	; 0x5596 <disk_read+0x40>
    5592:	c3 e0       	ldi	r28, 0x03	; 3
    5594:	ed cf       	rjmp	.-38     	; 0x5570 <disk_read+0x1a>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    5596:	80 91 a5 25 	lds	r24, 0x25A5
    559a:	83 fd       	sbrc	r24, 3
    559c:	07 c0       	rjmp	.+14     	; 0x55ac <disk_read+0x56>
    559e:	79 e0       	ldi	r23, 0x09	; 9
    55a0:	22 0f       	add	r18, r18
    55a2:	33 1f       	adc	r19, r19
    55a4:	44 1f       	adc	r20, r20
    55a6:	55 1f       	adc	r21, r21
    55a8:	7a 95       	dec	r23
    55aa:	d1 f7       	brne	.-12     	; 0x55a0 <disk_read+0x4a>

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
    55ac:	02 30       	cpi	r16, 0x02	; 2
    55ae:	11 05       	cpc	r17, r1
    55b0:	08 f4       	brcc	.+2      	; 0x55b4 <disk_read+0x5e>
    55b2:	47 c0       	rjmp	.+142    	; 0x5642 <disk_read+0xec>
    55b4:	62 e1       	ldi	r22, 0x12	; 18
    55b6:	c6 2e       	mov	r12, r22
	if (send_cmd(cmd, sector) == 0) {
    55b8:	ba 01       	movw	r22, r20
    55ba:	a9 01       	movw	r20, r18
    55bc:	8c 2d       	mov	r24, r12
    55be:	80 de       	rcall	.-768    	; 0x52c0 <send_cmd>
    55c0:	81 11       	cpse	r24, r1
    55c2:	3d c0       	rjmp	.+122    	; 0x563e <disk_read+0xe8>
)
{
	BYTE token;


	Timer1 = 20;
    55c4:	84 e1       	ldi	r24, 0x14	; 20
    55c6:	d8 2e       	mov	r13, r24
    55c8:	d0 92 a7 25 	sts	0x25A7, r13
    55cc:	04 c0       	rjmp	.+8      	; 0x55d6 <disk_read+0x80>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    55ce:	90 91 a7 25 	lds	r25, 0x25A7
    55d2:	99 23       	and	r25, r25
    55d4:	39 f0       	breq	.+14     	; 0x55e4 <disk_read+0x8e>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    55d6:	8f ef       	ldi	r24, 0xFF	; 255
    55d8:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    55dc:	8f 3f       	cpi	r24, 0xFF	; 255
    55de:	b9 f3       	breq	.-18     	; 0x55ce <disk_read+0x78>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    55e0:	8e 3f       	cpi	r24, 0xFE	; 254
    55e2:	69 f0       	breq	.+26     	; 0x55fe <disk_read+0xa8>
    55e4:	c1 e0       	ldi	r28, 0x01	; 1
    55e6:	01 2b       	or	r16, r17
    55e8:	41 f1       	breq	.+80     	; 0x563a <disk_read+0xe4>
	if (send_cmd(cmd, sector) == 0) {
		do {
			if (!rcvr_datablock(buff, 512)) break;
			buff += 512;
		} while (--count);
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
    55ea:	82 e1       	ldi	r24, 0x12	; 18
    55ec:	c8 16       	cp	r12, r24
    55ee:	61 f1       	breq	.+88     	; 0x5648 <disk_read+0xf2>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    55f0:	80 e1       	ldi	r24, 0x10	; 16
    55f2:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    55f6:	8f ef       	ldi	r24, 0xFF	; 255
    55f8:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
		} while (--count);
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    55fc:	b9 cf       	rjmp	.-142    	; 0x5570 <disk_read+0x1a>
    55fe:	cf 2d       	mov	r28, r15
    5600:	de 2d       	mov	r29, r14
    5602:	7e 01       	movw	r14, r28
    5604:	8e ef       	ldi	r24, 0xFE	; 254
    5606:	f8 1a       	sub	r15, r24
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    5608:	8f ef       	ldi	r24, 0xFF	; 255
    560a:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    560e:	88 83       	st	Y, r24
		*p++ = spi_wr_rd(0xff);
    5610:	8f ef       	ldi	r24, 0xFF	; 255
    5612:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5616:	89 83       	std	Y+1, r24	; 0x01
    5618:	22 96       	adiw	r28, 0x02	; 2
		
	} while (cnt -= 2);
    561a:	ce 15       	cp	r28, r14
    561c:	df 05       	cpc	r29, r15
    561e:	a1 f7       	brne	.-24     	; 0x5608 <disk_read+0xb2>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5620:	8f ef       	ldi	r24, 0xFF	; 255
    5622:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5626:	8f ef       	ldi	r24, 0xFF	; 255
    5628:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
	if (send_cmd(cmd, sector) == 0) {
		do {
			if (!rcvr_datablock(buff, 512)) break;
			buff += 512;
    562c:	fc 2e       	mov	r15, r28
    562e:	ed 2e       	mov	r14, r29
		} while (--count);
    5630:	01 50       	subi	r16, 0x01	; 1
    5632:	11 09       	sbc	r17, r1
    5634:	01 15       	cp	r16, r1
    5636:	11 05       	cpc	r17, r1
    5638:	39 f6       	brne	.-114    	; 0x55c8 <disk_read+0x72>
    563a:	c0 e0       	ldi	r28, 0x00	; 0
    563c:	d6 cf       	rjmp	.-84     	; 0x55ea <disk_read+0x94>
    563e:	c1 e0       	ldi	r28, 0x01	; 1
    5640:	d7 cf       	rjmp	.-82     	; 0x55f0 <disk_read+0x9a>
	if (pdrv || !count) return RES_PARERR;
	if (Stat & STA_NOINIT) return RES_NOTRDY;

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
    5642:	91 e1       	ldi	r25, 0x11	; 17
    5644:	c9 2e       	mov	r12, r25
    5646:	b8 cf       	rjmp	.-144    	; 0x55b8 <disk_read+0x62>
	if (send_cmd(cmd, sector) == 0) {
		do {
			if (!rcvr_datablock(buff, 512)) break;
			buff += 512;
		} while (--count);
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
    5648:	40 e0       	ldi	r20, 0x00	; 0
    564a:	50 e0       	ldi	r21, 0x00	; 0
    564c:	ba 01       	movw	r22, r20
    564e:	8c e0       	ldi	r24, 0x0C	; 12
    5650:	37 de       	rcall	.-914    	; 0x52c0 <send_cmd>
    5652:	ce cf       	rjmp	.-100    	; 0x55f0 <disk_read+0x9a>

00005654 <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
    5654:	af 92       	push	r10
    5656:	bf 92       	push	r11
    5658:	cf 92       	push	r12
    565a:	df 92       	push	r13
    565c:	ef 92       	push	r14
    565e:	ff 92       	push	r15
    5660:	0f 93       	push	r16
    5662:	1f 93       	push	r17
    5664:	cf 93       	push	r28
    5666:	df 93       	push	r29
    5668:	b6 2e       	mov	r11, r22
    566a:	a7 2e       	mov	r10, r23
    566c:	69 01       	movw	r12, r18
    566e:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
    5670:	88 23       	and	r24, r24
    5672:	69 f0       	breq	.+26     	; 0x568e <disk_write+0x3a>
    5674:	c4 e0       	ldi	r28, 0x04	; 4
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    5676:	8c 2f       	mov	r24, r28
    5678:	df 91       	pop	r29
    567a:	cf 91       	pop	r28
    567c:	1f 91       	pop	r17
    567e:	0f 91       	pop	r16
    5680:	ff 90       	pop	r15
    5682:	ef 90       	pop	r14
    5684:	df 90       	pop	r13
    5686:	cf 90       	pop	r12
    5688:	bf 90       	pop	r11
    568a:	af 90       	pop	r10
    568c:	08 95       	ret
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
	if (pdrv || !count) return RES_PARERR;
    568e:	01 15       	cp	r16, r1
    5690:	11 05       	cpc	r17, r1
    5692:	81 f3       	breq	.-32     	; 0x5674 <disk_write+0x20>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    5694:	80 91 04 20 	lds	r24, 0x2004
    5698:	80 ff       	sbrs	r24, 0
    569a:	02 c0       	rjmp	.+4      	; 0x56a0 <disk_write+0x4c>
    569c:	c3 e0       	ldi	r28, 0x03	; 3
    569e:	eb cf       	rjmp	.-42     	; 0x5676 <disk_write+0x22>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    56a0:	80 91 04 20 	lds	r24, 0x2004
    56a4:	82 ff       	sbrs	r24, 2
    56a6:	02 c0       	rjmp	.+4      	; 0x56ac <disk_write+0x58>
    56a8:	c2 e0       	ldi	r28, 0x02	; 2
    56aa:	e5 cf       	rjmp	.-54     	; 0x5676 <disk_write+0x22>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    56ac:	80 91 a5 25 	lds	r24, 0x25A5
    56b0:	83 fd       	sbrc	r24, 3
    56b2:	07 c0       	rjmp	.+14     	; 0x56c2 <disk_write+0x6e>
    56b4:	f9 e0       	ldi	r31, 0x09	; 9
    56b6:	cc 0c       	add	r12, r12
    56b8:	dd 1c       	adc	r13, r13
    56ba:	ee 1c       	adc	r14, r14
    56bc:	ff 1c       	adc	r15, r15
    56be:	fa 95       	dec	r31
    56c0:	d1 f7       	brne	.-12     	; 0x56b6 <disk_write+0x62>

	if (count == 1) {	/* Single block write */
    56c2:	01 30       	cpi	r16, 0x01	; 1
    56c4:	11 05       	cpc	r17, r1
    56c6:	09 f4       	brne	.+2      	; 0x56ca <disk_write+0x76>
    56c8:	57 c0       	rjmp	.+174    	; 0x5778 <disk_write+0x124>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    56ca:	86 70       	andi	r24, 0x06	; 6
    56cc:	09 f0       	breq	.+2      	; 0x56d0 <disk_write+0x7c>
    56ce:	89 c0       	rjmp	.+274    	; 0x57e2 <disk_write+0x18e>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
    56d0:	b7 01       	movw	r22, r14
    56d2:	a6 01       	movw	r20, r12
    56d4:	89 e1       	ldi	r24, 0x19	; 25
    56d6:	f4 dd       	rcall	.-1048   	; 0x52c0 <send_cmd>
    56d8:	81 11       	cpse	r24, r1
    56da:	81 c0       	rjmp	.+258    	; 0x57de <disk_write+0x18a>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    56dc:	e2 e3       	ldi	r30, 0x32	; 50
    56de:	de 2e       	mov	r13, r30
    56e0:	d0 92 a6 25 	sts	0x25A6, r13
    56e4:	04 c0       	rjmp	.+8      	; 0x56ee <disk_write+0x9a>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    56e6:	80 91 a6 25 	lds	r24, 0x25A6
    56ea:	88 23       	and	r24, r24
    56ec:	51 f1       	breq	.+84     	; 0x5742 <disk_write+0xee>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    56ee:	8f ef       	ldi	r24, 0xFF	; 255
    56f0:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    56f4:	8f 3f       	cpi	r24, 0xFF	; 255
    56f6:	b9 f7       	brne	.-18     	; 0x56e6 <disk_write+0x92>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    56f8:	8c ef       	ldi	r24, 0xFC	; 252
    56fa:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    56fe:	cb 2d       	mov	r28, r11
    5700:	da 2d       	mov	r29, r10
    5702:	7e 01       	movw	r14, r28
    5704:	8e ef       	ldi	r24, 0xFE	; 254
    5706:	f8 1a       	sub	r15, r24
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	do {
		spi_wr_rd(*p++);
    5708:	88 81       	ld	r24, Y
    570a:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
		spi_wr_rd(*p++);
    570e:	89 81       	ldd	r24, Y+1	; 0x01
    5710:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5714:	22 96       	adiw	r28, 0x02	; 2
		
	} while (cnt -= 2);
    5716:	ec 16       	cp	r14, r28
    5718:	fd 06       	cpc	r15, r29
    571a:	b1 f7       	brne	.-20     	; 0x5708 <disk_write+0xb4>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    571c:	8f ef       	ldi	r24, 0xFF	; 255
    571e:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5722:	8f ef       	ldi	r24, 0xFF	; 255
    5724:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5728:	8f ef       	ldi	r24, 0xFF	; 255
    572a:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
		xchg_spi(0xFF);
		resp = xchg_spi(0xFF);			/* Reveive data response */
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
    572e:	8f 71       	andi	r24, 0x1F	; 31
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
    5730:	85 30       	cpi	r24, 0x05	; 5
    5732:	39 f4       	brne	.+14     	; 0x5742 <disk_write+0xee>
				buff += 512;
    5734:	be 2c       	mov	r11, r14
    5736:	af 2c       	mov	r10, r15
			} while (--count);
    5738:	01 50       	subi	r16, 0x01	; 1
    573a:	11 09       	sbc	r17, r1
    573c:	01 15       	cp	r16, r1
    573e:	11 05       	cpc	r17, r1
    5740:	79 f6       	brne	.-98     	; 0x56e0 <disk_write+0x8c>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    5742:	82 e3       	ldi	r24, 0x32	; 50
    5744:	80 93 a6 25 	sts	0x25A6, r24
    5748:	05 c0       	rjmp	.+10     	; 0x5754 <disk_write+0x100>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    574a:	80 91 a6 25 	lds	r24, 0x25A6
    574e:	88 23       	and	r24, r24
    5750:	09 f4       	brne	.+2      	; 0x5754 <disk_write+0x100>
    5752:	45 c0       	rjmp	.+138    	; 0x57de <disk_write+0x18a>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5754:	8f ef       	ldi	r24, 0xFF	; 255
    5756:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    575a:	8f 3f       	cpi	r24, 0xFF	; 255
    575c:	b1 f7       	brne	.-20     	; 0x574a <disk_write+0xf6>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    575e:	8d ef       	ldi	r24, 0xFD	; 253
    5760:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5764:	c1 e0       	ldi	r28, 0x01	; 1
    5766:	01 2b       	or	r16, r17
    5768:	c1 f1       	breq	.+112    	; 0x57da <disk_write+0x186>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    576a:	80 e1       	ldi	r24, 0x10	; 16
    576c:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5770:	8f ef       	ldi	r24, 0xFF	; 255
    5772:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
				count = 1;
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    5776:	7f cf       	rjmp	.-258    	; 0x5676 <disk_write+0x22>
	if (Stat & STA_PROTECT) return RES_WRPRT;

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    5778:	b7 01       	movw	r22, r14
    577a:	a6 01       	movw	r20, r12
    577c:	88 e1       	ldi	r24, 0x18	; 24
    577e:	a0 dd       	rcall	.-1216   	; 0x52c0 <send_cmd>
    5780:	81 11       	cpse	r24, r1
    5782:	2d c0       	rjmp	.+90     	; 0x57de <disk_write+0x18a>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    5784:	82 e3       	ldi	r24, 0x32	; 50
    5786:	80 93 a6 25 	sts	0x25A6, r24
    578a:	04 c0       	rjmp	.+8      	; 0x5794 <disk_write+0x140>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    578c:	80 91 a6 25 	lds	r24, 0x25A6
    5790:	88 23       	and	r24, r24
    5792:	29 f1       	breq	.+74     	; 0x57de <disk_write+0x18a>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5794:	8f ef       	ldi	r24, 0xFF	; 255
    5796:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    579a:	8f 3f       	cpi	r24, 0xFF	; 255
    579c:	b9 f7       	brne	.-18     	; 0x578c <disk_write+0x138>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    579e:	8e ef       	ldi	r24, 0xFE	; 254
    57a0:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    57a4:	cb 2d       	mov	r28, r11
    57a6:	da 2d       	mov	r29, r10
    57a8:	8e 01       	movw	r16, r28
    57aa:	1e 5f       	subi	r17, 0xFE	; 254
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	do {
		spi_wr_rd(*p++);
    57ac:	88 81       	ld	r24, Y
    57ae:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
		spi_wr_rd(*p++);
    57b2:	89 81       	ldd	r24, Y+1	; 0x01
    57b4:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    57b8:	22 96       	adiw	r28, 0x02	; 2
		
	} while (cnt -= 2);
    57ba:	c0 17       	cp	r28, r16
    57bc:	d1 07       	cpc	r29, r17
    57be:	b1 f7       	brne	.-20     	; 0x57ac <disk_write+0x158>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    57c0:	8f ef       	ldi	r24, 0xFF	; 255
    57c2:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    57c6:	8f ef       	ldi	r24, 0xFF	; 255
    57c8:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    57cc:	8f ef       	ldi	r24, 0xFF	; 255
    57ce:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
		xchg_spi(0xFF);
		resp = xchg_spi(0xFF);			/* Reveive data response */
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
    57d2:	8f 71       	andi	r24, 0x1F	; 31

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
    57d4:	c1 e0       	ldi	r28, 0x01	; 1
    57d6:	85 30       	cpi	r24, 0x05	; 5
    57d8:	41 f6       	brne	.-112    	; 0x576a <disk_write+0x116>
    57da:	c0 e0       	ldi	r28, 0x00	; 0
    57dc:	c6 cf       	rjmp	.-116    	; 0x576a <disk_write+0x116>
    57de:	c1 e0       	ldi	r28, 0x01	; 1
    57e0:	c4 cf       	rjmp	.-120    	; 0x576a <disk_write+0x116>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    57e2:	a8 01       	movw	r20, r16
    57e4:	60 e0       	ldi	r22, 0x00	; 0
    57e6:	70 e0       	ldi	r23, 0x00	; 0
    57e8:	87 e9       	ldi	r24, 0x97	; 151
    57ea:	6a dd       	rcall	.-1324   	; 0x52c0 <send_cmd>
    57ec:	71 cf       	rjmp	.-286    	; 0x56d0 <disk_write+0x7c>

000057ee <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
    57ee:	cf 92       	push	r12
    57f0:	df 92       	push	r13
    57f2:	ef 92       	push	r14
    57f4:	ff 92       	push	r15
    57f6:	0f 93       	push	r16
    57f8:	1f 93       	push	r17
    57fa:	cf 93       	push	r28
    57fc:	df 93       	push	r29
    57fe:	cd b7       	in	r28, 0x3d	; 61
    5800:	de b7       	in	r29, 0x3e	; 62
    5802:	60 97       	sbiw	r28, 0x10	; 16
    5804:	cd bf       	out	0x3d, r28	; 61
    5806:	de bf       	out	0x3e, r29	; 62
    5808:	8a 01       	movw	r16, r20
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
    580a:	88 23       	and	r24, r24
    580c:	69 f0       	breq	.+26     	; 0x5828 <disk_ioctl+0x3a>
    580e:	84 e0       	ldi	r24, 0x04	; 4
	}

	deselect();

	return res;
}
    5810:	60 96       	adiw	r28, 0x10	; 16
    5812:	cd bf       	out	0x3d, r28	; 61
    5814:	de bf       	out	0x3e, r29	; 62
    5816:	df 91       	pop	r29
    5818:	cf 91       	pop	r28
    581a:	1f 91       	pop	r17
    581c:	0f 91       	pop	r16
    581e:	ff 90       	pop	r15
    5820:	ef 90       	pop	r14
    5822:	df 90       	pop	r13
    5824:	cf 90       	pop	r12
    5826:	08 95       	ret

	if (pdrv) return RES_PARERR;

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
    5828:	80 91 04 20 	lds	r24, 0x2004
    582c:	80 ff       	sbrs	r24, 0
    582e:	02 c0       	rjmp	.+4      	; 0x5834 <disk_ioctl+0x46>
    5830:	83 e0       	ldi	r24, 0x03	; 3
    5832:	ee cf       	rjmp	.-36     	; 0x5810 <disk_ioctl+0x22>

	switch (cmd) {
    5834:	86 2f       	mov	r24, r22
    5836:	90 e0       	ldi	r25, 0x00	; 0
    5838:	87 33       	cpi	r24, 0x37	; 55
    583a:	91 05       	cpc	r25, r1
    583c:	48 f0       	brcs	.+18     	; 0x5850 <disk_ioctl+0x62>
		Stat |= STA_NOINIT;
		res = RES_OK;
		break;

	default:
		res = RES_PARERR;
    583e:	14 e0       	ldi	r17, 0x04	; 4
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    5840:	90 e1       	ldi	r25, 0x10	; 16
    5842:	90 93 45 06 	sts	0x0645, r25
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5846:	8f ef       	ldi	r24, 0xFF	; 255
    5848:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
		res = RES_PARERR;
	}

	deselect();

	return res;
    584c:	81 2f       	mov	r24, r17
    584e:	e0 cf       	rjmp	.-64     	; 0x5810 <disk_ioctl+0x22>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;

	switch (cmd) {
    5850:	fc 01       	movw	r30, r24
    5852:	e2 50       	subi	r30, 0x02	; 2
    5854:	ff 4f       	sbci	r31, 0xFF	; 255
    5856:	0c 94 9d 38 	jmp	0x713a	; 0x713a <__tablejump2__>
			res = RES_OK;
		}
		break;

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
    585a:	40 e0       	ldi	r20, 0x00	; 0
    585c:	50 e0       	ldi	r21, 0x00	; 0
    585e:	ba 01       	movw	r22, r20
    5860:	8d e8       	ldi	r24, 0x8D	; 141
    5862:	2e dd       	rcall	.-1444   	; 0x52c0 <send_cmd>
    5864:	88 23       	and	r24, r24
    5866:	09 f4       	brne	.+2      	; 0x586a <disk_ioctl+0x7c>
    5868:	36 c1       	rjmp	.+620    	; 0x5ad6 <disk_ioctl+0x2e8>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    586a:	11 e0       	ldi	r17, 0x01	; 1
    586c:	e9 cf       	rjmp	.-46     	; 0x5840 <disk_ioctl+0x52>
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
    586e:	40 e0       	ldi	r20, 0x00	; 0
    5870:	50 e0       	ldi	r21, 0x00	; 0
    5872:	ba 01       	movw	r22, r20
    5874:	8a e3       	ldi	r24, 0x3A	; 58
    5876:	24 dd       	rcall	.-1464   	; 0x52c0 <send_cmd>
    5878:	81 11       	cpse	r24, r1
    587a:	f7 cf       	rjmp	.-18     	; 0x586a <disk_ioctl+0x7c>
    587c:	78 01       	movw	r14, r16
    587e:	f4 e0       	ldi	r31, 0x04	; 4
    5880:	ef 0e       	add	r14, r31
    5882:	f1 1c       	adc	r15, r1
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5884:	8f ef       	ldi	r24, 0xFF	; 255
    5886:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
    588a:	f8 01       	movw	r30, r16
    588c:	81 93       	st	Z+, r24
    588e:	8f 01       	movw	r16, r30
    5890:	ee 15       	cp	r30, r14
    5892:	ff 05       	cpc	r31, r15
    5894:	b9 f7       	brne	.-18     	; 0x5884 <disk_ioctl+0x96>
			res = RES_OK;
    5896:	10 e0       	ldi	r17, 0x00	; 0
    5898:	d3 cf       	rjmp	.-90     	; 0x5840 <disk_ioctl+0x52>
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
    589a:	40 e0       	ldi	r20, 0x00	; 0
    589c:	50 e0       	ldi	r21, 0x00	; 0
    589e:	ba 01       	movw	r22, r20
    58a0:	8a e0       	ldi	r24, 0x0A	; 10
    58a2:	0e dd       	rcall	.-1508   	; 0x52c0 <send_cmd>
    58a4:	81 11       	cpse	r24, r1
    58a6:	e1 cf       	rjmp	.-62     	; 0x586a <disk_ioctl+0x7c>
)
{
	BYTE token;


	Timer1 = 20;
    58a8:	84 e1       	ldi	r24, 0x14	; 20
    58aa:	80 93 a7 25 	sts	0x25A7, r24
    58ae:	04 c0       	rjmp	.+8      	; 0x58b8 <disk_ioctl+0xca>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    58b0:	80 91 a7 25 	lds	r24, 0x25A7
    58b4:	88 23       	and	r24, r24
    58b6:	c9 f2       	breq	.-78     	; 0x586a <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    58b8:	8f ef       	ldi	r24, 0xFF	; 255
    58ba:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    58be:	8f 3f       	cpi	r24, 0xFF	; 255
    58c0:	b9 f3       	breq	.-18     	; 0x58b0 <disk_ioctl+0xc2>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    58c2:	8e 3f       	cpi	r24, 0xFE	; 254
    58c4:	91 f6       	brne	.-92     	; 0x586a <disk_ioctl+0x7c>
    58c6:	78 01       	movw	r14, r16
    58c8:	f0 e1       	ldi	r31, 0x10	; 16
    58ca:	ef 0e       	add	r14, r31
    58cc:	f1 1c       	adc	r15, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    58ce:	8f ef       	ldi	r24, 0xFF	; 255
    58d0:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    58d4:	f8 01       	movw	r30, r16
    58d6:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    58d8:	8f ef       	ldi	r24, 0xFF	; 255
    58da:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    58de:	f8 01       	movw	r30, r16
    58e0:	81 83       	std	Z+1, r24	; 0x01
    58e2:	0e 5f       	subi	r16, 0xFE	; 254
    58e4:	1f 4f       	sbci	r17, 0xFF	; 255
		
	} while (cnt -= 2);
    58e6:	0e 15       	cp	r16, r14
    58e8:	1f 05       	cpc	r17, r15
    58ea:	89 f7       	brne	.-30     	; 0x58ce <disk_ioctl+0xe0>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    58ec:	8f ef       	ldi	r24, 0xFF	; 255
    58ee:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    58f2:	8f ef       	ldi	r24, 0xFF	; 255
    58f4:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
		break;

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
    58f8:	10 e0       	ldi	r17, 0x00	; 0
    58fa:	a2 cf       	rjmp	.-188    	; 0x5840 <disk_ioctl+0x52>

static
void power_off (void)
{
	//TCC1.CTRLA = TC_CLKSEL_OFF_gc;
	spi_off();
    58fc:	0e 94 db 34 	call	0x69b6	; 0x69b6 <spi_off>
		}
		break;

	case CTRL_POWER_OFF :	/* Power off */
		power_off();
		Stat |= STA_NOINIT;
    5900:	80 91 04 20 	lds	r24, 0x2004
    5904:	81 60       	ori	r24, 0x01	; 1
    5906:	80 93 04 20 	sts	0x2004, r24
		res = RES_OK;
    590a:	10 e0       	ldi	r17, 0x00	; 0
		break;
    590c:	99 cf       	rjmp	.-206    	; 0x5840 <disk_ioctl+0x52>
		*ptr = CardType;
		res = RES_OK;
		break;

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
    590e:	40 e0       	ldi	r20, 0x00	; 0
    5910:	50 e0       	ldi	r21, 0x00	; 0
    5912:	ba 01       	movw	r22, r20
    5914:	89 e0       	ldi	r24, 0x09	; 9
    5916:	d4 dc       	rcall	.-1624   	; 0x52c0 <send_cmd>
    5918:	81 11       	cpse	r24, r1
    591a:	a7 cf       	rjmp	.-178    	; 0x586a <disk_ioctl+0x7c>
)
{
	BYTE token;


	Timer1 = 20;
    591c:	84 e1       	ldi	r24, 0x14	; 20
    591e:	80 93 a7 25 	sts	0x25A7, r24
    5922:	05 c0       	rjmp	.+10     	; 0x592e <disk_ioctl+0x140>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    5924:	80 91 a7 25 	lds	r24, 0x25A7
    5928:	88 23       	and	r24, r24
    592a:	09 f4       	brne	.+2      	; 0x592e <disk_ioctl+0x140>
    592c:	9e cf       	rjmp	.-196    	; 0x586a <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    592e:	8f ef       	ldi	r24, 0xFF	; 255
    5930:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    5934:	8f 3f       	cpi	r24, 0xFF	; 255
    5936:	b1 f3       	breq	.-20     	; 0x5924 <disk_ioctl+0x136>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    5938:	8e 3f       	cpi	r24, 0xFE	; 254
    593a:	09 f0       	breq	.+2      	; 0x593e <disk_ioctl+0x150>
    593c:	96 cf       	rjmp	.-212    	; 0x586a <disk_ioctl+0x7c>
    593e:	78 01       	movw	r14, r16
    5940:	f0 e1       	ldi	r31, 0x10	; 16
    5942:	ef 0e       	add	r14, r31
    5944:	f1 1c       	adc	r15, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    5946:	8f ef       	ldi	r24, 0xFF	; 255
    5948:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    594c:	f8 01       	movw	r30, r16
    594e:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    5950:	8f ef       	ldi	r24, 0xFF	; 255
    5952:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    5956:	f8 01       	movw	r30, r16
    5958:	81 83       	std	Z+1, r24	; 0x01
    595a:	0e 5f       	subi	r16, 0xFE	; 254
    595c:	1f 4f       	sbci	r17, 0xFF	; 255
		
	} while (cnt -= 2);
    595e:	0e 15       	cp	r16, r14
    5960:	1f 05       	cpc	r17, r15
    5962:	89 f7       	brne	.-30     	; 0x5946 <disk_ioctl+0x158>
    5964:	c3 cf       	rjmp	.-122    	; 0x58ec <disk_ioctl+0xfe>
		break;

	/* Following commands are never used by FatFs module */

	case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
		*ptr = CardType;
    5966:	80 91 a5 25 	lds	r24, 0x25A5
    596a:	fa 01       	movw	r30, r20
    596c:	80 83       	st	Z, r24
		res = RES_OK;
    596e:	10 e0       	ldi	r17, 0x00	; 0
		break;
    5970:	67 cf       	rjmp	.-306    	; 0x5840 <disk_ioctl+0x52>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
    5972:	40 e0       	ldi	r20, 0x00	; 0
    5974:	50 e0       	ldi	r21, 0x00	; 0
    5976:	ba 01       	movw	r22, r20
    5978:	89 e0       	ldi	r24, 0x09	; 9
    597a:	a2 dc       	rcall	.-1724   	; 0x52c0 <send_cmd>
    597c:	81 11       	cpse	r24, r1
    597e:	75 cf       	rjmp	.-278    	; 0x586a <disk_ioctl+0x7c>
)
{
	BYTE token;


	Timer1 = 20;
    5980:	84 e1       	ldi	r24, 0x14	; 20
    5982:	80 93 a7 25 	sts	0x25A7, r24
    5986:	05 c0       	rjmp	.+10     	; 0x5992 <disk_ioctl+0x1a4>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    5988:	80 91 a7 25 	lds	r24, 0x25A7
    598c:	88 23       	and	r24, r24
    598e:	09 f4       	brne	.+2      	; 0x5992 <disk_ioctl+0x1a4>
    5990:	6c cf       	rjmp	.-296    	; 0x586a <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5992:	8f ef       	ldi	r24, 0xFF	; 255
    5994:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    5998:	8f 3f       	cpi	r24, 0xFF	; 255
    599a:	b1 f3       	breq	.-20     	; 0x5988 <disk_ioctl+0x19a>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    599c:	8e 3f       	cpi	r24, 0xFE	; 254
    599e:	09 f0       	breq	.+2      	; 0x59a2 <disk_ioctl+0x1b4>
    59a0:	64 cf       	rjmp	.-312    	; 0x586a <disk_ioctl+0x7c>
    59a2:	ce 01       	movw	r24, r28
    59a4:	01 96       	adiw	r24, 0x01	; 1
    59a6:	7c 01       	movw	r14, r24
    59a8:	6e 01       	movw	r12, r28
    59aa:	91 e1       	ldi	r25, 0x11	; 17
    59ac:	c9 0e       	add	r12, r25
    59ae:	d1 1c       	adc	r13, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    59b0:	8f ef       	ldi	r24, 0xFF	; 255
    59b2:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    59b6:	f7 01       	movw	r30, r14
    59b8:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    59ba:	8f ef       	ldi	r24, 0xFF	; 255
    59bc:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    59c0:	f7 01       	movw	r30, r14
    59c2:	81 83       	std	Z+1, r24	; 0x01
    59c4:	f2 e0       	ldi	r31, 0x02	; 2
    59c6:	ef 0e       	add	r14, r31
    59c8:	f1 1c       	adc	r15, r1
		
	} while (cnt -= 2);
    59ca:	ec 14       	cp	r14, r12
    59cc:	fd 04       	cpc	r15, r13
    59ce:	81 f7       	brne	.-32     	; 0x59b0 <disk_ioctl+0x1c2>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    59d0:	8f ef       	ldi	r24, 0xFF	; 255
    59d2:	0e 94 ea 34 	call	0x69d4	; 0x69d4 <spi_wr_rd>
    59d6:	8f ef       	ldi	r24, 0xFF	; 255
    59d8:	fd d7       	rcall	.+4090   	; 0x69d4 <spi_wr_rd>
		if (select()) res = RES_OK;
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
    59da:	89 81       	ldd	r24, Y+1	; 0x01
    59dc:	82 95       	swap	r24
    59de:	86 95       	lsr	r24
    59e0:	86 95       	lsr	r24
    59e2:	83 70       	andi	r24, 0x03	; 3
    59e4:	81 30       	cpi	r24, 0x01	; 1
    59e6:	09 f4       	brne	.+2      	; 0x59ea <disk_ioctl+0x1fc>
    59e8:	d1 c0       	rjmp	.+418    	; 0x5b8c <disk_ioctl+0x39e>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    59ea:	89 85       	ldd	r24, Y+9	; 0x09
    59ec:	82 95       	swap	r24
    59ee:	86 95       	lsr	r24
    59f0:	86 95       	lsr	r24
    59f2:	83 70       	andi	r24, 0x03	; 3
    59f4:	28 85       	ldd	r18, Y+8	; 0x08
    59f6:	90 e0       	ldi	r25, 0x00	; 0
    59f8:	f4 e0       	ldi	r31, 0x04	; 4
    59fa:	2f 9f       	mul	r18, r31
    59fc:	80 0d       	add	r24, r0
    59fe:	91 1d       	adc	r25, r1
    5a00:	11 24       	eor	r1, r1
    5a02:	01 96       	adiw	r24, 0x01	; 1
    5a04:	2f 81       	ldd	r18, Y+7	; 0x07
    5a06:	23 70       	andi	r18, 0x03	; 3
    5a08:	30 e0       	ldi	r19, 0x00	; 0
    5a0a:	32 2f       	mov	r19, r18
    5a0c:	22 27       	eor	r18, r18
    5a0e:	33 0f       	add	r19, r19
    5a10:	33 0f       	add	r19, r19
    5a12:	82 0f       	add	r24, r18
    5a14:	93 1f       	adc	r25, r19
    5a16:	a0 e0       	ldi	r26, 0x00	; 0
    5a18:	b0 e0       	ldi	r27, 0x00	; 0
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    5a1a:	2e 81       	ldd	r18, Y+6	; 0x06
    5a1c:	2f 70       	andi	r18, 0x0F	; 15
    5a1e:	3b 85       	ldd	r19, Y+11	; 0x0b
    5a20:	33 1f       	adc	r19, r19
    5a22:	33 27       	eor	r19, r19
    5a24:	33 1f       	adc	r19, r19
    5a26:	23 0f       	add	r18, r19
    5a28:	3a 85       	ldd	r19, Y+10	; 0x0a
    5a2a:	33 70       	andi	r19, 0x03	; 3
    5a2c:	33 0f       	add	r19, r19
    5a2e:	23 0f       	add	r18, r19
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
    5a30:	27 50       	subi	r18, 0x07	; 7
    5a32:	04 c0       	rjmp	.+8      	; 0x5a3c <disk_ioctl+0x24e>
    5a34:	88 0f       	add	r24, r24
    5a36:	99 1f       	adc	r25, r25
    5a38:	aa 1f       	adc	r26, r26
    5a3a:	bb 1f       	adc	r27, r27
    5a3c:	2a 95       	dec	r18
    5a3e:	d2 f7       	brpl	.-12     	; 0x5a34 <disk_ioctl+0x246>
    5a40:	f8 01       	movw	r30, r16
    5a42:	80 83       	st	Z, r24
    5a44:	91 83       	std	Z+1, r25	; 0x01
    5a46:	a2 83       	std	Z+2, r26	; 0x02
    5a48:	b3 83       	std	Z+3, r27	; 0x03
			}
			res = RES_OK;
    5a4a:	10 e0       	ldi	r17, 0x00	; 0
    5a4c:	f9 ce       	rjmp	.-526    	; 0x5840 <disk_ioctl+0x52>
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();
    5a4e:	80 e1       	ldi	r24, 0x10	; 16
    5a50:	80 93 46 06 	sts	0x0646, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5a54:	8f ef       	ldi	r24, 0xFF	; 255
    5a56:	be d7       	rcall	.+3964   	; 0x69d4 <spi_wr_rd>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    5a58:	82 e3       	ldi	r24, 0x32	; 50
    5a5a:	80 93 a6 25 	sts	0x25A6, r24
    5a5e:	05 c0       	rjmp	.+10     	; 0x5a6a <disk_ioctl+0x27c>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    5a60:	80 91 a6 25 	lds	r24, 0x25A6
    5a64:	88 23       	and	r24, r24
    5a66:	09 f4       	brne	.+2      	; 0x5a6a <disk_ioctl+0x27c>
    5a68:	8a c0       	rjmp	.+276    	; 0x5b7e <disk_ioctl+0x390>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5a6a:	8f ef       	ldi	r24, 0xFF	; 255
    5a6c:	b3 d7       	rcall	.+3942   	; 0x69d4 <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    5a6e:	8f 3f       	cpi	r24, 0xFF	; 255
    5a70:	b9 f7       	brne	.-18     	; 0x5a60 <disk_ioctl+0x272>
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
			res = RES_OK;
    5a72:	10 e0       	ldi	r17, 0x00	; 0
    5a74:	e5 ce       	rjmp	.-566    	; 0x5840 <disk_ioctl+0x52>
			res = RES_OK;
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
    5a76:	80 91 a5 25 	lds	r24, 0x25A5
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
    5a7a:	40 e0       	ldi	r20, 0x00	; 0
    5a7c:	50 e0       	ldi	r21, 0x00	; 0
    5a7e:	ba 01       	movw	r22, r20
			res = RES_OK;
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
    5a80:	82 ff       	sbrs	r24, 2
    5a82:	4d c0       	rjmp	.+154    	; 0x5b1e <disk_ioctl+0x330>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
    5a84:	8d e8       	ldi	r24, 0x8D	; 141
    5a86:	1c dc       	rcall	.-1992   	; 0x52c0 <send_cmd>
    5a88:	81 11       	cpse	r24, r1
    5a8a:	ef ce       	rjmp	.-546    	; 0x586a <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5a8c:	8f ef       	ldi	r24, 0xFF	; 255
    5a8e:	a2 d7       	rcall	.+3908   	; 0x69d4 <spi_wr_rd>

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
				xchg_spi(0xFF);
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
    5a90:	60 e1       	ldi	r22, 0x10	; 16
    5a92:	70 e0       	ldi	r23, 0x00	; 0
    5a94:	ce 01       	movw	r24, r28
    5a96:	01 96       	adiw	r24, 0x01	; 1
    5a98:	d5 db       	rcall	.-2134   	; 0x5244 <rcvr_datablock>
    5a9a:	89 2b       	or	r24, r25
    5a9c:	09 f4       	brne	.+2      	; 0x5aa0 <disk_ioctl+0x2b2>
    5a9e:	e5 ce       	rjmp	.-566    	; 0x586a <disk_ioctl+0x7c>
    5aa0:	b0 e3       	ldi	r27, 0x30	; 48
    5aa2:	fb 2e       	mov	r15, r27
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5aa4:	8f ef       	ldi	r24, 0xFF	; 255
    5aa6:	96 d7       	rcall	.+3884   	; 0x69d4 <spi_wr_rd>
    5aa8:	fa 94       	dec	r15
	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
				xchg_spi(0xFF);
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
    5aaa:	e1 f7       	brne	.-8      	; 0x5aa4 <disk_ioctl+0x2b6>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
    5aac:	2b 85       	ldd	r18, Y+11	; 0x0b
    5aae:	22 95       	swap	r18
    5ab0:	2f 70       	andi	r18, 0x0F	; 15
    5ab2:	80 e1       	ldi	r24, 0x10	; 16
    5ab4:	90 e0       	ldi	r25, 0x00	; 0
    5ab6:	a0 e0       	ldi	r26, 0x00	; 0
    5ab8:	b0 e0       	ldi	r27, 0x00	; 0
    5aba:	04 c0       	rjmp	.+8      	; 0x5ac4 <disk_ioctl+0x2d6>
    5abc:	88 0f       	add	r24, r24
    5abe:	99 1f       	adc	r25, r25
    5ac0:	aa 1f       	adc	r26, r26
    5ac2:	bb 1f       	adc	r27, r27
    5ac4:	2a 95       	dec	r18
    5ac6:	d2 f7       	brpl	.-12     	; 0x5abc <disk_ioctl+0x2ce>
    5ac8:	f8 01       	movw	r30, r16
    5aca:	80 83       	st	Z, r24
    5acc:	91 83       	std	Z+1, r25	; 0x01
    5ace:	a2 83       	std	Z+2, r26	; 0x02
    5ad0:	b3 83       	std	Z+3, r27	; 0x03
					res = RES_OK;
    5ad2:	10 e0       	ldi	r17, 0x00	; 0
    5ad4:	b5 ce       	rjmp	.-662    	; 0x5840 <disk_ioctl+0x52>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5ad6:	8f ef       	ldi	r24, 0xFF	; 255
    5ad8:	7d d7       	rcall	.+3834   	; 0x69d4 <spi_wr_rd>
)
{
	BYTE token;


	Timer1 = 20;
    5ada:	84 e1       	ldi	r24, 0x14	; 20
    5adc:	80 93 a7 25 	sts	0x25A7, r24
    5ae0:	05 c0       	rjmp	.+10     	; 0x5aec <disk_ioctl+0x2fe>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    5ae2:	80 91 a7 25 	lds	r24, 0x25A7
    5ae6:	88 23       	and	r24, r24
    5ae8:	09 f4       	brne	.+2      	; 0x5aec <disk_ioctl+0x2fe>
    5aea:	bf ce       	rjmp	.-642    	; 0x586a <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5aec:	8f ef       	ldi	r24, 0xFF	; 255
    5aee:	72 d7       	rcall	.+3812   	; 0x69d4 <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    5af0:	8f 3f       	cpi	r24, 0xFF	; 255
    5af2:	b9 f3       	breq	.-18     	; 0x5ae2 <disk_ioctl+0x2f4>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    5af4:	8e 3f       	cpi	r24, 0xFE	; 254
    5af6:	09 f0       	breq	.+2      	; 0x5afa <disk_ioctl+0x30c>
    5af8:	b8 ce       	rjmp	.-656    	; 0x586a <disk_ioctl+0x7c>
    5afa:	78 01       	movw	r14, r16
    5afc:	f0 e4       	ldi	r31, 0x40	; 64
    5afe:	ef 0e       	add	r14, r31
    5b00:	f1 1c       	adc	r15, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    5b02:	8f ef       	ldi	r24, 0xFF	; 255
    5b04:	67 d7       	rcall	.+3790   	; 0x69d4 <spi_wr_rd>
    5b06:	f8 01       	movw	r30, r16
    5b08:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    5b0a:	8f ef       	ldi	r24, 0xFF	; 255
    5b0c:	63 d7       	rcall	.+3782   	; 0x69d4 <spi_wr_rd>
    5b0e:	f8 01       	movw	r30, r16
    5b10:	81 83       	std	Z+1, r24	; 0x01
    5b12:	0e 5f       	subi	r16, 0xFE	; 254
    5b14:	1f 4f       	sbci	r17, 0xFF	; 255
		
	} while (cnt -= 2);
    5b16:	0e 15       	cp	r16, r14
    5b18:	1f 05       	cpc	r17, r15
    5b1a:	99 f7       	brne	.-26     	; 0x5b02 <disk_ioctl+0x314>
    5b1c:	e7 ce       	rjmp	.-562    	; 0x58ec <disk_ioctl+0xfe>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
					res = RES_OK;
				}
			}
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
    5b1e:	89 e0       	ldi	r24, 0x09	; 9
    5b20:	cf db       	rcall	.-2146   	; 0x52c0 <send_cmd>
    5b22:	81 11       	cpse	r24, r1
    5b24:	a2 ce       	rjmp	.-700    	; 0x586a <disk_ioctl+0x7c>
    5b26:	60 e1       	ldi	r22, 0x10	; 16
    5b28:	70 e0       	ldi	r23, 0x00	; 0
    5b2a:	ce 01       	movw	r24, r28
    5b2c:	01 96       	adiw	r24, 0x01	; 1
    5b2e:	8a db       	rcall	.-2284   	; 0x5244 <rcvr_datablock>
    5b30:	89 2b       	or	r24, r25
    5b32:	09 f4       	brne	.+2      	; 0x5b36 <disk_ioctl+0x348>
    5b34:	9a ce       	rjmp	.-716    	; 0x586a <disk_ioctl+0x7c>
				if (CardType & CT_SD1) {	/* SDv1 */
    5b36:	80 91 a5 25 	lds	r24, 0x25A5
    5b3a:	81 ff       	sbrs	r24, 1
    5b3c:	4b c0       	rjmp	.+150    	; 0x5bd4 <disk_ioctl+0x3e6>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    5b3e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b40:	88 1f       	adc	r24, r24
    5b42:	88 27       	eor	r24, r24
    5b44:	88 1f       	adc	r24, r24
    5b46:	90 e0       	ldi	r25, 0x00	; 0
    5b48:	01 96       	adiw	r24, 0x01	; 1
    5b4a:	2b 85       	ldd	r18, Y+11	; 0x0b
    5b4c:	2f 73       	andi	r18, 0x3F	; 63
    5b4e:	82 0f       	add	r24, r18
    5b50:	91 1d       	adc	r25, r1
    5b52:	82 0f       	add	r24, r18
    5b54:	91 1d       	adc	r25, r1
    5b56:	2e 85       	ldd	r18, Y+14	; 0x0e
    5b58:	22 95       	swap	r18
    5b5a:	26 95       	lsr	r18
    5b5c:	26 95       	lsr	r18
    5b5e:	23 70       	andi	r18, 0x03	; 3
    5b60:	21 50       	subi	r18, 0x01	; 1
    5b62:	02 c0       	rjmp	.+4      	; 0x5b68 <disk_ioctl+0x37a>
    5b64:	88 0f       	add	r24, r24
    5b66:	99 1f       	adc	r25, r25
    5b68:	2a 95       	dec	r18
    5b6a:	e2 f7       	brpl	.-8      	; 0x5b64 <disk_ioctl+0x376>
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    5b6c:	a0 e0       	ldi	r26, 0x00	; 0
    5b6e:	b0 e0       	ldi	r27, 0x00	; 0
    5b70:	f8 01       	movw	r30, r16
    5b72:	80 83       	st	Z, r24
    5b74:	91 83       	std	Z+1, r25	; 0x01
    5b76:	a2 83       	std	Z+2, r26	; 0x02
    5b78:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    5b7a:	10 e0       	ldi	r17, 0x00	; 0
    5b7c:	61 ce       	rjmp	.-830    	; 0x5840 <disk_ioctl+0x52>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    5b7e:	80 e1       	ldi	r24, 0x10	; 16
    5b80:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    5b84:	8f ef       	ldi	r24, 0xFF	; 255
    5b86:	26 d7       	rcall	.+3660   	; 0x69d4 <spi_wr_rd>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    5b88:	11 e0       	ldi	r17, 0x01	; 1
    5b8a:	5a ce       	rjmp	.-844    	; 0x5840 <disk_ioctl+0x52>
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
    5b8c:	88 85       	ldd	r24, Y+8	; 0x08
    5b8e:	8f 73       	andi	r24, 0x3F	; 63
    5b90:	90 e0       	ldi	r25, 0x00	; 0
    5b92:	a0 e0       	ldi	r26, 0x00	; 0
    5b94:	b0 e0       	ldi	r27, 0x00	; 0
    5b96:	dc 01       	movw	r26, r24
    5b98:	99 27       	eor	r25, r25
    5b9a:	88 27       	eor	r24, r24
    5b9c:	01 96       	adiw	r24, 0x01	; 1
    5b9e:	a1 1d       	adc	r26, r1
    5ba0:	b1 1d       	adc	r27, r1
    5ba2:	29 85       	ldd	r18, Y+9	; 0x09
    5ba4:	30 e0       	ldi	r19, 0x00	; 0
    5ba6:	32 2f       	mov	r19, r18
    5ba8:	22 27       	eor	r18, r18
    5baa:	4a 85       	ldd	r20, Y+10	; 0x0a
    5bac:	24 0f       	add	r18, r20
    5bae:	31 1d       	adc	r19, r1
    5bb0:	82 0f       	add	r24, r18
    5bb2:	93 1f       	adc	r25, r19
    5bb4:	a1 1d       	adc	r26, r1
    5bb6:	b1 1d       	adc	r27, r1
				*(DWORD*)buff = csize << 10;
    5bb8:	7a e0       	ldi	r23, 0x0A	; 10
    5bba:	88 0f       	add	r24, r24
    5bbc:	99 1f       	adc	r25, r25
    5bbe:	aa 1f       	adc	r26, r26
    5bc0:	bb 1f       	adc	r27, r27
    5bc2:	7a 95       	dec	r23
    5bc4:	d1 f7       	brne	.-12     	; 0x5bba <disk_ioctl+0x3cc>
    5bc6:	f8 01       	movw	r30, r16
    5bc8:	80 83       	st	Z, r24
    5bca:	91 83       	std	Z+1, r25	; 0x01
    5bcc:	a2 83       	std	Z+2, r26	; 0x02
    5bce:	b3 83       	std	Z+3, r27	; 0x03
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
			}
			res = RES_OK;
    5bd0:	10 e0       	ldi	r17, 0x00	; 0
    5bd2:	36 ce       	rjmp	.-916    	; 0x5840 <disk_ioctl+0x52>
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
				if (CardType & CT_SD1) {	/* SDv1 */
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    5bd4:	8c 85       	ldd	r24, Y+12	; 0x0c
    5bd6:	98 2f       	mov	r25, r24
    5bd8:	93 70       	andi	r25, 0x03	; 3
    5bda:	82 95       	swap	r24
    5bdc:	86 95       	lsr	r24
    5bde:	87 70       	andi	r24, 0x07	; 7
    5be0:	48 2f       	mov	r20, r24
    5be2:	50 e0       	ldi	r21, 0x00	; 0
    5be4:	f8 e0       	ldi	r31, 0x08	; 8
    5be6:	9f 9f       	mul	r25, r31
    5be8:	40 0d       	add	r20, r0
    5bea:	51 1d       	adc	r21, r1
    5bec:	11 24       	eor	r1, r1
    5bee:	4f 5f       	subi	r20, 0xFF	; 255
    5bf0:	5f 4f       	sbci	r21, 0xFF	; 255
    5bf2:	2b 85       	ldd	r18, Y+11	; 0x0b
    5bf4:	2c 77       	andi	r18, 0x7C	; 124
    5bf6:	30 e0       	ldi	r19, 0x00	; 0
    5bf8:	35 95       	asr	r19
    5bfa:	27 95       	ror	r18
    5bfc:	35 95       	asr	r19
    5bfe:	27 95       	ror	r18
    5c00:	2f 5f       	subi	r18, 0xFF	; 255
    5c02:	3f 4f       	sbci	r19, 0xFF	; 255
    5c04:	42 9f       	mul	r20, r18
    5c06:	c0 01       	movw	r24, r0
    5c08:	43 9f       	mul	r20, r19
    5c0a:	90 0d       	add	r25, r0
    5c0c:	52 9f       	mul	r21, r18
    5c0e:	90 0d       	add	r25, r0
    5c10:	11 24       	eor	r1, r1
    5c12:	ac cf       	rjmp	.-168    	; 0x5b6c <disk_ioctl+0x37e>

00005c14 <__vector_14>:

/*-----------------------------------------------------*/
/* Sound sampling ISR                                  */

ISR(TCC0_OVF_vect)
{
    5c14:	1f 92       	push	r1
    5c16:	0f 92       	push	r0
    5c18:	0f b6       	in	r0, 0x3f	; 63
    5c1a:	0f 92       	push	r0
    5c1c:	11 24       	eor	r1, r1
    5c1e:	0b b6       	in	r0, 0x3b	; 59
    5c20:	0f 92       	push	r0
    5c22:	cf 92       	push	r12
    5c24:	df 92       	push	r13
    5c26:	ef 92       	push	r14
    5c28:	ff 92       	push	r15
    5c2a:	2f 93       	push	r18
    5c2c:	3f 93       	push	r19
    5c2e:	4f 93       	push	r20
    5c30:	5f 93       	push	r21
    5c32:	6f 93       	push	r22
    5c34:	7f 93       	push	r23
    5c36:	8f 93       	push	r24
    5c38:	9f 93       	push	r25
    5c3a:	af 93       	push	r26
    5c3c:	bf 93       	push	r27
    5c3e:	ef 93       	push	r30
    5c40:	ff 93       	push	r31
	WAVFIFO *fcb = WavFifo;	/* Pointer to FIFO controls */
    5c42:	e0 91 d6 26 	lds	r30, 0x26D6
    5c46:	f0 91 d7 26 	lds	r31, 0x26D7
	UINT ri, ct;
	BYTE *buff, l1, l2, r1, r2;
	
	static uint16_t prev = 0;
		
	if (!fcb) return;
    5c4a:	30 97       	sbiw	r30, 0x00	; 0
    5c4c:	09 f4       	brne	.+2      	; 0x5c50 <__vector_14+0x3c>
    5c4e:	61 c0       	rjmp	.+194    	; 0x5d12 <__vector_14+0xfe>
	ct = fcb->ct; ri = fcb->ri;
    5c50:	46 81       	ldd	r20, Z+6	; 0x06
    5c52:	57 81       	ldd	r21, Z+7	; 0x07
    5c54:	22 81       	ldd	r18, Z+2	; 0x02
    5c56:	33 81       	ldd	r19, Z+3	; 0x03
	buff = fcb->buff + ri;
    5c58:	a0 85       	ldd	r26, Z+8	; 0x08
    5c5a:	b1 85       	ldd	r27, Z+9	; 0x09
    5c5c:	a2 0f       	add	r26, r18
    5c5e:	b3 1f       	adc	r27, r19

	switch (fcb->mode) {
    5c60:	80 81       	ld	r24, Z
    5c62:	91 81       	ldd	r25, Z+1	; 0x01
    5c64:	81 30       	cpi	r24, 0x01	; 1
    5c66:	91 05       	cpc	r25, r1
    5c68:	89 f0       	breq	.+34     	; 0x5c8c <__vector_14+0x78>
    5c6a:	08 f4       	brcc	.+2      	; 0x5c6e <__vector_14+0x5a>
    5c6c:	69 c0       	rjmp	.+210    	; 0x5d40 <__vector_14+0x12c>
    5c6e:	02 97       	sbiw	r24, 0x02	; 2
    5c70:	09 f0       	breq	.+2      	; 0x5c74 <__vector_14+0x60>
    5c72:	6f c0       	rjmp	.+222    	; 0x5d52 <__vector_14+0x13e>
		if (ct < 2) return;
		l1 = buff[0]; r2 = buff[1];
		ct -= 2; ri += 2;
		break;
		case 2:		/* Mono, 16bit */
		if (ct < 2) return;
    5c74:	42 30       	cpi	r20, 0x02	; 2
    5c76:	51 05       	cpc	r21, r1
    5c78:	08 f4       	brcc	.+2      	; 0x5c7c <__vector_14+0x68>
    5c7a:	4b c0       	rjmp	.+150    	; 0x5d12 <__vector_14+0xfe>
		l1 = r2 = buff[1] + 128;
    5c7c:	11 96       	adiw	r26, 0x01	; 1
    5c7e:	6c 91       	ld	r22, X
    5c80:	60 58       	subi	r22, 0x80	; 128
		ct -= 2; ri += 2;
    5c82:	42 50       	subi	r20, 0x02	; 2
    5c84:	51 09       	sbc	r21, r1
    5c86:	2e 5f       	subi	r18, 0xFE	; 254
    5c88:	3f 4f       	sbci	r19, 0xFF	; 255
		break;
    5c8a:	09 c0       	rjmp	.+18     	; 0x5c9e <__vector_14+0x8a>
		if (ct < 1) return;
		l1 = r2 = buff[0];
		ct -= 1; ri += 1;
		break;
		case 1:		/* Stereo, 8bit */
		if (ct < 2) return;
    5c8c:	42 30       	cpi	r20, 0x02	; 2
    5c8e:	51 05       	cpc	r21, r1
    5c90:	08 f4       	brcc	.+2      	; 0x5c94 <__vector_14+0x80>
    5c92:	3f c0       	rjmp	.+126    	; 0x5d12 <__vector_14+0xfe>
		l1 = buff[0]; r2 = buff[1];
    5c94:	6c 91       	ld	r22, X
		ct -= 2; ri += 2;
    5c96:	42 50       	subi	r20, 0x02	; 2
    5c98:	51 09       	sbc	r21, r1
    5c9a:	2e 5f       	subi	r18, 0xFE	; 254
    5c9c:	3f 4f       	sbci	r19, 0xFF	; 255
		r2 = buff[2];
		r1 = buff[3];
		ct -= 4; 
		ri += 4;
	}
	fcb->ct = ct;
    5c9e:	46 83       	std	Z+6, r20	; 0x06
    5ca0:	57 83       	std	Z+7, r21	; 0x07
	fcb->ri = ri & (fcb->sz_buff - 1);
    5ca2:	82 85       	ldd	r24, Z+10	; 0x0a
    5ca4:	93 85       	ldd	r25, Z+11	; 0x0b
    5ca6:	01 97       	sbiw	r24, 0x01	; 1
    5ca8:	82 23       	and	r24, r18
    5caa:	93 23       	and	r25, r19
    5cac:	82 83       	std	Z+2, r24	; 0x02
    5cae:	93 83       	std	Z+3, r25	; 0x03
	result = integer + 0x7FFF;
	return(result >> 4);
}

static inline uint8_t smooth(uint8_t data, float filterVal, float smoothedVal){
	return (int)(((data * (1 - filterVal)) + (smoothedVal  *  filterVal)));
    5cb0:	70 e0       	ldi	r23, 0x00	; 0
    5cb2:	80 e0       	ldi	r24, 0x00	; 0
    5cb4:	90 e0       	ldi	r25, 0x00	; 0
    5cb6:	0e 94 8c 37 	call	0x6f18	; 0x6f18 <__floatsisf>
    5cba:	2a e9       	ldi	r18, 0x9A	; 154
    5cbc:	39 e9       	ldi	r19, 0x99	; 153
    5cbe:	49 e1       	ldi	r20, 0x19	; 25
    5cc0:	5f e3       	ldi	r21, 0x3F	; 63
    5cc2:	0e 94 18 38 	call	0x7030	; 0x7030 <__mulsf3>
    5cc6:	6b 01       	movw	r12, r22
    5cc8:	7c 01       	movw	r14, r24
		ri += 4;
	}
	fcb->ct = ct;
	fcb->ri = ri & (fcb->sz_buff - 1);
	
	uint16_t data = smooth(l1,0.4,data);
    5cca:	60 e0       	ldi	r22, 0x00	; 0
    5ccc:	70 e0       	ldi	r23, 0x00	; 0
    5cce:	cb 01       	movw	r24, r22
    5cd0:	0e 94 8a 37 	call	0x6f14	; 0x6f14 <__floatunsisf>
	result = integer + 0x7FFF;
	return(result >> 4);
}

static inline uint8_t smooth(uint8_t data, float filterVal, float smoothedVal){
	return (int)(((data * (1 - filterVal)) + (smoothedVal  *  filterVal)));
    5cd4:	2d ec       	ldi	r18, 0xCD	; 205
    5cd6:	3c ec       	ldi	r19, 0xCC	; 204
    5cd8:	4c ec       	ldi	r20, 0xCC	; 204
    5cda:	5e e3       	ldi	r21, 0x3E	; 62
    5cdc:	0e 94 18 38 	call	0x7030	; 0x7030 <__mulsf3>
    5ce0:	9b 01       	movw	r18, r22
    5ce2:	ac 01       	movw	r20, r24
    5ce4:	c7 01       	movw	r24, r14
    5ce6:	b6 01       	movw	r22, r12
    5ce8:	0e 94 f5 36 	call	0x6dea	; 0x6dea <__addsf3>
    5cec:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <__fixsfsi>
    5cf0:	77 27       	eor	r23, r23
	fcb->ri = ri & (fcb->sz_buff - 1);
	
	uint16_t data = smooth(l1,0.4,data);
	//uint8_t data = l1*0.2;
	
	DACB.CH0DATA = (data + prev)/2;//<< 2;
    5cf2:	80 91 a8 25 	lds	r24, 0x25A8
    5cf6:	90 91 a9 25 	lds	r25, 0x25A9
    5cfa:	86 0f       	add	r24, r22
    5cfc:	97 1f       	adc	r25, r23
    5cfe:	96 95       	lsr	r25
    5d00:	87 95       	ror	r24
    5d02:	80 93 38 03 	sts	0x0338, r24
    5d06:	90 93 39 03 	sts	0x0339, r25
	//DACB.CH1DATA = 255-data;//<< 2;
	
	prev = data;
    5d0a:	60 93 a8 25 	sts	0x25A8, r22
    5d0e:	70 93 a9 25 	sts	0x25A9, r23
}
    5d12:	ff 91       	pop	r31
    5d14:	ef 91       	pop	r30
    5d16:	bf 91       	pop	r27
    5d18:	af 91       	pop	r26
    5d1a:	9f 91       	pop	r25
    5d1c:	8f 91       	pop	r24
    5d1e:	7f 91       	pop	r23
    5d20:	6f 91       	pop	r22
    5d22:	5f 91       	pop	r21
    5d24:	4f 91       	pop	r20
    5d26:	3f 91       	pop	r19
    5d28:	2f 91       	pop	r18
    5d2a:	ff 90       	pop	r15
    5d2c:	ef 90       	pop	r14
    5d2e:	df 90       	pop	r13
    5d30:	cf 90       	pop	r12
    5d32:	0f 90       	pop	r0
    5d34:	0b be       	out	0x3b, r0	; 59
    5d36:	0f 90       	pop	r0
    5d38:	0f be       	out	0x3f, r0	; 63
    5d3a:	0f 90       	pop	r0
    5d3c:	1f 90       	pop	r1
    5d3e:	18 95       	reti
	ct = fcb->ct; ri = fcb->ri;
	buff = fcb->buff + ri;

	switch (fcb->mode) {
		case 0:		/* Mono, 8bit */
		if (ct < 1) return;
    5d40:	41 15       	cp	r20, r1
    5d42:	51 05       	cpc	r21, r1
    5d44:	31 f3       	breq	.-52     	; 0x5d12 <__vector_14+0xfe>
		l1 = r2 = buff[0];
    5d46:	6c 91       	ld	r22, X
		ct -= 1; ri += 1;
    5d48:	41 50       	subi	r20, 0x01	; 1
    5d4a:	51 09       	sbc	r21, r1
    5d4c:	2f 5f       	subi	r18, 0xFF	; 255
    5d4e:	3f 4f       	sbci	r19, 0xFF	; 255
		break;
    5d50:	a6 cf       	rjmp	.-180    	; 0x5c9e <__vector_14+0x8a>
		if (ct < 2) return;
		l1 = r2 = buff[1] + 128;
		ct -= 2; ri += 2;
		break;
		default:	/* Stereo, 16bit */
		if (ct < 4) return;
    5d52:	44 30       	cpi	r20, 0x04	; 4
    5d54:	51 05       	cpc	r21, r1
    5d56:	e8 f2       	brcs	.-70     	; 0x5d12 <__vector_14+0xfe>
		l2 = buff[0]; 
		l1 = buff[1];
    5d58:	11 96       	adiw	r26, 0x01	; 1
    5d5a:	6c 91       	ld	r22, X
		r2 = buff[2];
		r1 = buff[3];
		ct -= 4; 
    5d5c:	44 50       	subi	r20, 0x04	; 4
    5d5e:	51 09       	sbc	r21, r1
		ri += 4;
    5d60:	2c 5f       	subi	r18, 0xFC	; 252
    5d62:	3f 4f       	sbci	r19, 0xFF	; 255
    5d64:	9c cf       	rjmp	.-200    	; 0x5c9e <__vector_14+0x8a>

00005d66 <ht1632c_setup>:
void ht1632c_fill_screen() {

	for (uint8_t i=0; i<(WIDTH*HEIGHT/8); i++) {
		ledmatrix[i] = 0xFF;
	}
	ht1632c_refresh_screen();
    5d66:	41 e0       	ldi	r20, 0x01	; 1
    5d68:	40 93 81 06 	sts	0x0681, r20
    5d6c:	40 93 85 06 	sts	0x0685, r20
    5d70:	24 e0       	ldi	r18, 0x04	; 4
    5d72:	20 93 81 06 	sts	0x0681, r18
    5d76:	20 93 85 06 	sts	0x0685, r18
    5d7a:	38 e0       	ldi	r19, 0x08	; 8
    5d7c:	30 93 81 06 	sts	0x0681, r19
    5d80:	40 93 86 06 	sts	0x0686, r20
    5d84:	30 93 81 06 	sts	0x0681, r19
    5d88:	20 93 86 06 	sts	0x0686, r18
    5d8c:	30 93 85 06 	sts	0x0685, r19
    5d90:	20 93 85 06 	sts	0x0685, r18
    5d94:	20 93 86 06 	sts	0x0686, r18
    5d98:	30 93 86 06 	sts	0x0686, r19
    5d9c:	20 93 85 06 	sts	0x0685, r18
    5da0:	20 93 86 06 	sts	0x0686, r18
    5da4:	30 93 86 06 	sts	0x0686, r19
    5da8:	20 93 85 06 	sts	0x0685, r18
    5dac:	20 93 86 06 	sts	0x0686, r18
    5db0:	30 93 86 06 	sts	0x0686, r19
    5db4:	20 93 85 06 	sts	0x0685, r18
    5db8:	20 93 86 06 	sts	0x0686, r18
    5dbc:	30 93 86 06 	sts	0x0686, r19
    5dc0:	20 93 85 06 	sts	0x0685, r18
    5dc4:	20 93 86 06 	sts	0x0686, r18
    5dc8:	30 93 86 06 	sts	0x0686, r19
    5dcc:	20 93 85 06 	sts	0x0685, r18
    5dd0:	20 93 86 06 	sts	0x0686, r18
    5dd4:	30 93 86 06 	sts	0x0686, r19
    5dd8:	20 93 85 06 	sts	0x0685, r18
    5ddc:	20 93 86 06 	sts	0x0686, r18
    5de0:	30 93 86 06 	sts	0x0686, r19
    5de4:	20 93 85 06 	sts	0x0685, r18
    5de8:	20 93 86 06 	sts	0x0686, r18
    5dec:	30 93 86 06 	sts	0x0686, r19
    5df0:	20 93 85 06 	sts	0x0685, r18
    5df4:	20 93 86 06 	sts	0x0686, r18
    5df8:	30 93 86 06 	sts	0x0686, r19
    5dfc:	20 93 85 06 	sts	0x0685, r18
    5e00:	20 93 86 06 	sts	0x0686, r18
    5e04:	30 93 85 06 	sts	0x0685, r19
    5e08:	20 93 85 06 	sts	0x0685, r18
    5e0c:	20 93 86 06 	sts	0x0686, r18
    5e10:	30 93 86 06 	sts	0x0686, r19
    5e14:	20 93 85 06 	sts	0x0685, r18
    5e18:	30 93 86 06 	sts	0x0686, r19
    5e1c:	40 93 85 06 	sts	0x0685, r20
    5e20:	40 93 86 06 	sts	0x0686, r20
    5e24:	30 93 81 06 	sts	0x0681, r19
    5e28:	20 93 86 06 	sts	0x0686, r18
    5e2c:	30 93 85 06 	sts	0x0685, r19
    5e30:	20 93 85 06 	sts	0x0685, r18
    5e34:	20 93 86 06 	sts	0x0686, r18
    5e38:	30 93 86 06 	sts	0x0686, r19
    5e3c:	20 93 85 06 	sts	0x0685, r18
    5e40:	20 93 86 06 	sts	0x0686, r18
    5e44:	30 93 86 06 	sts	0x0686, r19
    5e48:	20 93 85 06 	sts	0x0685, r18
    5e4c:	20 93 86 06 	sts	0x0686, r18
    5e50:	30 93 86 06 	sts	0x0686, r19
    5e54:	20 93 85 06 	sts	0x0685, r18
    5e58:	20 93 86 06 	sts	0x0686, r18
    5e5c:	30 93 86 06 	sts	0x0686, r19
    5e60:	20 93 85 06 	sts	0x0685, r18
    5e64:	20 93 86 06 	sts	0x0686, r18
    5e68:	30 93 86 06 	sts	0x0686, r19
    5e6c:	20 93 85 06 	sts	0x0685, r18
    5e70:	20 93 86 06 	sts	0x0686, r18
    5e74:	30 93 86 06 	sts	0x0686, r19
    5e78:	20 93 85 06 	sts	0x0685, r18
    5e7c:	20 93 86 06 	sts	0x0686, r18
    5e80:	30 93 86 06 	sts	0x0686, r19
    5e84:	20 93 85 06 	sts	0x0685, r18
    5e88:	20 93 86 06 	sts	0x0686, r18
    5e8c:	30 93 86 06 	sts	0x0686, r19
    5e90:	20 93 85 06 	sts	0x0685, r18
    5e94:	20 93 86 06 	sts	0x0686, r18
    5e98:	30 93 85 06 	sts	0x0685, r19
    5e9c:	20 93 85 06 	sts	0x0685, r18
    5ea0:	20 93 86 06 	sts	0x0686, r18
    5ea4:	30 93 85 06 	sts	0x0685, r19
    5ea8:	20 93 85 06 	sts	0x0685, r18
    5eac:	20 93 86 06 	sts	0x0686, r18
    5eb0:	30 93 86 06 	sts	0x0686, r19
    5eb4:	20 93 85 06 	sts	0x0685, r18
    5eb8:	30 93 86 06 	sts	0x0686, r19
    5ebc:	40 93 85 06 	sts	0x0685, r20
    5ec0:	40 93 86 06 	sts	0x0686, r20
    5ec4:	30 93 81 06 	sts	0x0681, r19
    5ec8:	20 93 86 06 	sts	0x0686, r18
    5ecc:	30 93 85 06 	sts	0x0685, r19
    5ed0:	20 93 85 06 	sts	0x0685, r18
    5ed4:	20 93 86 06 	sts	0x0686, r18
    5ed8:	30 93 86 06 	sts	0x0686, r19
    5edc:	20 93 85 06 	sts	0x0685, r18
    5ee0:	20 93 86 06 	sts	0x0686, r18
    5ee4:	30 93 86 06 	sts	0x0686, r19
    5ee8:	20 93 85 06 	sts	0x0685, r18
    5eec:	20 93 86 06 	sts	0x0686, r18
    5ef0:	30 93 86 06 	sts	0x0686, r19
    5ef4:	20 93 85 06 	sts	0x0685, r18
    5ef8:	20 93 86 06 	sts	0x0686, r18
    5efc:	30 93 86 06 	sts	0x0686, r19
    5f00:	20 93 85 06 	sts	0x0685, r18
    5f04:	20 93 86 06 	sts	0x0686, r18
    5f08:	30 93 86 06 	sts	0x0686, r19
    5f0c:	20 93 85 06 	sts	0x0685, r18
    5f10:	20 93 86 06 	sts	0x0686, r18
    5f14:	30 93 86 06 	sts	0x0686, r19
    5f18:	20 93 85 06 	sts	0x0685, r18
    5f1c:	20 93 86 06 	sts	0x0686, r18
    5f20:	30 93 85 06 	sts	0x0685, r19
    5f24:	20 93 85 06 	sts	0x0685, r18
    5f28:	20 93 86 06 	sts	0x0686, r18
    5f2c:	30 93 86 06 	sts	0x0686, r19
    5f30:	20 93 85 06 	sts	0x0685, r18
    5f34:	20 93 86 06 	sts	0x0686, r18
    5f38:	30 93 86 06 	sts	0x0686, r19
    5f3c:	20 93 85 06 	sts	0x0685, r18
    5f40:	20 93 86 06 	sts	0x0686, r18
    5f44:	30 93 86 06 	sts	0x0686, r19
    5f48:	20 93 85 06 	sts	0x0685, r18
    5f4c:	20 93 86 06 	sts	0x0686, r18
    5f50:	30 93 86 06 	sts	0x0686, r19
    5f54:	20 93 85 06 	sts	0x0685, r18
    5f58:	30 93 86 06 	sts	0x0686, r19
    5f5c:	40 93 85 06 	sts	0x0685, r20
    5f60:	40 93 86 06 	sts	0x0686, r20
    5f64:	30 93 81 06 	sts	0x0681, r19
    5f68:	20 93 86 06 	sts	0x0686, r18
    5f6c:	30 93 85 06 	sts	0x0685, r19
    5f70:	20 93 85 06 	sts	0x0685, r18
    5f74:	20 93 86 06 	sts	0x0686, r18
    5f78:	30 93 86 06 	sts	0x0686, r19
    5f7c:	20 93 85 06 	sts	0x0685, r18
    5f80:	20 93 86 06 	sts	0x0686, r18
    5f84:	30 93 86 06 	sts	0x0686, r19
    5f88:	20 93 85 06 	sts	0x0685, r18
    5f8c:	20 93 86 06 	sts	0x0686, r18
    5f90:	30 93 86 06 	sts	0x0686, r19
    5f94:	20 93 85 06 	sts	0x0685, r18
    5f98:	20 93 86 06 	sts	0x0686, r18
    5f9c:	30 93 86 06 	sts	0x0686, r19
    5fa0:	20 93 85 06 	sts	0x0685, r18
    5fa4:	20 93 86 06 	sts	0x0686, r18
    5fa8:	30 93 86 06 	sts	0x0686, r19
    5fac:	20 93 85 06 	sts	0x0685, r18
    5fb0:	20 93 86 06 	sts	0x0686, r18
    5fb4:	30 93 85 06 	sts	0x0685, r19
    5fb8:	20 93 85 06 	sts	0x0685, r18
    5fbc:	20 93 86 06 	sts	0x0686, r18
    5fc0:	30 93 86 06 	sts	0x0686, r19
    5fc4:	20 93 85 06 	sts	0x0685, r18
    5fc8:	20 93 86 06 	sts	0x0686, r18
    5fcc:	30 93 85 06 	sts	0x0685, r19
    5fd0:	20 93 85 06 	sts	0x0685, r18
    5fd4:	20 93 86 06 	sts	0x0686, r18
    5fd8:	30 93 86 06 	sts	0x0686, r19
    5fdc:	20 93 85 06 	sts	0x0685, r18
    5fe0:	20 93 86 06 	sts	0x0686, r18
    5fe4:	30 93 86 06 	sts	0x0686, r19
    5fe8:	20 93 85 06 	sts	0x0685, r18
    5fec:	20 93 86 06 	sts	0x0686, r18
    5ff0:	30 93 86 06 	sts	0x0686, r19
    5ff4:	20 93 85 06 	sts	0x0685, r18
    5ff8:	30 93 86 06 	sts	0x0686, r19
    5ffc:	40 93 85 06 	sts	0x0685, r20
    6000:	40 93 86 06 	sts	0x0686, r20
    6004:	30 93 81 06 	sts	0x0681, r19
    6008:	20 93 86 06 	sts	0x0686, r18
    600c:	30 93 85 06 	sts	0x0685, r19
    6010:	20 93 85 06 	sts	0x0685, r18
    6014:	20 93 86 06 	sts	0x0686, r18
    6018:	30 93 86 06 	sts	0x0686, r19
    601c:	20 93 85 06 	sts	0x0685, r18
    6020:	20 93 86 06 	sts	0x0686, r18
    6024:	30 93 86 06 	sts	0x0686, r19
    6028:	20 93 85 06 	sts	0x0685, r18
    602c:	20 93 86 06 	sts	0x0686, r18
    6030:	30 93 86 06 	sts	0x0686, r19
    6034:	20 93 85 06 	sts	0x0685, r18
    6038:	20 93 86 06 	sts	0x0686, r18
    603c:	30 93 86 06 	sts	0x0686, r19
    6040:	20 93 85 06 	sts	0x0685, r18
    6044:	20 93 86 06 	sts	0x0686, r18
    6048:	30 93 86 06 	sts	0x0686, r19
    604c:	20 93 85 06 	sts	0x0685, r18
    6050:	20 93 86 06 	sts	0x0686, r18
    6054:	30 93 85 06 	sts	0x0685, r19
    6058:	20 93 85 06 	sts	0x0685, r18
    605c:	20 93 86 06 	sts	0x0686, r18
    6060:	30 93 85 06 	sts	0x0685, r19
    6064:	20 93 85 06 	sts	0x0685, r18
    6068:	20 93 86 06 	sts	0x0686, r18
    606c:	30 93 86 06 	sts	0x0686, r19
    6070:	20 93 85 06 	sts	0x0685, r18
    6074:	20 93 86 06 	sts	0x0686, r18
    6078:	30 93 86 06 	sts	0x0686, r19
    607c:	20 93 85 06 	sts	0x0685, r18
    6080:	20 93 86 06 	sts	0x0686, r18
    6084:	30 93 86 06 	sts	0x0686, r19
    6088:	20 93 85 06 	sts	0x0685, r18
    608c:	20 93 86 06 	sts	0x0686, r18
    6090:	30 93 86 06 	sts	0x0686, r19
    6094:	20 93 85 06 	sts	0x0685, r18
    6098:	30 93 86 06 	sts	0x0686, r19
    609c:	40 93 85 06 	sts	0x0685, r20
    60a0:	90 e0       	ldi	r25, 0x00	; 0
    60a2:	94 60       	ori	r25, 0x04	; 4
    60a4:	88 0f       	add	r24, r24
    60a6:	99 1f       	adc	r25, r25
    60a8:	40 93 86 06 	sts	0x0686, r20
    60ac:	30 93 81 06 	sts	0x0681, r19
    60b0:	20 93 86 06 	sts	0x0686, r18
    60b4:	30 93 85 06 	sts	0x0685, r19
    60b8:	20 93 85 06 	sts	0x0685, r18
    60bc:	20 93 86 06 	sts	0x0686, r18
    60c0:	30 93 86 06 	sts	0x0686, r19
    60c4:	20 93 85 06 	sts	0x0685, r18
    60c8:	20 93 86 06 	sts	0x0686, r18
    60cc:	30 93 86 06 	sts	0x0686, r19
    60d0:	20 93 85 06 	sts	0x0685, r18
    60d4:	20 93 86 06 	sts	0x0686, r18
    60d8:	90 fd       	sbrc	r25, 0
    60da:	e7 c0       	rjmp	.+462    	; 0x62aa <ht1632c_setup+0x544>
    60dc:	30 93 86 06 	sts	0x0686, r19
    60e0:	24 e0       	ldi	r18, 0x04	; 4
    60e2:	20 93 85 06 	sts	0x0685, r18
    60e6:	20 93 86 06 	sts	0x0686, r18
    60ea:	28 e0       	ldi	r18, 0x08	; 8
    60ec:	87 fd       	sbrc	r24, 7
    60ee:	9e c0       	rjmp	.+316    	; 0x622c <ht1632c_setup+0x4c6>
    60f0:	20 93 86 06 	sts	0x0686, r18
    60f4:	24 e0       	ldi	r18, 0x04	; 4
    60f6:	20 93 85 06 	sts	0x0685, r18
    60fa:	20 93 86 06 	sts	0x0686, r18
    60fe:	28 e0       	ldi	r18, 0x08	; 8
    6100:	86 fd       	sbrc	r24, 6
    6102:	9e c0       	rjmp	.+316    	; 0x6240 <ht1632c_setup+0x4da>
    6104:	20 93 86 06 	sts	0x0686, r18
    6108:	24 e0       	ldi	r18, 0x04	; 4
    610a:	20 93 85 06 	sts	0x0685, r18
    610e:	20 93 86 06 	sts	0x0686, r18
    6112:	28 e0       	ldi	r18, 0x08	; 8
    6114:	85 fd       	sbrc	r24, 5
    6116:	9e c0       	rjmp	.+316    	; 0x6254 <ht1632c_setup+0x4ee>
    6118:	20 93 86 06 	sts	0x0686, r18
    611c:	24 e0       	ldi	r18, 0x04	; 4
    611e:	20 93 85 06 	sts	0x0685, r18
    6122:	20 93 86 06 	sts	0x0686, r18
    6126:	28 e0       	ldi	r18, 0x08	; 8
    6128:	84 fd       	sbrc	r24, 4
    612a:	9e c0       	rjmp	.+316    	; 0x6268 <ht1632c_setup+0x502>
    612c:	20 93 86 06 	sts	0x0686, r18
    6130:	24 e0       	ldi	r18, 0x04	; 4
    6132:	20 93 85 06 	sts	0x0685, r18
    6136:	20 93 86 06 	sts	0x0686, r18
    613a:	28 e0       	ldi	r18, 0x08	; 8
    613c:	83 fd       	sbrc	r24, 3
    613e:	9e c0       	rjmp	.+316    	; 0x627c <ht1632c_setup+0x516>
    6140:	20 93 86 06 	sts	0x0686, r18
    6144:	24 e0       	ldi	r18, 0x04	; 4
    6146:	20 93 85 06 	sts	0x0685, r18
    614a:	20 93 86 06 	sts	0x0686, r18
    614e:	28 e0       	ldi	r18, 0x08	; 8
    6150:	82 fd       	sbrc	r24, 2
    6152:	9e c0       	rjmp	.+316    	; 0x6290 <ht1632c_setup+0x52a>
    6154:	20 93 86 06 	sts	0x0686, r18
    6158:	94 e0       	ldi	r25, 0x04	; 4
    615a:	90 93 85 06 	sts	0x0685, r25
    615e:	90 93 86 06 	sts	0x0686, r25
    6162:	81 fd       	sbrc	r24, 1
    6164:	9e c0       	rjmp	.+316    	; 0x62a2 <ht1632c_setup+0x53c>
    6166:	88 e0       	ldi	r24, 0x08	; 8
    6168:	80 93 86 06 	sts	0x0686, r24
    616c:	84 e0       	ldi	r24, 0x04	; 4
    616e:	80 93 85 06 	sts	0x0685, r24
    6172:	80 93 86 06 	sts	0x0686, r24
    6176:	98 e0       	ldi	r25, 0x08	; 8
    6178:	90 93 86 06 	sts	0x0686, r25
    617c:	80 93 85 06 	sts	0x0685, r24
    6180:	90 93 86 06 	sts	0x0686, r25
    6184:	21 e0       	ldi	r18, 0x01	; 1
    6186:	20 93 85 06 	sts	0x0685, r18
    618a:	20 93 86 06 	sts	0x0686, r18
    618e:	90 93 81 06 	sts	0x0681, r25
    6192:	80 93 86 06 	sts	0x0686, r24
    6196:	90 93 85 06 	sts	0x0685, r25
    619a:	80 93 85 06 	sts	0x0685, r24
    619e:	80 93 86 06 	sts	0x0686, r24
    61a2:	90 93 86 06 	sts	0x0686, r25
    61a6:	80 93 85 06 	sts	0x0685, r24
    61aa:	80 93 86 06 	sts	0x0686, r24
    61ae:	90 93 86 06 	sts	0x0686, r25
    61b2:	80 93 85 06 	sts	0x0685, r24
    61b6:	80 93 86 06 	sts	0x0686, r24
    61ba:	90 93 85 06 	sts	0x0685, r25
    61be:	80 93 85 06 	sts	0x0685, r24
    61c2:	80 93 86 06 	sts	0x0686, r24
    61c6:	90 93 86 06 	sts	0x0686, r25
    61ca:	80 93 85 06 	sts	0x0685, r24
    61ce:	80 93 86 06 	sts	0x0686, r24
    61d2:	90 93 85 06 	sts	0x0685, r25
    61d6:	80 93 85 06 	sts	0x0685, r24
    61da:	80 93 86 06 	sts	0x0686, r24
    61de:	90 93 86 06 	sts	0x0686, r25
    61e2:	80 93 85 06 	sts	0x0685, r24
    61e6:	80 93 86 06 	sts	0x0686, r24
    61ea:	90 93 86 06 	sts	0x0686, r25
    61ee:	80 93 85 06 	sts	0x0685, r24
    61f2:	80 93 86 06 	sts	0x0686, r24
    61f6:	90 93 86 06 	sts	0x0686, r25
    61fa:	80 93 85 06 	sts	0x0685, r24
    61fe:	80 93 86 06 	sts	0x0686, r24
    6202:	90 93 86 06 	sts	0x0686, r25
    6206:	80 93 85 06 	sts	0x0685, r24
    620a:	80 93 86 06 	sts	0x0686, r24
    620e:	90 93 85 06 	sts	0x0685, r25
    6212:	80 93 85 06 	sts	0x0685, r24
    6216:	80 93 86 06 	sts	0x0686, r24
    621a:	90 93 86 06 	sts	0x0686, r25
    621e:	80 93 85 06 	sts	0x0685, r24
    6222:	90 93 86 06 	sts	0x0686, r25
    6226:	20 93 85 06 	sts	0x0685, r18
    622a:	08 95       	ret
    622c:	20 93 85 06 	sts	0x0685, r18
    6230:	24 e0       	ldi	r18, 0x04	; 4
    6232:	20 93 85 06 	sts	0x0685, r18
    6236:	20 93 86 06 	sts	0x0686, r18
    623a:	28 e0       	ldi	r18, 0x08	; 8
    623c:	86 ff       	sbrs	r24, 6
    623e:	62 cf       	rjmp	.-316    	; 0x6104 <ht1632c_setup+0x39e>
    6240:	20 93 85 06 	sts	0x0685, r18
    6244:	24 e0       	ldi	r18, 0x04	; 4
    6246:	20 93 85 06 	sts	0x0685, r18
    624a:	20 93 86 06 	sts	0x0686, r18
    624e:	28 e0       	ldi	r18, 0x08	; 8
    6250:	85 ff       	sbrs	r24, 5
    6252:	62 cf       	rjmp	.-316    	; 0x6118 <ht1632c_setup+0x3b2>
    6254:	20 93 85 06 	sts	0x0685, r18
    6258:	24 e0       	ldi	r18, 0x04	; 4
    625a:	20 93 85 06 	sts	0x0685, r18
    625e:	20 93 86 06 	sts	0x0686, r18
    6262:	28 e0       	ldi	r18, 0x08	; 8
    6264:	84 ff       	sbrs	r24, 4
    6266:	62 cf       	rjmp	.-316    	; 0x612c <ht1632c_setup+0x3c6>
    6268:	20 93 85 06 	sts	0x0685, r18
    626c:	24 e0       	ldi	r18, 0x04	; 4
    626e:	20 93 85 06 	sts	0x0685, r18
    6272:	20 93 86 06 	sts	0x0686, r18
    6276:	28 e0       	ldi	r18, 0x08	; 8
    6278:	83 ff       	sbrs	r24, 3
    627a:	62 cf       	rjmp	.-316    	; 0x6140 <ht1632c_setup+0x3da>
    627c:	20 93 85 06 	sts	0x0685, r18
    6280:	24 e0       	ldi	r18, 0x04	; 4
    6282:	20 93 85 06 	sts	0x0685, r18
    6286:	20 93 86 06 	sts	0x0686, r18
    628a:	28 e0       	ldi	r18, 0x08	; 8
    628c:	82 ff       	sbrs	r24, 2
    628e:	62 cf       	rjmp	.-316    	; 0x6154 <ht1632c_setup+0x3ee>
    6290:	20 93 85 06 	sts	0x0685, r18
    6294:	94 e0       	ldi	r25, 0x04	; 4
    6296:	90 93 85 06 	sts	0x0685, r25
    629a:	90 93 86 06 	sts	0x0686, r25
    629e:	81 ff       	sbrs	r24, 1
    62a0:	62 cf       	rjmp	.-316    	; 0x6166 <ht1632c_setup+0x400>
    62a2:	88 e0       	ldi	r24, 0x08	; 8
    62a4:	80 93 85 06 	sts	0x0685, r24
    62a8:	61 cf       	rjmp	.-318    	; 0x616c <ht1632c_setup+0x406>
    62aa:	30 93 85 06 	sts	0x0685, r19
    62ae:	24 e0       	ldi	r18, 0x04	; 4
    62b0:	20 93 85 06 	sts	0x0685, r18
    62b4:	20 93 86 06 	sts	0x0686, r18
    62b8:	28 e0       	ldi	r18, 0x08	; 8
    62ba:	87 fd       	sbrc	r24, 7
    62bc:	b7 cf       	rjmp	.-146    	; 0x622c <ht1632c_setup+0x4c6>
    62be:	18 cf       	rjmp	.-464    	; 0x60f0 <ht1632c_setup+0x38a>

000062c0 <ht1632c_set_brightness>:
    62c0:	80 31       	cpi	r24, 0x10	; 16
    62c2:	08 f0       	brcs	.+2      	; 0x62c6 <ht1632c_set_brightness+0x6>
    62c4:	8f e0       	ldi	r24, 0x0F	; 15
    62c6:	80 6a       	ori	r24, 0xA0	; 160
    62c8:	90 e0       	ldi	r25, 0x00	; 0
    62ca:	94 60       	ori	r25, 0x04	; 4
    62cc:	88 0f       	add	r24, r24
    62ce:	99 1f       	adc	r25, r25
    62d0:	21 e0       	ldi	r18, 0x01	; 1
    62d2:	20 93 86 06 	sts	0x0686, r18
    62d6:	38 e0       	ldi	r19, 0x08	; 8
    62d8:	30 93 81 06 	sts	0x0681, r19
    62dc:	24 e0       	ldi	r18, 0x04	; 4
    62de:	20 93 86 06 	sts	0x0686, r18
    62e2:	30 93 85 06 	sts	0x0685, r19
    62e6:	20 93 85 06 	sts	0x0685, r18
    62ea:	20 93 86 06 	sts	0x0686, r18
    62ee:	30 93 86 06 	sts	0x0686, r19
    62f2:	20 93 85 06 	sts	0x0685, r18
    62f6:	20 93 86 06 	sts	0x0686, r18
    62fa:	30 93 86 06 	sts	0x0686, r19
    62fe:	20 93 85 06 	sts	0x0685, r18
    6302:	20 93 86 06 	sts	0x0686, r18
    6306:	30 93 85 06 	sts	0x0685, r19
    630a:	20 93 85 06 	sts	0x0685, r18
    630e:	20 93 86 06 	sts	0x0686, r18
    6312:	30 93 86 06 	sts	0x0686, r19
    6316:	20 93 85 06 	sts	0x0685, r18
    631a:	20 93 86 06 	sts	0x0686, r18
    631e:	30 93 85 06 	sts	0x0685, r19
    6322:	20 93 85 06 	sts	0x0685, r18
    6326:	20 93 86 06 	sts	0x0686, r18
    632a:	30 93 86 06 	sts	0x0686, r19
    632e:	20 93 85 06 	sts	0x0685, r18
    6332:	20 93 86 06 	sts	0x0686, r18
    6336:	84 fd       	sbrc	r24, 4
    6338:	47 c0       	rjmp	.+142    	; 0x63c8 <ht1632c_set_brightness+0x108>
    633a:	30 93 86 06 	sts	0x0686, r19
    633e:	24 e0       	ldi	r18, 0x04	; 4
    6340:	20 93 85 06 	sts	0x0685, r18
    6344:	20 93 86 06 	sts	0x0686, r18
    6348:	28 e0       	ldi	r18, 0x08	; 8
    634a:	83 fd       	sbrc	r24, 3
    634c:	26 c0       	rjmp	.+76     	; 0x639a <ht1632c_set_brightness+0xda>
    634e:	20 93 86 06 	sts	0x0686, r18
    6352:	24 e0       	ldi	r18, 0x04	; 4
    6354:	20 93 85 06 	sts	0x0685, r18
    6358:	20 93 86 06 	sts	0x0686, r18
    635c:	28 e0       	ldi	r18, 0x08	; 8
    635e:	82 fd       	sbrc	r24, 2
    6360:	26 c0       	rjmp	.+76     	; 0x63ae <ht1632c_set_brightness+0xee>
    6362:	20 93 86 06 	sts	0x0686, r18
    6366:	94 e0       	ldi	r25, 0x04	; 4
    6368:	90 93 85 06 	sts	0x0685, r25
    636c:	90 93 86 06 	sts	0x0686, r25
    6370:	81 fd       	sbrc	r24, 1
    6372:	26 c0       	rjmp	.+76     	; 0x63c0 <ht1632c_set_brightness+0x100>
    6374:	88 e0       	ldi	r24, 0x08	; 8
    6376:	80 93 86 06 	sts	0x0686, r24
    637a:	84 e0       	ldi	r24, 0x04	; 4
    637c:	80 93 85 06 	sts	0x0685, r24
    6380:	80 93 86 06 	sts	0x0686, r24
    6384:	98 e0       	ldi	r25, 0x08	; 8
    6386:	90 93 86 06 	sts	0x0686, r25
    638a:	80 93 85 06 	sts	0x0685, r24
    638e:	90 93 86 06 	sts	0x0686, r25
    6392:	81 e0       	ldi	r24, 0x01	; 1
    6394:	80 93 85 06 	sts	0x0685, r24
    6398:	08 95       	ret
    639a:	20 93 85 06 	sts	0x0685, r18
    639e:	24 e0       	ldi	r18, 0x04	; 4
    63a0:	20 93 85 06 	sts	0x0685, r18
    63a4:	20 93 86 06 	sts	0x0686, r18
    63a8:	28 e0       	ldi	r18, 0x08	; 8
    63aa:	82 ff       	sbrs	r24, 2
    63ac:	da cf       	rjmp	.-76     	; 0x6362 <ht1632c_set_brightness+0xa2>
    63ae:	20 93 85 06 	sts	0x0685, r18
    63b2:	94 e0       	ldi	r25, 0x04	; 4
    63b4:	90 93 85 06 	sts	0x0685, r25
    63b8:	90 93 86 06 	sts	0x0686, r25
    63bc:	81 ff       	sbrs	r24, 1
    63be:	da cf       	rjmp	.-76     	; 0x6374 <ht1632c_set_brightness+0xb4>
    63c0:	88 e0       	ldi	r24, 0x08	; 8
    63c2:	80 93 85 06 	sts	0x0685, r24
    63c6:	d9 cf       	rjmp	.-78     	; 0x637a <ht1632c_set_brightness+0xba>
    63c8:	30 93 85 06 	sts	0x0685, r19
    63cc:	24 e0       	ldi	r18, 0x04	; 4
    63ce:	20 93 85 06 	sts	0x0685, r18
    63d2:	20 93 86 06 	sts	0x0686, r18
    63d6:	28 e0       	ldi	r18, 0x08	; 8
    63d8:	83 fd       	sbrc	r24, 3
    63da:	df cf       	rjmp	.-66     	; 0x639a <ht1632c_set_brightness+0xda>
    63dc:	b8 cf       	rjmp	.-144    	; 0x634e <ht1632c_set_brightness+0x8e>

000063de <ht1632c_refresh_screen>:
    63de:	81 e0       	ldi	r24, 0x01	; 1
    63e0:	80 93 86 06 	sts	0x0686, r24
    63e4:	98 e0       	ldi	r25, 0x08	; 8
    63e6:	90 93 81 06 	sts	0x0681, r25
    63ea:	84 e0       	ldi	r24, 0x04	; 4
    63ec:	80 93 86 06 	sts	0x0686, r24
    63f0:	90 93 85 06 	sts	0x0685, r25
    63f4:	80 93 85 06 	sts	0x0685, r24
    63f8:	80 93 86 06 	sts	0x0686, r24
    63fc:	90 93 86 06 	sts	0x0686, r25
    6400:	80 93 85 06 	sts	0x0685, r24
    6404:	80 93 86 06 	sts	0x0686, r24
    6408:	90 93 85 06 	sts	0x0685, r25
    640c:	80 93 85 06 	sts	0x0685, r24
    6410:	90 93 86 06 	sts	0x0686, r25
    6414:	90 93 81 06 	sts	0x0681, r25
    6418:	80 93 86 06 	sts	0x0686, r24
    641c:	90 93 86 06 	sts	0x0686, r25
    6420:	80 93 85 06 	sts	0x0685, r24
    6424:	80 93 86 06 	sts	0x0686, r24
    6428:	90 93 86 06 	sts	0x0686, r25
    642c:	80 93 85 06 	sts	0x0685, r24
    6430:	80 93 86 06 	sts	0x0686, r24
    6434:	90 93 86 06 	sts	0x0686, r25
    6438:	80 93 85 06 	sts	0x0685, r24
    643c:	80 93 86 06 	sts	0x0686, r24
    6440:	90 93 86 06 	sts	0x0686, r25
    6444:	80 93 85 06 	sts	0x0685, r24
    6448:	80 93 86 06 	sts	0x0686, r24
    644c:	90 93 86 06 	sts	0x0686, r25
    6450:	80 93 85 06 	sts	0x0685, r24
    6454:	80 93 86 06 	sts	0x0686, r24
    6458:	90 93 86 06 	sts	0x0686, r25
    645c:	80 93 85 06 	sts	0x0685, r24
    6460:	80 93 86 06 	sts	0x0686, r24
    6464:	90 93 86 06 	sts	0x0686, r25
    6468:	80 93 85 06 	sts	0x0685, r24
    646c:	90 93 86 06 	sts	0x0686, r25
    6470:	eb ea       	ldi	r30, 0xAB	; 171
    6472:	f5 e2       	ldi	r31, 0x25	; 37
    6474:	38 e0       	ldi	r19, 0x08	; 8
    6476:	24 e0       	ldi	r18, 0x04	; 4
    6478:	7c c0       	rjmp	.+248    	; 0x6572 <ht1632c_refresh_screen+0x194>
    647a:	30 93 86 06 	sts	0x0686, r19
    647e:	20 93 85 06 	sts	0x0685, r18
    6482:	20 93 86 06 	sts	0x0686, r18
    6486:	95 fd       	sbrc	r25, 5
    6488:	92 c0       	rjmp	.+292    	; 0x65ae <ht1632c_refresh_screen+0x1d0>
    648a:	30 93 86 06 	sts	0x0686, r19
    648e:	20 93 85 06 	sts	0x0685, r18
    6492:	20 93 86 06 	sts	0x0686, r18
    6496:	94 fd       	sbrc	r25, 4
    6498:	92 c0       	rjmp	.+292    	; 0x65be <ht1632c_refresh_screen+0x1e0>
    649a:	30 93 86 06 	sts	0x0686, r19
    649e:	20 93 85 06 	sts	0x0685, r18
    64a2:	20 93 86 06 	sts	0x0686, r18
    64a6:	93 fd       	sbrc	r25, 3
    64a8:	92 c0       	rjmp	.+292    	; 0x65ce <ht1632c_refresh_screen+0x1f0>
    64aa:	30 93 86 06 	sts	0x0686, r19
    64ae:	20 93 85 06 	sts	0x0685, r18
    64b2:	20 93 86 06 	sts	0x0686, r18
    64b6:	92 fd       	sbrc	r25, 2
    64b8:	92 c0       	rjmp	.+292    	; 0x65de <ht1632c_refresh_screen+0x200>
    64ba:	30 93 86 06 	sts	0x0686, r19
    64be:	20 93 85 06 	sts	0x0685, r18
    64c2:	20 93 86 06 	sts	0x0686, r18
    64c6:	91 fd       	sbrc	r25, 1
    64c8:	92 c0       	rjmp	.+292    	; 0x65ee <ht1632c_refresh_screen+0x210>
    64ca:	30 93 86 06 	sts	0x0686, r19
    64ce:	20 93 85 06 	sts	0x0685, r18
    64d2:	20 93 86 06 	sts	0x0686, r18
    64d6:	90 fd       	sbrc	r25, 0
    64d8:	92 c0       	rjmp	.+292    	; 0x65fe <ht1632c_refresh_screen+0x220>
    64da:	30 93 86 06 	sts	0x0686, r19
    64de:	20 93 85 06 	sts	0x0685, r18
    64e2:	20 93 86 06 	sts	0x0686, r18
    64e6:	87 fd       	sbrc	r24, 7
    64e8:	92 c0       	rjmp	.+292    	; 0x660e <ht1632c_refresh_screen+0x230>
    64ea:	30 93 86 06 	sts	0x0686, r19
    64ee:	20 93 85 06 	sts	0x0685, r18
    64f2:	20 93 86 06 	sts	0x0686, r18
    64f6:	86 fd       	sbrc	r24, 6
    64f8:	92 c0       	rjmp	.+292    	; 0x661e <ht1632c_refresh_screen+0x240>
    64fa:	30 93 86 06 	sts	0x0686, r19
    64fe:	20 93 85 06 	sts	0x0685, r18
    6502:	20 93 86 06 	sts	0x0686, r18
    6506:	85 fd       	sbrc	r24, 5
    6508:	92 c0       	rjmp	.+292    	; 0x662e <ht1632c_refresh_screen+0x250>
    650a:	30 93 86 06 	sts	0x0686, r19
    650e:	20 93 85 06 	sts	0x0685, r18
    6512:	20 93 86 06 	sts	0x0686, r18
    6516:	84 fd       	sbrc	r24, 4
    6518:	92 c0       	rjmp	.+292    	; 0x663e <ht1632c_refresh_screen+0x260>
    651a:	30 93 86 06 	sts	0x0686, r19
    651e:	20 93 85 06 	sts	0x0685, r18
    6522:	20 93 86 06 	sts	0x0686, r18
    6526:	83 fd       	sbrc	r24, 3
    6528:	92 c0       	rjmp	.+292    	; 0x664e <ht1632c_refresh_screen+0x270>
    652a:	30 93 86 06 	sts	0x0686, r19
    652e:	20 93 85 06 	sts	0x0685, r18
    6532:	20 93 86 06 	sts	0x0686, r18
    6536:	82 fd       	sbrc	r24, 2
    6538:	92 c0       	rjmp	.+292    	; 0x665e <ht1632c_refresh_screen+0x280>
    653a:	30 93 86 06 	sts	0x0686, r19
    653e:	20 93 85 06 	sts	0x0685, r18
    6542:	20 93 86 06 	sts	0x0686, r18
    6546:	81 fd       	sbrc	r24, 1
    6548:	92 c0       	rjmp	.+292    	; 0x666e <ht1632c_refresh_screen+0x290>
    654a:	30 93 86 06 	sts	0x0686, r19
    654e:	20 93 85 06 	sts	0x0685, r18
    6552:	20 93 86 06 	sts	0x0686, r18
    6556:	80 fd       	sbrc	r24, 0
    6558:	92 c0       	rjmp	.+292    	; 0x667e <ht1632c_refresh_screen+0x2a0>
    655a:	30 93 86 06 	sts	0x0686, r19
    655e:	20 93 85 06 	sts	0x0685, r18
    6562:	30 93 86 06 	sts	0x0686, r19
    6566:	32 96       	adiw	r30, 0x02	; 2
    6568:	85 e2       	ldi	r24, 0x25	; 37
    656a:	eb 3c       	cpi	r30, 0xCB	; 203
    656c:	f8 07       	cpc	r31, r24
    656e:	09 f4       	brne	.+2      	; 0x6572 <ht1632c_refresh_screen+0x194>
    6570:	8c c0       	rjmp	.+280    	; 0x668a <ht1632c_refresh_screen+0x2ac>
    6572:	df 01       	movw	r26, r30
    6574:	11 97       	sbiw	r26, 0x01	; 1
    6576:	8c 91       	ld	r24, X
    6578:	90 e0       	ldi	r25, 0x00	; 0
    657a:	98 2f       	mov	r25, r24
    657c:	88 27       	eor	r24, r24
    657e:	40 81       	ld	r20, Z
    6580:	84 2b       	or	r24, r20
    6582:	30 93 81 06 	sts	0x0681, r19
    6586:	20 93 86 06 	sts	0x0686, r18
    658a:	97 fd       	sbrc	r25, 7
    658c:	7b c0       	rjmp	.+246    	; 0x6684 <ht1632c_refresh_screen+0x2a6>
    658e:	30 93 86 06 	sts	0x0686, r19
    6592:	20 93 85 06 	sts	0x0685, r18
    6596:	20 93 86 06 	sts	0x0686, r18
    659a:	96 ff       	sbrs	r25, 6
    659c:	6e cf       	rjmp	.-292    	; 0x647a <ht1632c_refresh_screen+0x9c>
    659e:	30 93 85 06 	sts	0x0685, r19
    65a2:	20 93 85 06 	sts	0x0685, r18
    65a6:	20 93 86 06 	sts	0x0686, r18
    65aa:	95 ff       	sbrs	r25, 5
    65ac:	6e cf       	rjmp	.-292    	; 0x648a <ht1632c_refresh_screen+0xac>
    65ae:	30 93 85 06 	sts	0x0685, r19
    65b2:	20 93 85 06 	sts	0x0685, r18
    65b6:	20 93 86 06 	sts	0x0686, r18
    65ba:	94 ff       	sbrs	r25, 4
    65bc:	6e cf       	rjmp	.-292    	; 0x649a <ht1632c_refresh_screen+0xbc>
    65be:	30 93 85 06 	sts	0x0685, r19
    65c2:	20 93 85 06 	sts	0x0685, r18
    65c6:	20 93 86 06 	sts	0x0686, r18
    65ca:	93 ff       	sbrs	r25, 3
    65cc:	6e cf       	rjmp	.-292    	; 0x64aa <ht1632c_refresh_screen+0xcc>
    65ce:	30 93 85 06 	sts	0x0685, r19
    65d2:	20 93 85 06 	sts	0x0685, r18
    65d6:	20 93 86 06 	sts	0x0686, r18
    65da:	92 ff       	sbrs	r25, 2
    65dc:	6e cf       	rjmp	.-292    	; 0x64ba <ht1632c_refresh_screen+0xdc>
    65de:	30 93 85 06 	sts	0x0685, r19
    65e2:	20 93 85 06 	sts	0x0685, r18
    65e6:	20 93 86 06 	sts	0x0686, r18
    65ea:	91 ff       	sbrs	r25, 1
    65ec:	6e cf       	rjmp	.-292    	; 0x64ca <ht1632c_refresh_screen+0xec>
    65ee:	30 93 85 06 	sts	0x0685, r19
    65f2:	20 93 85 06 	sts	0x0685, r18
    65f6:	20 93 86 06 	sts	0x0686, r18
    65fa:	90 ff       	sbrs	r25, 0
    65fc:	6e cf       	rjmp	.-292    	; 0x64da <ht1632c_refresh_screen+0xfc>
    65fe:	30 93 85 06 	sts	0x0685, r19
    6602:	20 93 85 06 	sts	0x0685, r18
    6606:	20 93 86 06 	sts	0x0686, r18
    660a:	87 ff       	sbrs	r24, 7
    660c:	6e cf       	rjmp	.-292    	; 0x64ea <ht1632c_refresh_screen+0x10c>
    660e:	30 93 85 06 	sts	0x0685, r19
    6612:	20 93 85 06 	sts	0x0685, r18
    6616:	20 93 86 06 	sts	0x0686, r18
    661a:	86 ff       	sbrs	r24, 6
    661c:	6e cf       	rjmp	.-292    	; 0x64fa <ht1632c_refresh_screen+0x11c>
    661e:	30 93 85 06 	sts	0x0685, r19
    6622:	20 93 85 06 	sts	0x0685, r18
    6626:	20 93 86 06 	sts	0x0686, r18
    662a:	85 ff       	sbrs	r24, 5
    662c:	6e cf       	rjmp	.-292    	; 0x650a <ht1632c_refresh_screen+0x12c>
    662e:	30 93 85 06 	sts	0x0685, r19
    6632:	20 93 85 06 	sts	0x0685, r18
    6636:	20 93 86 06 	sts	0x0686, r18
    663a:	84 ff       	sbrs	r24, 4
    663c:	6e cf       	rjmp	.-292    	; 0x651a <ht1632c_refresh_screen+0x13c>
    663e:	30 93 85 06 	sts	0x0685, r19
    6642:	20 93 85 06 	sts	0x0685, r18
    6646:	20 93 86 06 	sts	0x0686, r18
    664a:	83 ff       	sbrs	r24, 3
    664c:	6e cf       	rjmp	.-292    	; 0x652a <ht1632c_refresh_screen+0x14c>
    664e:	30 93 85 06 	sts	0x0685, r19
    6652:	20 93 85 06 	sts	0x0685, r18
    6656:	20 93 86 06 	sts	0x0686, r18
    665a:	82 ff       	sbrs	r24, 2
    665c:	6e cf       	rjmp	.-292    	; 0x653a <ht1632c_refresh_screen+0x15c>
    665e:	30 93 85 06 	sts	0x0685, r19
    6662:	20 93 85 06 	sts	0x0685, r18
    6666:	20 93 86 06 	sts	0x0686, r18
    666a:	81 ff       	sbrs	r24, 1
    666c:	6e cf       	rjmp	.-292    	; 0x654a <ht1632c_refresh_screen+0x16c>
    666e:	30 93 85 06 	sts	0x0685, r19
    6672:	20 93 85 06 	sts	0x0685, r18
    6676:	20 93 86 06 	sts	0x0686, r18
    667a:	80 ff       	sbrs	r24, 0
    667c:	6e cf       	rjmp	.-292    	; 0x655a <ht1632c_refresh_screen+0x17c>
    667e:	30 93 85 06 	sts	0x0685, r19
    6682:	6d cf       	rjmp	.-294    	; 0x655e <ht1632c_refresh_screen+0x180>
    6684:	30 93 85 06 	sts	0x0685, r19
    6688:	84 cf       	rjmp	.-248    	; 0x6592 <ht1632c_refresh_screen+0x1b4>
    668a:	81 e0       	ldi	r24, 0x01	; 1
    668c:	80 93 85 06 	sts	0x0685, r24
    6690:	08 95       	ret

00006692 <ht1632c_clear_screen>:
}

void ht1632c_clear_screen() {
    6692:	80 e2       	ldi	r24, 0x20	; 32
    6694:	ea ea       	ldi	r30, 0xAA	; 170
    6696:	f5 e2       	ldi	r31, 0x25	; 37
    6698:	df 01       	movw	r26, r30
    669a:	1d 92       	st	X+, r1
    669c:	8a 95       	dec	r24
    669e:	e9 f7       	brne	.-6      	; 0x669a <ht1632c_clear_screen+0x8>

	for (uint8_t i=0; i<(WIDTH*HEIGHT/8); i++) {
		ledmatrix[i] = 0;
	}
	ht1632c_refresh_screen();
    66a0:	9e ce       	rjmp	.-708    	; 0x63de <ht1632c_refresh_screen>

000066a2 <jsmn_init>:

/**
 * Creates a new parser based over a given  buffer with an array of tokens
 * available.
 */
void jsmn_init(jsmn_parser *parser) {
    66a2:	fc 01       	movw	r30, r24
	parser->pos = 0;
    66a4:	10 82       	st	Z, r1
    66a6:	11 82       	std	Z+1, r1	; 0x01
	parser->toknext = 0;
    66a8:	12 82       	std	Z+2, r1	; 0x02
    66aa:	13 82       	std	Z+3, r1	; 0x03
	parser->toksuper = -1;
    66ac:	8f ef       	ldi	r24, 0xFF	; 255
    66ae:	9f ef       	ldi	r25, 0xFF	; 255
    66b0:	84 83       	std	Z+4, r24	; 0x04
    66b2:	95 83       	std	Z+5, r25	; 0x05
    66b4:	08 95       	ret

000066b6 <main>:
		}
		ht1632_fade(reg01/400);
	}
}

int main(void) {
    66b6:	cf 93       	push	r28
    66b8:	df 93       	push	r29
    66ba:	cd b7       	in	r28, 0x3d	; 61
    66bc:	de b7       	in	r29, 0x3e	; 62
    66be:	26 97       	sbiw	r28, 0x06	; 6
    66c0:	cd bf       	out	0x3d, r28	; 61
    66c2:	de bf       	out	0x3e, r29	; 62
	jsmntok_t tokens[10];
	jsmnerr_t r;
	
	esp8266_status_t status;
	
	clock_setup_32_mhz_pll();
    66c4:	0e 94 55 01 	call	0x2aa	; 0x2aa <clock_setup_32_mhz_pll>
	ht1632c_setup(HT1632_COMMON_16NMOS);
    66c8:	84 e2       	ldi	r24, 0x24	; 36
    66ca:	4d db       	rcall	.-2406   	; 0x5d66 <ht1632c_setup>
	ht1632c_set_brightness(0);
    66cc:	80 e0       	ldi	r24, 0x00	; 0
    66ce:	f8 dd       	rcall	.-1040   	; 0x62c0 <ht1632c_set_brightness>
	ht1632c_clear_screen();
    66d0:	e0 df       	rcall	.-64     	; 0x6692 <ht1632c_clear_screen>
	
	//adc_setup();
	uart_setup();
    66d2:	6b d3       	rcall	.+1750   	; 0x6daa <uart_setup>
void uart_put_char(char c);
static FILE mystdout = FDEV_SETUP_STREAM(uart_put_char,uart_get_char,_FDEV_SETUP_WRITE);

void pmic_setup(void) {
	
	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_HILVLEN_bm;
    66d4:	87 e0       	ldi	r24, 0x07	; 7
    66d6:	80 93 a2 00 	sts	0x00A2, r24
	ht1632c_clear_screen();
	
	//adc_setup();
	uart_setup();
	pmic_setup();
	twi_setup(&TWIC);
    66da:	80 e8       	ldi	r24, 0x80	; 128
    66dc:	94 e0       	ldi	r25, 0x04	; 4
    66de:	83 d1       	rcall	.+774    	; 0x69e6 <twi_setup>
	si114x_reset(SI114X_ADDR);
    66e0:	8a e5       	ldi	r24, 0x5A	; 90
    66e2:	90 e0       	ldi	r25, 0x00	; 0
    66e4:	dc d2       	rcall	.+1464   	; 0x6c9e <si114x_reset>
	//si114x_setup();
	//tcc_setup();
	//btn_setup();
	//rtc_setup();
	//rtc_init_time();
	jsmn_init(&p);
    66e6:	ce 01       	movw	r24, r28
    66e8:	01 96       	adiw	r24, 0x01	; 1
    66ea:	db df       	rcall	.-74     	; 0x66a2 <jsmn_init>
	
	stdout = stdin = &mystdout;
    66ec:	85 e0       	ldi	r24, 0x05	; 5
    66ee:	90 e2       	ldi	r25, 0x20	; 32
    66f0:	80 93 51 2f 	sts	0x2F51, r24
    66f4:	90 93 52 2f 	sts	0x2F52, r25
    66f8:	80 93 53 2f 	sts	0x2F53, r24
    66fc:	90 93 54 2f 	sts	0x2F54, r25
	puts("LED MATRIX Clock - By: Erlend Hestnes\r\n");
    6700:	88 e6       	ldi	r24, 0x68	; 104
    6702:	91 e2       	ldi	r25, 0x21	; 33
    6704:	6b d5       	rcall	.+2774   	; 0x71dc <puts>
		f_close(&Fil);
	}	
}

static inline void sd_card(void) {
	f_mount(&FatFs, "", 0);
    6706:	40 e0       	ldi	r20, 0x00	; 0
    6708:	6f e1       	ldi	r22, 0x1F	; 31
    670a:	70 e2       	ldi	r23, 0x20	; 32
    670c:	88 ed       	ldi	r24, 0xD8	; 216
    670e:	96 e2       	ldi	r25, 0x26	; 38
    6710:	0e 94 27 1c 	call	0x384e	; 0x384e <f_mount>
	
	if (f_open(&Fil, "website2.txt", FA_READ | FA_OPEN_EXISTING) == FR_OK) {
    6714:	41 e0       	ldi	r20, 0x01	; 1
    6716:	60 e9       	ldi	r22, 0x90	; 144
    6718:	71 e2       	ldi	r23, 0x21	; 33
    671a:	89 e2       	ldi	r24, 0x29	; 41
    671c:	9f e2       	ldi	r25, 0x2F	; 47
    671e:	0e 94 8c 1c 	call	0x3918	; 0x3918 <f_open>
    6722:	88 23       	and	r24, r24
    6724:	81 f0       	breq	.+32     	; 0x6746 <main+0x90>
		puts("Reading...");
		f_read(&Fil,Buff,1024,&bw);
		f_close(&Fil);
	}
	puts("Read done:");
    6726:	88 ea       	ldi	r24, 0xA8	; 168
    6728:	91 e2       	ldi	r25, 0x21	; 33
    672a:	58 d5       	rcall	.+2736   	; 0x71dc <puts>
	puts(Buff);
    672c:	8a e0       	ldi	r24, 0x0A	; 10
    672e:	99 e2       	ldi	r25, 0x29	; 41
    6730:	55 d5       	rcall	.+2730   	; 0x71dc <puts>

	//rtc_set_time(18,50,0);
	
	sd_card();
	
	sei();
    6732:	78 94       	sei
	
	//sd_card();
	
	esp8266_on();
    6734:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <esp8266_on>
	esp8266_setup_webserver();
    6738:	0e 94 18 02 	call	0x430	; 0x430 <esp8266_setup_webserver>
	uint8_t flip = 1;

	while (1) {
		
		//ht1632c_scroll_print("16:04",4,4);
		esp8266_run_simple_webserver(Buff);
    673c:	8a e0       	ldi	r24, 0x0A	; 10
    673e:	99 e2       	ldi	r25, 0x29	; 41
    6740:	0e 94 0a 03 	call	0x614	; 0x614 <esp8266_run_simple_webserver>
    6744:	fb cf       	rjmp	.-10     	; 0x673c <main+0x86>

static inline void sd_card(void) {
	f_mount(&FatFs, "", 0);
	
	if (f_open(&Fil, "website2.txt", FA_READ | FA_OPEN_EXISTING) == FR_OK) {
		puts("Reading...");
    6746:	8d e9       	ldi	r24, 0x9D	; 157
    6748:	91 e2       	ldi	r25, 0x21	; 33
    674a:	48 d5       	rcall	.+2704   	; 0x71dc <puts>
		f_read(&Fil,Buff,1024,&bw);
    674c:	27 e2       	ldi	r18, 0x27	; 39
    674e:	3f e2       	ldi	r19, 0x2F	; 47
    6750:	40 e0       	ldi	r20, 0x00	; 0
    6752:	54 e0       	ldi	r21, 0x04	; 4
    6754:	6a e0       	ldi	r22, 0x0A	; 10
    6756:	79 e2       	ldi	r23, 0x29	; 41
    6758:	89 e2       	ldi	r24, 0x29	; 41
    675a:	9f e2       	ldi	r25, 0x2F	; 47
    675c:	0e 94 ac 25 	call	0x4b58	; 0x4b58 <f_read>
		f_close(&Fil);
    6760:	89 e2       	ldi	r24, 0x29	; 41
    6762:	9f e2       	ldi	r25, 0x2F	; 47
    6764:	0e 94 2f 28 	call	0x505e	; 0x505e <f_close>
    6768:	de cf       	rjmp	.-68     	; 0x6726 <main+0x70>

0000676a <__vector_20>:
		//rtc_update_display_alt();
	}
}

//Used for SI114x Timestamp
ISR(TCC1_OVF_vect) {
    676a:	1f 92       	push	r1
    676c:	0f 92       	push	r0
    676e:	0f b6       	in	r0, 0x3f	; 63
    6770:	0f 92       	push	r0
    6772:	11 24       	eor	r1, r1
    6774:	8f 93       	push	r24
    6776:	9f 93       	push	r25
	counter++;
    6778:	80 91 da 25 	lds	r24, 0x25DA
    677c:	90 91 db 25 	lds	r25, 0x25DB
    6780:	01 96       	adiw	r24, 0x01	; 1
    6782:	80 93 da 25 	sts	0x25DA, r24
    6786:	90 93 db 25 	sts	0x25DB, r25
}
    678a:	9f 91       	pop	r25
    678c:	8f 91       	pop	r24
    678e:	0f 90       	pop	r0
    6790:	0f be       	out	0x3f, r0	; 63
    6792:	0f 90       	pop	r0
    6794:	1f 90       	pop	r1
    6796:	18 95       	reti

00006798 <__vector_66>:
	} else {
		return NONE;
	}
}

ISR(PORTA_INT0_vect) {
    6798:	1f 92       	push	r1
    679a:	0f 92       	push	r0
    679c:	0f b6       	in	r0, 0x3f	; 63
    679e:	0f 92       	push	r0
    67a0:	11 24       	eor	r1, r1
    67a2:	0b b6       	in	r0, 0x3b	; 59
    67a4:	0f 92       	push	r0
    67a6:	2f 93       	push	r18
    67a8:	3f 93       	push	r19
    67aa:	4f 93       	push	r20
    67ac:	5f 93       	push	r21
    67ae:	6f 93       	push	r22
    67b0:	7f 93       	push	r23
    67b2:	8f 93       	push	r24
    67b4:	9f 93       	push	r25
    67b6:	af 93       	push	r26
    67b8:	bf 93       	push	r27
    67ba:	ef 93       	push	r30
    67bc:	ff 93       	push	r31
	PORTC.INTCTRL = PORT_INT0LVL_LO_gc;
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
    67be:	80 91 08 06 	lds	r24, 0x0608
    67c2:	85 ff       	sbrs	r24, 5
    67c4:	2d c0       	rjmp	.+90     	; 0x6820 <__vector_66+0x88>
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
    67c6:	80 91 08 06 	lds	r24, 0x0608
    67ca:	86 fd       	sbrc	r24, 6
    67cc:	23 c0       	rjmp	.+70     	; 0x6814 <__vector_66+0x7c>
		return BTN2;
    67ce:	82 e0       	ldi	r24, 0x02	; 2
		return NONE;
	}
}

ISR(PORTA_INT0_vect) {
	btn_status = btn_check_press();
    67d0:	80 93 26 2f 	sts	0x2F26, r24
	printf("%d",btn_status);
    67d4:	80 91 26 2f 	lds	r24, 0x2F26
    67d8:	1f 92       	push	r1
    67da:	8f 93       	push	r24
    67dc:	86 e7       	ldi	r24, 0x76	; 118
    67de:	90 e2       	ldi	r25, 0x20	; 32
    67e0:	9f 93       	push	r25
    67e2:	8f 93       	push	r24
    67e4:	ea d4       	rcall	.+2516   	; 0x71ba <printf>
    67e6:	0f 90       	pop	r0
    67e8:	0f 90       	pop	r0
    67ea:	0f 90       	pop	r0
    67ec:	0f 90       	pop	r0
}
    67ee:	ff 91       	pop	r31
    67f0:	ef 91       	pop	r30
    67f2:	bf 91       	pop	r27
    67f4:	af 91       	pop	r26
    67f6:	9f 91       	pop	r25
    67f8:	8f 91       	pop	r24
    67fa:	7f 91       	pop	r23
    67fc:	6f 91       	pop	r22
    67fe:	5f 91       	pop	r21
    6800:	4f 91       	pop	r20
    6802:	3f 91       	pop	r19
    6804:	2f 91       	pop	r18
    6806:	0f 90       	pop	r0
    6808:	0b be       	out	0x3b, r0	; 59
    680a:	0f 90       	pop	r0
    680c:	0f be       	out	0x3f, r0	; 63
    680e:	0f 90       	pop	r0
    6810:	1f 90       	pop	r1
    6812:	18 95       	reti
	
	if (!(PORTA.IN & BUTTON0)) {
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
    6814:	80 91 08 06 	lds	r24, 0x0608
    6818:	87 fd       	sbrc	r24, 7
    681a:	04 c0       	rjmp	.+8      	; 0x6824 <__vector_66+0x8c>
		return BTN3;
    681c:	83 e0       	ldi	r24, 0x03	; 3
    681e:	d8 cf       	rjmp	.-80     	; 0x67d0 <__vector_66+0x38>
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
		return BTN1;
    6820:	81 e0       	ldi	r24, 0x01	; 1
    6822:	d6 cf       	rjmp	.-84     	; 0x67d0 <__vector_66+0x38>
	} else if (!(PORTA.IN & BUTTON1)) {
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
		return BTN3;
	} else if (!(PORTB.IN & BUTTON3)) {
    6824:	80 91 28 06 	lds	r24, 0x0628
    6828:	80 fd       	sbrc	r24, 0
    682a:	02 c0       	rjmp	.+4      	; 0x6830 <__vector_66+0x98>
		return BTN4;
    682c:	84 e0       	ldi	r24, 0x04	; 4
    682e:	d0 cf       	rjmp	.-96     	; 0x67d0 <__vector_66+0x38>
	} else {
		return NONE;
    6830:	80 e0       	ldi	r24, 0x00	; 0
    6832:	ce cf       	rjmp	.-100    	; 0x67d0 <__vector_66+0x38>

00006834 <__vector_34>:
ISR(PORTA_INT0_vect) {
	btn_status = btn_check_press();
	printf("%d",btn_status);
}

ISR(PORTB_INT0_vect) {
    6834:	1f 92       	push	r1
    6836:	0f 92       	push	r0
    6838:	0f b6       	in	r0, 0x3f	; 63
    683a:	0f 92       	push	r0
    683c:	11 24       	eor	r1, r1
    683e:	0b b6       	in	r0, 0x3b	; 59
    6840:	0f 92       	push	r0
    6842:	2f 93       	push	r18
    6844:	3f 93       	push	r19
    6846:	4f 93       	push	r20
    6848:	5f 93       	push	r21
    684a:	6f 93       	push	r22
    684c:	7f 93       	push	r23
    684e:	8f 93       	push	r24
    6850:	9f 93       	push	r25
    6852:	af 93       	push	r26
    6854:	bf 93       	push	r27
    6856:	ef 93       	push	r30
    6858:	ff 93       	push	r31
	PORTC.INTCTRL = PORT_INT0LVL_LO_gc;
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
    685a:	80 91 08 06 	lds	r24, 0x0608
    685e:	85 ff       	sbrs	r24, 5
    6860:	2d c0       	rjmp	.+90     	; 0x68bc <__vector_34+0x88>
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
    6862:	80 91 08 06 	lds	r24, 0x0608
    6866:	86 fd       	sbrc	r24, 6
    6868:	23 c0       	rjmp	.+70     	; 0x68b0 <__vector_34+0x7c>
		return BTN2;
    686a:	82 e0       	ldi	r24, 0x02	; 2
	btn_status = btn_check_press();
	printf("%d",btn_status);
}

ISR(PORTB_INT0_vect) {
	btn_status = btn_check_press();
    686c:	80 93 26 2f 	sts	0x2F26, r24
	printf("%d",btn_status);
    6870:	80 91 26 2f 	lds	r24, 0x2F26
    6874:	1f 92       	push	r1
    6876:	8f 93       	push	r24
    6878:	86 e7       	ldi	r24, 0x76	; 118
    687a:	90 e2       	ldi	r25, 0x20	; 32
    687c:	9f 93       	push	r25
    687e:	8f 93       	push	r24
    6880:	9c d4       	rcall	.+2360   	; 0x71ba <printf>
    6882:	0f 90       	pop	r0
    6884:	0f 90       	pop	r0
    6886:	0f 90       	pop	r0
    6888:	0f 90       	pop	r0
    688a:	ff 91       	pop	r31
    688c:	ef 91       	pop	r30
    688e:	bf 91       	pop	r27
    6890:	af 91       	pop	r26
    6892:	9f 91       	pop	r25
    6894:	8f 91       	pop	r24
    6896:	7f 91       	pop	r23
    6898:	6f 91       	pop	r22
    689a:	5f 91       	pop	r21
    689c:	4f 91       	pop	r20
    689e:	3f 91       	pop	r19
    68a0:	2f 91       	pop	r18
    68a2:	0f 90       	pop	r0
    68a4:	0b be       	out	0x3b, r0	; 59
    68a6:	0f 90       	pop	r0
    68a8:	0f be       	out	0x3f, r0	; 63
    68aa:	0f 90       	pop	r0
    68ac:	1f 90       	pop	r1
    68ae:	18 95       	reti
	
	if (!(PORTA.IN & BUTTON0)) {
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
    68b0:	80 91 08 06 	lds	r24, 0x0608
    68b4:	87 fd       	sbrc	r24, 7
    68b6:	04 c0       	rjmp	.+8      	; 0x68c0 <__vector_34+0x8c>
		return BTN3;
    68b8:	83 e0       	ldi	r24, 0x03	; 3
    68ba:	d8 cf       	rjmp	.-80     	; 0x686c <__vector_34+0x38>
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
		return BTN1;
    68bc:	81 e0       	ldi	r24, 0x01	; 1
    68be:	d6 cf       	rjmp	.-84     	; 0x686c <__vector_34+0x38>
	} else if (!(PORTA.IN & BUTTON1)) {
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
		return BTN3;
	} else if (!(PORTB.IN & BUTTON3)) {
    68c0:	80 91 28 06 	lds	r24, 0x0628
    68c4:	80 fd       	sbrc	r24, 0
    68c6:	02 c0       	rjmp	.+4      	; 0x68cc <__vector_34+0x98>
		return BTN4;
    68c8:	84 e0       	ldi	r24, 0x04	; 4
    68ca:	d0 cf       	rjmp	.-96     	; 0x686c <__vector_34+0x38>
	} else {
		return NONE;
    68cc:	80 e0       	ldi	r24, 0x00	; 0
    68ce:	ce cf       	rjmp	.-100    	; 0x686c <__vector_34+0x38>

000068d0 <__vector_10>:
	strcat(buffer,buffer_minutes);
	
	ht1632c_scroll_print(buffer,2,2);
}

ISR(RTC_OVF_vect) {
    68d0:	1f 92       	push	r1
    68d2:	0f 92       	push	r0
    68d4:	0f b6       	in	r0, 0x3f	; 63
    68d6:	0f 92       	push	r0
    68d8:	11 24       	eor	r1, r1
    68da:	2f 93       	push	r18
    68dc:	3f 93       	push	r19
    68de:	4f 93       	push	r20
    68e0:	5f 93       	push	r21
    68e2:	6f 93       	push	r22
    68e4:	7f 93       	push	r23
    68e6:	8f 93       	push	r24
    68e8:	9f 93       	push	r25
    68ea:	af 93       	push	r26
    68ec:	bf 93       	push	r27
    68ee:	ef 93       	push	r30
	if (++time.seconds == 60) {
    68f0:	80 91 49 2f 	lds	r24, 0x2F49
    68f4:	8f 5f       	subi	r24, 0xFF	; 255
    68f6:	80 93 49 2f 	sts	0x2F49, r24
    68fa:	8c 33       	cpi	r24, 0x3C	; 60
    68fc:	81 f0       	breq	.+32     	; 0x691e <__vector_10+0x4e>
			time.minutes = 0;
		} else {
			//rtc_update_display(BOTTOM,time.minutes);
		}
	}
}
    68fe:	ef 91       	pop	r30
    6900:	bf 91       	pop	r27
    6902:	af 91       	pop	r26
    6904:	9f 91       	pop	r25
    6906:	8f 91       	pop	r24
    6908:	7f 91       	pop	r23
    690a:	6f 91       	pop	r22
    690c:	5f 91       	pop	r21
    690e:	4f 91       	pop	r20
    6910:	3f 91       	pop	r19
    6912:	2f 91       	pop	r18
    6914:	0f 90       	pop	r0
    6916:	0f be       	out	0x3f, r0	; 63
    6918:	0f 90       	pop	r0
    691a:	1f 90       	pop	r1
    691c:	18 95       	reti
}

ISR(RTC_OVF_vect) {
	if (++time.seconds == 60) {
		
		time.seconds = 0;
    691e:	10 92 49 2f 	sts	0x2F49, r1
			
		if (++time.minutes == 60) {
    6922:	80 91 4a 2f 	lds	r24, 0x2F4A
    6926:	8f 5f       	subi	r24, 0xFF	; 255
    6928:	80 93 4a 2f 	sts	0x2F4A, r24
    692c:	8c 33       	cpi	r24, 0x3C	; 60
    692e:	39 f7       	brne	.-50     	; 0x68fe <__vector_10+0x2e>
			
			time.minutes = 0;
    6930:	10 92 4a 2f 	sts	0x2F4A, r1
			//rtc_update_display(BOTTOM,time.minutes);
			
			if (++time.hours == 24) {
    6934:	80 91 4b 2f 	lds	r24, 0x2F4B
    6938:	8f 5f       	subi	r24, 0xFF	; 255
    693a:	80 93 4b 2f 	sts	0x2F4B, r24
    693e:	88 31       	cpi	r24, 0x18	; 24
    6940:	f1 f6       	brne	.-68     	; 0x68fe <__vector_10+0x2e>
				time.weeks += (++time.days)/7;
    6942:	e0 91 4e 2f 	lds	r30, 0x2F4E
    6946:	40 91 4c 2f 	lds	r20, 0x2F4C
    694a:	50 91 4d 2f 	lds	r21, 0x2F4D
    694e:	4f 5f       	subi	r20, 0xFF	; 255
    6950:	5f 4f       	sbci	r21, 0xFF	; 255
    6952:	40 93 4c 2f 	sts	0x2F4C, r20
    6956:	50 93 4d 2f 	sts	0x2F4D, r21
    695a:	9a 01       	movw	r18, r20
    695c:	a3 e9       	ldi	r26, 0x93	; 147
    695e:	b4 e2       	ldi	r27, 0x24	; 36
    6960:	f2 d3       	rcall	.+2020   	; 0x7146 <__umulhisi3>
    6962:	28 1b       	sub	r18, r24
    6964:	39 0b       	sbc	r19, r25
    6966:	36 95       	lsr	r19
    6968:	27 95       	ror	r18
    696a:	28 0f       	add	r18, r24
    696c:	39 1f       	adc	r19, r25
    696e:	36 95       	lsr	r19
    6970:	27 95       	ror	r18
    6972:	36 95       	lsr	r19
    6974:	27 95       	ror	r18
    6976:	e2 0f       	add	r30, r18
    6978:	e0 93 4e 2f 	sts	0x2F4E, r30
				time.years += time.weeks/52;
    697c:	8f e4       	ldi	r24, 0x4F	; 79
    697e:	e8 9f       	mul	r30, r24
    6980:	e1 2d       	mov	r30, r1
    6982:	11 24       	eor	r1, r1
    6984:	e2 95       	swap	r30
    6986:	ef 70       	andi	r30, 0x0F	; 15
    6988:	80 91 4f 2f 	lds	r24, 0x2F4F
    698c:	90 91 50 2f 	lds	r25, 0x2F50
    6990:	8e 0f       	add	r24, r30
    6992:	91 1d       	adc	r25, r1
    6994:	80 93 4f 2f 	sts	0x2F4F, r24
    6998:	90 93 50 2f 	sts	0x2F50, r25
				time.hours = 0;
    699c:	10 92 4b 2f 	sts	0x2F4B, r1
    69a0:	ae cf       	rjmp	.-164    	; 0x68fe <__vector_10+0x2e>

000069a2 <spi_on>:
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
	else
	TWI->MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;

	return true;
}
    69a2:	e0 e4       	ldi	r30, 0x40	; 64
    69a4:	f6 e0       	ldi	r31, 0x06	; 6
    69a6:	80 eb       	ldi	r24, 0xB0	; 176
    69a8:	81 83       	std	Z+1, r24	; 0x01
    69aa:	80 e1       	ldi	r24, 0x10	; 16
    69ac:	85 83       	std	Z+5, r24	; 0x05
    69ae:	80 ed       	ldi	r24, 0xD0	; 208
    69b0:	80 93 c0 08 	sts	0x08C0, r24
    69b4:	08 95       	ret

000069b6 <spi_off>:
    69b6:	e0 ec       	ldi	r30, 0xC0	; 192
    69b8:	f8 e0       	ldi	r31, 0x08	; 8
    69ba:	80 81       	ld	r24, Z
    69bc:	8f 7b       	andi	r24, 0xBF	; 191
    69be:	80 83       	st	Z, r24
    69c0:	e0 e4       	ldi	r30, 0x40	; 64
    69c2:	f6 e0       	ldi	r31, 0x06	; 6
    69c4:	80 eb       	ldi	r24, 0xB0	; 176
    69c6:	82 83       	std	Z+2, r24	; 0x02
    69c8:	88 e1       	ldi	r24, 0x18	; 24
    69ca:	84 8b       	std	Z+20, r24	; 0x14
    69cc:	85 8b       	std	Z+21, r24	; 0x15
    69ce:	86 8b       	std	Z+22, r24	; 0x16
    69d0:	87 8b       	std	Z+23, r24	; 0x17
    69d2:	08 95       	ret

000069d4 <spi_wr_rd>:
    69d4:	80 93 c3 08 	sts	0x08C3, r24
    69d8:	80 91 c2 08 	lds	r24, 0x08C2
    69dc:	87 ff       	sbrs	r24, 7
    69de:	fc cf       	rjmp	.-8      	; 0x69d8 <spi_wr_rd+0x4>
    69e0:	80 91 c3 08 	lds	r24, 0x08C3
    69e4:	08 95       	ret

000069e6 <twi_setup>:
    69e6:	e0 e8       	ldi	r30, 0x80	; 128
    69e8:	f4 e0       	ldi	r31, 0x04	; 4
    69ea:	12 82       	std	Z+2, r1	; 0x02
    69ec:	89 e0       	ldi	r24, 0x09	; 9
    69ee:	85 83       	std	Z+5, r24	; 0x05
    69f0:	88 e0       	ldi	r24, 0x08	; 8
    69f2:	81 83       	std	Z+1, r24	; 0x01
    69f4:	81 e0       	ldi	r24, 0x01	; 1
    69f6:	84 83       	std	Z+4, r24	; 0x04
    69f8:	08 95       	ret

000069fa <twi_read_packet>:
const uint8_t slave_address,
const uint8_t timeout_ms,
const uint8_t reg,
uint8_t* data,
uint8_t length)
{
    69fa:	ef 92       	push	r14
    69fc:	0f 93       	push	r16
    69fe:	1f 93       	push	r17
    6a00:	dc 01       	movw	r26, r24
	uint8_t error_code;
	uint8_t len = length;

	if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_WRITE,
    6a02:	76 2f       	mov	r23, r22
    6a04:	77 0f       	add	r23, r23
const uint8_t slave_address, 
const uint8_t timeout_ms)
{
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;
    6a06:	16 96       	adiw	r26, 0x06	; 6
    6a08:	7c 93       	st	X, r23
    6a0a:	16 97       	sbiw	r26, 0x06	; 6

	timeout_remaining = (timeout_ms * 100);
    6a0c:	84 e6       	ldi	r24, 0x64	; 100
    6a0e:	48 9f       	mul	r20, r24
    6a10:	a0 01       	movw	r20, r0
    6a12:	11 24       	eor	r1, r1
	while (timeout_remaining)
    6a14:	41 15       	cp	r20, r1
    6a16:	51 05       	cpc	r21, r1
    6a18:	01 f1       	breq	.+64     	; 0x6a5a <twi_read_packet+0x60>
    6a1a:	fa 01       	movw	r30, r20
    6a1c:	0d c0       	rjmp	.+26     	; 0x6a38 <twi_read_packet+0x3e>

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
		{
			TWI->MASTER.ADDR = slave_address;
		}
		else if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm))
    6a1e:	39 2f       	mov	r19, r25
    6a20:	30 75       	andi	r19, 0x50	; 80
    6a22:	30 35       	cpi	r19, 0x50	; 80
    6a24:	f9 f0       	breq	.+62     	; 0x6a64 <twi_read_packet+0x6a>
		{
			twi_stop_transmission(TWI);
			return TWI_ERROR_SLAVE_RESPONSE_TIMEOUT;
		}
		else if (status & (TWI_MASTER_WIF_bm | TWI_MASTER_RIF_bm))
    6a26:	90 7c       	andi	r25, 0xC0	; 192
    6a28:	29 f5       	brne	.+74     	; 0x6a74 <twi_read_packet+0x7a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    6a2a:	8a e6       	ldi	r24, 0x6A	; 106
    6a2c:	8a 95       	dec	r24
    6a2e:	f1 f7       	brne	.-4      	; 0x6a2c <twi_read_packet+0x32>
    6a30:	00 c0       	rjmp	.+0      	; 0x6a32 <twi_read_packet+0x38>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    6a32:	31 97       	sbiw	r30, 0x01	; 1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    6a34:	30 97       	sbiw	r30, 0x00	; 0
    6a36:	89 f0       	breq	.+34     	; 0x6a5a <twi_read_packet+0x60>
	{
		uint8_t status = TWI->MASTER.STATUS;
    6a38:	14 96       	adiw	r26, 0x04	; 4
    6a3a:	9c 91       	ld	r25, X
    6a3c:	14 97       	sbiw	r26, 0x04	; 4

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
    6a3e:	39 2f       	mov	r19, r25
    6a40:	38 74       	andi	r19, 0x48	; 72
    6a42:	38 34       	cpi	r19, 0x48	; 72
    6a44:	61 f7       	brne	.-40     	; 0x6a1e <twi_read_packet+0x24>
		{
			TWI->MASTER.ADDR = slave_address;
    6a46:	16 96       	adiw	r26, 0x06	; 6
    6a48:	7c 93       	st	X, r23
    6a4a:	16 97       	sbiw	r26, 0x06	; 6
    6a4c:	8a e6       	ldi	r24, 0x6A	; 106
    6a4e:	8a 95       	dec	r24
    6a50:	f1 f7       	brne	.-4      	; 0x6a4e <twi_read_packet+0x54>
    6a52:	00 c0       	rjmp	.+0      	; 0x6a54 <twi_read_packet+0x5a>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    6a54:	31 97       	sbiw	r30, 0x01	; 1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    6a56:	30 97       	sbiw	r30, 0x00	; 0
    6a58:	79 f7       	brne	.-34     	; 0x6a38 <twi_read_packet+0x3e>
		_delay_us(10);
		timeout_remaining--;
	}

	if (!(timeout_remaining)) {
		if (TWI->MASTER.STATUS & TWI_MASTER_CLKHOLD_bm) {
    6a5a:	14 96       	adiw	r26, 0x04	; 4
    6a5c:	8c 91       	ld	r24, X
    6a5e:	14 97       	sbiw	r26, 0x04	; 4
    6a60:	85 ff       	sbrs	r24, 5
    6a62:	03 c0       	rjmp	.+6      	; 0x6a6a <twi_read_packet+0x70>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    6a64:	87 e0       	ldi	r24, 0x07	; 7
    6a66:	13 96       	adiw	r26, 0x03	; 3
    6a68:	8c 93       	st	X, r24
		}

		twi_stop_transmission(TWI);
	}

	return len;
    6a6a:	8e 2d       	mov	r24, r14
}
    6a6c:	1f 91       	pop	r17
    6a6e:	0f 91       	pop	r16
    6a70:	ef 90       	pop	r14
    6a72:	08 95       	ret
}

uint8_t twi_send_byte(TWI_t* const TWI, 
const uint8_t data)
{
	TWI->MASTER.DATA = data;
    6a74:	17 96       	adiw	r26, 0x07	; 7
    6a76:	2c 93       	st	X, r18
    6a78:	17 97       	sbiw	r26, 0x07	; 7

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));
    6a7a:	14 96       	adiw	r26, 0x04	; 4
    6a7c:	9c 91       	ld	r25, X
    6a7e:	14 97       	sbiw	r26, 0x04	; 4
    6a80:	96 ff       	sbrs	r25, 6
    6a82:	fb cf       	rjmp	.-10     	; 0x6a7a <twi_read_packet+0x80>

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    6a84:	14 96       	adiw	r26, 0x04	; 4
    6a86:	8c 91       	ld	r24, X
    6a88:	14 97       	sbiw	r26, 0x04	; 4
    6a8a:	86 ff       	sbrs	r24, 6
    6a8c:	25 c0       	rjmp	.+74     	; 0x6ad8 <twi_read_packet+0xde>
    6a8e:	14 96       	adiw	r26, 0x04	; 4
    6a90:	8c 91       	ld	r24, X
    6a92:	14 97       	sbiw	r26, 0x04	; 4
    6a94:	84 fd       	sbrc	r24, 4
    6a96:	20 c0       	rjmp	.+64     	; 0x6ad8 <twi_read_packet+0xde>
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
		}

		if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_READ,
    6a98:	66 0f       	add	r22, r22
    6a9a:	61 60       	ori	r22, 0x01	; 1
const uint8_t slave_address, 
const uint8_t timeout_ms)
{
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;
    6a9c:	16 96       	adiw	r26, 0x06	; 6
    6a9e:	6c 93       	st	X, r22
    6aa0:	16 97       	sbiw	r26, 0x06	; 6
    6aa2:	0f c0       	rjmp	.+30     	; 0x6ac2 <twi_read_packet+0xc8>

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
		{
			TWI->MASTER.ADDR = slave_address;
		}
		else if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm))
    6aa4:	89 2f       	mov	r24, r25
    6aa6:	80 75       	andi	r24, 0x50	; 80
    6aa8:	80 35       	cpi	r24, 0x50	; 80
    6aaa:	01 f1       	breq	.+64     	; 0x6aec <twi_read_packet+0xf2>
		{
			twi_stop_transmission(TWI);
			return TWI_ERROR_SLAVE_RESPONSE_TIMEOUT;
		}
		else if (status & (TWI_MASTER_WIF_bm | TWI_MASTER_RIF_bm))
    6aac:	90 7c       	andi	r25, 0xC0	; 192
    6aae:	39 f5       	brne	.+78     	; 0x6afe <twi_read_packet+0x104>
    6ab0:	8a e6       	ldi	r24, 0x6A	; 106
    6ab2:	8a 95       	dec	r24
    6ab4:	f1 f7       	brne	.-4      	; 0x6ab2 <twi_read_packet+0xb8>
    6ab6:	00 c0       	rjmp	.+0      	; 0x6ab8 <twi_read_packet+0xbe>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    6ab8:	41 50       	subi	r20, 0x01	; 1
    6aba:	51 09       	sbc	r21, r1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    6abc:	41 15       	cp	r20, r1
    6abe:	51 05       	cpc	r21, r1
    6ac0:	81 f0       	breq	.+32     	; 0x6ae2 <twi_read_packet+0xe8>
	{
		uint8_t status = TWI->MASTER.STATUS;
    6ac2:	14 96       	adiw	r26, 0x04	; 4
    6ac4:	9c 91       	ld	r25, X
    6ac6:	14 97       	sbiw	r26, 0x04	; 4

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
    6ac8:	89 2f       	mov	r24, r25
    6aca:	88 74       	andi	r24, 0x48	; 72
    6acc:	88 34       	cpi	r24, 0x48	; 72
    6ace:	51 f7       	brne	.-44     	; 0x6aa4 <twi_read_packet+0xaa>
		{
			TWI->MASTER.ADDR = slave_address;
    6ad0:	16 96       	adiw	r26, 0x06	; 6
    6ad2:	6c 93       	st	X, r22
    6ad4:	16 97       	sbiw	r26, 0x06	; 6
    6ad6:	ec cf       	rjmp	.-40     	; 0x6ab0 <twi_read_packet+0xb6>
	timeout_ms)) == TWI_ERROR_NO_ERROR)
	{
		if (!(twi_send_byte(TWI, reg)))
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
    6ad8:	86 e0       	ldi	r24, 0x06	; 6

		twi_stop_transmission(TWI);
	}

	return len;
}
    6ada:	1f 91       	pop	r17
    6adc:	0f 91       	pop	r16
    6ade:	ef 90       	pop	r14
    6ae0:	08 95       	ret
		_delay_us(10);
		timeout_remaining--;
	}

	if (!(timeout_remaining)) {
		if (TWI->MASTER.STATUS & TWI_MASTER_CLKHOLD_bm) {
    6ae2:	14 96       	adiw	r26, 0x04	; 4
    6ae4:	8c 91       	ld	r24, X
    6ae6:	14 97       	sbiw	r26, 0x04	; 4
    6ae8:	85 ff       	sbrs	r24, 5
    6aea:	04 c0       	rjmp	.+8      	; 0x6af4 <twi_read_packet+0xfa>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    6aec:	87 e0       	ldi	r24, 0x07	; 7
    6aee:	13 96       	adiw	r26, 0x03	; 3
    6af0:	8c 93       	st	X, r24
    6af2:	13 97       	sbiw	r26, 0x03	; 3
    6af4:	87 e0       	ldi	r24, 0x07	; 7
    6af6:	13 96       	adiw	r26, 0x03	; 3
    6af8:	8c 93       	st	X, r24
		}

		twi_stop_transmission(TWI);
	}

	return len;
    6afa:	8e 2d       	mov	r24, r14
    6afc:	b7 cf       	rjmp	.-146    	; 0x6a6c <twi_read_packet+0x72>
    6afe:	2f ef       	ldi	r18, 0xFF	; 255
    6b00:	2e 0d       	add	r18, r14
    6b02:	f8 01       	movw	r30, r16
	*data = TWI->MASTER.DATA;

	if (end_of_data)
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
	else
	TWI->MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;
    6b04:	42 e0       	ldi	r20, 0x02	; 2
	while (!(TWI->MASTER.STATUS & TWI_MASTER_RIF_bm));

	*data = TWI->MASTER.DATA;

	if (end_of_data)
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    6b06:	37 e0       	ldi	r19, 0x07	; 7
		}

		if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_READ,
		timeout_ms)) == TWI_ERROR_NO_ERROR)
		{
			while (length--)
    6b08:	2f 3f       	cpi	r18, 0xFF	; 255
    6b0a:	a1 f3       	breq	.-24     	; 0x6af4 <twi_read_packet+0xfa>

uint8_t twi_receive_byte(TWI_t* const TWI, 
uint8_t* const data, 
const uint8_t end_of_data)
{
	if ((TWI->MASTER.STATUS & (TWI_MASTER_BUSERR_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_BUSERR_bm | TWI_MASTER_ARBLOST_bm)) {
    6b0c:	14 96       	adiw	r26, 0x04	; 4
    6b0e:	8c 91       	ld	r24, X
    6b10:	14 97       	sbiw	r26, 0x04	; 4
    6b12:	8c 70       	andi	r24, 0x0C	; 12
    6b14:	8c 30       	cpi	r24, 0x0C	; 12
    6b16:	71 f3       	breq	.-36     	; 0x6af4 <twi_read_packet+0xfa>
		return false;
	}

	while (!(TWI->MASTER.STATUS & TWI_MASTER_RIF_bm));
    6b18:	14 96       	adiw	r26, 0x04	; 4
    6b1a:	9c 91       	ld	r25, X
    6b1c:	14 97       	sbiw	r26, 0x04	; 4
    6b1e:	97 ff       	sbrs	r25, 7
    6b20:	fb cf       	rjmp	.-10     	; 0x6b18 <twi_read_packet+0x11e>

	*data = TWI->MASTER.DATA;
    6b22:	17 96       	adiw	r26, 0x07	; 7
    6b24:	8c 91       	ld	r24, X
    6b26:	17 97       	sbiw	r26, 0x07	; 7
    6b28:	81 93       	st	Z+, r24

	if (end_of_data)
    6b2a:	21 11       	cpse	r18, r1
    6b2c:	05 c0       	rjmp	.+10     	; 0x6b38 <twi_read_packet+0x13e>
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    6b2e:	13 96       	adiw	r26, 0x03	; 3
    6b30:	3c 93       	st	X, r19
    6b32:	13 97       	sbiw	r26, 0x03	; 3
    6b34:	21 50       	subi	r18, 0x01	; 1
    6b36:	e8 cf       	rjmp	.-48     	; 0x6b08 <twi_read_packet+0x10e>
	else
	TWI->MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;
    6b38:	13 96       	adiw	r26, 0x03	; 3
    6b3a:	4c 93       	st	X, r20
    6b3c:	13 97       	sbiw	r26, 0x03	; 3
    6b3e:	21 50       	subi	r18, 0x01	; 1
    6b40:	e3 cf       	rjmp	.-58     	; 0x6b08 <twi_read_packet+0x10e>

00006b42 <twi_write_packet>:
const uint8_t slave_address,
const uint8_t timeout_ms,
const uint8_t reg,
const uint8_t* data,
uint8_t length)
{
    6b42:	ef 92       	push	r14
    6b44:	0f 93       	push	r16
    6b46:	1f 93       	push	r17
    6b48:	fc 01       	movw	r30, r24
	uint8_t error_code;

	if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_WRITE,
    6b4a:	66 0f       	add	r22, r22
const uint8_t slave_address, 
const uint8_t timeout_ms)
{
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;
    6b4c:	66 83       	std	Z+6, r22	; 0x06

	timeout_remaining = (timeout_ms * 100);
    6b4e:	84 e6       	ldi	r24, 0x64	; 100
    6b50:	48 9f       	mul	r20, r24
    6b52:	a0 01       	movw	r20, r0
    6b54:	11 24       	eor	r1, r1
	while (timeout_remaining)
    6b56:	41 15       	cp	r20, r1
    6b58:	51 05       	cpc	r21, r1
    6b5a:	81 f4       	brne	.+32     	; 0x6b7c <twi_write_packet+0x3a>
    6b5c:	16 c0       	rjmp	.+44     	; 0x6b8a <twi_write_packet+0x48>

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
		{
			TWI->MASTER.ADDR = slave_address;
		}
		else if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm))
    6b5e:	39 2f       	mov	r19, r25
    6b60:	30 75       	andi	r19, 0x50	; 80
    6b62:	30 35       	cpi	r19, 0x50	; 80
    6b64:	a9 f0       	breq	.+42     	; 0x6b90 <twi_write_packet+0x4e>
		{
			twi_stop_transmission(TWI);
			return TWI_ERROR_SLAVE_RESPONSE_TIMEOUT;
		}
		else if (status & (TWI_MASTER_WIF_bm | TWI_MASTER_RIF_bm))
    6b66:	90 7c       	andi	r25, 0xC0	; 192
    6b68:	d1 f4       	brne	.+52     	; 0x6b9e <twi_write_packet+0x5c>
    6b6a:	8a e6       	ldi	r24, 0x6A	; 106
    6b6c:	8a 95       	dec	r24
    6b6e:	f1 f7       	brne	.-4      	; 0x6b6c <twi_write_packet+0x2a>
    6b70:	00 c0       	rjmp	.+0      	; 0x6b72 <twi_write_packet+0x30>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    6b72:	41 50       	subi	r20, 0x01	; 1
    6b74:	51 09       	sbc	r21, r1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    6b76:	41 15       	cp	r20, r1
    6b78:	51 05       	cpc	r21, r1
    6b7a:	39 f0       	breq	.+14     	; 0x6b8a <twi_write_packet+0x48>
	{
		uint8_t status = TWI->MASTER.STATUS;
    6b7c:	94 81       	ldd	r25, Z+4	; 0x04

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
    6b7e:	39 2f       	mov	r19, r25
    6b80:	38 74       	andi	r19, 0x48	; 72
    6b82:	38 34       	cpi	r19, 0x48	; 72
    6b84:	61 f7       	brne	.-40     	; 0x6b5e <twi_write_packet+0x1c>
		{
			TWI->MASTER.ADDR = slave_address;
    6b86:	66 83       	std	Z+6, r22	; 0x06
    6b88:	f0 cf       	rjmp	.-32     	; 0x6b6a <twi_write_packet+0x28>
		_delay_us(10);
		timeout_remaining--;
	}

	if (!(timeout_remaining)) {
		if (TWI->MASTER.STATUS & TWI_MASTER_CLKHOLD_bm) {
    6b8a:	84 81       	ldd	r24, Z+4	; 0x04
    6b8c:	85 ff       	sbrs	r24, 5
    6b8e:	02 c0       	rjmp	.+4      	; 0x6b94 <twi_write_packet+0x52>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    6b90:	87 e0       	ldi	r24, 0x07	; 7
    6b92:	83 83       	std	Z+3, r24	; 0x03
    6b94:	8e 2d       	mov	r24, r14

		twi_stop_transmission(TWI);
	}

	return length;
    6b96:	1f 91       	pop	r17
    6b98:	0f 91       	pop	r16
    6b9a:	ef 90       	pop	r14
    6b9c:	08 95       	ret
}

uint8_t twi_send_byte(TWI_t* const TWI, 
const uint8_t data)
{
	TWI->MASTER.DATA = data;
    6b9e:	27 83       	std	Z+7, r18	; 0x07

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));
    6ba0:	94 81       	ldd	r25, Z+4	; 0x04
    6ba2:	96 ff       	sbrs	r25, 6
    6ba4:	fd cf       	rjmp	.-6      	; 0x6ba0 <twi_write_packet+0x5e>

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    6ba6:	84 81       	ldd	r24, Z+4	; 0x04
    6ba8:	86 ff       	sbrs	r24, 6
    6baa:	13 c0       	rjmp	.+38     	; 0x6bd2 <twi_write_packet+0x90>
    6bac:	84 81       	ldd	r24, Z+4	; 0x04
    6bae:	84 fd       	sbrc	r24, 4
    6bb0:	10 c0       	rjmp	.+32     	; 0x6bd2 <twi_write_packet+0x90>
    6bb2:	d8 01       	movw	r26, r16
    6bb4:	8f ef       	ldi	r24, 0xFF	; 255
    6bb6:	8e 0d       	add	r24, r14
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
		}

		while (length--)
    6bb8:	8f 3f       	cpi	r24, 0xFF	; 255
    6bba:	41 f0       	breq	.+16     	; 0x6bcc <twi_write_packet+0x8a>
		{
			if (!(twi_send_byte(TWI, *(data++))))
    6bbc:	9d 91       	ld	r25, X+
}

uint8_t twi_send_byte(TWI_t* const TWI, 
const uint8_t data)
{
	TWI->MASTER.DATA = data;
    6bbe:	97 83       	std	Z+7, r25	; 0x07

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));
    6bc0:	94 81       	ldd	r25, Z+4	; 0x04
    6bc2:	96 ff       	sbrs	r25, 6
    6bc4:	fd cf       	rjmp	.-6      	; 0x6bc0 <twi_write_packet+0x7e>

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    6bc6:	94 81       	ldd	r25, Z+4	; 0x04
    6bc8:	96 fd       	sbrc	r25, 6
    6bca:	08 c0       	rjmp	.+16     	; 0x6bdc <twi_write_packet+0x9a>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    6bcc:	97 e0       	ldi	r25, 0x07	; 7
    6bce:	93 83       	std	Z+3, r25	; 0x03
    6bd0:	e2 cf       	rjmp	.-60     	; 0x6b96 <twi_write_packet+0x54>
	timeout_ms)) == TWI_ERROR_NO_ERROR)
	{
		if (!(twi_send_byte(TWI, reg)))
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
    6bd2:	86 e0       	ldi	r24, 0x06	; 6

		twi_stop_transmission(TWI);
	}

	return length;
    6bd4:	1f 91       	pop	r17
    6bd6:	0f 91       	pop	r16
    6bd8:	ef 90       	pop	r14
    6bda:	08 95       	ret
{
	TWI->MASTER.DATA = data;

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    6bdc:	94 81       	ldd	r25, Z+4	; 0x04
    6bde:	2f ef       	ldi	r18, 0xFF	; 255
    6be0:	28 0f       	add	r18, r24
    6be2:	94 fd       	sbrc	r25, 4
    6be4:	f3 cf       	rjmp	.-26     	; 0x6bcc <twi_write_packet+0x8a>
    6be6:	82 2f       	mov	r24, r18
    6be8:	e7 cf       	rjmp	.-50     	; 0x6bb8 <twi_write_packet+0x76>

00006bea <Si114xPauseAll>:
{
	return _sendCmd(si114x_handle,0x0B);
}

s16 Si114xPauseAll(HANDLE si114x_handle)
{
    6bea:	0f 93       	push	r16
    6bec:	1f 93       	push	r17
    6bee:	cf 93       	push	r28
    6bf0:	df 93       	push	r29
    6bf2:	ec 01       	movw	r28, r24
	while (1)
	{
		// Keep sending nops until the response is zero
		while (1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))==0)
    6bf4:	60 e2       	ldi	r22, 0x20	; 32
    6bf6:	ce 01       	movw	r24, r28
    6bf8:	b2 d0       	rcall	.+356    	; 0x6d5e <Si114xReadFromRegister>

	s16  response;
	s16  retval;

	// Get the response register contents
	if ((response=Si114xReadFromRegister(si114x_handle, REG_RESPONSE))<0)
    6bfa:	60 e2       	ldi	r22, 0x20	; 32
	while (1)
	{
		// Keep sending nops until the response is zero
		while (1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))==0)
    6bfc:	89 2b       	or	r24, r25
    6bfe:	61 f5       	brne	.+88     	; 0x6c58 <Si114xPauseAll+0x6e>

	s16  response;
	s16  retval;

	// Get the response register contents
	if ((response=Si114xReadFromRegister(si114x_handle, REG_RESPONSE))<0)
    6c00:	ce 01       	movw	r24, r28
    6c02:	ad d0       	rcall	.+346    	; 0x6d5e <Si114xReadFromRegister>
    6c04:	8c 01       	movw	r16, r24
    6c06:	97 fd       	sbrc	r25, 7
    6c08:	16 c0       	rjmp	.+44     	; 0x6c36 <Si114xPauseAll+0x4c>
    6c0a:	02 c0       	rjmp	.+4      	; 0x6c10 <Si114xPauseAll+0x26>
	// or if an i2c error occurs
	while (1)
	{
		retval = Si114xReadFromRegister(si114x_handle, REG_CHIP_STAT);
		if (retval == 1) break;
		if (retval <  0) return retval;
    6c0c:	97 fd       	sbrc	r25, 7
    6c0e:	13 c0       	rjmp	.+38     	; 0x6c36 <Si114xPauseAll+0x4c>
	s16 retval;
	// This loops until the Si114x is known to be in its sleep state
	// or if an i2c error occurs
	while (1)
	{
		retval = Si114xReadFromRegister(si114x_handle, REG_CHIP_STAT);
    6c10:	60 e3       	ldi	r22, 0x30	; 48
    6c12:	ce 01       	movw	r24, r28
    6c14:	a4 d0       	rcall	.+328    	; 0x6d5e <Si114xReadFromRegister>
		if (retval == 1) break;
    6c16:	81 30       	cpi	r24, 0x01	; 1
    6c18:	91 05       	cpc	r25, r1
    6c1a:	c1 f7       	brne	.-16     	; 0x6c0c <Si114xPauseAll+0x22>
	{
		if((retval=_waitUntilSleep(si114x_handle)) != 0) return retval;

		if(command==0) break; // Skip if the command is NOP

		retval=Si114xReadFromRegister(si114x_handle, REG_RESPONSE);
    6c1c:	60 e2       	ldi	r22, 0x20	; 32
    6c1e:	ce 01       	movw	r24, r28
    6c20:	9e d0       	rcall	.+316    	; 0x6d5e <Si114xReadFromRegister>
		if(retval==response) break;
    6c22:	80 17       	cp	r24, r16
    6c24:	91 07       	cpc	r25, r17
    6c26:	39 f1       	breq	.+78     	; 0x6c76 <Si114xPauseAll+0x8c>
		else if(retval<0) return retval;
    6c28:	97 fd       	sbrc	r25, 7
    6c2a:	05 c0       	rjmp	.+10     	; 0x6c36 <Si114xPauseAll+0x4c>
    6c2c:	8c 01       	movw	r16, r24
    6c2e:	f0 cf       	rjmp	.-32     	; 0x6c10 <Si114xPauseAll+0x26>
	while(1)
	{

		if(command==0) break; // Skip if the command is NOP

		retval= Si114xReadFromRegister(si114x_handle, REG_RESPONSE);
    6c30:	60 e2       	ldi	r22, 0x20	; 32
    6c32:	ce 01       	movw	r24, r28
    6c34:	94 d0       	rcall	.+296    	; 0x6d5e <Si114xReadFromRegister>
		_PsAlsPause(si114x_handle);

		// Wait for response
		while(1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))!=0)
    6c36:	60 e2       	ldi	r22, 0x20	; 32
    6c38:	ce 01       	movw	r24, r28
    6c3a:	91 d0       	rcall	.+290    	; 0x6d5e <Si114xReadFromRegister>
    6c3c:	89 2b       	or	r24, r25
    6c3e:	d9 f3       	breq	.-10     	; 0x6c36 <Si114xPauseAll+0x4c>
			break;
		}

		// When the PsAlsPause() response is good, we expect it to be a '1'.
		if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))==1)
    6c40:	60 e2       	ldi	r22, 0x20	; 32
    6c42:	ce 01       	movw	r24, r28
    6c44:	8c d0       	rcall	.+280    	; 0x6d5e <Si114xReadFromRegister>
    6c46:	01 97       	sbiw	r24, 0x01	; 1
    6c48:	a9 f6       	brne	.-86     	; 0x6bf4 <Si114xPauseAll+0xa>
		break;  // otherwise, start over.
	}
	return 0;
}
    6c4a:	80 e0       	ldi	r24, 0x00	; 0
    6c4c:	90 e0       	ldi	r25, 0x00	; 0
    6c4e:	df 91       	pop	r29
    6c50:	cf 91       	pop	r28
    6c52:	1f 91       	pop	r17
    6c54:	0f 91       	pop	r16
    6c56:	08 95       	ret

	s16  response;
	s16  retval;

	// Get the response register contents
	if ((response=Si114xReadFromRegister(si114x_handle, REG_RESPONSE))<0)
    6c58:	ce 01       	movw	r24, r28
    6c5a:	81 d0       	rcall	.+258    	; 0x6d5e <Si114xReadFromRegister>
    6c5c:	97 fd       	sbrc	r25, 7
    6c5e:	ca cf       	rjmp	.-108    	; 0x6bf4 <Si114xPauseAll+0xa>
	s16 retval;
	// This loops until the Si114x is known to be in its sleep state
	// or if an i2c error occurs
	while (1)
	{
		retval = Si114xReadFromRegister(si114x_handle, REG_CHIP_STAT);
    6c60:	60 e3       	ldi	r22, 0x30	; 48
    6c62:	ce 01       	movw	r24, r28
    6c64:	7c d0       	rcall	.+248    	; 0x6d5e <Si114xReadFromRegister>
		if (retval == 1) break;
    6c66:	81 30       	cpi	r24, 0x01	; 1
    6c68:	91 05       	cpc	r25, r1
    6c6a:	c1 f7       	brne	.-16     	; 0x6c5c <Si114xPauseAll+0x72>
		else if(retval<0) return retval;
		else response = retval;
	}

	// Send the Command
	if ((retval=Si114xWriteToRegister(si114x_handle, REG_COMMAND, command)) !=0)
    6c6c:	40 e0       	ldi	r20, 0x00	; 0
    6c6e:	68 e1       	ldi	r22, 0x18	; 24
    6c70:	ce 01       	movw	r24, r28
    6c72:	58 d0       	rcall	.+176    	; 0x6d24 <Si114xWriteToRegister>
    6c74:	bf cf       	rjmp	.-130    	; 0x6bf4 <Si114xPauseAll+0xa>
    6c76:	4b e0       	ldi	r20, 0x0B	; 11
    6c78:	68 e1       	ldi	r22, 0x18	; 24
    6c7a:	ce 01       	movw	r24, r28
    6c7c:	53 d0       	rcall	.+166    	; 0x6d24 <Si114xWriteToRegister>
    6c7e:	89 2b       	or	r24, r25
    6c80:	d1 f6       	brne	.-76     	; 0x6c36 <Si114xPauseAll+0x4c>
    6c82:	17 fd       	sbrc	r17, 7
    6c84:	d5 cf       	rjmp	.-86     	; 0x6c30 <Si114xPauseAll+0x46>
	while(1)
	{

		if(command==0) break; // Skip if the command is NOP

		retval= Si114xReadFromRegister(si114x_handle, REG_RESPONSE);
    6c86:	60 e2       	ldi	r22, 0x20	; 32
    6c88:	ce 01       	movw	r24, r28
    6c8a:	69 d0       	rcall	.+210    	; 0x6d5e <Si114xReadFromRegister>
		if (retval != response) break;
    6c8c:	08 17       	cp	r16, r24
    6c8e:	19 07       	cpc	r17, r25
    6c90:	d1 f3       	breq	.-12     	; 0x6c86 <Si114xPauseAll+0x9c>
		_PsAlsPause(si114x_handle);

		// Wait for response
		while(1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))!=0)
    6c92:	60 e2       	ldi	r22, 0x20	; 32
    6c94:	ce 01       	movw	r24, r28
    6c96:	63 d0       	rcall	.+198    	; 0x6d5e <Si114xReadFromRegister>
    6c98:	89 2b       	or	r24, r25
    6c9a:	69 f2       	breq	.-102    	; 0x6c36 <Si114xPauseAll+0x4c>
    6c9c:	d1 cf       	rjmp	.-94     	; 0x6c40 <Si114xPauseAll+0x56>

00006c9e <si114x_reset>:
	return 0;
}


s16 si114x_reset(HANDLE si114x_handle)
{
    6c9e:	0f 93       	push	r16
    6ca0:	1f 93       	push	r17
    6ca2:	cf 93       	push	r28
    6ca4:	df 93       	push	r29
    6ca6:	8c 01       	movw	r16, r24
	//
	// delay_10ms();
	// delay_10ms();
	// delay_10ms();

	retval+=Si114xWriteToRegister(si114x_handle, REG_MEAS_RATE,  0x00);
    6ca8:	40 e0       	ldi	r20, 0x00	; 0
    6caa:	68 e0       	ldi	r22, 0x08	; 8
    6cac:	3b d0       	rcall	.+118    	; 0x6d24 <Si114xWriteToRegister>
    6cae:	ec 01       	movw	r28, r24
	retval+=Si114xPauseAll(si114x_handle);
    6cb0:	c8 01       	movw	r24, r16
    6cb2:	9b df       	rcall	.-202    	; 0x6bea <Si114xPauseAll>
    6cb4:	c8 0f       	add	r28, r24
    6cb6:	d9 1f       	adc	r29, r25

	// The clearing of the registers could be redundant, but it is okay.
	// This is to make sure that these registers are cleared.
	retval+=Si114xWriteToRegister(si114x_handle, REG_MEAS_RATE,  0x00);
    6cb8:	40 e0       	ldi	r20, 0x00	; 0
    6cba:	68 e0       	ldi	r22, 0x08	; 8
    6cbc:	c8 01       	movw	r24, r16
    6cbe:	32 d0       	rcall	.+100    	; 0x6d24 <Si114xWriteToRegister>
    6cc0:	c8 0f       	add	r28, r24
    6cc2:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_ENABLE, 0x00);
    6cc4:	40 e0       	ldi	r20, 0x00	; 0
    6cc6:	64 e0       	ldi	r22, 0x04	; 4
    6cc8:	c8 01       	movw	r24, r16
    6cca:	2c d0       	rcall	.+88     	; 0x6d24 <Si114xWriteToRegister>
    6ccc:	c8 0f       	add	r28, r24
    6cce:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_MODE1,  0x00);
    6cd0:	40 e0       	ldi	r20, 0x00	; 0
    6cd2:	65 e0       	ldi	r22, 0x05	; 5
    6cd4:	c8 01       	movw	r24, r16
    6cd6:	26 d0       	rcall	.+76     	; 0x6d24 <Si114xWriteToRegister>
    6cd8:	c8 0f       	add	r28, r24
    6cda:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_MODE2,  0x00);
    6cdc:	40 e0       	ldi	r20, 0x00	; 0
    6cde:	66 e0       	ldi	r22, 0x06	; 6
    6ce0:	c8 01       	movw	r24, r16
    6ce2:	20 d0       	rcall	.+64     	; 0x6d24 <Si114xWriteToRegister>
    6ce4:	c8 0f       	add	r28, r24
    6ce6:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_INT_CFG  ,  0x00);
    6ce8:	40 e0       	ldi	r20, 0x00	; 0
    6cea:	63 e0       	ldi	r22, 0x03	; 3
    6cec:	c8 01       	movw	r24, r16
    6cee:	1a d0       	rcall	.+52     	; 0x6d24 <Si114xWriteToRegister>
    6cf0:	c8 0f       	add	r28, r24
    6cf2:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_STATUS, 0xFF);
    6cf4:	4f ef       	ldi	r20, 0xFF	; 255
    6cf6:	61 e2       	ldi	r22, 0x21	; 33
    6cf8:	c8 01       	movw	r24, r16
    6cfa:	14 d0       	rcall	.+40     	; 0x6d24 <Si114xWriteToRegister>
    6cfc:	c8 0f       	add	r28, r24
    6cfe:	d9 1f       	adc	r29, r25

	// Perform the Reset Command
	retval+=Si114xWriteToRegister(si114x_handle, REG_COMMAND, 1);
    6d00:	41 e0       	ldi	r20, 0x01	; 1
    6d02:	68 e1       	ldi	r22, 0x18	; 24
    6d04:	c8 01       	movw	r24, r16
    6d06:	0e d0       	rcall	.+28     	; 0x6d24 <Si114xWriteToRegister>
    6d08:	c8 0f       	add	r28, r24
    6d0a:	d9 1f       	adc	r29, r25

	// Delay for 10 ms. This delay is needed to allow the Si114x
	// to perform internal reset sequence.
	delay_10ms();
    6d0c:	44 d0       	rcall	.+136    	; 0x6d96 <delay_10ms>

	// Write Hardware Key
	retval+=Si114xWriteToRegister(si114x_handle, REG_HW_KEY, HW_KEY_VAL0);
    6d0e:	47 e1       	ldi	r20, 0x17	; 23
    6d10:	67 e0       	ldi	r22, 0x07	; 7
    6d12:	c8 01       	movw	r24, r16
    6d14:	07 d0       	rcall	.+14     	; 0x6d24 <Si114xWriteToRegister>

	return retval;
}
    6d16:	8c 0f       	add	r24, r28
    6d18:	9d 1f       	adc	r25, r29
    6d1a:	df 91       	pop	r29
    6d1c:	cf 91       	pop	r28
    6d1e:	1f 91       	pop	r17
    6d20:	0f 91       	pop	r16
    6d22:	08 95       	ret

00006d24 <Si114xWriteToRegister>:

s16 Si114xBlockRead(HANDLE si114x_handle,
u8 address, u8 length, u8 *values)
{
	return twi_read_packet(&TWIC,SI114X_ADDR,1000,address,values,length);
}
    6d24:	ef 92       	push	r14
    6d26:	0f 93       	push	r16
    6d28:	1f 93       	push	r17
    6d2a:	cf 93       	push	r28
    6d2c:	df 93       	push	r29
    6d2e:	1f 92       	push	r1
    6d30:	cd b7       	in	r28, 0x3d	; 61
    6d32:	de b7       	in	r29, 0x3e	; 62
    6d34:	26 2f       	mov	r18, r22
    6d36:	49 83       	std	Y+1, r20	; 0x01
    6d38:	ee 24       	eor	r14, r14
    6d3a:	e3 94       	inc	r14
    6d3c:	8e 01       	movw	r16, r28
    6d3e:	0f 5f       	subi	r16, 0xFF	; 255
    6d40:	1f 4f       	sbci	r17, 0xFF	; 255
    6d42:	48 ee       	ldi	r20, 0xE8	; 232
    6d44:	6a e5       	ldi	r22, 0x5A	; 90
    6d46:	80 e8       	ldi	r24, 0x80	; 128
    6d48:	94 e0       	ldi	r25, 0x04	; 4
    6d4a:	fb de       	rcall	.-522    	; 0x6b42 <twi_write_packet>
    6d4c:	80 e0       	ldi	r24, 0x00	; 0
    6d4e:	90 e0       	ldi	r25, 0x00	; 0
    6d50:	0f 90       	pop	r0
    6d52:	df 91       	pop	r29
    6d54:	cf 91       	pop	r28
    6d56:	1f 91       	pop	r17
    6d58:	0f 91       	pop	r16
    6d5a:	ef 90       	pop	r14
    6d5c:	08 95       	ret

00006d5e <Si114xReadFromRegister>:
    6d5e:	ef 92       	push	r14
    6d60:	0f 93       	push	r16
    6d62:	1f 93       	push	r17
    6d64:	cf 93       	push	r28
    6d66:	df 93       	push	r29
    6d68:	1f 92       	push	r1
    6d6a:	cd b7       	in	r28, 0x3d	; 61
    6d6c:	de b7       	in	r29, 0x3e	; 62
    6d6e:	26 2f       	mov	r18, r22
    6d70:	ee 24       	eor	r14, r14
    6d72:	e3 94       	inc	r14
    6d74:	8e 01       	movw	r16, r28
    6d76:	0f 5f       	subi	r16, 0xFF	; 255
    6d78:	1f 4f       	sbci	r17, 0xFF	; 255
    6d7a:	48 ee       	ldi	r20, 0xE8	; 232
    6d7c:	6a e5       	ldi	r22, 0x5A	; 90
    6d7e:	80 e8       	ldi	r24, 0x80	; 128
    6d80:	94 e0       	ldi	r25, 0x04	; 4
    6d82:	3b de       	rcall	.-906    	; 0x69fa <twi_read_packet>
    6d84:	89 81       	ldd	r24, Y+1	; 0x01
    6d86:	90 e0       	ldi	r25, 0x00	; 0
    6d88:	0f 90       	pop	r0
    6d8a:	df 91       	pop	r29
    6d8c:	cf 91       	pop	r28
    6d8e:	1f 91       	pop	r17
    6d90:	0f 91       	pop	r16
    6d92:	ef 90       	pop	r14
    6d94:	08 95       	ret

00006d96 <delay_10ms>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    6d96:	2f ef       	ldi	r18, 0xFF	; 255
    6d98:	89 ef       	ldi	r24, 0xF9	; 249
    6d9a:	90 e0       	ldi	r25, 0x00	; 0
    6d9c:	21 50       	subi	r18, 0x01	; 1
    6d9e:	80 40       	sbci	r24, 0x00	; 0
    6da0:	90 40       	sbci	r25, 0x00	; 0
    6da2:	e1 f7       	brne	.-8      	; 0x6d9c <delay_10ms+0x6>
    6da4:	00 c0       	rjmp	.+0      	; 0x6da6 <delay_10ms+0x10>
    6da6:	00 00       	nop
    6da8:	08 95       	ret

00006daa <uart_setup>:

#include "uart.h"

void uart_setup(void) {
	
	PORTD.DIRSET = PIN3_bm; //TX
    6daa:	e0 e6       	ldi	r30, 0x60	; 96
    6dac:	f6 e0       	ldi	r31, 0x06	; 6
    6dae:	88 e0       	ldi	r24, 0x08	; 8
    6db0:	81 83       	std	Z+1, r24	; 0x01
	PORTD.DIRCLR = PIN2_bm; //RX
    6db2:	84 e0       	ldi	r24, 0x04	; 4
    6db4:	82 83       	std	Z+2, r24	; 0x02
	
	USARTD0.CTRLA = USART_RXCINTLVL_MED_gc;
    6db6:	e0 ea       	ldi	r30, 0xA0	; 160
    6db8:	f9 e0       	ldi	r31, 0x09	; 9
    6dba:	80 e2       	ldi	r24, 0x20	; 32
    6dbc:	83 83       	std	Z+3, r24	; 0x03
	USARTD0.BAUDCTRLA = 207;//0x1111;
    6dbe:	8f ec       	ldi	r24, 0xCF	; 207
    6dc0:	86 83       	std	Z+6, r24	; 0x06
	//USARTE0.BAUDCTRLB = (33 << 4);
	USARTD0.CTRLC = USART_CHSIZE_8BIT_gc;
    6dc2:	83 e0       	ldi	r24, 0x03	; 3
    6dc4:	85 83       	std	Z+5, r24	; 0x05

	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
    6dc6:	88 e1       	ldi	r24, 0x18	; 24
    6dc8:	84 83       	std	Z+4, r24	; 0x04
    6dca:	08 95       	ret

00006dcc <uart_put_char>:
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
    6dcc:	90 91 a1 09 	lds	r25, 0x09A1
    6dd0:	95 ff       	sbrs	r25, 5
    6dd2:	fc cf       	rjmp	.-8      	; 0x6dcc <uart_put_char>
	USARTD0.DATA = c;
    6dd4:	80 93 a0 09 	sts	0x09A0, r24
    6dd8:	08 95       	ret

00006dda <uart_get_char>:
}

char uart_get_char(void) {
	while (!(USARTD0.STATUS & USART_RXCIF_bm));
    6dda:	80 91 a1 09 	lds	r24, 0x09A1
    6dde:	87 ff       	sbrs	r24, 7
    6de0:	fc cf       	rjmp	.-8      	; 0x6dda <uart_get_char>
	return USARTD0.DATA;
    6de2:	80 91 a0 09 	lds	r24, 0x09A0
}
    6de6:	08 95       	ret

00006de8 <__subsf3>:
    6de8:	50 58       	subi	r21, 0x80	; 128

00006dea <__addsf3>:
    6dea:	bb 27       	eor	r27, r27
    6dec:	aa 27       	eor	r26, r26
    6dee:	0e d0       	rcall	.+28     	; 0x6e0c <__addsf3x>
    6df0:	e5 c0       	rjmp	.+458    	; 0x6fbc <__fp_round>
    6df2:	d6 d0       	rcall	.+428    	; 0x6fa0 <__fp_pscA>
    6df4:	30 f0       	brcs	.+12     	; 0x6e02 <__addsf3+0x18>
    6df6:	db d0       	rcall	.+438    	; 0x6fae <__fp_pscB>
    6df8:	20 f0       	brcs	.+8      	; 0x6e02 <__addsf3+0x18>
    6dfa:	31 f4       	brne	.+12     	; 0x6e08 <__addsf3+0x1e>
    6dfc:	9f 3f       	cpi	r25, 0xFF	; 255
    6dfe:	11 f4       	brne	.+4      	; 0x6e04 <__addsf3+0x1a>
    6e00:	1e f4       	brtc	.+6      	; 0x6e08 <__addsf3+0x1e>
    6e02:	cb c0       	rjmp	.+406    	; 0x6f9a <__fp_nan>
    6e04:	0e f4       	brtc	.+2      	; 0x6e08 <__addsf3+0x1e>
    6e06:	e0 95       	com	r30
    6e08:	e7 fb       	bst	r30, 7
    6e0a:	c1 c0       	rjmp	.+386    	; 0x6f8e <__fp_inf>

00006e0c <__addsf3x>:
    6e0c:	e9 2f       	mov	r30, r25
    6e0e:	e7 d0       	rcall	.+462    	; 0x6fde <__fp_split3>
    6e10:	80 f3       	brcs	.-32     	; 0x6df2 <__addsf3+0x8>
    6e12:	ba 17       	cp	r27, r26
    6e14:	62 07       	cpc	r22, r18
    6e16:	73 07       	cpc	r23, r19
    6e18:	84 07       	cpc	r24, r20
    6e1a:	95 07       	cpc	r25, r21
    6e1c:	18 f0       	brcs	.+6      	; 0x6e24 <__addsf3x+0x18>
    6e1e:	71 f4       	brne	.+28     	; 0x6e3c <__addsf3x+0x30>
    6e20:	9e f5       	brtc	.+102    	; 0x6e88 <__addsf3x+0x7c>
    6e22:	ff c0       	rjmp	.+510    	; 0x7022 <__fp_zero>
    6e24:	0e f4       	brtc	.+2      	; 0x6e28 <__addsf3x+0x1c>
    6e26:	e0 95       	com	r30
    6e28:	0b 2e       	mov	r0, r27
    6e2a:	ba 2f       	mov	r27, r26
    6e2c:	a0 2d       	mov	r26, r0
    6e2e:	0b 01       	movw	r0, r22
    6e30:	b9 01       	movw	r22, r18
    6e32:	90 01       	movw	r18, r0
    6e34:	0c 01       	movw	r0, r24
    6e36:	ca 01       	movw	r24, r20
    6e38:	a0 01       	movw	r20, r0
    6e3a:	11 24       	eor	r1, r1
    6e3c:	ff 27       	eor	r31, r31
    6e3e:	59 1b       	sub	r21, r25
    6e40:	99 f0       	breq	.+38     	; 0x6e68 <__addsf3x+0x5c>
    6e42:	59 3f       	cpi	r21, 0xF9	; 249
    6e44:	50 f4       	brcc	.+20     	; 0x6e5a <__addsf3x+0x4e>
    6e46:	50 3e       	cpi	r21, 0xE0	; 224
    6e48:	68 f1       	brcs	.+90     	; 0x6ea4 <__addsf3x+0x98>
    6e4a:	1a 16       	cp	r1, r26
    6e4c:	f0 40       	sbci	r31, 0x00	; 0
    6e4e:	a2 2f       	mov	r26, r18
    6e50:	23 2f       	mov	r18, r19
    6e52:	34 2f       	mov	r19, r20
    6e54:	44 27       	eor	r20, r20
    6e56:	58 5f       	subi	r21, 0xF8	; 248
    6e58:	f3 cf       	rjmp	.-26     	; 0x6e40 <__addsf3x+0x34>
    6e5a:	46 95       	lsr	r20
    6e5c:	37 95       	ror	r19
    6e5e:	27 95       	ror	r18
    6e60:	a7 95       	ror	r26
    6e62:	f0 40       	sbci	r31, 0x00	; 0
    6e64:	53 95       	inc	r21
    6e66:	c9 f7       	brne	.-14     	; 0x6e5a <__addsf3x+0x4e>
    6e68:	7e f4       	brtc	.+30     	; 0x6e88 <__addsf3x+0x7c>
    6e6a:	1f 16       	cp	r1, r31
    6e6c:	ba 0b       	sbc	r27, r26
    6e6e:	62 0b       	sbc	r22, r18
    6e70:	73 0b       	sbc	r23, r19
    6e72:	84 0b       	sbc	r24, r20
    6e74:	ba f0       	brmi	.+46     	; 0x6ea4 <__addsf3x+0x98>
    6e76:	91 50       	subi	r25, 0x01	; 1
    6e78:	a1 f0       	breq	.+40     	; 0x6ea2 <__addsf3x+0x96>
    6e7a:	ff 0f       	add	r31, r31
    6e7c:	bb 1f       	adc	r27, r27
    6e7e:	66 1f       	adc	r22, r22
    6e80:	77 1f       	adc	r23, r23
    6e82:	88 1f       	adc	r24, r24
    6e84:	c2 f7       	brpl	.-16     	; 0x6e76 <__addsf3x+0x6a>
    6e86:	0e c0       	rjmp	.+28     	; 0x6ea4 <__addsf3x+0x98>
    6e88:	ba 0f       	add	r27, r26
    6e8a:	62 1f       	adc	r22, r18
    6e8c:	73 1f       	adc	r23, r19
    6e8e:	84 1f       	adc	r24, r20
    6e90:	48 f4       	brcc	.+18     	; 0x6ea4 <__addsf3x+0x98>
    6e92:	87 95       	ror	r24
    6e94:	77 95       	ror	r23
    6e96:	67 95       	ror	r22
    6e98:	b7 95       	ror	r27
    6e9a:	f7 95       	ror	r31
    6e9c:	9e 3f       	cpi	r25, 0xFE	; 254
    6e9e:	08 f0       	brcs	.+2      	; 0x6ea2 <__addsf3x+0x96>
    6ea0:	b3 cf       	rjmp	.-154    	; 0x6e08 <__addsf3+0x1e>
    6ea2:	93 95       	inc	r25
    6ea4:	88 0f       	add	r24, r24
    6ea6:	08 f0       	brcs	.+2      	; 0x6eaa <__addsf3x+0x9e>
    6ea8:	99 27       	eor	r25, r25
    6eaa:	ee 0f       	add	r30, r30
    6eac:	97 95       	ror	r25
    6eae:	87 95       	ror	r24
    6eb0:	08 95       	ret

00006eb2 <__fixsfsi>:
    6eb2:	04 d0       	rcall	.+8      	; 0x6ebc <__fixunssfsi>
    6eb4:	68 94       	set
    6eb6:	b1 11       	cpse	r27, r1
    6eb8:	b5 c0       	rjmp	.+362    	; 0x7024 <__fp_szero>
    6eba:	08 95       	ret

00006ebc <__fixunssfsi>:
    6ebc:	98 d0       	rcall	.+304    	; 0x6fee <__fp_splitA>
    6ebe:	88 f0       	brcs	.+34     	; 0x6ee2 <__fixunssfsi+0x26>
    6ec0:	9f 57       	subi	r25, 0x7F	; 127
    6ec2:	90 f0       	brcs	.+36     	; 0x6ee8 <__fixunssfsi+0x2c>
    6ec4:	b9 2f       	mov	r27, r25
    6ec6:	99 27       	eor	r25, r25
    6ec8:	b7 51       	subi	r27, 0x17	; 23
    6eca:	a0 f0       	brcs	.+40     	; 0x6ef4 <__fixunssfsi+0x38>
    6ecc:	d1 f0       	breq	.+52     	; 0x6f02 <__fixunssfsi+0x46>
    6ece:	66 0f       	add	r22, r22
    6ed0:	77 1f       	adc	r23, r23
    6ed2:	88 1f       	adc	r24, r24
    6ed4:	99 1f       	adc	r25, r25
    6ed6:	1a f0       	brmi	.+6      	; 0x6ede <__fixunssfsi+0x22>
    6ed8:	ba 95       	dec	r27
    6eda:	c9 f7       	brne	.-14     	; 0x6ece <__fixunssfsi+0x12>
    6edc:	12 c0       	rjmp	.+36     	; 0x6f02 <__fixunssfsi+0x46>
    6ede:	b1 30       	cpi	r27, 0x01	; 1
    6ee0:	81 f0       	breq	.+32     	; 0x6f02 <__fixunssfsi+0x46>
    6ee2:	9f d0       	rcall	.+318    	; 0x7022 <__fp_zero>
    6ee4:	b1 e0       	ldi	r27, 0x01	; 1
    6ee6:	08 95       	ret
    6ee8:	9c c0       	rjmp	.+312    	; 0x7022 <__fp_zero>
    6eea:	67 2f       	mov	r22, r23
    6eec:	78 2f       	mov	r23, r24
    6eee:	88 27       	eor	r24, r24
    6ef0:	b8 5f       	subi	r27, 0xF8	; 248
    6ef2:	39 f0       	breq	.+14     	; 0x6f02 <__fixunssfsi+0x46>
    6ef4:	b9 3f       	cpi	r27, 0xF9	; 249
    6ef6:	cc f3       	brlt	.-14     	; 0x6eea <__fixunssfsi+0x2e>
    6ef8:	86 95       	lsr	r24
    6efa:	77 95       	ror	r23
    6efc:	67 95       	ror	r22
    6efe:	b3 95       	inc	r27
    6f00:	d9 f7       	brne	.-10     	; 0x6ef8 <__fixunssfsi+0x3c>
    6f02:	3e f4       	brtc	.+14     	; 0x6f12 <__fixunssfsi+0x56>
    6f04:	90 95       	com	r25
    6f06:	80 95       	com	r24
    6f08:	70 95       	com	r23
    6f0a:	61 95       	neg	r22
    6f0c:	7f 4f       	sbci	r23, 0xFF	; 255
    6f0e:	8f 4f       	sbci	r24, 0xFF	; 255
    6f10:	9f 4f       	sbci	r25, 0xFF	; 255
    6f12:	08 95       	ret

00006f14 <__floatunsisf>:
    6f14:	e8 94       	clt
    6f16:	09 c0       	rjmp	.+18     	; 0x6f2a <__floatsisf+0x12>

00006f18 <__floatsisf>:
    6f18:	97 fb       	bst	r25, 7
    6f1a:	3e f4       	brtc	.+14     	; 0x6f2a <__floatsisf+0x12>
    6f1c:	90 95       	com	r25
    6f1e:	80 95       	com	r24
    6f20:	70 95       	com	r23
    6f22:	61 95       	neg	r22
    6f24:	7f 4f       	sbci	r23, 0xFF	; 255
    6f26:	8f 4f       	sbci	r24, 0xFF	; 255
    6f28:	9f 4f       	sbci	r25, 0xFF	; 255
    6f2a:	99 23       	and	r25, r25
    6f2c:	a9 f0       	breq	.+42     	; 0x6f58 <__floatsisf+0x40>
    6f2e:	f9 2f       	mov	r31, r25
    6f30:	96 e9       	ldi	r25, 0x96	; 150
    6f32:	bb 27       	eor	r27, r27
    6f34:	93 95       	inc	r25
    6f36:	f6 95       	lsr	r31
    6f38:	87 95       	ror	r24
    6f3a:	77 95       	ror	r23
    6f3c:	67 95       	ror	r22
    6f3e:	b7 95       	ror	r27
    6f40:	f1 11       	cpse	r31, r1
    6f42:	f8 cf       	rjmp	.-16     	; 0x6f34 <__floatsisf+0x1c>
    6f44:	fa f4       	brpl	.+62     	; 0x6f84 <__floatsisf+0x6c>
    6f46:	bb 0f       	add	r27, r27
    6f48:	11 f4       	brne	.+4      	; 0x6f4e <__floatsisf+0x36>
    6f4a:	60 ff       	sbrs	r22, 0
    6f4c:	1b c0       	rjmp	.+54     	; 0x6f84 <__floatsisf+0x6c>
    6f4e:	6f 5f       	subi	r22, 0xFF	; 255
    6f50:	7f 4f       	sbci	r23, 0xFF	; 255
    6f52:	8f 4f       	sbci	r24, 0xFF	; 255
    6f54:	9f 4f       	sbci	r25, 0xFF	; 255
    6f56:	16 c0       	rjmp	.+44     	; 0x6f84 <__floatsisf+0x6c>
    6f58:	88 23       	and	r24, r24
    6f5a:	11 f0       	breq	.+4      	; 0x6f60 <__floatsisf+0x48>
    6f5c:	96 e9       	ldi	r25, 0x96	; 150
    6f5e:	11 c0       	rjmp	.+34     	; 0x6f82 <__floatsisf+0x6a>
    6f60:	77 23       	and	r23, r23
    6f62:	21 f0       	breq	.+8      	; 0x6f6c <__floatsisf+0x54>
    6f64:	9e e8       	ldi	r25, 0x8E	; 142
    6f66:	87 2f       	mov	r24, r23
    6f68:	76 2f       	mov	r23, r22
    6f6a:	05 c0       	rjmp	.+10     	; 0x6f76 <__floatsisf+0x5e>
    6f6c:	66 23       	and	r22, r22
    6f6e:	71 f0       	breq	.+28     	; 0x6f8c <__floatsisf+0x74>
    6f70:	96 e8       	ldi	r25, 0x86	; 134
    6f72:	86 2f       	mov	r24, r22
    6f74:	70 e0       	ldi	r23, 0x00	; 0
    6f76:	60 e0       	ldi	r22, 0x00	; 0
    6f78:	2a f0       	brmi	.+10     	; 0x6f84 <__floatsisf+0x6c>
    6f7a:	9a 95       	dec	r25
    6f7c:	66 0f       	add	r22, r22
    6f7e:	77 1f       	adc	r23, r23
    6f80:	88 1f       	adc	r24, r24
    6f82:	da f7       	brpl	.-10     	; 0x6f7a <__floatsisf+0x62>
    6f84:	88 0f       	add	r24, r24
    6f86:	96 95       	lsr	r25
    6f88:	87 95       	ror	r24
    6f8a:	97 f9       	bld	r25, 7
    6f8c:	08 95       	ret

00006f8e <__fp_inf>:
    6f8e:	97 f9       	bld	r25, 7
    6f90:	9f 67       	ori	r25, 0x7F	; 127
    6f92:	80 e8       	ldi	r24, 0x80	; 128
    6f94:	70 e0       	ldi	r23, 0x00	; 0
    6f96:	60 e0       	ldi	r22, 0x00	; 0
    6f98:	08 95       	ret

00006f9a <__fp_nan>:
    6f9a:	9f ef       	ldi	r25, 0xFF	; 255
    6f9c:	80 ec       	ldi	r24, 0xC0	; 192
    6f9e:	08 95       	ret

00006fa0 <__fp_pscA>:
    6fa0:	00 24       	eor	r0, r0
    6fa2:	0a 94       	dec	r0
    6fa4:	16 16       	cp	r1, r22
    6fa6:	17 06       	cpc	r1, r23
    6fa8:	18 06       	cpc	r1, r24
    6faa:	09 06       	cpc	r0, r25
    6fac:	08 95       	ret

00006fae <__fp_pscB>:
    6fae:	00 24       	eor	r0, r0
    6fb0:	0a 94       	dec	r0
    6fb2:	12 16       	cp	r1, r18
    6fb4:	13 06       	cpc	r1, r19
    6fb6:	14 06       	cpc	r1, r20
    6fb8:	05 06       	cpc	r0, r21
    6fba:	08 95       	ret

00006fbc <__fp_round>:
    6fbc:	09 2e       	mov	r0, r25
    6fbe:	03 94       	inc	r0
    6fc0:	00 0c       	add	r0, r0
    6fc2:	11 f4       	brne	.+4      	; 0x6fc8 <__fp_round+0xc>
    6fc4:	88 23       	and	r24, r24
    6fc6:	52 f0       	brmi	.+20     	; 0x6fdc <__fp_round+0x20>
    6fc8:	bb 0f       	add	r27, r27
    6fca:	40 f4       	brcc	.+16     	; 0x6fdc <__fp_round+0x20>
    6fcc:	bf 2b       	or	r27, r31
    6fce:	11 f4       	brne	.+4      	; 0x6fd4 <__fp_round+0x18>
    6fd0:	60 ff       	sbrs	r22, 0
    6fd2:	04 c0       	rjmp	.+8      	; 0x6fdc <__fp_round+0x20>
    6fd4:	6f 5f       	subi	r22, 0xFF	; 255
    6fd6:	7f 4f       	sbci	r23, 0xFF	; 255
    6fd8:	8f 4f       	sbci	r24, 0xFF	; 255
    6fda:	9f 4f       	sbci	r25, 0xFF	; 255
    6fdc:	08 95       	ret

00006fde <__fp_split3>:
    6fde:	57 fd       	sbrc	r21, 7
    6fe0:	90 58       	subi	r25, 0x80	; 128
    6fe2:	44 0f       	add	r20, r20
    6fe4:	55 1f       	adc	r21, r21
    6fe6:	59 f0       	breq	.+22     	; 0x6ffe <__fp_splitA+0x10>
    6fe8:	5f 3f       	cpi	r21, 0xFF	; 255
    6fea:	71 f0       	breq	.+28     	; 0x7008 <__fp_splitA+0x1a>
    6fec:	47 95       	ror	r20

00006fee <__fp_splitA>:
    6fee:	88 0f       	add	r24, r24
    6ff0:	97 fb       	bst	r25, 7
    6ff2:	99 1f       	adc	r25, r25
    6ff4:	61 f0       	breq	.+24     	; 0x700e <__fp_splitA+0x20>
    6ff6:	9f 3f       	cpi	r25, 0xFF	; 255
    6ff8:	79 f0       	breq	.+30     	; 0x7018 <__fp_splitA+0x2a>
    6ffa:	87 95       	ror	r24
    6ffc:	08 95       	ret
    6ffe:	12 16       	cp	r1, r18
    7000:	13 06       	cpc	r1, r19
    7002:	14 06       	cpc	r1, r20
    7004:	55 1f       	adc	r21, r21
    7006:	f2 cf       	rjmp	.-28     	; 0x6fec <__fp_split3+0xe>
    7008:	46 95       	lsr	r20
    700a:	f1 df       	rcall	.-30     	; 0x6fee <__fp_splitA>
    700c:	08 c0       	rjmp	.+16     	; 0x701e <__fp_splitA+0x30>
    700e:	16 16       	cp	r1, r22
    7010:	17 06       	cpc	r1, r23
    7012:	18 06       	cpc	r1, r24
    7014:	99 1f       	adc	r25, r25
    7016:	f1 cf       	rjmp	.-30     	; 0x6ffa <__fp_splitA+0xc>
    7018:	86 95       	lsr	r24
    701a:	71 05       	cpc	r23, r1
    701c:	61 05       	cpc	r22, r1
    701e:	08 94       	sec
    7020:	08 95       	ret

00007022 <__fp_zero>:
    7022:	e8 94       	clt

00007024 <__fp_szero>:
    7024:	bb 27       	eor	r27, r27
    7026:	66 27       	eor	r22, r22
    7028:	77 27       	eor	r23, r23
    702a:	cb 01       	movw	r24, r22
    702c:	97 f9       	bld	r25, 7
    702e:	08 95       	ret

00007030 <__mulsf3>:
    7030:	0b d0       	rcall	.+22     	; 0x7048 <__mulsf3x>
    7032:	c4 cf       	rjmp	.-120    	; 0x6fbc <__fp_round>
    7034:	b5 df       	rcall	.-150    	; 0x6fa0 <__fp_pscA>
    7036:	28 f0       	brcs	.+10     	; 0x7042 <__mulsf3+0x12>
    7038:	ba df       	rcall	.-140    	; 0x6fae <__fp_pscB>
    703a:	18 f0       	brcs	.+6      	; 0x7042 <__mulsf3+0x12>
    703c:	95 23       	and	r25, r21
    703e:	09 f0       	breq	.+2      	; 0x7042 <__mulsf3+0x12>
    7040:	a6 cf       	rjmp	.-180    	; 0x6f8e <__fp_inf>
    7042:	ab cf       	rjmp	.-170    	; 0x6f9a <__fp_nan>
    7044:	11 24       	eor	r1, r1
    7046:	ee cf       	rjmp	.-36     	; 0x7024 <__fp_szero>

00007048 <__mulsf3x>:
    7048:	ca df       	rcall	.-108    	; 0x6fde <__fp_split3>
    704a:	a0 f3       	brcs	.-24     	; 0x7034 <__mulsf3+0x4>

0000704c <__mulsf3_pse>:
    704c:	95 9f       	mul	r25, r21
    704e:	d1 f3       	breq	.-12     	; 0x7044 <__mulsf3+0x14>
    7050:	95 0f       	add	r25, r21
    7052:	50 e0       	ldi	r21, 0x00	; 0
    7054:	55 1f       	adc	r21, r21
    7056:	62 9f       	mul	r22, r18
    7058:	f0 01       	movw	r30, r0
    705a:	72 9f       	mul	r23, r18
    705c:	bb 27       	eor	r27, r27
    705e:	f0 0d       	add	r31, r0
    7060:	b1 1d       	adc	r27, r1
    7062:	63 9f       	mul	r22, r19
    7064:	aa 27       	eor	r26, r26
    7066:	f0 0d       	add	r31, r0
    7068:	b1 1d       	adc	r27, r1
    706a:	aa 1f       	adc	r26, r26
    706c:	64 9f       	mul	r22, r20
    706e:	66 27       	eor	r22, r22
    7070:	b0 0d       	add	r27, r0
    7072:	a1 1d       	adc	r26, r1
    7074:	66 1f       	adc	r22, r22
    7076:	82 9f       	mul	r24, r18
    7078:	22 27       	eor	r18, r18
    707a:	b0 0d       	add	r27, r0
    707c:	a1 1d       	adc	r26, r1
    707e:	62 1f       	adc	r22, r18
    7080:	73 9f       	mul	r23, r19
    7082:	b0 0d       	add	r27, r0
    7084:	a1 1d       	adc	r26, r1
    7086:	62 1f       	adc	r22, r18
    7088:	83 9f       	mul	r24, r19
    708a:	a0 0d       	add	r26, r0
    708c:	61 1d       	adc	r22, r1
    708e:	22 1f       	adc	r18, r18
    7090:	74 9f       	mul	r23, r20
    7092:	33 27       	eor	r19, r19
    7094:	a0 0d       	add	r26, r0
    7096:	61 1d       	adc	r22, r1
    7098:	23 1f       	adc	r18, r19
    709a:	84 9f       	mul	r24, r20
    709c:	60 0d       	add	r22, r0
    709e:	21 1d       	adc	r18, r1
    70a0:	82 2f       	mov	r24, r18
    70a2:	76 2f       	mov	r23, r22
    70a4:	6a 2f       	mov	r22, r26
    70a6:	11 24       	eor	r1, r1
    70a8:	9f 57       	subi	r25, 0x7F	; 127
    70aa:	50 40       	sbci	r21, 0x00	; 0
    70ac:	8a f0       	brmi	.+34     	; 0x70d0 <__mulsf3_pse+0x84>
    70ae:	e1 f0       	breq	.+56     	; 0x70e8 <__mulsf3_pse+0x9c>
    70b0:	88 23       	and	r24, r24
    70b2:	4a f0       	brmi	.+18     	; 0x70c6 <__mulsf3_pse+0x7a>
    70b4:	ee 0f       	add	r30, r30
    70b6:	ff 1f       	adc	r31, r31
    70b8:	bb 1f       	adc	r27, r27
    70ba:	66 1f       	adc	r22, r22
    70bc:	77 1f       	adc	r23, r23
    70be:	88 1f       	adc	r24, r24
    70c0:	91 50       	subi	r25, 0x01	; 1
    70c2:	50 40       	sbci	r21, 0x00	; 0
    70c4:	a9 f7       	brne	.-22     	; 0x70b0 <__mulsf3_pse+0x64>
    70c6:	9e 3f       	cpi	r25, 0xFE	; 254
    70c8:	51 05       	cpc	r21, r1
    70ca:	70 f0       	brcs	.+28     	; 0x70e8 <__mulsf3_pse+0x9c>
    70cc:	60 cf       	rjmp	.-320    	; 0x6f8e <__fp_inf>
    70ce:	aa cf       	rjmp	.-172    	; 0x7024 <__fp_szero>
    70d0:	5f 3f       	cpi	r21, 0xFF	; 255
    70d2:	ec f3       	brlt	.-6      	; 0x70ce <__mulsf3_pse+0x82>
    70d4:	98 3e       	cpi	r25, 0xE8	; 232
    70d6:	dc f3       	brlt	.-10     	; 0x70ce <__mulsf3_pse+0x82>
    70d8:	86 95       	lsr	r24
    70da:	77 95       	ror	r23
    70dc:	67 95       	ror	r22
    70de:	b7 95       	ror	r27
    70e0:	f7 95       	ror	r31
    70e2:	e7 95       	ror	r30
    70e4:	9f 5f       	subi	r25, 0xFF	; 255
    70e6:	c1 f7       	brne	.-16     	; 0x70d8 <__mulsf3_pse+0x8c>
    70e8:	fe 2b       	or	r31, r30
    70ea:	88 0f       	add	r24, r24
    70ec:	91 1d       	adc	r25, r1
    70ee:	96 95       	lsr	r25
    70f0:	87 95       	ror	r24
    70f2:	97 f9       	bld	r25, 7
    70f4:	08 95       	ret

000070f6 <__udivmodsi4>:
    70f6:	a1 e2       	ldi	r26, 0x21	; 33
    70f8:	1a 2e       	mov	r1, r26
    70fa:	aa 1b       	sub	r26, r26
    70fc:	bb 1b       	sub	r27, r27
    70fe:	fd 01       	movw	r30, r26
    7100:	0d c0       	rjmp	.+26     	; 0x711c <__udivmodsi4_ep>

00007102 <__udivmodsi4_loop>:
    7102:	aa 1f       	adc	r26, r26
    7104:	bb 1f       	adc	r27, r27
    7106:	ee 1f       	adc	r30, r30
    7108:	ff 1f       	adc	r31, r31
    710a:	a2 17       	cp	r26, r18
    710c:	b3 07       	cpc	r27, r19
    710e:	e4 07       	cpc	r30, r20
    7110:	f5 07       	cpc	r31, r21
    7112:	20 f0       	brcs	.+8      	; 0x711c <__udivmodsi4_ep>
    7114:	a2 1b       	sub	r26, r18
    7116:	b3 0b       	sbc	r27, r19
    7118:	e4 0b       	sbc	r30, r20
    711a:	f5 0b       	sbc	r31, r21

0000711c <__udivmodsi4_ep>:
    711c:	66 1f       	adc	r22, r22
    711e:	77 1f       	adc	r23, r23
    7120:	88 1f       	adc	r24, r24
    7122:	99 1f       	adc	r25, r25
    7124:	1a 94       	dec	r1
    7126:	69 f7       	brne	.-38     	; 0x7102 <__udivmodsi4_loop>
    7128:	60 95       	com	r22
    712a:	70 95       	com	r23
    712c:	80 95       	com	r24
    712e:	90 95       	com	r25
    7130:	9b 01       	movw	r18, r22
    7132:	ac 01       	movw	r20, r24
    7134:	bd 01       	movw	r22, r26
    7136:	cf 01       	movw	r24, r30
    7138:	08 95       	ret

0000713a <__tablejump2__>:
    713a:	ee 0f       	add	r30, r30
    713c:	ff 1f       	adc	r31, r31

0000713e <__tablejump__>:
    713e:	05 90       	lpm	r0, Z+
    7140:	f4 91       	lpm	r31, Z
    7142:	e0 2d       	mov	r30, r0
    7144:	09 94       	ijmp

00007146 <__umulhisi3>:
    7146:	a2 9f       	mul	r26, r18
    7148:	b0 01       	movw	r22, r0
    714a:	b3 9f       	mul	r27, r19
    714c:	c0 01       	movw	r24, r0
    714e:	a3 9f       	mul	r26, r19
    7150:	70 0d       	add	r23, r0
    7152:	81 1d       	adc	r24, r1
    7154:	11 24       	eor	r1, r1
    7156:	91 1d       	adc	r25, r1
    7158:	b2 9f       	mul	r27, r18
    715a:	70 0d       	add	r23, r0
    715c:	81 1d       	adc	r24, r1
    715e:	11 24       	eor	r1, r1
    7160:	91 1d       	adc	r25, r1
    7162:	08 95       	ret

00007164 <__muluhisi3>:
    7164:	f0 df       	rcall	.-32     	; 0x7146 <__umulhisi3>
    7166:	a5 9f       	mul	r26, r21
    7168:	90 0d       	add	r25, r0
    716a:	b4 9f       	mul	r27, r20
    716c:	90 0d       	add	r25, r0
    716e:	a4 9f       	mul	r26, r20
    7170:	80 0d       	add	r24, r0
    7172:	91 1d       	adc	r25, r1
    7174:	11 24       	eor	r1, r1
    7176:	08 95       	ret

00007178 <strcpy>:
    7178:	fb 01       	movw	r30, r22
    717a:	dc 01       	movw	r26, r24
    717c:	01 90       	ld	r0, Z+
    717e:	0d 92       	st	X+, r0
    7180:	00 20       	and	r0, r0
    7182:	e1 f7       	brne	.-8      	; 0x717c <strcpy+0x4>
    7184:	08 95       	ret

00007186 <strstr>:
    7186:	fb 01       	movw	r30, r22
    7188:	51 91       	ld	r21, Z+
    718a:	55 23       	and	r21, r21
    718c:	a9 f0       	breq	.+42     	; 0x71b8 <strstr+0x32>
    718e:	bf 01       	movw	r22, r30
    7190:	dc 01       	movw	r26, r24
    7192:	4d 91       	ld	r20, X+
    7194:	45 17       	cp	r20, r21
    7196:	41 11       	cpse	r20, r1
    7198:	e1 f7       	brne	.-8      	; 0x7192 <strstr+0xc>
    719a:	59 f4       	brne	.+22     	; 0x71b2 <strstr+0x2c>
    719c:	cd 01       	movw	r24, r26
    719e:	01 90       	ld	r0, Z+
    71a0:	00 20       	and	r0, r0
    71a2:	49 f0       	breq	.+18     	; 0x71b6 <strstr+0x30>
    71a4:	4d 91       	ld	r20, X+
    71a6:	40 15       	cp	r20, r0
    71a8:	41 11       	cpse	r20, r1
    71aa:	c9 f3       	breq	.-14     	; 0x719e <strstr+0x18>
    71ac:	fb 01       	movw	r30, r22
    71ae:	41 11       	cpse	r20, r1
    71b0:	ef cf       	rjmp	.-34     	; 0x7190 <strstr+0xa>
    71b2:	81 e0       	ldi	r24, 0x01	; 1
    71b4:	90 e0       	ldi	r25, 0x00	; 0
    71b6:	01 97       	sbiw	r24, 0x01	; 1
    71b8:	08 95       	ret

000071ba <printf>:
    71ba:	cf 93       	push	r28
    71bc:	df 93       	push	r29
    71be:	cd b7       	in	r28, 0x3d	; 61
    71c0:	de b7       	in	r29, 0x3e	; 62
    71c2:	fe 01       	movw	r30, r28
    71c4:	35 96       	adiw	r30, 0x05	; 5
    71c6:	61 91       	ld	r22, Z+
    71c8:	71 91       	ld	r23, Z+
    71ca:	af 01       	movw	r20, r30
    71cc:	80 91 53 2f 	lds	r24, 0x2F53
    71d0:	90 91 54 2f 	lds	r25, 0x2F54
    71d4:	58 d0       	rcall	.+176    	; 0x7286 <vfprintf>
    71d6:	df 91       	pop	r29
    71d8:	cf 91       	pop	r28
    71da:	08 95       	ret

000071dc <puts>:
    71dc:	0f 93       	push	r16
    71de:	1f 93       	push	r17
    71e0:	cf 93       	push	r28
    71e2:	df 93       	push	r29
    71e4:	e0 91 53 2f 	lds	r30, 0x2F53
    71e8:	f0 91 54 2f 	lds	r31, 0x2F54
    71ec:	23 81       	ldd	r18, Z+3	; 0x03
    71ee:	21 ff       	sbrs	r18, 1
    71f0:	1b c0       	rjmp	.+54     	; 0x7228 <puts+0x4c>
    71f2:	ec 01       	movw	r28, r24
    71f4:	00 e0       	ldi	r16, 0x00	; 0
    71f6:	10 e0       	ldi	r17, 0x00	; 0
    71f8:	89 91       	ld	r24, Y+
    71fa:	60 91 53 2f 	lds	r22, 0x2F53
    71fe:	70 91 54 2f 	lds	r23, 0x2F54
    7202:	db 01       	movw	r26, r22
    7204:	18 96       	adiw	r26, 0x08	; 8
    7206:	ed 91       	ld	r30, X+
    7208:	fc 91       	ld	r31, X
    720a:	19 97       	sbiw	r26, 0x09	; 9
    720c:	88 23       	and	r24, r24
    720e:	31 f0       	breq	.+12     	; 0x721c <puts+0x40>
    7210:	09 95       	icall
    7212:	89 2b       	or	r24, r25
    7214:	89 f3       	breq	.-30     	; 0x71f8 <puts+0x1c>
    7216:	0f ef       	ldi	r16, 0xFF	; 255
    7218:	1f ef       	ldi	r17, 0xFF	; 255
    721a:	ee cf       	rjmp	.-36     	; 0x71f8 <puts+0x1c>
    721c:	8a e0       	ldi	r24, 0x0A	; 10
    721e:	09 95       	icall
    7220:	89 2b       	or	r24, r25
    7222:	11 f4       	brne	.+4      	; 0x7228 <puts+0x4c>
    7224:	c8 01       	movw	r24, r16
    7226:	02 c0       	rjmp	.+4      	; 0x722c <puts+0x50>
    7228:	8f ef       	ldi	r24, 0xFF	; 255
    722a:	9f ef       	ldi	r25, 0xFF	; 255
    722c:	df 91       	pop	r29
    722e:	cf 91       	pop	r28
    7230:	1f 91       	pop	r17
    7232:	0f 91       	pop	r16
    7234:	08 95       	ret

00007236 <sprintf>:
    7236:	0f 93       	push	r16
    7238:	1f 93       	push	r17
    723a:	cf 93       	push	r28
    723c:	df 93       	push	r29
    723e:	cd b7       	in	r28, 0x3d	; 61
    7240:	de b7       	in	r29, 0x3e	; 62
    7242:	2e 97       	sbiw	r28, 0x0e	; 14
    7244:	cd bf       	out	0x3d, r28	; 61
    7246:	de bf       	out	0x3e, r29	; 62
    7248:	0d 89       	ldd	r16, Y+21	; 0x15
    724a:	1e 89       	ldd	r17, Y+22	; 0x16
    724c:	86 e0       	ldi	r24, 0x06	; 6
    724e:	8c 83       	std	Y+4, r24	; 0x04
    7250:	09 83       	std	Y+1, r16	; 0x01
    7252:	1a 83       	std	Y+2, r17	; 0x02
    7254:	8f ef       	ldi	r24, 0xFF	; 255
    7256:	9f e7       	ldi	r25, 0x7F	; 127
    7258:	8d 83       	std	Y+5, r24	; 0x05
    725a:	9e 83       	std	Y+6, r25	; 0x06
    725c:	ae 01       	movw	r20, r28
    725e:	47 5e       	subi	r20, 0xE7	; 231
    7260:	5f 4f       	sbci	r21, 0xFF	; 255
    7262:	6f 89       	ldd	r22, Y+23	; 0x17
    7264:	78 8d       	ldd	r23, Y+24	; 0x18
    7266:	ce 01       	movw	r24, r28
    7268:	01 96       	adiw	r24, 0x01	; 1
    726a:	0d d0       	rcall	.+26     	; 0x7286 <vfprintf>
    726c:	ef 81       	ldd	r30, Y+7	; 0x07
    726e:	f8 85       	ldd	r31, Y+8	; 0x08
    7270:	e0 0f       	add	r30, r16
    7272:	f1 1f       	adc	r31, r17
    7274:	10 82       	st	Z, r1
    7276:	2e 96       	adiw	r28, 0x0e	; 14
    7278:	cd bf       	out	0x3d, r28	; 61
    727a:	de bf       	out	0x3e, r29	; 62
    727c:	df 91       	pop	r29
    727e:	cf 91       	pop	r28
    7280:	1f 91       	pop	r17
    7282:	0f 91       	pop	r16
    7284:	08 95       	ret

00007286 <vfprintf>:
    7286:	2f 92       	push	r2
    7288:	3f 92       	push	r3
    728a:	4f 92       	push	r4
    728c:	5f 92       	push	r5
    728e:	6f 92       	push	r6
    7290:	7f 92       	push	r7
    7292:	8f 92       	push	r8
    7294:	9f 92       	push	r9
    7296:	af 92       	push	r10
    7298:	bf 92       	push	r11
    729a:	cf 92       	push	r12
    729c:	df 92       	push	r13
    729e:	ef 92       	push	r14
    72a0:	ff 92       	push	r15
    72a2:	0f 93       	push	r16
    72a4:	1f 93       	push	r17
    72a6:	cf 93       	push	r28
    72a8:	df 93       	push	r29
    72aa:	cd b7       	in	r28, 0x3d	; 61
    72ac:	de b7       	in	r29, 0x3e	; 62
    72ae:	2c 97       	sbiw	r28, 0x0c	; 12
    72b0:	cd bf       	out	0x3d, r28	; 61
    72b2:	de bf       	out	0x3e, r29	; 62
    72b4:	7c 01       	movw	r14, r24
    72b6:	6b 01       	movw	r12, r22
    72b8:	8a 01       	movw	r16, r20
    72ba:	fc 01       	movw	r30, r24
    72bc:	16 82       	std	Z+6, r1	; 0x06
    72be:	17 82       	std	Z+7, r1	; 0x07
    72c0:	83 81       	ldd	r24, Z+3	; 0x03
    72c2:	81 ff       	sbrs	r24, 1
    72c4:	b0 c1       	rjmp	.+864    	; 0x7626 <vfprintf+0x3a0>
    72c6:	ce 01       	movw	r24, r28
    72c8:	01 96       	adiw	r24, 0x01	; 1
    72ca:	4c 01       	movw	r8, r24
    72cc:	f7 01       	movw	r30, r14
    72ce:	93 81       	ldd	r25, Z+3	; 0x03
    72d0:	f6 01       	movw	r30, r12
    72d2:	93 fd       	sbrc	r25, 3
    72d4:	85 91       	lpm	r24, Z+
    72d6:	93 ff       	sbrs	r25, 3
    72d8:	81 91       	ld	r24, Z+
    72da:	6f 01       	movw	r12, r30
    72dc:	88 23       	and	r24, r24
    72de:	09 f4       	brne	.+2      	; 0x72e2 <vfprintf+0x5c>
    72e0:	9e c1       	rjmp	.+828    	; 0x761e <vfprintf+0x398>
    72e2:	85 32       	cpi	r24, 0x25	; 37
    72e4:	39 f4       	brne	.+14     	; 0x72f4 <vfprintf+0x6e>
    72e6:	93 fd       	sbrc	r25, 3
    72e8:	85 91       	lpm	r24, Z+
    72ea:	93 ff       	sbrs	r25, 3
    72ec:	81 91       	ld	r24, Z+
    72ee:	6f 01       	movw	r12, r30
    72f0:	85 32       	cpi	r24, 0x25	; 37
    72f2:	21 f4       	brne	.+8      	; 0x72fc <vfprintf+0x76>
    72f4:	b7 01       	movw	r22, r14
    72f6:	90 e0       	ldi	r25, 0x00	; 0
    72f8:	c4 d1       	rcall	.+904    	; 0x7682 <fputc>
    72fa:	e8 cf       	rjmp	.-48     	; 0x72cc <vfprintf+0x46>
    72fc:	51 2c       	mov	r5, r1
    72fe:	31 2c       	mov	r3, r1
    7300:	20 e0       	ldi	r18, 0x00	; 0
    7302:	20 32       	cpi	r18, 0x20	; 32
    7304:	a0 f4       	brcc	.+40     	; 0x732e <vfprintf+0xa8>
    7306:	8b 32       	cpi	r24, 0x2B	; 43
    7308:	69 f0       	breq	.+26     	; 0x7324 <vfprintf+0x9e>
    730a:	30 f4       	brcc	.+12     	; 0x7318 <vfprintf+0x92>
    730c:	80 32       	cpi	r24, 0x20	; 32
    730e:	59 f0       	breq	.+22     	; 0x7326 <vfprintf+0xa0>
    7310:	83 32       	cpi	r24, 0x23	; 35
    7312:	69 f4       	brne	.+26     	; 0x732e <vfprintf+0xa8>
    7314:	20 61       	ori	r18, 0x10	; 16
    7316:	2c c0       	rjmp	.+88     	; 0x7370 <vfprintf+0xea>
    7318:	8d 32       	cpi	r24, 0x2D	; 45
    731a:	39 f0       	breq	.+14     	; 0x732a <vfprintf+0xa4>
    731c:	80 33       	cpi	r24, 0x30	; 48
    731e:	39 f4       	brne	.+14     	; 0x732e <vfprintf+0xa8>
    7320:	21 60       	ori	r18, 0x01	; 1
    7322:	26 c0       	rjmp	.+76     	; 0x7370 <vfprintf+0xea>
    7324:	22 60       	ori	r18, 0x02	; 2
    7326:	24 60       	ori	r18, 0x04	; 4
    7328:	23 c0       	rjmp	.+70     	; 0x7370 <vfprintf+0xea>
    732a:	28 60       	ori	r18, 0x08	; 8
    732c:	21 c0       	rjmp	.+66     	; 0x7370 <vfprintf+0xea>
    732e:	27 fd       	sbrc	r18, 7
    7330:	27 c0       	rjmp	.+78     	; 0x7380 <vfprintf+0xfa>
    7332:	30 ed       	ldi	r19, 0xD0	; 208
    7334:	38 0f       	add	r19, r24
    7336:	3a 30       	cpi	r19, 0x0A	; 10
    7338:	78 f4       	brcc	.+30     	; 0x7358 <vfprintf+0xd2>
    733a:	26 ff       	sbrs	r18, 6
    733c:	06 c0       	rjmp	.+12     	; 0x734a <vfprintf+0xc4>
    733e:	fa e0       	ldi	r31, 0x0A	; 10
    7340:	5f 9e       	mul	r5, r31
    7342:	30 0d       	add	r19, r0
    7344:	11 24       	eor	r1, r1
    7346:	53 2e       	mov	r5, r19
    7348:	13 c0       	rjmp	.+38     	; 0x7370 <vfprintf+0xea>
    734a:	8a e0       	ldi	r24, 0x0A	; 10
    734c:	38 9e       	mul	r3, r24
    734e:	30 0d       	add	r19, r0
    7350:	11 24       	eor	r1, r1
    7352:	33 2e       	mov	r3, r19
    7354:	20 62       	ori	r18, 0x20	; 32
    7356:	0c c0       	rjmp	.+24     	; 0x7370 <vfprintf+0xea>
    7358:	8e 32       	cpi	r24, 0x2E	; 46
    735a:	21 f4       	brne	.+8      	; 0x7364 <vfprintf+0xde>
    735c:	26 fd       	sbrc	r18, 6
    735e:	5f c1       	rjmp	.+702    	; 0x761e <vfprintf+0x398>
    7360:	20 64       	ori	r18, 0x40	; 64
    7362:	06 c0       	rjmp	.+12     	; 0x7370 <vfprintf+0xea>
    7364:	8c 36       	cpi	r24, 0x6C	; 108
    7366:	11 f4       	brne	.+4      	; 0x736c <vfprintf+0xe6>
    7368:	20 68       	ori	r18, 0x80	; 128
    736a:	02 c0       	rjmp	.+4      	; 0x7370 <vfprintf+0xea>
    736c:	88 36       	cpi	r24, 0x68	; 104
    736e:	41 f4       	brne	.+16     	; 0x7380 <vfprintf+0xfa>
    7370:	f6 01       	movw	r30, r12
    7372:	93 fd       	sbrc	r25, 3
    7374:	85 91       	lpm	r24, Z+
    7376:	93 ff       	sbrs	r25, 3
    7378:	81 91       	ld	r24, Z+
    737a:	6f 01       	movw	r12, r30
    737c:	81 11       	cpse	r24, r1
    737e:	c1 cf       	rjmp	.-126    	; 0x7302 <vfprintf+0x7c>
    7380:	98 2f       	mov	r25, r24
    7382:	9f 7d       	andi	r25, 0xDF	; 223
    7384:	95 54       	subi	r25, 0x45	; 69
    7386:	93 30       	cpi	r25, 0x03	; 3
    7388:	28 f4       	brcc	.+10     	; 0x7394 <vfprintf+0x10e>
    738a:	0c 5f       	subi	r16, 0xFC	; 252
    738c:	1f 4f       	sbci	r17, 0xFF	; 255
    738e:	ff e3       	ldi	r31, 0x3F	; 63
    7390:	f9 83       	std	Y+1, r31	; 0x01
    7392:	0d c0       	rjmp	.+26     	; 0x73ae <vfprintf+0x128>
    7394:	83 36       	cpi	r24, 0x63	; 99
    7396:	31 f0       	breq	.+12     	; 0x73a4 <vfprintf+0x11e>
    7398:	83 37       	cpi	r24, 0x73	; 115
    739a:	71 f0       	breq	.+28     	; 0x73b8 <vfprintf+0x132>
    739c:	83 35       	cpi	r24, 0x53	; 83
    739e:	09 f0       	breq	.+2      	; 0x73a2 <vfprintf+0x11c>
    73a0:	57 c0       	rjmp	.+174    	; 0x7450 <vfprintf+0x1ca>
    73a2:	21 c0       	rjmp	.+66     	; 0x73e6 <vfprintf+0x160>
    73a4:	f8 01       	movw	r30, r16
    73a6:	80 81       	ld	r24, Z
    73a8:	89 83       	std	Y+1, r24	; 0x01
    73aa:	0e 5f       	subi	r16, 0xFE	; 254
    73ac:	1f 4f       	sbci	r17, 0xFF	; 255
    73ae:	44 24       	eor	r4, r4
    73b0:	43 94       	inc	r4
    73b2:	51 2c       	mov	r5, r1
    73b4:	54 01       	movw	r10, r8
    73b6:	14 c0       	rjmp	.+40     	; 0x73e0 <vfprintf+0x15a>
    73b8:	38 01       	movw	r6, r16
    73ba:	f2 e0       	ldi	r31, 0x02	; 2
    73bc:	6f 0e       	add	r6, r31
    73be:	71 1c       	adc	r7, r1
    73c0:	f8 01       	movw	r30, r16
    73c2:	a0 80       	ld	r10, Z
    73c4:	b1 80       	ldd	r11, Z+1	; 0x01
    73c6:	26 ff       	sbrs	r18, 6
    73c8:	03 c0       	rjmp	.+6      	; 0x73d0 <vfprintf+0x14a>
    73ca:	65 2d       	mov	r22, r5
    73cc:	70 e0       	ldi	r23, 0x00	; 0
    73ce:	02 c0       	rjmp	.+4      	; 0x73d4 <vfprintf+0x14e>
    73d0:	6f ef       	ldi	r22, 0xFF	; 255
    73d2:	7f ef       	ldi	r23, 0xFF	; 255
    73d4:	c5 01       	movw	r24, r10
    73d6:	2c 87       	std	Y+12, r18	; 0x0c
    73d8:	49 d1       	rcall	.+658    	; 0x766c <strnlen>
    73da:	2c 01       	movw	r4, r24
    73dc:	83 01       	movw	r16, r6
    73de:	2c 85       	ldd	r18, Y+12	; 0x0c
    73e0:	2f 77       	andi	r18, 0x7F	; 127
    73e2:	22 2e       	mov	r2, r18
    73e4:	16 c0       	rjmp	.+44     	; 0x7412 <vfprintf+0x18c>
    73e6:	38 01       	movw	r6, r16
    73e8:	f2 e0       	ldi	r31, 0x02	; 2
    73ea:	6f 0e       	add	r6, r31
    73ec:	71 1c       	adc	r7, r1
    73ee:	f8 01       	movw	r30, r16
    73f0:	a0 80       	ld	r10, Z
    73f2:	b1 80       	ldd	r11, Z+1	; 0x01
    73f4:	26 ff       	sbrs	r18, 6
    73f6:	03 c0       	rjmp	.+6      	; 0x73fe <vfprintf+0x178>
    73f8:	65 2d       	mov	r22, r5
    73fa:	70 e0       	ldi	r23, 0x00	; 0
    73fc:	02 c0       	rjmp	.+4      	; 0x7402 <vfprintf+0x17c>
    73fe:	6f ef       	ldi	r22, 0xFF	; 255
    7400:	7f ef       	ldi	r23, 0xFF	; 255
    7402:	c5 01       	movw	r24, r10
    7404:	2c 87       	std	Y+12, r18	; 0x0c
    7406:	27 d1       	rcall	.+590    	; 0x7656 <strnlen_P>
    7408:	2c 01       	movw	r4, r24
    740a:	2c 85       	ldd	r18, Y+12	; 0x0c
    740c:	20 68       	ori	r18, 0x80	; 128
    740e:	22 2e       	mov	r2, r18
    7410:	83 01       	movw	r16, r6
    7412:	23 fc       	sbrc	r2, 3
    7414:	19 c0       	rjmp	.+50     	; 0x7448 <vfprintf+0x1c2>
    7416:	83 2d       	mov	r24, r3
    7418:	90 e0       	ldi	r25, 0x00	; 0
    741a:	48 16       	cp	r4, r24
    741c:	59 06       	cpc	r5, r25
    741e:	a0 f4       	brcc	.+40     	; 0x7448 <vfprintf+0x1c2>
    7420:	b7 01       	movw	r22, r14
    7422:	80 e2       	ldi	r24, 0x20	; 32
    7424:	90 e0       	ldi	r25, 0x00	; 0
    7426:	2d d1       	rcall	.+602    	; 0x7682 <fputc>
    7428:	3a 94       	dec	r3
    742a:	f5 cf       	rjmp	.-22     	; 0x7416 <vfprintf+0x190>
    742c:	f5 01       	movw	r30, r10
    742e:	27 fc       	sbrc	r2, 7
    7430:	85 91       	lpm	r24, Z+
    7432:	27 fe       	sbrs	r2, 7
    7434:	81 91       	ld	r24, Z+
    7436:	5f 01       	movw	r10, r30
    7438:	b7 01       	movw	r22, r14
    743a:	90 e0       	ldi	r25, 0x00	; 0
    743c:	22 d1       	rcall	.+580    	; 0x7682 <fputc>
    743e:	31 10       	cpse	r3, r1
    7440:	3a 94       	dec	r3
    7442:	f1 e0       	ldi	r31, 0x01	; 1
    7444:	4f 1a       	sub	r4, r31
    7446:	51 08       	sbc	r5, r1
    7448:	41 14       	cp	r4, r1
    744a:	51 04       	cpc	r5, r1
    744c:	79 f7       	brne	.-34     	; 0x742c <vfprintf+0x1a6>
    744e:	de c0       	rjmp	.+444    	; 0x760c <vfprintf+0x386>
    7450:	84 36       	cpi	r24, 0x64	; 100
    7452:	11 f0       	breq	.+4      	; 0x7458 <vfprintf+0x1d2>
    7454:	89 36       	cpi	r24, 0x69	; 105
    7456:	31 f5       	brne	.+76     	; 0x74a4 <vfprintf+0x21e>
    7458:	f8 01       	movw	r30, r16
    745a:	27 ff       	sbrs	r18, 7
    745c:	07 c0       	rjmp	.+14     	; 0x746c <vfprintf+0x1e6>
    745e:	60 81       	ld	r22, Z
    7460:	71 81       	ldd	r23, Z+1	; 0x01
    7462:	82 81       	ldd	r24, Z+2	; 0x02
    7464:	93 81       	ldd	r25, Z+3	; 0x03
    7466:	0c 5f       	subi	r16, 0xFC	; 252
    7468:	1f 4f       	sbci	r17, 0xFF	; 255
    746a:	08 c0       	rjmp	.+16     	; 0x747c <vfprintf+0x1f6>
    746c:	60 81       	ld	r22, Z
    746e:	71 81       	ldd	r23, Z+1	; 0x01
    7470:	88 27       	eor	r24, r24
    7472:	77 fd       	sbrc	r23, 7
    7474:	80 95       	com	r24
    7476:	98 2f       	mov	r25, r24
    7478:	0e 5f       	subi	r16, 0xFE	; 254
    747a:	1f 4f       	sbci	r17, 0xFF	; 255
    747c:	2f 76       	andi	r18, 0x6F	; 111
    747e:	b2 2e       	mov	r11, r18
    7480:	97 ff       	sbrs	r25, 7
    7482:	09 c0       	rjmp	.+18     	; 0x7496 <vfprintf+0x210>
    7484:	90 95       	com	r25
    7486:	80 95       	com	r24
    7488:	70 95       	com	r23
    748a:	61 95       	neg	r22
    748c:	7f 4f       	sbci	r23, 0xFF	; 255
    748e:	8f 4f       	sbci	r24, 0xFF	; 255
    7490:	9f 4f       	sbci	r25, 0xFF	; 255
    7492:	20 68       	ori	r18, 0x80	; 128
    7494:	b2 2e       	mov	r11, r18
    7496:	2a e0       	ldi	r18, 0x0A	; 10
    7498:	30 e0       	ldi	r19, 0x00	; 0
    749a:	a4 01       	movw	r20, r8
    749c:	24 d1       	rcall	.+584    	; 0x76e6 <__ultoa_invert>
    749e:	a8 2e       	mov	r10, r24
    74a0:	a8 18       	sub	r10, r8
    74a2:	43 c0       	rjmp	.+134    	; 0x752a <vfprintf+0x2a4>
    74a4:	85 37       	cpi	r24, 0x75	; 117
    74a6:	29 f4       	brne	.+10     	; 0x74b2 <vfprintf+0x22c>
    74a8:	2f 7e       	andi	r18, 0xEF	; 239
    74aa:	b2 2e       	mov	r11, r18
    74ac:	2a e0       	ldi	r18, 0x0A	; 10
    74ae:	30 e0       	ldi	r19, 0x00	; 0
    74b0:	25 c0       	rjmp	.+74     	; 0x74fc <vfprintf+0x276>
    74b2:	f2 2f       	mov	r31, r18
    74b4:	f9 7f       	andi	r31, 0xF9	; 249
    74b6:	bf 2e       	mov	r11, r31
    74b8:	8f 36       	cpi	r24, 0x6F	; 111
    74ba:	c1 f0       	breq	.+48     	; 0x74ec <vfprintf+0x266>
    74bc:	18 f4       	brcc	.+6      	; 0x74c4 <vfprintf+0x23e>
    74be:	88 35       	cpi	r24, 0x58	; 88
    74c0:	79 f0       	breq	.+30     	; 0x74e0 <vfprintf+0x25a>
    74c2:	ad c0       	rjmp	.+346    	; 0x761e <vfprintf+0x398>
    74c4:	80 37       	cpi	r24, 0x70	; 112
    74c6:	19 f0       	breq	.+6      	; 0x74ce <vfprintf+0x248>
    74c8:	88 37       	cpi	r24, 0x78	; 120
    74ca:	21 f0       	breq	.+8      	; 0x74d4 <vfprintf+0x24e>
    74cc:	a8 c0       	rjmp	.+336    	; 0x761e <vfprintf+0x398>
    74ce:	2f 2f       	mov	r18, r31
    74d0:	20 61       	ori	r18, 0x10	; 16
    74d2:	b2 2e       	mov	r11, r18
    74d4:	b4 fe       	sbrs	r11, 4
    74d6:	0d c0       	rjmp	.+26     	; 0x74f2 <vfprintf+0x26c>
    74d8:	8b 2d       	mov	r24, r11
    74da:	84 60       	ori	r24, 0x04	; 4
    74dc:	b8 2e       	mov	r11, r24
    74de:	09 c0       	rjmp	.+18     	; 0x74f2 <vfprintf+0x26c>
    74e0:	24 ff       	sbrs	r18, 4
    74e2:	0a c0       	rjmp	.+20     	; 0x74f8 <vfprintf+0x272>
    74e4:	9f 2f       	mov	r25, r31
    74e6:	96 60       	ori	r25, 0x06	; 6
    74e8:	b9 2e       	mov	r11, r25
    74ea:	06 c0       	rjmp	.+12     	; 0x74f8 <vfprintf+0x272>
    74ec:	28 e0       	ldi	r18, 0x08	; 8
    74ee:	30 e0       	ldi	r19, 0x00	; 0
    74f0:	05 c0       	rjmp	.+10     	; 0x74fc <vfprintf+0x276>
    74f2:	20 e1       	ldi	r18, 0x10	; 16
    74f4:	30 e0       	ldi	r19, 0x00	; 0
    74f6:	02 c0       	rjmp	.+4      	; 0x74fc <vfprintf+0x276>
    74f8:	20 e1       	ldi	r18, 0x10	; 16
    74fa:	32 e0       	ldi	r19, 0x02	; 2
    74fc:	f8 01       	movw	r30, r16
    74fe:	b7 fe       	sbrs	r11, 7
    7500:	07 c0       	rjmp	.+14     	; 0x7510 <vfprintf+0x28a>
    7502:	60 81       	ld	r22, Z
    7504:	71 81       	ldd	r23, Z+1	; 0x01
    7506:	82 81       	ldd	r24, Z+2	; 0x02
    7508:	93 81       	ldd	r25, Z+3	; 0x03
    750a:	0c 5f       	subi	r16, 0xFC	; 252
    750c:	1f 4f       	sbci	r17, 0xFF	; 255
    750e:	06 c0       	rjmp	.+12     	; 0x751c <vfprintf+0x296>
    7510:	60 81       	ld	r22, Z
    7512:	71 81       	ldd	r23, Z+1	; 0x01
    7514:	80 e0       	ldi	r24, 0x00	; 0
    7516:	90 e0       	ldi	r25, 0x00	; 0
    7518:	0e 5f       	subi	r16, 0xFE	; 254
    751a:	1f 4f       	sbci	r17, 0xFF	; 255
    751c:	a4 01       	movw	r20, r8
    751e:	e3 d0       	rcall	.+454    	; 0x76e6 <__ultoa_invert>
    7520:	a8 2e       	mov	r10, r24
    7522:	a8 18       	sub	r10, r8
    7524:	fb 2d       	mov	r31, r11
    7526:	ff 77       	andi	r31, 0x7F	; 127
    7528:	bf 2e       	mov	r11, r31
    752a:	b6 fe       	sbrs	r11, 6
    752c:	0b c0       	rjmp	.+22     	; 0x7544 <vfprintf+0x2be>
    752e:	2b 2d       	mov	r18, r11
    7530:	2e 7f       	andi	r18, 0xFE	; 254
    7532:	a5 14       	cp	r10, r5
    7534:	50 f4       	brcc	.+20     	; 0x754a <vfprintf+0x2c4>
    7536:	b4 fe       	sbrs	r11, 4
    7538:	0a c0       	rjmp	.+20     	; 0x754e <vfprintf+0x2c8>
    753a:	b2 fc       	sbrc	r11, 2
    753c:	08 c0       	rjmp	.+16     	; 0x754e <vfprintf+0x2c8>
    753e:	2b 2d       	mov	r18, r11
    7540:	2e 7e       	andi	r18, 0xEE	; 238
    7542:	05 c0       	rjmp	.+10     	; 0x754e <vfprintf+0x2c8>
    7544:	7a 2c       	mov	r7, r10
    7546:	2b 2d       	mov	r18, r11
    7548:	03 c0       	rjmp	.+6      	; 0x7550 <vfprintf+0x2ca>
    754a:	7a 2c       	mov	r7, r10
    754c:	01 c0       	rjmp	.+2      	; 0x7550 <vfprintf+0x2ca>
    754e:	75 2c       	mov	r7, r5
    7550:	24 ff       	sbrs	r18, 4
    7552:	0d c0       	rjmp	.+26     	; 0x756e <vfprintf+0x2e8>
    7554:	fe 01       	movw	r30, r28
    7556:	ea 0d       	add	r30, r10
    7558:	f1 1d       	adc	r31, r1
    755a:	80 81       	ld	r24, Z
    755c:	80 33       	cpi	r24, 0x30	; 48
    755e:	11 f4       	brne	.+4      	; 0x7564 <vfprintf+0x2de>
    7560:	29 7e       	andi	r18, 0xE9	; 233
    7562:	09 c0       	rjmp	.+18     	; 0x7576 <vfprintf+0x2f0>
    7564:	22 ff       	sbrs	r18, 2
    7566:	06 c0       	rjmp	.+12     	; 0x7574 <vfprintf+0x2ee>
    7568:	73 94       	inc	r7
    756a:	73 94       	inc	r7
    756c:	04 c0       	rjmp	.+8      	; 0x7576 <vfprintf+0x2f0>
    756e:	82 2f       	mov	r24, r18
    7570:	86 78       	andi	r24, 0x86	; 134
    7572:	09 f0       	breq	.+2      	; 0x7576 <vfprintf+0x2f0>
    7574:	73 94       	inc	r7
    7576:	23 fd       	sbrc	r18, 3
    7578:	12 c0       	rjmp	.+36     	; 0x759e <vfprintf+0x318>
    757a:	20 ff       	sbrs	r18, 0
    757c:	06 c0       	rjmp	.+12     	; 0x758a <vfprintf+0x304>
    757e:	5a 2c       	mov	r5, r10
    7580:	73 14       	cp	r7, r3
    7582:	18 f4       	brcc	.+6      	; 0x758a <vfprintf+0x304>
    7584:	53 0c       	add	r5, r3
    7586:	57 18       	sub	r5, r7
    7588:	73 2c       	mov	r7, r3
    758a:	73 14       	cp	r7, r3
    758c:	60 f4       	brcc	.+24     	; 0x75a6 <vfprintf+0x320>
    758e:	b7 01       	movw	r22, r14
    7590:	80 e2       	ldi	r24, 0x20	; 32
    7592:	90 e0       	ldi	r25, 0x00	; 0
    7594:	2c 87       	std	Y+12, r18	; 0x0c
    7596:	75 d0       	rcall	.+234    	; 0x7682 <fputc>
    7598:	73 94       	inc	r7
    759a:	2c 85       	ldd	r18, Y+12	; 0x0c
    759c:	f6 cf       	rjmp	.-20     	; 0x758a <vfprintf+0x304>
    759e:	73 14       	cp	r7, r3
    75a0:	10 f4       	brcc	.+4      	; 0x75a6 <vfprintf+0x320>
    75a2:	37 18       	sub	r3, r7
    75a4:	01 c0       	rjmp	.+2      	; 0x75a8 <vfprintf+0x322>
    75a6:	31 2c       	mov	r3, r1
    75a8:	24 ff       	sbrs	r18, 4
    75aa:	11 c0       	rjmp	.+34     	; 0x75ce <vfprintf+0x348>
    75ac:	b7 01       	movw	r22, r14
    75ae:	80 e3       	ldi	r24, 0x30	; 48
    75b0:	90 e0       	ldi	r25, 0x00	; 0
    75b2:	2c 87       	std	Y+12, r18	; 0x0c
    75b4:	66 d0       	rcall	.+204    	; 0x7682 <fputc>
    75b6:	2c 85       	ldd	r18, Y+12	; 0x0c
    75b8:	22 ff       	sbrs	r18, 2
    75ba:	16 c0       	rjmp	.+44     	; 0x75e8 <vfprintf+0x362>
    75bc:	21 ff       	sbrs	r18, 1
    75be:	03 c0       	rjmp	.+6      	; 0x75c6 <vfprintf+0x340>
    75c0:	88 e5       	ldi	r24, 0x58	; 88
    75c2:	90 e0       	ldi	r25, 0x00	; 0
    75c4:	02 c0       	rjmp	.+4      	; 0x75ca <vfprintf+0x344>
    75c6:	88 e7       	ldi	r24, 0x78	; 120
    75c8:	90 e0       	ldi	r25, 0x00	; 0
    75ca:	b7 01       	movw	r22, r14
    75cc:	0c c0       	rjmp	.+24     	; 0x75e6 <vfprintf+0x360>
    75ce:	82 2f       	mov	r24, r18
    75d0:	86 78       	andi	r24, 0x86	; 134
    75d2:	51 f0       	breq	.+20     	; 0x75e8 <vfprintf+0x362>
    75d4:	21 fd       	sbrc	r18, 1
    75d6:	02 c0       	rjmp	.+4      	; 0x75dc <vfprintf+0x356>
    75d8:	80 e2       	ldi	r24, 0x20	; 32
    75da:	01 c0       	rjmp	.+2      	; 0x75de <vfprintf+0x358>
    75dc:	8b e2       	ldi	r24, 0x2B	; 43
    75de:	27 fd       	sbrc	r18, 7
    75e0:	8d e2       	ldi	r24, 0x2D	; 45
    75e2:	b7 01       	movw	r22, r14
    75e4:	90 e0       	ldi	r25, 0x00	; 0
    75e6:	4d d0       	rcall	.+154    	; 0x7682 <fputc>
    75e8:	a5 14       	cp	r10, r5
    75ea:	30 f4       	brcc	.+12     	; 0x75f8 <vfprintf+0x372>
    75ec:	b7 01       	movw	r22, r14
    75ee:	80 e3       	ldi	r24, 0x30	; 48
    75f0:	90 e0       	ldi	r25, 0x00	; 0
    75f2:	47 d0       	rcall	.+142    	; 0x7682 <fputc>
    75f4:	5a 94       	dec	r5
    75f6:	f8 cf       	rjmp	.-16     	; 0x75e8 <vfprintf+0x362>
    75f8:	aa 94       	dec	r10
    75fa:	f4 01       	movw	r30, r8
    75fc:	ea 0d       	add	r30, r10
    75fe:	f1 1d       	adc	r31, r1
    7600:	80 81       	ld	r24, Z
    7602:	b7 01       	movw	r22, r14
    7604:	90 e0       	ldi	r25, 0x00	; 0
    7606:	3d d0       	rcall	.+122    	; 0x7682 <fputc>
    7608:	a1 10       	cpse	r10, r1
    760a:	f6 cf       	rjmp	.-20     	; 0x75f8 <vfprintf+0x372>
    760c:	33 20       	and	r3, r3
    760e:	09 f4       	brne	.+2      	; 0x7612 <vfprintf+0x38c>
    7610:	5d ce       	rjmp	.-838    	; 0x72cc <vfprintf+0x46>
    7612:	b7 01       	movw	r22, r14
    7614:	80 e2       	ldi	r24, 0x20	; 32
    7616:	90 e0       	ldi	r25, 0x00	; 0
    7618:	34 d0       	rcall	.+104    	; 0x7682 <fputc>
    761a:	3a 94       	dec	r3
    761c:	f7 cf       	rjmp	.-18     	; 0x760c <vfprintf+0x386>
    761e:	f7 01       	movw	r30, r14
    7620:	86 81       	ldd	r24, Z+6	; 0x06
    7622:	97 81       	ldd	r25, Z+7	; 0x07
    7624:	02 c0       	rjmp	.+4      	; 0x762a <vfprintf+0x3a4>
    7626:	8f ef       	ldi	r24, 0xFF	; 255
    7628:	9f ef       	ldi	r25, 0xFF	; 255
    762a:	2c 96       	adiw	r28, 0x0c	; 12
    762c:	cd bf       	out	0x3d, r28	; 61
    762e:	de bf       	out	0x3e, r29	; 62
    7630:	df 91       	pop	r29
    7632:	cf 91       	pop	r28
    7634:	1f 91       	pop	r17
    7636:	0f 91       	pop	r16
    7638:	ff 90       	pop	r15
    763a:	ef 90       	pop	r14
    763c:	df 90       	pop	r13
    763e:	cf 90       	pop	r12
    7640:	bf 90       	pop	r11
    7642:	af 90       	pop	r10
    7644:	9f 90       	pop	r9
    7646:	8f 90       	pop	r8
    7648:	7f 90       	pop	r7
    764a:	6f 90       	pop	r6
    764c:	5f 90       	pop	r5
    764e:	4f 90       	pop	r4
    7650:	3f 90       	pop	r3
    7652:	2f 90       	pop	r2
    7654:	08 95       	ret

00007656 <strnlen_P>:
    7656:	fc 01       	movw	r30, r24
    7658:	05 90       	lpm	r0, Z+
    765a:	61 50       	subi	r22, 0x01	; 1
    765c:	70 40       	sbci	r23, 0x00	; 0
    765e:	01 10       	cpse	r0, r1
    7660:	d8 f7       	brcc	.-10     	; 0x7658 <strnlen_P+0x2>
    7662:	80 95       	com	r24
    7664:	90 95       	com	r25
    7666:	8e 0f       	add	r24, r30
    7668:	9f 1f       	adc	r25, r31
    766a:	08 95       	ret

0000766c <strnlen>:
    766c:	fc 01       	movw	r30, r24
    766e:	61 50       	subi	r22, 0x01	; 1
    7670:	70 40       	sbci	r23, 0x00	; 0
    7672:	01 90       	ld	r0, Z+
    7674:	01 10       	cpse	r0, r1
    7676:	d8 f7       	brcc	.-10     	; 0x766e <strnlen+0x2>
    7678:	80 95       	com	r24
    767a:	90 95       	com	r25
    767c:	8e 0f       	add	r24, r30
    767e:	9f 1f       	adc	r25, r31
    7680:	08 95       	ret

00007682 <fputc>:
    7682:	0f 93       	push	r16
    7684:	1f 93       	push	r17
    7686:	cf 93       	push	r28
    7688:	df 93       	push	r29
    768a:	18 2f       	mov	r17, r24
    768c:	09 2f       	mov	r16, r25
    768e:	eb 01       	movw	r28, r22
    7690:	8b 81       	ldd	r24, Y+3	; 0x03
    7692:	81 fd       	sbrc	r24, 1
    7694:	03 c0       	rjmp	.+6      	; 0x769c <fputc+0x1a>
    7696:	8f ef       	ldi	r24, 0xFF	; 255
    7698:	9f ef       	ldi	r25, 0xFF	; 255
    769a:	20 c0       	rjmp	.+64     	; 0x76dc <fputc+0x5a>
    769c:	82 ff       	sbrs	r24, 2
    769e:	10 c0       	rjmp	.+32     	; 0x76c0 <fputc+0x3e>
    76a0:	4e 81       	ldd	r20, Y+6	; 0x06
    76a2:	5f 81       	ldd	r21, Y+7	; 0x07
    76a4:	2c 81       	ldd	r18, Y+4	; 0x04
    76a6:	3d 81       	ldd	r19, Y+5	; 0x05
    76a8:	42 17       	cp	r20, r18
    76aa:	53 07       	cpc	r21, r19
    76ac:	7c f4       	brge	.+30     	; 0x76cc <fputc+0x4a>
    76ae:	e8 81       	ld	r30, Y
    76b0:	f9 81       	ldd	r31, Y+1	; 0x01
    76b2:	9f 01       	movw	r18, r30
    76b4:	2f 5f       	subi	r18, 0xFF	; 255
    76b6:	3f 4f       	sbci	r19, 0xFF	; 255
    76b8:	28 83       	st	Y, r18
    76ba:	39 83       	std	Y+1, r19	; 0x01
    76bc:	10 83       	st	Z, r17
    76be:	06 c0       	rjmp	.+12     	; 0x76cc <fputc+0x4a>
    76c0:	e8 85       	ldd	r30, Y+8	; 0x08
    76c2:	f9 85       	ldd	r31, Y+9	; 0x09
    76c4:	81 2f       	mov	r24, r17
    76c6:	09 95       	icall
    76c8:	89 2b       	or	r24, r25
    76ca:	29 f7       	brne	.-54     	; 0x7696 <fputc+0x14>
    76cc:	2e 81       	ldd	r18, Y+6	; 0x06
    76ce:	3f 81       	ldd	r19, Y+7	; 0x07
    76d0:	2f 5f       	subi	r18, 0xFF	; 255
    76d2:	3f 4f       	sbci	r19, 0xFF	; 255
    76d4:	2e 83       	std	Y+6, r18	; 0x06
    76d6:	3f 83       	std	Y+7, r19	; 0x07
    76d8:	81 2f       	mov	r24, r17
    76da:	90 2f       	mov	r25, r16
    76dc:	df 91       	pop	r29
    76de:	cf 91       	pop	r28
    76e0:	1f 91       	pop	r17
    76e2:	0f 91       	pop	r16
    76e4:	08 95       	ret

000076e6 <__ultoa_invert>:
    76e6:	fa 01       	movw	r30, r20
    76e8:	aa 27       	eor	r26, r26
    76ea:	28 30       	cpi	r18, 0x08	; 8
    76ec:	51 f1       	breq	.+84     	; 0x7742 <__ultoa_invert+0x5c>
    76ee:	20 31       	cpi	r18, 0x10	; 16
    76f0:	81 f1       	breq	.+96     	; 0x7752 <__ultoa_invert+0x6c>
    76f2:	e8 94       	clt
    76f4:	6f 93       	push	r22
    76f6:	6e 7f       	andi	r22, 0xFE	; 254
    76f8:	6e 5f       	subi	r22, 0xFE	; 254
    76fa:	7f 4f       	sbci	r23, 0xFF	; 255
    76fc:	8f 4f       	sbci	r24, 0xFF	; 255
    76fe:	9f 4f       	sbci	r25, 0xFF	; 255
    7700:	af 4f       	sbci	r26, 0xFF	; 255
    7702:	b1 e0       	ldi	r27, 0x01	; 1
    7704:	3e d0       	rcall	.+124    	; 0x7782 <__ultoa_invert+0x9c>
    7706:	b4 e0       	ldi	r27, 0x04	; 4
    7708:	3c d0       	rcall	.+120    	; 0x7782 <__ultoa_invert+0x9c>
    770a:	67 0f       	add	r22, r23
    770c:	78 1f       	adc	r23, r24
    770e:	89 1f       	adc	r24, r25
    7710:	9a 1f       	adc	r25, r26
    7712:	a1 1d       	adc	r26, r1
    7714:	68 0f       	add	r22, r24
    7716:	79 1f       	adc	r23, r25
    7718:	8a 1f       	adc	r24, r26
    771a:	91 1d       	adc	r25, r1
    771c:	a1 1d       	adc	r26, r1
    771e:	6a 0f       	add	r22, r26
    7720:	71 1d       	adc	r23, r1
    7722:	81 1d       	adc	r24, r1
    7724:	91 1d       	adc	r25, r1
    7726:	a1 1d       	adc	r26, r1
    7728:	20 d0       	rcall	.+64     	; 0x776a <__ultoa_invert+0x84>
    772a:	09 f4       	brne	.+2      	; 0x772e <__ultoa_invert+0x48>
    772c:	68 94       	set
    772e:	3f 91       	pop	r19
    7730:	2a e0       	ldi	r18, 0x0A	; 10
    7732:	26 9f       	mul	r18, r22
    7734:	11 24       	eor	r1, r1
    7736:	30 19       	sub	r19, r0
    7738:	30 5d       	subi	r19, 0xD0	; 208
    773a:	31 93       	st	Z+, r19
    773c:	de f6       	brtc	.-74     	; 0x76f4 <__ultoa_invert+0xe>
    773e:	cf 01       	movw	r24, r30
    7740:	08 95       	ret
    7742:	46 2f       	mov	r20, r22
    7744:	47 70       	andi	r20, 0x07	; 7
    7746:	40 5d       	subi	r20, 0xD0	; 208
    7748:	41 93       	st	Z+, r20
    774a:	b3 e0       	ldi	r27, 0x03	; 3
    774c:	0f d0       	rcall	.+30     	; 0x776c <__ultoa_invert+0x86>
    774e:	c9 f7       	brne	.-14     	; 0x7742 <__ultoa_invert+0x5c>
    7750:	f6 cf       	rjmp	.-20     	; 0x773e <__ultoa_invert+0x58>
    7752:	46 2f       	mov	r20, r22
    7754:	4f 70       	andi	r20, 0x0F	; 15
    7756:	40 5d       	subi	r20, 0xD0	; 208
    7758:	4a 33       	cpi	r20, 0x3A	; 58
    775a:	18 f0       	brcs	.+6      	; 0x7762 <__ultoa_invert+0x7c>
    775c:	49 5d       	subi	r20, 0xD9	; 217
    775e:	31 fd       	sbrc	r19, 1
    7760:	40 52       	subi	r20, 0x20	; 32
    7762:	41 93       	st	Z+, r20
    7764:	02 d0       	rcall	.+4      	; 0x776a <__ultoa_invert+0x84>
    7766:	a9 f7       	brne	.-22     	; 0x7752 <__ultoa_invert+0x6c>
    7768:	ea cf       	rjmp	.-44     	; 0x773e <__ultoa_invert+0x58>
    776a:	b4 e0       	ldi	r27, 0x04	; 4
    776c:	a6 95       	lsr	r26
    776e:	97 95       	ror	r25
    7770:	87 95       	ror	r24
    7772:	77 95       	ror	r23
    7774:	67 95       	ror	r22
    7776:	ba 95       	dec	r27
    7778:	c9 f7       	brne	.-14     	; 0x776c <__ultoa_invert+0x86>
    777a:	00 97       	sbiw	r24, 0x00	; 0
    777c:	61 05       	cpc	r22, r1
    777e:	71 05       	cpc	r23, r1
    7780:	08 95       	ret
    7782:	9b 01       	movw	r18, r22
    7784:	ac 01       	movw	r20, r24
    7786:	0a 2e       	mov	r0, r26
    7788:	06 94       	lsr	r0
    778a:	57 95       	ror	r21
    778c:	47 95       	ror	r20
    778e:	37 95       	ror	r19
    7790:	27 95       	ror	r18
    7792:	ba 95       	dec	r27
    7794:	c9 f7       	brne	.-14     	; 0x7788 <__ultoa_invert+0xa2>
    7796:	62 0f       	add	r22, r18
    7798:	73 1f       	adc	r23, r19
    779a:	84 1f       	adc	r24, r20
    779c:	95 1f       	adc	r25, r21
    779e:	a0 1d       	adc	r26, r0
    77a0:	08 95       	ret

000077a2 <_exit>:
    77a2:	f8 94       	cli

000077a4 <__stop_program>:
    77a4:	ff cf       	rjmp	.-2      	; 0x77a4 <__stop_program>
