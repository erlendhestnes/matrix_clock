
matrix_clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000079d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001d6  00802000  000079d0  00007a64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000bc2  008021d6  008021d6  00007c3a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00007c3a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000870  00000000  00000000  00007c96  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0001c0ba  00000000  00000000  00008506  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003311  00000000  00000000  000245c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000e679  00000000  00000000  000278d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000026f4  00000000  00000000  00035f4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003a45  00000000  00000000  00038640  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0002c6f3  00000000  00000000  0003c085  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00004370  00000000  00000000  00068778  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	34 c1       	rjmp	.+616    	; 0x26a <__ctors_end>
       2:	00 00       	nop
       4:	51 c1       	rjmp	.+674    	; 0x2a8 <__bad_interrupt>
       6:	00 00       	nop
       8:	4f c1       	rjmp	.+670    	; 0x2a8 <__bad_interrupt>
       a:	00 00       	nop
       c:	4d c1       	rjmp	.+666    	; 0x2a8 <__bad_interrupt>
       e:	00 00       	nop
      10:	4b c1       	rjmp	.+662    	; 0x2a8 <__bad_interrupt>
      12:	00 00       	nop
      14:	49 c1       	rjmp	.+658    	; 0x2a8 <__bad_interrupt>
      16:	00 00       	nop
      18:	47 c1       	rjmp	.+654    	; 0x2a8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	45 c1       	rjmp	.+650    	; 0x2a8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	43 c1       	rjmp	.+646    	; 0x2a8 <__bad_interrupt>
      22:	00 00       	nop
      24:	41 c1       	rjmp	.+642    	; 0x2a8 <__bad_interrupt>
      26:	00 00       	nop
      28:	5d c7       	rjmp	.+3770   	; 0xee4 <__vector_10>
      2a:	00 00       	nop
      2c:	3d c1       	rjmp	.+634    	; 0x2a8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3b c1       	rjmp	.+630    	; 0x2a8 <__bad_interrupt>
      32:	00 00       	nop
      34:	39 c1       	rjmp	.+626    	; 0x2a8 <__bad_interrupt>
      36:	00 00       	nop
      38:	0c 94 10 36 	jmp	0x6c20	; 0x6c20 <__vector_14>
      3c:	35 c1       	rjmp	.+618    	; 0x2a8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	33 c1       	rjmp	.+614    	; 0x2a8 <__bad_interrupt>
      42:	00 00       	nop
      44:	31 c1       	rjmp	.+610    	; 0x2a8 <__bad_interrupt>
      46:	00 00       	nop
      48:	2f c1       	rjmp	.+606    	; 0x2a8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2d c1       	rjmp	.+602    	; 0x2a8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 5b 3a 	jmp	0x74b6	; 0x74b6 <__vector_20>
      54:	29 c1       	rjmp	.+594    	; 0x2a8 <__bad_interrupt>
      56:	00 00       	nop
      58:	27 c1       	rjmp	.+590    	; 0x2a8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	25 c1       	rjmp	.+586    	; 0x2a8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	23 c1       	rjmp	.+582    	; 0x2a8 <__bad_interrupt>
      62:	00 00       	nop
      64:	21 c1       	rjmp	.+578    	; 0x2a8 <__bad_interrupt>
      66:	00 00       	nop
      68:	1f c1       	rjmp	.+574    	; 0x2a8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1d c1       	rjmp	.+570    	; 0x2a8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	1b c1       	rjmp	.+566    	; 0x2a8 <__bad_interrupt>
      72:	00 00       	nop
      74:	19 c1       	rjmp	.+562    	; 0x2a8 <__bad_interrupt>
      76:	00 00       	nop
      78:	17 c1       	rjmp	.+558    	; 0x2a8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	15 c1       	rjmp	.+554    	; 0x2a8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	13 c1       	rjmp	.+550    	; 0x2a8 <__bad_interrupt>
      82:	00 00       	nop
      84:	11 c1       	rjmp	.+546    	; 0x2a8 <__bad_interrupt>
      86:	00 00       	nop
      88:	c4 c6       	rjmp	.+3464   	; 0xe12 <__vector_34>
      8a:	00 00       	nop
      8c:	0d c1       	rjmp	.+538    	; 0x2a8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0b c1       	rjmp	.+534    	; 0x2a8 <__bad_interrupt>
      92:	00 00       	nop
      94:	09 c1       	rjmp	.+530    	; 0x2a8 <__bad_interrupt>
      96:	00 00       	nop
      98:	07 c1       	rjmp	.+526    	; 0x2a8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	05 c1       	rjmp	.+522    	; 0x2a8 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	03 c1       	rjmp	.+518    	; 0x2a8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	01 c1       	rjmp	.+514    	; 0x2a8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	ff c0       	rjmp	.+510    	; 0x2a8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	fd c0       	rjmp	.+506    	; 0x2a8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	fb c0       	rjmp	.+502    	; 0x2a8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	f9 c0       	rjmp	.+498    	; 0x2a8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f7 c0       	rjmp	.+494    	; 0x2a8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	f5 c0       	rjmp	.+490    	; 0x2a8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	f3 c0       	rjmp	.+486    	; 0x2a8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	f1 c0       	rjmp	.+482    	; 0x2a8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ef c0       	rjmp	.+478    	; 0x2a8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ed c0       	rjmp	.+474    	; 0x2a8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	eb c0       	rjmp	.+470    	; 0x2a8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	e9 c0       	rjmp	.+466    	; 0x2a8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	e7 c0       	rjmp	.+462    	; 0x2a8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	e5 c0       	rjmp	.+458    	; 0x2a8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	e3 c0       	rjmp	.+454    	; 0x2a8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	e1 c0       	rjmp	.+450    	; 0x2a8 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	df c0       	rjmp	.+446    	; 0x2a8 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	dd c0       	rjmp	.+442    	; 0x2a8 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	db c0       	rjmp	.+438    	; 0x2a8 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	d9 c0       	rjmp	.+434    	; 0x2a8 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	d7 c0       	rjmp	.+430    	; 0x2a8 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	d5 c0       	rjmp	.+426    	; 0x2a8 <__bad_interrupt>
      fe:	00 00       	nop
     100:	d3 c0       	rjmp	.+422    	; 0x2a8 <__bad_interrupt>
     102:	00 00       	nop
     104:	d1 c0       	rjmp	.+418    	; 0x2a8 <__bad_interrupt>
     106:	00 00       	nop
     108:	1b c6       	rjmp	.+3126   	; 0xd40 <__vector_66>
     10a:	00 00       	nop
     10c:	cd c0       	rjmp	.+410    	; 0x2a8 <__bad_interrupt>
     10e:	00 00       	nop
     110:	cb c0       	rjmp	.+406    	; 0x2a8 <__bad_interrupt>
     112:	00 00       	nop
     114:	c9 c0       	rjmp	.+402    	; 0x2a8 <__bad_interrupt>
     116:	00 00       	nop
     118:	c7 c0       	rjmp	.+398    	; 0x2a8 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	c5 c0       	rjmp	.+394    	; 0x2a8 <__bad_interrupt>
     11e:	00 00       	nop
     120:	c3 c0       	rjmp	.+390    	; 0x2a8 <__bad_interrupt>
     122:	00 00       	nop
     124:	c1 c0       	rjmp	.+386    	; 0x2a8 <__bad_interrupt>
     126:	00 00       	nop
     128:	bf c0       	rjmp	.+382    	; 0x2a8 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	bd c0       	rjmp	.+378    	; 0x2a8 <__bad_interrupt>
     12e:	00 00       	nop
     130:	bb c0       	rjmp	.+374    	; 0x2a8 <__bad_interrupt>
     132:	00 00       	nop
     134:	b9 c0       	rjmp	.+370    	; 0x2a8 <__bad_interrupt>
     136:	00 00       	nop
     138:	b7 c0       	rjmp	.+366    	; 0x2a8 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	b5 c0       	rjmp	.+362    	; 0x2a8 <__bad_interrupt>
     13e:	00 00       	nop
     140:	b3 c0       	rjmp	.+358    	; 0x2a8 <__bad_interrupt>
     142:	00 00       	nop
     144:	b1 c0       	rjmp	.+354    	; 0x2a8 <__bad_interrupt>
     146:	00 00       	nop
     148:	af c0       	rjmp	.+350    	; 0x2a8 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	ad c0       	rjmp	.+346    	; 0x2a8 <__bad_interrupt>
     14e:	00 00       	nop
     150:	ab c0       	rjmp	.+342    	; 0x2a8 <__bad_interrupt>
     152:	00 00       	nop
     154:	a9 c0       	rjmp	.+338    	; 0x2a8 <__bad_interrupt>
     156:	00 00       	nop
     158:	a7 c0       	rjmp	.+334    	; 0x2a8 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	a5 c0       	rjmp	.+330    	; 0x2a8 <__bad_interrupt>
     15e:	00 00       	nop
     160:	b8 c0       	rjmp	.+368    	; 0x2d2 <__vector_88>
     162:	00 00       	nop
     164:	a1 c0       	rjmp	.+322    	; 0x2a8 <__bad_interrupt>
     166:	00 00       	nop
     168:	9f c0       	rjmp	.+318    	; 0x2a8 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	9d c0       	rjmp	.+314    	; 0x2a8 <__bad_interrupt>
     16e:	00 00       	nop
     170:	9b c0       	rjmp	.+310    	; 0x2a8 <__bad_interrupt>
     172:	00 00       	nop
     174:	99 c0       	rjmp	.+306    	; 0x2a8 <__bad_interrupt>
     176:	00 00       	nop
     178:	97 c0       	rjmp	.+302    	; 0x2a8 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	95 c0       	rjmp	.+298    	; 0x2a8 <__bad_interrupt>
     17e:	00 00       	nop
     180:	93 c0       	rjmp	.+294    	; 0x2a8 <__bad_interrupt>
     182:	00 00       	nop
     184:	91 c0       	rjmp	.+290    	; 0x2a8 <__bad_interrupt>
     186:	00 00       	nop
     188:	8f c0       	rjmp	.+286    	; 0x2a8 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	8d c0       	rjmp	.+282    	; 0x2a8 <__bad_interrupt>
     18e:	00 00       	nop
     190:	8b c0       	rjmp	.+278    	; 0x2a8 <__bad_interrupt>
     192:	00 00       	nop
     194:	89 c0       	rjmp	.+274    	; 0x2a8 <__bad_interrupt>
     196:	00 00       	nop
     198:	87 c0       	rjmp	.+270    	; 0x2a8 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	85 c0       	rjmp	.+266    	; 0x2a8 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	83 c0       	rjmp	.+262    	; 0x2a8 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	81 c0       	rjmp	.+258    	; 0x2a8 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	7f c0       	rjmp	.+254    	; 0x2a8 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	7d c0       	rjmp	.+250    	; 0x2a8 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	7b c0       	rjmp	.+246    	; 0x2a8 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	79 c0       	rjmp	.+242    	; 0x2a8 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	77 c0       	rjmp	.+238    	; 0x2a8 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	75 c0       	rjmp	.+234    	; 0x2a8 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	73 c0       	rjmp	.+230    	; 0x2a8 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	71 c0       	rjmp	.+226    	; 0x2a8 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	6f c0       	rjmp	.+222    	; 0x2a8 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	6d c0       	rjmp	.+218    	; 0x2a8 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	6b c0       	rjmp	.+214    	; 0x2a8 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	69 c0       	rjmp	.+210    	; 0x2a8 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	67 c0       	rjmp	.+206    	; 0x2a8 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	65 c0       	rjmp	.+202    	; 0x2a8 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	63 c0       	rjmp	.+198    	; 0x2a8 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	61 c0       	rjmp	.+194    	; 0x2a8 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	5f c0       	rjmp	.+190    	; 0x2a8 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	5d c0       	rjmp	.+186    	; 0x2a8 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	5b c0       	rjmp	.+182    	; 0x2a8 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	59 c0       	rjmp	.+178    	; 0x2a8 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	57 c0       	rjmp	.+174    	; 0x2a8 <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	24 35       	cpi	r18, 0x54	; 84
     1fe:	b5 34       	cpi	r27, 0x45	; 69
     200:	1b 34       	cpi	r17, 0x4B	; 75
     202:	3a 35       	cpi	r19, 0x5A	; 90
     204:	1b 34       	cpi	r17, 0x4B	; 75
     206:	1b 34       	cpi	r17, 0x4B	; 75
     208:	1b 34       	cpi	r17, 0x4B	; 75
     20a:	7a 34       	cpi	r23, 0x4A	; 74
     20c:	1b 34       	cpi	r17, 0x4B	; 75
     20e:	1b 34       	cpi	r17, 0x4B	; 75
     210:	1b 34       	cpi	r17, 0x4B	; 75
     212:	1b 34       	cpi	r17, 0x4B	; 75
     214:	1b 34       	cpi	r17, 0x4B	; 75
     216:	1b 34       	cpi	r17, 0x4B	; 75
     218:	1b 34       	cpi	r17, 0x4B	; 75
     21a:	1b 34       	cpi	r17, 0x4B	; 75
     21c:	1b 34       	cpi	r17, 0x4B	; 75
     21e:	1b 34       	cpi	r17, 0x4B	; 75
     220:	1b 34       	cpi	r17, 0x4B	; 75
     222:	1b 34       	cpi	r17, 0x4B	; 75
     224:	1b 34       	cpi	r17, 0x4B	; 75
     226:	1b 34       	cpi	r17, 0x4B	; 75
     228:	1b 34       	cpi	r17, 0x4B	; 75
     22a:	1b 34       	cpi	r17, 0x4B	; 75
     22c:	1b 34       	cpi	r17, 0x4B	; 75
     22e:	1b 34       	cpi	r17, 0x4B	; 75
     230:	1b 34       	cpi	r17, 0x4B	; 75
     232:	1b 34       	cpi	r17, 0x4B	; 75
     234:	1b 34       	cpi	r17, 0x4B	; 75
     236:	1b 34       	cpi	r17, 0x4B	; 75
     238:	1b 34       	cpi	r17, 0x4B	; 75
     23a:	1b 34       	cpi	r17, 0x4B	; 75
     23c:	1b 34       	cpi	r17, 0x4B	; 75
     23e:	1b 34       	cpi	r17, 0x4B	; 75
     240:	1b 34       	cpi	r17, 0x4B	; 75
     242:	1b 34       	cpi	r17, 0x4B	; 75
     244:	1b 34       	cpi	r17, 0x4B	; 75
     246:	1b 34       	cpi	r17, 0x4B	; 75
     248:	1b 34       	cpi	r17, 0x4B	; 75
     24a:	1b 34       	cpi	r17, 0x4B	; 75
     24c:	1b 34       	cpi	r17, 0x4B	; 75
     24e:	1b 34       	cpi	r17, 0x4B	; 75
     250:	1b 34       	cpi	r17, 0x4B	; 75
     252:	1b 34       	cpi	r17, 0x4B	; 75
     254:	1b 34       	cpi	r17, 0x4B	; 75
     256:	1b 34       	cpi	r17, 0x4B	; 75
     258:	1b 34       	cpi	r17, 0x4B	; 75
     25a:	1b 34       	cpi	r17, 0x4B	; 75
     25c:	1b 34       	cpi	r17, 0x4B	; 75
     25e:	1b 34       	cpi	r17, 0x4B	; 75
     260:	af 34       	cpi	r26, 0x4F	; 79
     262:	83 34       	cpi	r24, 0x43	; 67
     264:	49 34       	cpi	r20, 0x49	; 73
     266:	33 34       	cpi	r19, 0x43	; 67
     268:	29 34       	cpi	r18, 0x49	; 73

0000026a <__ctors_end>:
     26a:	11 24       	eor	r1, r1
     26c:	1f be       	out	0x3f, r1	; 63
     26e:	cf ef       	ldi	r28, 0xFF	; 255
     270:	cd bf       	out	0x3d, r28	; 61
     272:	df e2       	ldi	r29, 0x2F	; 47
     274:	de bf       	out	0x3e, r29	; 62

00000276 <__do_copy_data>:
     276:	11 e2       	ldi	r17, 0x21	; 33
     278:	a0 e0       	ldi	r26, 0x00	; 0
     27a:	b0 e2       	ldi	r27, 0x20	; 32
     27c:	e0 ed       	ldi	r30, 0xD0	; 208
     27e:	f9 e7       	ldi	r31, 0x79	; 121
     280:	00 e0       	ldi	r16, 0x00	; 0
     282:	0b bf       	out	0x3b, r16	; 59
     284:	02 c0       	rjmp	.+4      	; 0x28a <__do_copy_data+0x14>
     286:	07 90       	elpm	r0, Z+
     288:	0d 92       	st	X+, r0
     28a:	a6 3d       	cpi	r26, 0xD6	; 214
     28c:	b1 07       	cpc	r27, r17
     28e:	d9 f7       	brne	.-10     	; 0x286 <__do_copy_data+0x10>

00000290 <__do_clear_bss>:
     290:	2d e2       	ldi	r18, 0x2D	; 45
     292:	a6 ed       	ldi	r26, 0xD6	; 214
     294:	b1 e2       	ldi	r27, 0x21	; 33
     296:	01 c0       	rjmp	.+2      	; 0x29a <.do_clear_bss_start>

00000298 <.do_clear_bss_loop>:
     298:	1d 92       	st	X+, r1

0000029a <.do_clear_bss_start>:
     29a:	a8 39       	cpi	r26, 0x98	; 152
     29c:	b2 07       	cpc	r27, r18
     29e:	e1 f7       	brne	.-8      	; 0x298 <.do_clear_bss_loop>
     2a0:	0e 94 fd 39 	call	0x73fa	; 0x73fa <main>
     2a4:	0c 94 e6 3c 	jmp	0x79cc	; 0x79cc <_exit>

000002a8 <__bad_interrupt>:
     2a8:	ab ce       	rjmp	.-682    	; 0x0 <__vectors>

000002aa <clock_setup_32_mhz>:
	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;
}

void clock_setup_32_mhz(void) {
	
	OSC.CTRL |= OSC_RC32MEN_bm;
     2aa:	80 91 50 00 	lds	r24, 0x0050
     2ae:	82 60       	ori	r24, 0x02	; 2
     2b0:	80 93 50 00 	sts	0x0050, r24
	while(!(OSC.STATUS & OSC_RC32MRDY_bm));
     2b4:	80 91 51 00 	lds	r24, 0x0051
     2b8:	81 ff       	sbrs	r24, 1
     2ba:	fc cf       	rjmp	.-8      	; 0x2b4 <clock_setup_32_mhz+0xa>
	CCP = CCP_IOREG_gc;
     2bc:	88 ed       	ldi	r24, 0xD8	; 216
     2be:	84 bf       	out	0x34, r24	; 52
	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	80 93 40 00 	sts	0x0040, r24
     2c6:	08 95       	ret

000002c8 <esp8266_off>:
		_delay_ms(1000);
		at_cipsend(str);
		_delay_ms(10000);
		esp8266_send_cmd("AT+CIPCLOSE=0\r", 100);
	}
}
     2c8:	80 e2       	ldi	r24, 0x20	; 32
     2ca:	e0 e6       	ldi	r30, 0x60	; 96
     2cc:	f6 e0       	ldi	r31, 0x06	; 6
     2ce:	86 83       	std	Z+6, r24	; 0x06
     2d0:	08 95       	ret

000002d2 <__vector_88>:
 _delay_ms (100);
 // drop to here and wait for next request.
}
*/

ISR(USARTD0_RXC_vect) {
     2d2:	1f 92       	push	r1
     2d4:	0f 92       	push	r0
     2d6:	0f b6       	in	r0, 0x3f	; 63
     2d8:	0f 92       	push	r0
     2da:	11 24       	eor	r1, r1
     2dc:	0b b6       	in	r0, 0x3b	; 59
     2de:	0f 92       	push	r0
     2e0:	2f 93       	push	r18
     2e2:	3f 93       	push	r19
     2e4:	4f 93       	push	r20
     2e6:	5f 93       	push	r21
     2e8:	6f 93       	push	r22
     2ea:	7f 93       	push	r23
     2ec:	8f 93       	push	r24
     2ee:	9f 93       	push	r25
     2f0:	af 93       	push	r26
     2f2:	bf 93       	push	r27
     2f4:	ef 93       	push	r30
     2f6:	ff 93       	push	r31
	
	char rx_temp = USARTD0.DATA;
     2f8:	40 91 a0 09 	lds	r20, 0x09A0
	
	if (rx_temp == '\n') {
     2fc:	4a 30       	cpi	r20, 0x0A	; 10
     2fe:	11 f1       	breq	.+68     	; 0x344 <__vector_88+0x72>
			//Flush buffer
			rx_ptr = 0;
			memset(rx_buffer, 0, RX_BUFFER);	
		}
	} else {
		rx_buffer[rx_ptr++] = rx_temp;
     300:	80 91 9e 22 	lds	r24, 0x229E
     304:	90 91 9f 22 	lds	r25, 0x229F
     308:	9c 01       	movw	r18, r24
     30a:	2f 5f       	subi	r18, 0xFF	; 255
     30c:	3f 4f       	sbci	r19, 0xFF	; 255
     30e:	20 93 9e 22 	sts	0x229E, r18
     312:	30 93 9f 22 	sts	0x229F, r19
     316:	fc 01       	movw	r30, r24
     318:	ea 52       	subi	r30, 0x2A	; 42
     31a:	fe 4d       	sbci	r31, 0xDE	; 222
     31c:	40 83       	st	Z, r20
	}
     31e:	ff 91       	pop	r31
     320:	ef 91       	pop	r30
     322:	bf 91       	pop	r27
     324:	af 91       	pop	r26
     326:	9f 91       	pop	r25
     328:	8f 91       	pop	r24
     32a:	7f 91       	pop	r23
     32c:	6f 91       	pop	r22
     32e:	5f 91       	pop	r21
     330:	4f 91       	pop	r20
     332:	3f 91       	pop	r19
     334:	2f 91       	pop	r18
     336:	0f 90       	pop	r0
     338:	0b be       	out	0x3b, r0	; 59
     33a:	0f 90       	pop	r0
     33c:	0f be       	out	0x3f, r0	; 63
     33e:	0f 90       	pop	r0
     340:	1f 90       	pop	r1
     342:	18 95       	reti
ISR(USARTD0_RXC_vect) {
	
	char rx_temp = USARTD0.DATA;
	
	if (rx_temp == '\n') {
		if (strstr(rx_buffer,"OK")) {
     344:	69 e9       	ldi	r22, 0x99	; 153
     346:	70 e2       	ldi	r23, 0x20	; 32
     348:	86 ed       	ldi	r24, 0xD6	; 214
     34a:	91 e2       	ldi	r25, 0x21	; 33
     34c:	0e 94 9f 3c 	call	0x793e	; 0x793e <strstr>
     350:	89 2b       	or	r24, r25
     352:	79 f0       	breq	.+30     	; 0x372 <__vector_88+0xa0>
			status = ESP8266_SUCCESS;
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	80 93 f1 22 	sts	0x22F1, r24
			status = ESP8266_CONNECT;
		} else if (strstr(rx_buffer,"CLOSED")) {
			status = ESP8266_CLOSED;
		}
		
		if (strstr(rx_buffer,"{")) {
     35a:	6b e7       	ldi	r22, 0x7B	; 123
     35c:	70 e0       	ldi	r23, 0x00	; 0
     35e:	86 ed       	ldi	r24, 0xD6	; 214
     360:	91 e2       	ldi	r25, 0x21	; 33
     362:	0e 94 94 3c 	call	0x7928	; 0x7928 <strchr>
     366:	89 2b       	or	r24, r25
     368:	79 f0       	breq	.+30     	; 0x388 <__vector_88+0xb6>
			json_found = true;
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	80 93 a0 22 	sts	0x22A0, r24
     370:	d6 cf       	rjmp	.-84     	; 0x31e <__vector_88+0x4c>
	char rx_temp = USARTD0.DATA;
	
	if (rx_temp == '\n') {
		if (strstr(rx_buffer,"OK")) {
			status = ESP8266_SUCCESS;
		} else if (strstr(rx_buffer,"ERROR")) {
     372:	6b eb       	ldi	r22, 0xBB	; 187
     374:	70 e2       	ldi	r23, 0x20	; 32
     376:	86 ed       	ldi	r24, 0xD6	; 214
     378:	91 e2       	ldi	r25, 0x21	; 33
     37a:	0e 94 9f 3c 	call	0x793e	; 0x793e <strstr>
     37e:	89 2b       	or	r24, r25
     380:	79 f0       	breq	.+30     	; 0x3a0 <__vector_88+0xce>
			status = ESP8266_ERROR;
     382:	10 92 f1 22 	sts	0x22F1, r1
     386:	e9 cf       	rjmp	.-46     	; 0x35a <__vector_88+0x88>
		
		if (strstr(rx_buffer,"{")) {
			json_found = true;
		} else {
			//Flush buffer
			rx_ptr = 0;
     388:	10 92 9e 22 	sts	0x229E, r1
     38c:	10 92 9f 22 	sts	0x229F, r1
			memset(rx_buffer, 0, RX_BUFFER);	
     390:	88 ec       	ldi	r24, 0xC8	; 200
     392:	e6 ed       	ldi	r30, 0xD6	; 214
     394:	f1 e2       	ldi	r31, 0x21	; 33
     396:	df 01       	movw	r26, r30
     398:	1d 92       	st	X+, r1
     39a:	8a 95       	dec	r24
     39c:	e9 f7       	brne	.-6      	; 0x398 <__vector_88+0xc6>
     39e:	bf cf       	rjmp	.-130    	; 0x31e <__vector_88+0x4c>
	if (rx_temp == '\n') {
		if (strstr(rx_buffer,"OK")) {
			status = ESP8266_SUCCESS;
		} else if (strstr(rx_buffer,"ERROR")) {
			status = ESP8266_ERROR;
		} else if (strstr(rx_buffer,"CONNECT")) {
     3a0:	6f ef       	ldi	r22, 0xFF	; 255
     3a2:	70 e2       	ldi	r23, 0x20	; 32
     3a4:	86 ed       	ldi	r24, 0xD6	; 214
     3a6:	91 e2       	ldi	r25, 0x21	; 33
     3a8:	0e 94 9f 3c 	call	0x793e	; 0x793e <strstr>
     3ac:	89 2b       	or	r24, r25
     3ae:	21 f0       	breq	.+8      	; 0x3b8 <__vector_88+0xe6>
			status = ESP8266_CONNECT;
     3b0:	83 e0       	ldi	r24, 0x03	; 3
     3b2:	80 93 f1 22 	sts	0x22F1, r24
     3b6:	d1 cf       	rjmp	.-94     	; 0x35a <__vector_88+0x88>
		} else if (strstr(rx_buffer,"CLOSED")) {
     3b8:	67 e0       	ldi	r22, 0x07	; 7
     3ba:	71 e2       	ldi	r23, 0x21	; 33
     3bc:	86 ed       	ldi	r24, 0xD6	; 214
     3be:	91 e2       	ldi	r25, 0x21	; 33
     3c0:	0e 94 9f 3c 	call	0x793e	; 0x793e <strstr>
     3c4:	89 2b       	or	r24, r25
     3c6:	49 f2       	breq	.-110    	; 0x35a <__vector_88+0x88>
			status = ESP8266_CLOSED;
     3c8:	85 e0       	ldi	r24, 0x05	; 5
     3ca:	80 93 f1 22 	sts	0x22F1, r24
     3ce:	c5 cf       	rjmp	.-118    	; 0x35a <__vector_88+0x88>

000003d0 <ht1632c_setup>:
void ht1632c_fill_screen() {

	for (uint8_t i=0; i<(WIDTH*HEIGHT/8); i++) {
		ledmatrix[i] = 0xFF;
	}
	ht1632c_refresh_screen();
     3d0:	41 e0       	ldi	r20, 0x01	; 1
     3d2:	40 93 81 06 	sts	0x0681, r20
     3d6:	40 93 85 06 	sts	0x0685, r20
     3da:	24 e0       	ldi	r18, 0x04	; 4
     3dc:	20 93 81 06 	sts	0x0681, r18
     3e0:	20 93 85 06 	sts	0x0685, r18
     3e4:	38 e0       	ldi	r19, 0x08	; 8
     3e6:	30 93 81 06 	sts	0x0681, r19
     3ea:	40 93 86 06 	sts	0x0686, r20
     3ee:	30 93 81 06 	sts	0x0681, r19
     3f2:	20 93 86 06 	sts	0x0686, r18
     3f6:	30 93 85 06 	sts	0x0685, r19
     3fa:	20 93 85 06 	sts	0x0685, r18
     3fe:	20 93 86 06 	sts	0x0686, r18
     402:	30 93 86 06 	sts	0x0686, r19
     406:	20 93 85 06 	sts	0x0685, r18
     40a:	20 93 86 06 	sts	0x0686, r18
     40e:	30 93 86 06 	sts	0x0686, r19
     412:	20 93 85 06 	sts	0x0685, r18
     416:	20 93 86 06 	sts	0x0686, r18
     41a:	30 93 86 06 	sts	0x0686, r19
     41e:	20 93 85 06 	sts	0x0685, r18
     422:	20 93 86 06 	sts	0x0686, r18
     426:	30 93 86 06 	sts	0x0686, r19
     42a:	20 93 85 06 	sts	0x0685, r18
     42e:	20 93 86 06 	sts	0x0686, r18
     432:	30 93 86 06 	sts	0x0686, r19
     436:	20 93 85 06 	sts	0x0685, r18
     43a:	20 93 86 06 	sts	0x0686, r18
     43e:	30 93 86 06 	sts	0x0686, r19
     442:	20 93 85 06 	sts	0x0685, r18
     446:	20 93 86 06 	sts	0x0686, r18
     44a:	30 93 86 06 	sts	0x0686, r19
     44e:	20 93 85 06 	sts	0x0685, r18
     452:	20 93 86 06 	sts	0x0686, r18
     456:	30 93 86 06 	sts	0x0686, r19
     45a:	20 93 85 06 	sts	0x0685, r18
     45e:	20 93 86 06 	sts	0x0686, r18
     462:	30 93 86 06 	sts	0x0686, r19
     466:	20 93 85 06 	sts	0x0685, r18
     46a:	20 93 86 06 	sts	0x0686, r18
     46e:	30 93 85 06 	sts	0x0685, r19
     472:	20 93 85 06 	sts	0x0685, r18
     476:	20 93 86 06 	sts	0x0686, r18
     47a:	30 93 86 06 	sts	0x0686, r19
     47e:	20 93 85 06 	sts	0x0685, r18
     482:	30 93 86 06 	sts	0x0686, r19
     486:	40 93 85 06 	sts	0x0685, r20
     48a:	40 93 86 06 	sts	0x0686, r20
     48e:	30 93 81 06 	sts	0x0681, r19
     492:	20 93 86 06 	sts	0x0686, r18
     496:	30 93 85 06 	sts	0x0685, r19
     49a:	20 93 85 06 	sts	0x0685, r18
     49e:	20 93 86 06 	sts	0x0686, r18
     4a2:	30 93 86 06 	sts	0x0686, r19
     4a6:	20 93 85 06 	sts	0x0685, r18
     4aa:	20 93 86 06 	sts	0x0686, r18
     4ae:	30 93 86 06 	sts	0x0686, r19
     4b2:	20 93 85 06 	sts	0x0685, r18
     4b6:	20 93 86 06 	sts	0x0686, r18
     4ba:	30 93 86 06 	sts	0x0686, r19
     4be:	20 93 85 06 	sts	0x0685, r18
     4c2:	20 93 86 06 	sts	0x0686, r18
     4c6:	30 93 86 06 	sts	0x0686, r19
     4ca:	20 93 85 06 	sts	0x0685, r18
     4ce:	20 93 86 06 	sts	0x0686, r18
     4d2:	30 93 86 06 	sts	0x0686, r19
     4d6:	20 93 85 06 	sts	0x0685, r18
     4da:	20 93 86 06 	sts	0x0686, r18
     4de:	30 93 86 06 	sts	0x0686, r19
     4e2:	20 93 85 06 	sts	0x0685, r18
     4e6:	20 93 86 06 	sts	0x0686, r18
     4ea:	30 93 86 06 	sts	0x0686, r19
     4ee:	20 93 85 06 	sts	0x0685, r18
     4f2:	20 93 86 06 	sts	0x0686, r18
     4f6:	30 93 86 06 	sts	0x0686, r19
     4fa:	20 93 85 06 	sts	0x0685, r18
     4fe:	20 93 86 06 	sts	0x0686, r18
     502:	30 93 85 06 	sts	0x0685, r19
     506:	20 93 85 06 	sts	0x0685, r18
     50a:	20 93 86 06 	sts	0x0686, r18
     50e:	30 93 85 06 	sts	0x0685, r19
     512:	20 93 85 06 	sts	0x0685, r18
     516:	20 93 86 06 	sts	0x0686, r18
     51a:	30 93 86 06 	sts	0x0686, r19
     51e:	20 93 85 06 	sts	0x0685, r18
     522:	30 93 86 06 	sts	0x0686, r19
     526:	40 93 85 06 	sts	0x0685, r20
     52a:	40 93 86 06 	sts	0x0686, r20
     52e:	30 93 81 06 	sts	0x0681, r19
     532:	20 93 86 06 	sts	0x0686, r18
     536:	30 93 85 06 	sts	0x0685, r19
     53a:	20 93 85 06 	sts	0x0685, r18
     53e:	20 93 86 06 	sts	0x0686, r18
     542:	30 93 86 06 	sts	0x0686, r19
     546:	20 93 85 06 	sts	0x0685, r18
     54a:	20 93 86 06 	sts	0x0686, r18
     54e:	30 93 86 06 	sts	0x0686, r19
     552:	20 93 85 06 	sts	0x0685, r18
     556:	20 93 86 06 	sts	0x0686, r18
     55a:	30 93 86 06 	sts	0x0686, r19
     55e:	20 93 85 06 	sts	0x0685, r18
     562:	20 93 86 06 	sts	0x0686, r18
     566:	30 93 86 06 	sts	0x0686, r19
     56a:	20 93 85 06 	sts	0x0685, r18
     56e:	20 93 86 06 	sts	0x0686, r18
     572:	30 93 86 06 	sts	0x0686, r19
     576:	20 93 85 06 	sts	0x0685, r18
     57a:	20 93 86 06 	sts	0x0686, r18
     57e:	30 93 86 06 	sts	0x0686, r19
     582:	20 93 85 06 	sts	0x0685, r18
     586:	20 93 86 06 	sts	0x0686, r18
     58a:	30 93 85 06 	sts	0x0685, r19
     58e:	20 93 85 06 	sts	0x0685, r18
     592:	20 93 86 06 	sts	0x0686, r18
     596:	30 93 86 06 	sts	0x0686, r19
     59a:	20 93 85 06 	sts	0x0685, r18
     59e:	20 93 86 06 	sts	0x0686, r18
     5a2:	30 93 86 06 	sts	0x0686, r19
     5a6:	20 93 85 06 	sts	0x0685, r18
     5aa:	20 93 86 06 	sts	0x0686, r18
     5ae:	30 93 86 06 	sts	0x0686, r19
     5b2:	20 93 85 06 	sts	0x0685, r18
     5b6:	20 93 86 06 	sts	0x0686, r18
     5ba:	30 93 86 06 	sts	0x0686, r19
     5be:	20 93 85 06 	sts	0x0685, r18
     5c2:	30 93 86 06 	sts	0x0686, r19
     5c6:	40 93 85 06 	sts	0x0685, r20
     5ca:	40 93 86 06 	sts	0x0686, r20
     5ce:	30 93 81 06 	sts	0x0681, r19
     5d2:	20 93 86 06 	sts	0x0686, r18
     5d6:	30 93 85 06 	sts	0x0685, r19
     5da:	20 93 85 06 	sts	0x0685, r18
     5de:	20 93 86 06 	sts	0x0686, r18
     5e2:	30 93 86 06 	sts	0x0686, r19
     5e6:	20 93 85 06 	sts	0x0685, r18
     5ea:	20 93 86 06 	sts	0x0686, r18
     5ee:	30 93 86 06 	sts	0x0686, r19
     5f2:	20 93 85 06 	sts	0x0685, r18
     5f6:	20 93 86 06 	sts	0x0686, r18
     5fa:	30 93 86 06 	sts	0x0686, r19
     5fe:	20 93 85 06 	sts	0x0685, r18
     602:	20 93 86 06 	sts	0x0686, r18
     606:	30 93 86 06 	sts	0x0686, r19
     60a:	20 93 85 06 	sts	0x0685, r18
     60e:	20 93 86 06 	sts	0x0686, r18
     612:	30 93 86 06 	sts	0x0686, r19
     616:	20 93 85 06 	sts	0x0685, r18
     61a:	20 93 86 06 	sts	0x0686, r18
     61e:	30 93 85 06 	sts	0x0685, r19
     622:	20 93 85 06 	sts	0x0685, r18
     626:	20 93 86 06 	sts	0x0686, r18
     62a:	30 93 86 06 	sts	0x0686, r19
     62e:	20 93 85 06 	sts	0x0685, r18
     632:	20 93 86 06 	sts	0x0686, r18
     636:	30 93 85 06 	sts	0x0685, r19
     63a:	20 93 85 06 	sts	0x0685, r18
     63e:	20 93 86 06 	sts	0x0686, r18
     642:	30 93 86 06 	sts	0x0686, r19
     646:	20 93 85 06 	sts	0x0685, r18
     64a:	20 93 86 06 	sts	0x0686, r18
     64e:	30 93 86 06 	sts	0x0686, r19
     652:	20 93 85 06 	sts	0x0685, r18
     656:	20 93 86 06 	sts	0x0686, r18
     65a:	30 93 86 06 	sts	0x0686, r19
     65e:	20 93 85 06 	sts	0x0685, r18
     662:	30 93 86 06 	sts	0x0686, r19
     666:	40 93 85 06 	sts	0x0685, r20
     66a:	40 93 86 06 	sts	0x0686, r20
     66e:	30 93 81 06 	sts	0x0681, r19
     672:	20 93 86 06 	sts	0x0686, r18
     676:	30 93 85 06 	sts	0x0685, r19
     67a:	20 93 85 06 	sts	0x0685, r18
     67e:	20 93 86 06 	sts	0x0686, r18
     682:	30 93 86 06 	sts	0x0686, r19
     686:	20 93 85 06 	sts	0x0685, r18
     68a:	20 93 86 06 	sts	0x0686, r18
     68e:	30 93 86 06 	sts	0x0686, r19
     692:	20 93 85 06 	sts	0x0685, r18
     696:	20 93 86 06 	sts	0x0686, r18
     69a:	30 93 86 06 	sts	0x0686, r19
     69e:	20 93 85 06 	sts	0x0685, r18
     6a2:	20 93 86 06 	sts	0x0686, r18
     6a6:	30 93 86 06 	sts	0x0686, r19
     6aa:	20 93 85 06 	sts	0x0685, r18
     6ae:	20 93 86 06 	sts	0x0686, r18
     6b2:	30 93 86 06 	sts	0x0686, r19
     6b6:	20 93 85 06 	sts	0x0685, r18
     6ba:	20 93 86 06 	sts	0x0686, r18
     6be:	30 93 85 06 	sts	0x0685, r19
     6c2:	20 93 85 06 	sts	0x0685, r18
     6c6:	20 93 86 06 	sts	0x0686, r18
     6ca:	30 93 85 06 	sts	0x0685, r19
     6ce:	20 93 85 06 	sts	0x0685, r18
     6d2:	20 93 86 06 	sts	0x0686, r18
     6d6:	30 93 86 06 	sts	0x0686, r19
     6da:	20 93 85 06 	sts	0x0685, r18
     6de:	20 93 86 06 	sts	0x0686, r18
     6e2:	30 93 86 06 	sts	0x0686, r19
     6e6:	20 93 85 06 	sts	0x0685, r18
     6ea:	20 93 86 06 	sts	0x0686, r18
     6ee:	30 93 86 06 	sts	0x0686, r19
     6f2:	20 93 85 06 	sts	0x0685, r18
     6f6:	20 93 86 06 	sts	0x0686, r18
     6fa:	30 93 86 06 	sts	0x0686, r19
     6fe:	20 93 85 06 	sts	0x0685, r18
     702:	30 93 86 06 	sts	0x0686, r19
     706:	40 93 85 06 	sts	0x0685, r20
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	94 60       	ori	r25, 0x04	; 4
     70e:	88 0f       	add	r24, r24
     710:	99 1f       	adc	r25, r25
     712:	40 93 86 06 	sts	0x0686, r20
     716:	30 93 81 06 	sts	0x0681, r19
     71a:	20 93 86 06 	sts	0x0686, r18
     71e:	30 93 85 06 	sts	0x0685, r19
     722:	20 93 85 06 	sts	0x0685, r18
     726:	20 93 86 06 	sts	0x0686, r18
     72a:	30 93 86 06 	sts	0x0686, r19
     72e:	20 93 85 06 	sts	0x0685, r18
     732:	20 93 86 06 	sts	0x0686, r18
     736:	30 93 86 06 	sts	0x0686, r19
     73a:	20 93 85 06 	sts	0x0685, r18
     73e:	20 93 86 06 	sts	0x0686, r18
     742:	90 fd       	sbrc	r25, 0
     744:	e7 c0       	rjmp	.+462    	; 0x914 <ht1632c_setup+0x544>
     746:	30 93 86 06 	sts	0x0686, r19
     74a:	24 e0       	ldi	r18, 0x04	; 4
     74c:	20 93 85 06 	sts	0x0685, r18
     750:	20 93 86 06 	sts	0x0686, r18
     754:	28 e0       	ldi	r18, 0x08	; 8
     756:	87 fd       	sbrc	r24, 7
     758:	9e c0       	rjmp	.+316    	; 0x896 <ht1632c_setup+0x4c6>
     75a:	20 93 86 06 	sts	0x0686, r18
     75e:	24 e0       	ldi	r18, 0x04	; 4
     760:	20 93 85 06 	sts	0x0685, r18
     764:	20 93 86 06 	sts	0x0686, r18
     768:	28 e0       	ldi	r18, 0x08	; 8
     76a:	86 fd       	sbrc	r24, 6
     76c:	9e c0       	rjmp	.+316    	; 0x8aa <ht1632c_setup+0x4da>
     76e:	20 93 86 06 	sts	0x0686, r18
     772:	24 e0       	ldi	r18, 0x04	; 4
     774:	20 93 85 06 	sts	0x0685, r18
     778:	20 93 86 06 	sts	0x0686, r18
     77c:	28 e0       	ldi	r18, 0x08	; 8
     77e:	85 fd       	sbrc	r24, 5
     780:	9e c0       	rjmp	.+316    	; 0x8be <ht1632c_setup+0x4ee>
     782:	20 93 86 06 	sts	0x0686, r18
     786:	24 e0       	ldi	r18, 0x04	; 4
     788:	20 93 85 06 	sts	0x0685, r18
     78c:	20 93 86 06 	sts	0x0686, r18
     790:	28 e0       	ldi	r18, 0x08	; 8
     792:	84 fd       	sbrc	r24, 4
     794:	9e c0       	rjmp	.+316    	; 0x8d2 <ht1632c_setup+0x502>
     796:	20 93 86 06 	sts	0x0686, r18
     79a:	24 e0       	ldi	r18, 0x04	; 4
     79c:	20 93 85 06 	sts	0x0685, r18
     7a0:	20 93 86 06 	sts	0x0686, r18
     7a4:	28 e0       	ldi	r18, 0x08	; 8
     7a6:	83 fd       	sbrc	r24, 3
     7a8:	9e c0       	rjmp	.+316    	; 0x8e6 <ht1632c_setup+0x516>
     7aa:	20 93 86 06 	sts	0x0686, r18
     7ae:	24 e0       	ldi	r18, 0x04	; 4
     7b0:	20 93 85 06 	sts	0x0685, r18
     7b4:	20 93 86 06 	sts	0x0686, r18
     7b8:	28 e0       	ldi	r18, 0x08	; 8
     7ba:	82 fd       	sbrc	r24, 2
     7bc:	9e c0       	rjmp	.+316    	; 0x8fa <ht1632c_setup+0x52a>
     7be:	20 93 86 06 	sts	0x0686, r18
     7c2:	94 e0       	ldi	r25, 0x04	; 4
     7c4:	90 93 85 06 	sts	0x0685, r25
     7c8:	90 93 86 06 	sts	0x0686, r25
     7cc:	81 fd       	sbrc	r24, 1
     7ce:	9e c0       	rjmp	.+316    	; 0x90c <ht1632c_setup+0x53c>
     7d0:	88 e0       	ldi	r24, 0x08	; 8
     7d2:	80 93 86 06 	sts	0x0686, r24
     7d6:	84 e0       	ldi	r24, 0x04	; 4
     7d8:	80 93 85 06 	sts	0x0685, r24
     7dc:	80 93 86 06 	sts	0x0686, r24
     7e0:	98 e0       	ldi	r25, 0x08	; 8
     7e2:	90 93 86 06 	sts	0x0686, r25
     7e6:	80 93 85 06 	sts	0x0685, r24
     7ea:	90 93 86 06 	sts	0x0686, r25
     7ee:	21 e0       	ldi	r18, 0x01	; 1
     7f0:	20 93 85 06 	sts	0x0685, r18
     7f4:	20 93 86 06 	sts	0x0686, r18
     7f8:	90 93 81 06 	sts	0x0681, r25
     7fc:	80 93 86 06 	sts	0x0686, r24
     800:	90 93 85 06 	sts	0x0685, r25
     804:	80 93 85 06 	sts	0x0685, r24
     808:	80 93 86 06 	sts	0x0686, r24
     80c:	90 93 86 06 	sts	0x0686, r25
     810:	80 93 85 06 	sts	0x0685, r24
     814:	80 93 86 06 	sts	0x0686, r24
     818:	90 93 86 06 	sts	0x0686, r25
     81c:	80 93 85 06 	sts	0x0685, r24
     820:	80 93 86 06 	sts	0x0686, r24
     824:	90 93 85 06 	sts	0x0685, r25
     828:	80 93 85 06 	sts	0x0685, r24
     82c:	80 93 86 06 	sts	0x0686, r24
     830:	90 93 86 06 	sts	0x0686, r25
     834:	80 93 85 06 	sts	0x0685, r24
     838:	80 93 86 06 	sts	0x0686, r24
     83c:	90 93 85 06 	sts	0x0685, r25
     840:	80 93 85 06 	sts	0x0685, r24
     844:	80 93 86 06 	sts	0x0686, r24
     848:	90 93 86 06 	sts	0x0686, r25
     84c:	80 93 85 06 	sts	0x0685, r24
     850:	80 93 86 06 	sts	0x0686, r24
     854:	90 93 86 06 	sts	0x0686, r25
     858:	80 93 85 06 	sts	0x0685, r24
     85c:	80 93 86 06 	sts	0x0686, r24
     860:	90 93 86 06 	sts	0x0686, r25
     864:	80 93 85 06 	sts	0x0685, r24
     868:	80 93 86 06 	sts	0x0686, r24
     86c:	90 93 86 06 	sts	0x0686, r25
     870:	80 93 85 06 	sts	0x0685, r24
     874:	80 93 86 06 	sts	0x0686, r24
     878:	90 93 85 06 	sts	0x0685, r25
     87c:	80 93 85 06 	sts	0x0685, r24
     880:	80 93 86 06 	sts	0x0686, r24
     884:	90 93 86 06 	sts	0x0686, r25
     888:	80 93 85 06 	sts	0x0685, r24
     88c:	90 93 86 06 	sts	0x0686, r25
     890:	20 93 85 06 	sts	0x0685, r18
     894:	08 95       	ret
     896:	20 93 85 06 	sts	0x0685, r18
     89a:	24 e0       	ldi	r18, 0x04	; 4
     89c:	20 93 85 06 	sts	0x0685, r18
     8a0:	20 93 86 06 	sts	0x0686, r18
     8a4:	28 e0       	ldi	r18, 0x08	; 8
     8a6:	86 ff       	sbrs	r24, 6
     8a8:	62 cf       	rjmp	.-316    	; 0x76e <ht1632c_setup+0x39e>
     8aa:	20 93 85 06 	sts	0x0685, r18
     8ae:	24 e0       	ldi	r18, 0x04	; 4
     8b0:	20 93 85 06 	sts	0x0685, r18
     8b4:	20 93 86 06 	sts	0x0686, r18
     8b8:	28 e0       	ldi	r18, 0x08	; 8
     8ba:	85 ff       	sbrs	r24, 5
     8bc:	62 cf       	rjmp	.-316    	; 0x782 <ht1632c_setup+0x3b2>
     8be:	20 93 85 06 	sts	0x0685, r18
     8c2:	24 e0       	ldi	r18, 0x04	; 4
     8c4:	20 93 85 06 	sts	0x0685, r18
     8c8:	20 93 86 06 	sts	0x0686, r18
     8cc:	28 e0       	ldi	r18, 0x08	; 8
     8ce:	84 ff       	sbrs	r24, 4
     8d0:	62 cf       	rjmp	.-316    	; 0x796 <ht1632c_setup+0x3c6>
     8d2:	20 93 85 06 	sts	0x0685, r18
     8d6:	24 e0       	ldi	r18, 0x04	; 4
     8d8:	20 93 85 06 	sts	0x0685, r18
     8dc:	20 93 86 06 	sts	0x0686, r18
     8e0:	28 e0       	ldi	r18, 0x08	; 8
     8e2:	83 ff       	sbrs	r24, 3
     8e4:	62 cf       	rjmp	.-316    	; 0x7aa <ht1632c_setup+0x3da>
     8e6:	20 93 85 06 	sts	0x0685, r18
     8ea:	24 e0       	ldi	r18, 0x04	; 4
     8ec:	20 93 85 06 	sts	0x0685, r18
     8f0:	20 93 86 06 	sts	0x0686, r18
     8f4:	28 e0       	ldi	r18, 0x08	; 8
     8f6:	82 ff       	sbrs	r24, 2
     8f8:	62 cf       	rjmp	.-316    	; 0x7be <ht1632c_setup+0x3ee>
     8fa:	20 93 85 06 	sts	0x0685, r18
     8fe:	94 e0       	ldi	r25, 0x04	; 4
     900:	90 93 85 06 	sts	0x0685, r25
     904:	90 93 86 06 	sts	0x0686, r25
     908:	81 ff       	sbrs	r24, 1
     90a:	62 cf       	rjmp	.-316    	; 0x7d0 <ht1632c_setup+0x400>
     90c:	88 e0       	ldi	r24, 0x08	; 8
     90e:	80 93 85 06 	sts	0x0685, r24
     912:	61 cf       	rjmp	.-318    	; 0x7d6 <ht1632c_setup+0x406>
     914:	30 93 85 06 	sts	0x0685, r19
     918:	24 e0       	ldi	r18, 0x04	; 4
     91a:	20 93 85 06 	sts	0x0685, r18
     91e:	20 93 86 06 	sts	0x0686, r18
     922:	28 e0       	ldi	r18, 0x08	; 8
     924:	87 fd       	sbrc	r24, 7
     926:	b7 cf       	rjmp	.-146    	; 0x896 <ht1632c_setup+0x4c6>
     928:	18 cf       	rjmp	.-464    	; 0x75a <ht1632c_setup+0x38a>

0000092a <ht1632c_set_brightness>:
     92a:	80 31       	cpi	r24, 0x10	; 16
     92c:	08 f0       	brcs	.+2      	; 0x930 <ht1632c_set_brightness+0x6>
     92e:	8f e0       	ldi	r24, 0x0F	; 15
     930:	80 6a       	ori	r24, 0xA0	; 160
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	94 60       	ori	r25, 0x04	; 4
     936:	88 0f       	add	r24, r24
     938:	99 1f       	adc	r25, r25
     93a:	21 e0       	ldi	r18, 0x01	; 1
     93c:	20 93 86 06 	sts	0x0686, r18
     940:	38 e0       	ldi	r19, 0x08	; 8
     942:	30 93 81 06 	sts	0x0681, r19
     946:	24 e0       	ldi	r18, 0x04	; 4
     948:	20 93 86 06 	sts	0x0686, r18
     94c:	30 93 85 06 	sts	0x0685, r19
     950:	20 93 85 06 	sts	0x0685, r18
     954:	20 93 86 06 	sts	0x0686, r18
     958:	30 93 86 06 	sts	0x0686, r19
     95c:	20 93 85 06 	sts	0x0685, r18
     960:	20 93 86 06 	sts	0x0686, r18
     964:	30 93 86 06 	sts	0x0686, r19
     968:	20 93 85 06 	sts	0x0685, r18
     96c:	20 93 86 06 	sts	0x0686, r18
     970:	30 93 85 06 	sts	0x0685, r19
     974:	20 93 85 06 	sts	0x0685, r18
     978:	20 93 86 06 	sts	0x0686, r18
     97c:	30 93 86 06 	sts	0x0686, r19
     980:	20 93 85 06 	sts	0x0685, r18
     984:	20 93 86 06 	sts	0x0686, r18
     988:	30 93 85 06 	sts	0x0685, r19
     98c:	20 93 85 06 	sts	0x0685, r18
     990:	20 93 86 06 	sts	0x0686, r18
     994:	30 93 86 06 	sts	0x0686, r19
     998:	20 93 85 06 	sts	0x0685, r18
     99c:	20 93 86 06 	sts	0x0686, r18
     9a0:	84 fd       	sbrc	r24, 4
     9a2:	47 c0       	rjmp	.+142    	; 0xa32 <ht1632c_set_brightness+0x108>
     9a4:	30 93 86 06 	sts	0x0686, r19
     9a8:	24 e0       	ldi	r18, 0x04	; 4
     9aa:	20 93 85 06 	sts	0x0685, r18
     9ae:	20 93 86 06 	sts	0x0686, r18
     9b2:	28 e0       	ldi	r18, 0x08	; 8
     9b4:	83 fd       	sbrc	r24, 3
     9b6:	26 c0       	rjmp	.+76     	; 0xa04 <ht1632c_set_brightness+0xda>
     9b8:	20 93 86 06 	sts	0x0686, r18
     9bc:	24 e0       	ldi	r18, 0x04	; 4
     9be:	20 93 85 06 	sts	0x0685, r18
     9c2:	20 93 86 06 	sts	0x0686, r18
     9c6:	28 e0       	ldi	r18, 0x08	; 8
     9c8:	82 fd       	sbrc	r24, 2
     9ca:	26 c0       	rjmp	.+76     	; 0xa18 <ht1632c_set_brightness+0xee>
     9cc:	20 93 86 06 	sts	0x0686, r18
     9d0:	94 e0       	ldi	r25, 0x04	; 4
     9d2:	90 93 85 06 	sts	0x0685, r25
     9d6:	90 93 86 06 	sts	0x0686, r25
     9da:	81 fd       	sbrc	r24, 1
     9dc:	26 c0       	rjmp	.+76     	; 0xa2a <ht1632c_set_brightness+0x100>
     9de:	88 e0       	ldi	r24, 0x08	; 8
     9e0:	80 93 86 06 	sts	0x0686, r24
     9e4:	84 e0       	ldi	r24, 0x04	; 4
     9e6:	80 93 85 06 	sts	0x0685, r24
     9ea:	80 93 86 06 	sts	0x0686, r24
     9ee:	98 e0       	ldi	r25, 0x08	; 8
     9f0:	90 93 86 06 	sts	0x0686, r25
     9f4:	80 93 85 06 	sts	0x0685, r24
     9f8:	90 93 86 06 	sts	0x0686, r25
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	80 93 85 06 	sts	0x0685, r24
     a02:	08 95       	ret
     a04:	20 93 85 06 	sts	0x0685, r18
     a08:	24 e0       	ldi	r18, 0x04	; 4
     a0a:	20 93 85 06 	sts	0x0685, r18
     a0e:	20 93 86 06 	sts	0x0686, r18
     a12:	28 e0       	ldi	r18, 0x08	; 8
     a14:	82 ff       	sbrs	r24, 2
     a16:	da cf       	rjmp	.-76     	; 0x9cc <ht1632c_set_brightness+0xa2>
     a18:	20 93 85 06 	sts	0x0685, r18
     a1c:	94 e0       	ldi	r25, 0x04	; 4
     a1e:	90 93 85 06 	sts	0x0685, r25
     a22:	90 93 86 06 	sts	0x0686, r25
     a26:	81 ff       	sbrs	r24, 1
     a28:	da cf       	rjmp	.-76     	; 0x9de <ht1632c_set_brightness+0xb4>
     a2a:	88 e0       	ldi	r24, 0x08	; 8
     a2c:	80 93 85 06 	sts	0x0685, r24
     a30:	d9 cf       	rjmp	.-78     	; 0x9e4 <ht1632c_set_brightness+0xba>
     a32:	30 93 85 06 	sts	0x0685, r19
     a36:	24 e0       	ldi	r18, 0x04	; 4
     a38:	20 93 85 06 	sts	0x0685, r18
     a3c:	20 93 86 06 	sts	0x0686, r18
     a40:	28 e0       	ldi	r18, 0x08	; 8
     a42:	83 fd       	sbrc	r24, 3
     a44:	df cf       	rjmp	.-66     	; 0xa04 <ht1632c_set_brightness+0xda>
     a46:	b8 cf       	rjmp	.-144    	; 0x9b8 <ht1632c_set_brightness+0x8e>

00000a48 <ht1632c_refresh_screen>:
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	80 93 86 06 	sts	0x0686, r24
     a4e:	98 e0       	ldi	r25, 0x08	; 8
     a50:	90 93 81 06 	sts	0x0681, r25
     a54:	84 e0       	ldi	r24, 0x04	; 4
     a56:	80 93 86 06 	sts	0x0686, r24
     a5a:	90 93 85 06 	sts	0x0685, r25
     a5e:	80 93 85 06 	sts	0x0685, r24
     a62:	80 93 86 06 	sts	0x0686, r24
     a66:	90 93 86 06 	sts	0x0686, r25
     a6a:	80 93 85 06 	sts	0x0685, r24
     a6e:	80 93 86 06 	sts	0x0686, r24
     a72:	90 93 85 06 	sts	0x0685, r25
     a76:	80 93 85 06 	sts	0x0685, r24
     a7a:	90 93 86 06 	sts	0x0686, r25
     a7e:	90 93 81 06 	sts	0x0681, r25
     a82:	80 93 86 06 	sts	0x0686, r24
     a86:	90 93 86 06 	sts	0x0686, r25
     a8a:	80 93 85 06 	sts	0x0685, r24
     a8e:	80 93 86 06 	sts	0x0686, r24
     a92:	90 93 86 06 	sts	0x0686, r25
     a96:	80 93 85 06 	sts	0x0685, r24
     a9a:	80 93 86 06 	sts	0x0686, r24
     a9e:	90 93 86 06 	sts	0x0686, r25
     aa2:	80 93 85 06 	sts	0x0685, r24
     aa6:	80 93 86 06 	sts	0x0686, r24
     aaa:	90 93 86 06 	sts	0x0686, r25
     aae:	80 93 85 06 	sts	0x0685, r24
     ab2:	80 93 86 06 	sts	0x0686, r24
     ab6:	90 93 86 06 	sts	0x0686, r25
     aba:	80 93 85 06 	sts	0x0685, r24
     abe:	80 93 86 06 	sts	0x0686, r24
     ac2:	90 93 86 06 	sts	0x0686, r25
     ac6:	80 93 85 06 	sts	0x0685, r24
     aca:	80 93 86 06 	sts	0x0686, r24
     ace:	90 93 86 06 	sts	0x0686, r25
     ad2:	80 93 85 06 	sts	0x0685, r24
     ad6:	90 93 86 06 	sts	0x0686, r25
     ada:	e2 ea       	ldi	r30, 0xA2	; 162
     adc:	f2 e2       	ldi	r31, 0x22	; 34
     ade:	38 e0       	ldi	r19, 0x08	; 8
     ae0:	24 e0       	ldi	r18, 0x04	; 4
     ae2:	7c c0       	rjmp	.+248    	; 0xbdc <ht1632c_refresh_screen+0x194>
     ae4:	30 93 86 06 	sts	0x0686, r19
     ae8:	20 93 85 06 	sts	0x0685, r18
     aec:	20 93 86 06 	sts	0x0686, r18
     af0:	95 fd       	sbrc	r25, 5
     af2:	92 c0       	rjmp	.+292    	; 0xc18 <ht1632c_refresh_screen+0x1d0>
     af4:	30 93 86 06 	sts	0x0686, r19
     af8:	20 93 85 06 	sts	0x0685, r18
     afc:	20 93 86 06 	sts	0x0686, r18
     b00:	94 fd       	sbrc	r25, 4
     b02:	92 c0       	rjmp	.+292    	; 0xc28 <ht1632c_refresh_screen+0x1e0>
     b04:	30 93 86 06 	sts	0x0686, r19
     b08:	20 93 85 06 	sts	0x0685, r18
     b0c:	20 93 86 06 	sts	0x0686, r18
     b10:	93 fd       	sbrc	r25, 3
     b12:	92 c0       	rjmp	.+292    	; 0xc38 <ht1632c_refresh_screen+0x1f0>
     b14:	30 93 86 06 	sts	0x0686, r19
     b18:	20 93 85 06 	sts	0x0685, r18
     b1c:	20 93 86 06 	sts	0x0686, r18
     b20:	92 fd       	sbrc	r25, 2
     b22:	92 c0       	rjmp	.+292    	; 0xc48 <ht1632c_refresh_screen+0x200>
     b24:	30 93 86 06 	sts	0x0686, r19
     b28:	20 93 85 06 	sts	0x0685, r18
     b2c:	20 93 86 06 	sts	0x0686, r18
     b30:	91 fd       	sbrc	r25, 1
     b32:	92 c0       	rjmp	.+292    	; 0xc58 <ht1632c_refresh_screen+0x210>
     b34:	30 93 86 06 	sts	0x0686, r19
     b38:	20 93 85 06 	sts	0x0685, r18
     b3c:	20 93 86 06 	sts	0x0686, r18
     b40:	90 fd       	sbrc	r25, 0
     b42:	92 c0       	rjmp	.+292    	; 0xc68 <ht1632c_refresh_screen+0x220>
     b44:	30 93 86 06 	sts	0x0686, r19
     b48:	20 93 85 06 	sts	0x0685, r18
     b4c:	20 93 86 06 	sts	0x0686, r18
     b50:	87 fd       	sbrc	r24, 7
     b52:	92 c0       	rjmp	.+292    	; 0xc78 <ht1632c_refresh_screen+0x230>
     b54:	30 93 86 06 	sts	0x0686, r19
     b58:	20 93 85 06 	sts	0x0685, r18
     b5c:	20 93 86 06 	sts	0x0686, r18
     b60:	86 fd       	sbrc	r24, 6
     b62:	92 c0       	rjmp	.+292    	; 0xc88 <ht1632c_refresh_screen+0x240>
     b64:	30 93 86 06 	sts	0x0686, r19
     b68:	20 93 85 06 	sts	0x0685, r18
     b6c:	20 93 86 06 	sts	0x0686, r18
     b70:	85 fd       	sbrc	r24, 5
     b72:	92 c0       	rjmp	.+292    	; 0xc98 <ht1632c_refresh_screen+0x250>
     b74:	30 93 86 06 	sts	0x0686, r19
     b78:	20 93 85 06 	sts	0x0685, r18
     b7c:	20 93 86 06 	sts	0x0686, r18
     b80:	84 fd       	sbrc	r24, 4
     b82:	92 c0       	rjmp	.+292    	; 0xca8 <ht1632c_refresh_screen+0x260>
     b84:	30 93 86 06 	sts	0x0686, r19
     b88:	20 93 85 06 	sts	0x0685, r18
     b8c:	20 93 86 06 	sts	0x0686, r18
     b90:	83 fd       	sbrc	r24, 3
     b92:	92 c0       	rjmp	.+292    	; 0xcb8 <ht1632c_refresh_screen+0x270>
     b94:	30 93 86 06 	sts	0x0686, r19
     b98:	20 93 85 06 	sts	0x0685, r18
     b9c:	20 93 86 06 	sts	0x0686, r18
     ba0:	82 fd       	sbrc	r24, 2
     ba2:	92 c0       	rjmp	.+292    	; 0xcc8 <ht1632c_refresh_screen+0x280>
     ba4:	30 93 86 06 	sts	0x0686, r19
     ba8:	20 93 85 06 	sts	0x0685, r18
     bac:	20 93 86 06 	sts	0x0686, r18
     bb0:	81 fd       	sbrc	r24, 1
     bb2:	92 c0       	rjmp	.+292    	; 0xcd8 <ht1632c_refresh_screen+0x290>
     bb4:	30 93 86 06 	sts	0x0686, r19
     bb8:	20 93 85 06 	sts	0x0685, r18
     bbc:	20 93 86 06 	sts	0x0686, r18
     bc0:	80 fd       	sbrc	r24, 0
     bc2:	92 c0       	rjmp	.+292    	; 0xce8 <ht1632c_refresh_screen+0x2a0>
     bc4:	30 93 86 06 	sts	0x0686, r19
     bc8:	20 93 85 06 	sts	0x0685, r18
     bcc:	30 93 86 06 	sts	0x0686, r19
     bd0:	32 96       	adiw	r30, 0x02	; 2
     bd2:	82 e2       	ldi	r24, 0x22	; 34
     bd4:	e2 3c       	cpi	r30, 0xC2	; 194
     bd6:	f8 07       	cpc	r31, r24
     bd8:	09 f4       	brne	.+2      	; 0xbdc <ht1632c_refresh_screen+0x194>
     bda:	8c c0       	rjmp	.+280    	; 0xcf4 <ht1632c_refresh_screen+0x2ac>
     bdc:	df 01       	movw	r26, r30
     bde:	11 97       	sbiw	r26, 0x01	; 1
     be0:	8c 91       	ld	r24, X
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	98 2f       	mov	r25, r24
     be6:	88 27       	eor	r24, r24
     be8:	40 81       	ld	r20, Z
     bea:	84 2b       	or	r24, r20
     bec:	30 93 81 06 	sts	0x0681, r19
     bf0:	20 93 86 06 	sts	0x0686, r18
     bf4:	97 fd       	sbrc	r25, 7
     bf6:	7b c0       	rjmp	.+246    	; 0xcee <ht1632c_refresh_screen+0x2a6>
     bf8:	30 93 86 06 	sts	0x0686, r19
     bfc:	20 93 85 06 	sts	0x0685, r18
     c00:	20 93 86 06 	sts	0x0686, r18
     c04:	96 ff       	sbrs	r25, 6
     c06:	6e cf       	rjmp	.-292    	; 0xae4 <ht1632c_refresh_screen+0x9c>
     c08:	30 93 85 06 	sts	0x0685, r19
     c0c:	20 93 85 06 	sts	0x0685, r18
     c10:	20 93 86 06 	sts	0x0686, r18
     c14:	95 ff       	sbrs	r25, 5
     c16:	6e cf       	rjmp	.-292    	; 0xaf4 <ht1632c_refresh_screen+0xac>
     c18:	30 93 85 06 	sts	0x0685, r19
     c1c:	20 93 85 06 	sts	0x0685, r18
     c20:	20 93 86 06 	sts	0x0686, r18
     c24:	94 ff       	sbrs	r25, 4
     c26:	6e cf       	rjmp	.-292    	; 0xb04 <ht1632c_refresh_screen+0xbc>
     c28:	30 93 85 06 	sts	0x0685, r19
     c2c:	20 93 85 06 	sts	0x0685, r18
     c30:	20 93 86 06 	sts	0x0686, r18
     c34:	93 ff       	sbrs	r25, 3
     c36:	6e cf       	rjmp	.-292    	; 0xb14 <ht1632c_refresh_screen+0xcc>
     c38:	30 93 85 06 	sts	0x0685, r19
     c3c:	20 93 85 06 	sts	0x0685, r18
     c40:	20 93 86 06 	sts	0x0686, r18
     c44:	92 ff       	sbrs	r25, 2
     c46:	6e cf       	rjmp	.-292    	; 0xb24 <ht1632c_refresh_screen+0xdc>
     c48:	30 93 85 06 	sts	0x0685, r19
     c4c:	20 93 85 06 	sts	0x0685, r18
     c50:	20 93 86 06 	sts	0x0686, r18
     c54:	91 ff       	sbrs	r25, 1
     c56:	6e cf       	rjmp	.-292    	; 0xb34 <ht1632c_refresh_screen+0xec>
     c58:	30 93 85 06 	sts	0x0685, r19
     c5c:	20 93 85 06 	sts	0x0685, r18
     c60:	20 93 86 06 	sts	0x0686, r18
     c64:	90 ff       	sbrs	r25, 0
     c66:	6e cf       	rjmp	.-292    	; 0xb44 <ht1632c_refresh_screen+0xfc>
     c68:	30 93 85 06 	sts	0x0685, r19
     c6c:	20 93 85 06 	sts	0x0685, r18
     c70:	20 93 86 06 	sts	0x0686, r18
     c74:	87 ff       	sbrs	r24, 7
     c76:	6e cf       	rjmp	.-292    	; 0xb54 <ht1632c_refresh_screen+0x10c>
     c78:	30 93 85 06 	sts	0x0685, r19
     c7c:	20 93 85 06 	sts	0x0685, r18
     c80:	20 93 86 06 	sts	0x0686, r18
     c84:	86 ff       	sbrs	r24, 6
     c86:	6e cf       	rjmp	.-292    	; 0xb64 <ht1632c_refresh_screen+0x11c>
     c88:	30 93 85 06 	sts	0x0685, r19
     c8c:	20 93 85 06 	sts	0x0685, r18
     c90:	20 93 86 06 	sts	0x0686, r18
     c94:	85 ff       	sbrs	r24, 5
     c96:	6e cf       	rjmp	.-292    	; 0xb74 <ht1632c_refresh_screen+0x12c>
     c98:	30 93 85 06 	sts	0x0685, r19
     c9c:	20 93 85 06 	sts	0x0685, r18
     ca0:	20 93 86 06 	sts	0x0686, r18
     ca4:	84 ff       	sbrs	r24, 4
     ca6:	6e cf       	rjmp	.-292    	; 0xb84 <ht1632c_refresh_screen+0x13c>
     ca8:	30 93 85 06 	sts	0x0685, r19
     cac:	20 93 85 06 	sts	0x0685, r18
     cb0:	20 93 86 06 	sts	0x0686, r18
     cb4:	83 ff       	sbrs	r24, 3
     cb6:	6e cf       	rjmp	.-292    	; 0xb94 <ht1632c_refresh_screen+0x14c>
     cb8:	30 93 85 06 	sts	0x0685, r19
     cbc:	20 93 85 06 	sts	0x0685, r18
     cc0:	20 93 86 06 	sts	0x0686, r18
     cc4:	82 ff       	sbrs	r24, 2
     cc6:	6e cf       	rjmp	.-292    	; 0xba4 <ht1632c_refresh_screen+0x15c>
     cc8:	30 93 85 06 	sts	0x0685, r19
     ccc:	20 93 85 06 	sts	0x0685, r18
     cd0:	20 93 86 06 	sts	0x0686, r18
     cd4:	81 ff       	sbrs	r24, 1
     cd6:	6e cf       	rjmp	.-292    	; 0xbb4 <ht1632c_refresh_screen+0x16c>
     cd8:	30 93 85 06 	sts	0x0685, r19
     cdc:	20 93 85 06 	sts	0x0685, r18
     ce0:	20 93 86 06 	sts	0x0686, r18
     ce4:	80 ff       	sbrs	r24, 0
     ce6:	6e cf       	rjmp	.-292    	; 0xbc4 <ht1632c_refresh_screen+0x17c>
     ce8:	30 93 85 06 	sts	0x0685, r19
     cec:	6d cf       	rjmp	.-294    	; 0xbc8 <ht1632c_refresh_screen+0x180>
     cee:	30 93 85 06 	sts	0x0685, r19
     cf2:	84 cf       	rjmp	.-248    	; 0xbfc <ht1632c_refresh_screen+0x1b4>
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	80 93 85 06 	sts	0x0685, r24
     cfa:	08 95       	ret

00000cfc <ht1632c_clear_screen>:
}

void ht1632c_clear_screen() {
     cfc:	80 e2       	ldi	r24, 0x20	; 32
     cfe:	e1 ea       	ldi	r30, 0xA1	; 161
     d00:	f2 e2       	ldi	r31, 0x22	; 34
     d02:	df 01       	movw	r26, r30
     d04:	1d 92       	st	X+, r1
     d06:	8a 95       	dec	r24
     d08:	e9 f7       	brne	.-6      	; 0xd04 <ht1632c_clear_screen+0x8>

	for (uint8_t i=0; i<(WIDTH*HEIGHT/8); i++) {
		ledmatrix[i] = 0;
	}
	ht1632c_refresh_screen();
     d0a:	9e ce       	rjmp	.-708    	; 0xa48 <ht1632c_refresh_screen>

00000d0c <btn_setup>:
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL += 1;
		return BTN3;
	} else if (!(PORTB.IN & BUTTON3)) {
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL -= 1;
     d0c:	e0 e0       	ldi	r30, 0x00	; 0
     d0e:	f6 e0       	ldi	r31, 0x06	; 6
     d10:	20 ee       	ldi	r18, 0xE0	; 224
     d12:	22 83       	std	Z+2, r18	; 0x02
     d14:	a0 e2       	ldi	r26, 0x20	; 32
     d16:	b6 e0       	ldi	r27, 0x06	; 6
     d18:	91 e0       	ldi	r25, 0x01	; 1
     d1a:	12 96       	adiw	r26, 0x02	; 2
     d1c:	9c 93       	st	X, r25
     d1e:	12 97       	sbiw	r26, 0x02	; 2
     d20:	82 e0       	ldi	r24, 0x02	; 2
     d22:	85 8b       	std	Z+21, r24	; 0x15
     d24:	86 8b       	std	Z+22, r24	; 0x16
     d26:	87 8b       	std	Z+23, r24	; 0x17
     d28:	50 96       	adiw	r26, 0x10	; 16
     d2a:	8c 93       	st	X, r24
     d2c:	50 97       	sbiw	r26, 0x10	; 16
     d2e:	22 87       	std	Z+10, r18	; 0x0a
     d30:	1a 96       	adiw	r26, 0x0a	; 10
     d32:	9c 93       	st	X, r25
     d34:	1a 97       	sbiw	r26, 0x0a	; 10
     d36:	83 e0       	ldi	r24, 0x03	; 3
     d38:	81 87       	std	Z+9, r24	; 0x09
     d3a:	19 96       	adiw	r26, 0x09	; 9
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret

00000d40 <__vector_66>:
	} else {
		return NONE;
	}
}

ISR(PORTA_INT0_vect) {
     d40:	1f 92       	push	r1
     d42:	0f 92       	push	r0
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	0f 92       	push	r0
     d48:	11 24       	eor	r1, r1
     d4a:	0b b6       	in	r0, 0x3b	; 59
     d4c:	0f 92       	push	r0
     d4e:	2f 93       	push	r18
     d50:	3f 93       	push	r19
     d52:	4f 93       	push	r20
     d54:	5f 93       	push	r21
     d56:	6f 93       	push	r22
     d58:	7f 93       	push	r23
     d5a:	8f 93       	push	r24
     d5c:	9f 93       	push	r25
     d5e:	af 93       	push	r26
     d60:	bf 93       	push	r27
     d62:	ef 93       	push	r30
     d64:	ff 93       	push	r31
	
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
     d66:	80 91 08 06 	lds	r24, 0x0608
     d6a:	85 ff       	sbrs	r24, 5
     d6c:	34 c0       	rjmp	.+104    	; 0xdd6 <__vector_66+0x96>
		uwrite_hex(DACB.CH0OFFSETCAL);
		DACB.CH0OFFSETCAL += 1;
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
     d6e:	80 91 08 06 	lds	r24, 0x0608
     d72:	86 ff       	sbrs	r24, 6
     d74:	24 c0       	rjmp	.+72     	; 0xdbe <__vector_66+0x7e>
		uwrite_hex(DACB.CH0OFFSETCAL);
		DACB.CH0OFFSETCAL -= 1;
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
     d76:	80 91 08 06 	lds	r24, 0x0608
     d7a:	87 fd       	sbrc	r24, 7
     d7c:	38 c0       	rjmp	.+112    	; 0xdee <__vector_66+0xae>
		uwrite_hex(DACB.CH0GAINCAL);
     d7e:	80 91 28 03 	lds	r24, 0x0328
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0GAINCAL += 1;
     d88:	80 91 28 03 	lds	r24, 0x0328
     d8c:	8f 5f       	subi	r24, 0xFF	; 255
     d8e:	80 93 28 03 	sts	0x0328, r24
		return BTN3;
     d92:	83 e0       	ldi	r24, 0x03	; 3
		return NONE;
	}
}

ISR(PORTA_INT0_vect) {
	btn_status = btn_check_press();
     d94:	80 93 f2 22 	sts	0x22F2, r24
	//printf("%d",btn_status);
}
     d98:	ff 91       	pop	r31
     d9a:	ef 91       	pop	r30
     d9c:	bf 91       	pop	r27
     d9e:	af 91       	pop	r26
     da0:	9f 91       	pop	r25
     da2:	8f 91       	pop	r24
     da4:	7f 91       	pop	r23
     da6:	6f 91       	pop	r22
     da8:	5f 91       	pop	r21
     daa:	4f 91       	pop	r20
     dac:	3f 91       	pop	r19
     dae:	2f 91       	pop	r18
     db0:	0f 90       	pop	r0
     db2:	0b be       	out	0x3b, r0	; 59
     db4:	0f 90       	pop	r0
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	0f 90       	pop	r0
     dba:	1f 90       	pop	r1
     dbc:	18 95       	reti
	if (!(PORTA.IN & BUTTON0)) {
		uwrite_hex(DACB.CH0OFFSETCAL);
		DACB.CH0OFFSETCAL += 1;
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
		uwrite_hex(DACB.CH0OFFSETCAL);
     dbe:	80 91 29 03 	lds	r24, 0x0329
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0OFFSETCAL -= 1;
     dc8:	80 91 29 03 	lds	r24, 0x0329
     dcc:	81 50       	subi	r24, 0x01	; 1
     dce:	80 93 29 03 	sts	0x0329, r24
		return BTN2;
     dd2:	82 e0       	ldi	r24, 0x02	; 2
     dd4:	df cf       	rjmp	.-66     	; 0xd94 <__vector_66+0x54>
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
		uwrite_hex(DACB.CH0OFFSETCAL);
     dd6:	80 91 29 03 	lds	r24, 0x0329
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0OFFSETCAL += 1;
     de0:	80 91 29 03 	lds	r24, 0x0329
     de4:	8f 5f       	subi	r24, 0xFF	; 255
     de6:	80 93 29 03 	sts	0x0329, r24
		return BTN1;
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	d3 cf       	rjmp	.-90     	; 0xd94 <__vector_66+0x54>
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL += 1;
		return BTN3;
	} else if (!(PORTB.IN & BUTTON3)) {
     dee:	80 91 28 06 	lds	r24, 0x0628
     df2:	80 ff       	sbrs	r24, 0
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <__vector_66+0xba>
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL -= 1;
		return BTN4;
	} else {
		return NONE;
     df6:	80 e0       	ldi	r24, 0x00	; 0
     df8:	cd cf       	rjmp	.-102    	; 0xd94 <__vector_66+0x54>
	} else if (!(PORTA.IN & BUTTON2)) {
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL += 1;
		return BTN3;
	} else if (!(PORTB.IN & BUTTON3)) {
		uwrite_hex(DACB.CH0GAINCAL);
     dfa:	80 91 28 03 	lds	r24, 0x0328
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0GAINCAL -= 1;
     e04:	80 91 28 03 	lds	r24, 0x0328
     e08:	81 50       	subi	r24, 0x01	; 1
     e0a:	80 93 28 03 	sts	0x0328, r24
     e0e:	84 e0       	ldi	r24, 0x04	; 4
     e10:	c1 cf       	rjmp	.-126    	; 0xd94 <__vector_66+0x54>

00000e12 <__vector_34>:
ISR(PORTA_INT0_vect) {
	btn_status = btn_check_press();
	//printf("%d",btn_status);
}

ISR(PORTB_INT0_vect) {
     e12:	1f 92       	push	r1
     e14:	0f 92       	push	r0
     e16:	0f b6       	in	r0, 0x3f	; 63
     e18:	0f 92       	push	r0
     e1a:	11 24       	eor	r1, r1
     e1c:	0b b6       	in	r0, 0x3b	; 59
     e1e:	0f 92       	push	r0
     e20:	2f 93       	push	r18
     e22:	3f 93       	push	r19
     e24:	4f 93       	push	r20
     e26:	5f 93       	push	r21
     e28:	6f 93       	push	r22
     e2a:	7f 93       	push	r23
     e2c:	8f 93       	push	r24
     e2e:	9f 93       	push	r25
     e30:	af 93       	push	r26
     e32:	bf 93       	push	r27
     e34:	ef 93       	push	r30
     e36:	ff 93       	push	r31
	
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
     e38:	80 91 08 06 	lds	r24, 0x0608
     e3c:	85 ff       	sbrs	r24, 5
     e3e:	34 c0       	rjmp	.+104    	; 0xea8 <__vector_34+0x96>
		uwrite_hex(DACB.CH0OFFSETCAL);
		DACB.CH0OFFSETCAL += 1;
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
     e40:	80 91 08 06 	lds	r24, 0x0608
     e44:	86 ff       	sbrs	r24, 6
     e46:	24 c0       	rjmp	.+72     	; 0xe90 <__vector_34+0x7e>
		uwrite_hex(DACB.CH0OFFSETCAL);
		DACB.CH0OFFSETCAL -= 1;
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
     e48:	80 91 08 06 	lds	r24, 0x0608
     e4c:	87 fd       	sbrc	r24, 7
     e4e:	38 c0       	rjmp	.+112    	; 0xec0 <__vector_34+0xae>
		uwrite_hex(DACB.CH0GAINCAL);
     e50:	80 91 28 03 	lds	r24, 0x0328
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0GAINCAL += 1;
     e5a:	80 91 28 03 	lds	r24, 0x0328
     e5e:	8f 5f       	subi	r24, 0xFF	; 255
     e60:	80 93 28 03 	sts	0x0328, r24
		return BTN3;
     e64:	83 e0       	ldi	r24, 0x03	; 3
	btn_status = btn_check_press();
	//printf("%d",btn_status);
}

ISR(PORTB_INT0_vect) {
	btn_status = btn_check_press();
     e66:	80 93 f2 22 	sts	0x22F2, r24
	//printf("%d",btn_status);
     e6a:	ff 91       	pop	r31
     e6c:	ef 91       	pop	r30
     e6e:	bf 91       	pop	r27
     e70:	af 91       	pop	r26
     e72:	9f 91       	pop	r25
     e74:	8f 91       	pop	r24
     e76:	7f 91       	pop	r23
     e78:	6f 91       	pop	r22
     e7a:	5f 91       	pop	r21
     e7c:	4f 91       	pop	r20
     e7e:	3f 91       	pop	r19
     e80:	2f 91       	pop	r18
     e82:	0f 90       	pop	r0
     e84:	0b be       	out	0x3b, r0	; 59
     e86:	0f 90       	pop	r0
     e88:	0f be       	out	0x3f, r0	; 63
     e8a:	0f 90       	pop	r0
     e8c:	1f 90       	pop	r1
     e8e:	18 95       	reti
	if (!(PORTA.IN & BUTTON0)) {
		uwrite_hex(DACB.CH0OFFSETCAL);
		DACB.CH0OFFSETCAL += 1;
		return BTN1;
	} else if (!(PORTA.IN & BUTTON1)) {
		uwrite_hex(DACB.CH0OFFSETCAL);
     e90:	80 91 29 03 	lds	r24, 0x0329
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0OFFSETCAL -= 1;
     e9a:	80 91 29 03 	lds	r24, 0x0329
     e9e:	81 50       	subi	r24, 0x01	; 1
     ea0:	80 93 29 03 	sts	0x0329, r24
		return BTN2;
     ea4:	82 e0       	ldi	r24, 0x02	; 2
     ea6:	df cf       	rjmp	.-66     	; 0xe66 <__vector_34+0x54>
}

button_t btn_check_press(void) {
	
	if (!(PORTA.IN & BUTTON0)) {
		uwrite_hex(DACB.CH0OFFSETCAL);
     ea8:	80 91 29 03 	lds	r24, 0x0329
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0OFFSETCAL += 1;
     eb2:	80 91 29 03 	lds	r24, 0x0329
     eb6:	8f 5f       	subi	r24, 0xFF	; 255
     eb8:	80 93 29 03 	sts	0x0329, r24
		return BTN1;
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	d3 cf       	rjmp	.-90     	; 0xe66 <__vector_34+0x54>
		return BTN2;
	} else if (!(PORTA.IN & BUTTON2)) {
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL += 1;
		return BTN3;
	} else if (!(PORTB.IN & BUTTON3)) {
     ec0:	80 91 28 06 	lds	r24, 0x0628
     ec4:	80 ff       	sbrs	r24, 0
     ec6:	02 c0       	rjmp	.+4      	; 0xecc <__vector_34+0xba>
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL -= 1;
		return BTN4;
	} else {
		return NONE;
     ec8:	80 e0       	ldi	r24, 0x00	; 0
     eca:	cd cf       	rjmp	.-102    	; 0xe66 <__vector_34+0x54>
	} else if (!(PORTA.IN & BUTTON2)) {
		uwrite_hex(DACB.CH0GAINCAL);
		DACB.CH0GAINCAL += 1;
		return BTN3;
	} else if (!(PORTB.IN & BUTTON3)) {
		uwrite_hex(DACB.CH0GAINCAL);
     ecc:	80 91 28 03 	lds	r24, 0x0328
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 94 93 3a 	call	0x7526	; 0x7526 <uwrite_hex>
		DACB.CH0GAINCAL -= 1;
     ed6:	80 91 28 03 	lds	r24, 0x0328
     eda:	81 50       	subi	r24, 0x01	; 1
     edc:	80 93 28 03 	sts	0x0328, r24
     ee0:	84 e0       	ldi	r24, 0x04	; 4
     ee2:	c1 cf       	rjmp	.-126    	; 0xe66 <__vector_34+0x54>

00000ee4 <__vector_10>:
	strcat(buffer,buffer_minutes);
	
	ht1632c_scroll_print(buffer,2,2);
}

ISR(RTC_OVF_vect) {
     ee4:	1f 92       	push	r1
     ee6:	0f 92       	push	r0
     ee8:	0f b6       	in	r0, 0x3f	; 63
     eea:	0f 92       	push	r0
     eec:	11 24       	eor	r1, r1
     eee:	2f 93       	push	r18
     ef0:	3f 93       	push	r19
     ef2:	4f 93       	push	r20
     ef4:	5f 93       	push	r21
     ef6:	6f 93       	push	r22
     ef8:	7f 93       	push	r23
     efa:	8f 93       	push	r24
     efc:	9f 93       	push	r25
     efe:	af 93       	push	r26
     f00:	bf 93       	push	r27
     f02:	ef 93       	push	r30
	if (++time.seconds == 60) {
     f04:	80 91 f3 22 	lds	r24, 0x22F3
     f08:	8f 5f       	subi	r24, 0xFF	; 255
     f0a:	80 93 f3 22 	sts	0x22F3, r24
     f0e:	8c 33       	cpi	r24, 0x3C	; 60
     f10:	81 f0       	breq	.+32     	; 0xf32 <__vector_10+0x4e>
			time.minutes = 0;
		} else {
			//rtc_update_display(BOTTOM,time.minutes);
		}
	}
}
     f12:	ef 91       	pop	r30
     f14:	bf 91       	pop	r27
     f16:	af 91       	pop	r26
     f18:	9f 91       	pop	r25
     f1a:	8f 91       	pop	r24
     f1c:	7f 91       	pop	r23
     f1e:	6f 91       	pop	r22
     f20:	5f 91       	pop	r21
     f22:	4f 91       	pop	r20
     f24:	3f 91       	pop	r19
     f26:	2f 91       	pop	r18
     f28:	0f 90       	pop	r0
     f2a:	0f be       	out	0x3f, r0	; 63
     f2c:	0f 90       	pop	r0
     f2e:	1f 90       	pop	r1
     f30:	18 95       	reti
}

ISR(RTC_OVF_vect) {
	if (++time.seconds == 60) {
		
		time.seconds = 0;
     f32:	10 92 f3 22 	sts	0x22F3, r1
			
		if (++time.minutes == 60) {
     f36:	80 91 f4 22 	lds	r24, 0x22F4
     f3a:	8f 5f       	subi	r24, 0xFF	; 255
     f3c:	80 93 f4 22 	sts	0x22F4, r24
     f40:	8c 33       	cpi	r24, 0x3C	; 60
     f42:	39 f7       	brne	.-50     	; 0xf12 <__vector_10+0x2e>
			
			time.minutes = 0;
     f44:	10 92 f4 22 	sts	0x22F4, r1
			//rtc_update_display(BOTTOM,time.minutes);
			
			if (++time.hours == 24) {
     f48:	80 91 f5 22 	lds	r24, 0x22F5
     f4c:	8f 5f       	subi	r24, 0xFF	; 255
     f4e:	80 93 f5 22 	sts	0x22F5, r24
     f52:	88 31       	cpi	r24, 0x18	; 24
     f54:	f1 f6       	brne	.-68     	; 0xf12 <__vector_10+0x2e>
				time.weeks += (++time.days)/7;
     f56:	e0 91 f8 22 	lds	r30, 0x22F8
     f5a:	40 91 f6 22 	lds	r20, 0x22F6
     f5e:	50 91 f7 22 	lds	r21, 0x22F7
     f62:	4f 5f       	subi	r20, 0xFF	; 255
     f64:	5f 4f       	sbci	r21, 0xFF	; 255
     f66:	40 93 f6 22 	sts	0x22F6, r20
     f6a:	50 93 f7 22 	sts	0x22F7, r21
     f6e:	9a 01       	movw	r18, r20
     f70:	a3 e9       	ldi	r26, 0x93	; 147
     f72:	b4 e2       	ldi	r27, 0x24	; 36
     f74:	0e 94 7b 3c 	call	0x78f6	; 0x78f6 <__umulhisi3>
     f78:	28 1b       	sub	r18, r24
     f7a:	39 0b       	sbc	r19, r25
     f7c:	36 95       	lsr	r19
     f7e:	27 95       	ror	r18
     f80:	28 0f       	add	r18, r24
     f82:	39 1f       	adc	r19, r25
     f84:	36 95       	lsr	r19
     f86:	27 95       	ror	r18
     f88:	36 95       	lsr	r19
     f8a:	27 95       	ror	r18
     f8c:	e2 0f       	add	r30, r18
     f8e:	e0 93 f8 22 	sts	0x22F8, r30
				time.year += time.weeks/52;
     f92:	8f e4       	ldi	r24, 0x4F	; 79
     f94:	e8 9f       	mul	r30, r24
     f96:	e1 2d       	mov	r30, r1
     f98:	11 24       	eor	r1, r1
     f9a:	e2 95       	swap	r30
     f9c:	ef 70       	andi	r30, 0x0F	; 15
     f9e:	80 91 f9 22 	lds	r24, 0x22F9
     fa2:	90 91 fa 22 	lds	r25, 0x22FA
     fa6:	8e 0f       	add	r24, r30
     fa8:	91 1d       	adc	r25, r1
     faa:	80 93 f9 22 	sts	0x22F9, r24
     fae:	90 93 fa 22 	sts	0x22FA, r25
				time.hours = 0;
     fb2:	10 92 f5 22 	sts	0x22F5, r1
     fb6:	ad cf       	rjmp	.-166    	; 0xf12 <__vector_10+0x2e>

00000fb8 <Si114xPauseAll>:
{
	return _sendCmd(si114x_handle,0x0B);
}

s16 Si114xPauseAll(HANDLE si114x_handle)
{
     fb8:	0f 93       	push	r16
     fba:	1f 93       	push	r17
     fbc:	cf 93       	push	r28
     fbe:	df 93       	push	r29
     fc0:	ec 01       	movw	r28, r24
	while (1)
	{
		// Keep sending nops until the response is zero
		while (1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))==0)
     fc2:	60 e2       	ldi	r22, 0x20	; 32
     fc4:	ce 01       	movw	r24, r28
     fc6:	b2 d0       	rcall	.+356    	; 0x112c <Si114xReadFromRegister>

	s16  response;
	s16  retval;

	// Get the response register contents
	if ((response=Si114xReadFromRegister(si114x_handle, REG_RESPONSE))<0)
     fc8:	60 e2       	ldi	r22, 0x20	; 32
	while (1)
	{
		// Keep sending nops until the response is zero
		while (1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))==0)
     fca:	89 2b       	or	r24, r25
     fcc:	61 f5       	brne	.+88     	; 0x1026 <Si114xPauseAll+0x6e>

	s16  response;
	s16  retval;

	// Get the response register contents
	if ((response=Si114xReadFromRegister(si114x_handle, REG_RESPONSE))<0)
     fce:	ce 01       	movw	r24, r28
     fd0:	ad d0       	rcall	.+346    	; 0x112c <Si114xReadFromRegister>
     fd2:	8c 01       	movw	r16, r24
     fd4:	97 fd       	sbrc	r25, 7
     fd6:	16 c0       	rjmp	.+44     	; 0x1004 <Si114xPauseAll+0x4c>
     fd8:	02 c0       	rjmp	.+4      	; 0xfde <Si114xPauseAll+0x26>
	// or if an i2c error occurs
	while (1)
	{
		retval = Si114xReadFromRegister(si114x_handle, REG_CHIP_STAT);
		if (retval == 1) break;
		if (retval <  0) return retval;
     fda:	97 fd       	sbrc	r25, 7
     fdc:	13 c0       	rjmp	.+38     	; 0x1004 <Si114xPauseAll+0x4c>
	s16 retval;
	// This loops until the Si114x is known to be in its sleep state
	// or if an i2c error occurs
	while (1)
	{
		retval = Si114xReadFromRegister(si114x_handle, REG_CHIP_STAT);
     fde:	60 e3       	ldi	r22, 0x30	; 48
     fe0:	ce 01       	movw	r24, r28
     fe2:	a4 d0       	rcall	.+328    	; 0x112c <Si114xReadFromRegister>
		if (retval == 1) break;
     fe4:	81 30       	cpi	r24, 0x01	; 1
     fe6:	91 05       	cpc	r25, r1
     fe8:	c1 f7       	brne	.-16     	; 0xfda <Si114xPauseAll+0x22>
	{
		if((retval=_waitUntilSleep(si114x_handle)) != 0) return retval;

		if(command==0) break; // Skip if the command is NOP

		retval=Si114xReadFromRegister(si114x_handle, REG_RESPONSE);
     fea:	60 e2       	ldi	r22, 0x20	; 32
     fec:	ce 01       	movw	r24, r28
     fee:	9e d0       	rcall	.+316    	; 0x112c <Si114xReadFromRegister>
		if(retval==response) break;
     ff0:	80 17       	cp	r24, r16
     ff2:	91 07       	cpc	r25, r17
     ff4:	39 f1       	breq	.+78     	; 0x1044 <Si114xPauseAll+0x8c>
		else if(retval<0) return retval;
     ff6:	97 fd       	sbrc	r25, 7
     ff8:	05 c0       	rjmp	.+10     	; 0x1004 <Si114xPauseAll+0x4c>
     ffa:	8c 01       	movw	r16, r24
     ffc:	f0 cf       	rjmp	.-32     	; 0xfde <Si114xPauseAll+0x26>
	while(1)
	{

		if(command==0) break; // Skip if the command is NOP

		retval= Si114xReadFromRegister(si114x_handle, REG_RESPONSE);
     ffe:	60 e2       	ldi	r22, 0x20	; 32
    1000:	ce 01       	movw	r24, r28
    1002:	94 d0       	rcall	.+296    	; 0x112c <Si114xReadFromRegister>
		_PsAlsPause(si114x_handle);

		// Wait for response
		while(1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))!=0)
    1004:	60 e2       	ldi	r22, 0x20	; 32
    1006:	ce 01       	movw	r24, r28
    1008:	91 d0       	rcall	.+290    	; 0x112c <Si114xReadFromRegister>
    100a:	89 2b       	or	r24, r25
    100c:	d9 f3       	breq	.-10     	; 0x1004 <Si114xPauseAll+0x4c>
			break;
		}

		// When the PsAlsPause() response is good, we expect it to be a '1'.
		if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))==1)
    100e:	60 e2       	ldi	r22, 0x20	; 32
    1010:	ce 01       	movw	r24, r28
    1012:	8c d0       	rcall	.+280    	; 0x112c <Si114xReadFromRegister>
    1014:	01 97       	sbiw	r24, 0x01	; 1
    1016:	a9 f6       	brne	.-86     	; 0xfc2 <Si114xPauseAll+0xa>
		break;  // otherwise, start over.
	}
	return 0;
}
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	df 91       	pop	r29
    101e:	cf 91       	pop	r28
    1020:	1f 91       	pop	r17
    1022:	0f 91       	pop	r16
    1024:	08 95       	ret

	s16  response;
	s16  retval;

	// Get the response register contents
	if ((response=Si114xReadFromRegister(si114x_handle, REG_RESPONSE))<0)
    1026:	ce 01       	movw	r24, r28
    1028:	81 d0       	rcall	.+258    	; 0x112c <Si114xReadFromRegister>
    102a:	97 fd       	sbrc	r25, 7
    102c:	ca cf       	rjmp	.-108    	; 0xfc2 <Si114xPauseAll+0xa>
	s16 retval;
	// This loops until the Si114x is known to be in its sleep state
	// or if an i2c error occurs
	while (1)
	{
		retval = Si114xReadFromRegister(si114x_handle, REG_CHIP_STAT);
    102e:	60 e3       	ldi	r22, 0x30	; 48
    1030:	ce 01       	movw	r24, r28
    1032:	7c d0       	rcall	.+248    	; 0x112c <Si114xReadFromRegister>
		if (retval == 1) break;
    1034:	81 30       	cpi	r24, 0x01	; 1
    1036:	91 05       	cpc	r25, r1
    1038:	c1 f7       	brne	.-16     	; 0x102a <Si114xPauseAll+0x72>
		else if(retval<0) return retval;
		else response = retval;
	}

	// Send the Command
	if ((retval=Si114xWriteToRegister(si114x_handle, REG_COMMAND, command)) !=0)
    103a:	40 e0       	ldi	r20, 0x00	; 0
    103c:	68 e1       	ldi	r22, 0x18	; 24
    103e:	ce 01       	movw	r24, r28
    1040:	58 d0       	rcall	.+176    	; 0x10f2 <Si114xWriteToRegister>
    1042:	bf cf       	rjmp	.-130    	; 0xfc2 <Si114xPauseAll+0xa>
    1044:	4b e0       	ldi	r20, 0x0B	; 11
    1046:	68 e1       	ldi	r22, 0x18	; 24
    1048:	ce 01       	movw	r24, r28
    104a:	53 d0       	rcall	.+166    	; 0x10f2 <Si114xWriteToRegister>
    104c:	89 2b       	or	r24, r25
    104e:	d1 f6       	brne	.-76     	; 0x1004 <Si114xPauseAll+0x4c>
    1050:	17 fd       	sbrc	r17, 7
    1052:	d5 cf       	rjmp	.-86     	; 0xffe <Si114xPauseAll+0x46>
	while(1)
	{

		if(command==0) break; // Skip if the command is NOP

		retval= Si114xReadFromRegister(si114x_handle, REG_RESPONSE);
    1054:	60 e2       	ldi	r22, 0x20	; 32
    1056:	ce 01       	movw	r24, r28
    1058:	69 d0       	rcall	.+210    	; 0x112c <Si114xReadFromRegister>
		if (retval != response) break;
    105a:	08 17       	cp	r16, r24
    105c:	19 07       	cpc	r17, r25
    105e:	d1 f3       	breq	.-12     	; 0x1054 <Si114xPauseAll+0x9c>
		_PsAlsPause(si114x_handle);

		// Wait for response
		while(1)
		{
			if ((Si114xReadFromRegister(si114x_handle, REG_RESPONSE))!=0)
    1060:	60 e2       	ldi	r22, 0x20	; 32
    1062:	ce 01       	movw	r24, r28
    1064:	63 d0       	rcall	.+198    	; 0x112c <Si114xReadFromRegister>
    1066:	89 2b       	or	r24, r25
    1068:	69 f2       	breq	.-102    	; 0x1004 <Si114xPauseAll+0x4c>
    106a:	d1 cf       	rjmp	.-94     	; 0x100e <Si114xPauseAll+0x56>

0000106c <si114x_reset>:
	return 0;
}


s16 si114x_reset(HANDLE si114x_handle)
{
    106c:	0f 93       	push	r16
    106e:	1f 93       	push	r17
    1070:	cf 93       	push	r28
    1072:	df 93       	push	r29
    1074:	8c 01       	movw	r16, r24
	//
	// delay_10ms();
	// delay_10ms();
	// delay_10ms();

	retval+=Si114xWriteToRegister(si114x_handle, REG_MEAS_RATE,  0x00);
    1076:	40 e0       	ldi	r20, 0x00	; 0
    1078:	68 e0       	ldi	r22, 0x08	; 8
    107a:	3b d0       	rcall	.+118    	; 0x10f2 <Si114xWriteToRegister>
    107c:	ec 01       	movw	r28, r24
	retval+=Si114xPauseAll(si114x_handle);
    107e:	c8 01       	movw	r24, r16
    1080:	9b df       	rcall	.-202    	; 0xfb8 <Si114xPauseAll>
    1082:	c8 0f       	add	r28, r24
    1084:	d9 1f       	adc	r29, r25

	// The clearing of the registers could be redundant, but it is okay.
	// This is to make sure that these registers are cleared.
	retval+=Si114xWriteToRegister(si114x_handle, REG_MEAS_RATE,  0x00);
    1086:	40 e0       	ldi	r20, 0x00	; 0
    1088:	68 e0       	ldi	r22, 0x08	; 8
    108a:	c8 01       	movw	r24, r16
    108c:	32 d0       	rcall	.+100    	; 0x10f2 <Si114xWriteToRegister>
    108e:	c8 0f       	add	r28, r24
    1090:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_ENABLE, 0x00);
    1092:	40 e0       	ldi	r20, 0x00	; 0
    1094:	64 e0       	ldi	r22, 0x04	; 4
    1096:	c8 01       	movw	r24, r16
    1098:	2c d0       	rcall	.+88     	; 0x10f2 <Si114xWriteToRegister>
    109a:	c8 0f       	add	r28, r24
    109c:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_MODE1,  0x00);
    109e:	40 e0       	ldi	r20, 0x00	; 0
    10a0:	65 e0       	ldi	r22, 0x05	; 5
    10a2:	c8 01       	movw	r24, r16
    10a4:	26 d0       	rcall	.+76     	; 0x10f2 <Si114xWriteToRegister>
    10a6:	c8 0f       	add	r28, r24
    10a8:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_MODE2,  0x00);
    10aa:	40 e0       	ldi	r20, 0x00	; 0
    10ac:	66 e0       	ldi	r22, 0x06	; 6
    10ae:	c8 01       	movw	r24, r16
    10b0:	20 d0       	rcall	.+64     	; 0x10f2 <Si114xWriteToRegister>
    10b2:	c8 0f       	add	r28, r24
    10b4:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_INT_CFG  ,  0x00);
    10b6:	40 e0       	ldi	r20, 0x00	; 0
    10b8:	63 e0       	ldi	r22, 0x03	; 3
    10ba:	c8 01       	movw	r24, r16
    10bc:	1a d0       	rcall	.+52     	; 0x10f2 <Si114xWriteToRegister>
    10be:	c8 0f       	add	r28, r24
    10c0:	d9 1f       	adc	r29, r25
	retval+=Si114xWriteToRegister(si114x_handle, REG_IRQ_STATUS, 0xFF);
    10c2:	4f ef       	ldi	r20, 0xFF	; 255
    10c4:	61 e2       	ldi	r22, 0x21	; 33
    10c6:	c8 01       	movw	r24, r16
    10c8:	14 d0       	rcall	.+40     	; 0x10f2 <Si114xWriteToRegister>
    10ca:	c8 0f       	add	r28, r24
    10cc:	d9 1f       	adc	r29, r25

	// Perform the Reset Command
	retval+=Si114xWriteToRegister(si114x_handle, REG_COMMAND, 1);
    10ce:	41 e0       	ldi	r20, 0x01	; 1
    10d0:	68 e1       	ldi	r22, 0x18	; 24
    10d2:	c8 01       	movw	r24, r16
    10d4:	0e d0       	rcall	.+28     	; 0x10f2 <Si114xWriteToRegister>
    10d6:	c8 0f       	add	r28, r24
    10d8:	d9 1f       	adc	r29, r25

	// Delay for 10 ms. This delay is needed to allow the Si114x
	// to perform internal reset sequence.
	delay_10ms();
    10da:	44 d0       	rcall	.+136    	; 0x1164 <delay_10ms>

	// Write Hardware Key
	retval+=Si114xWriteToRegister(si114x_handle, REG_HW_KEY, HW_KEY_VAL0);
    10dc:	47 e1       	ldi	r20, 0x17	; 23
    10de:	67 e0       	ldi	r22, 0x07	; 7
    10e0:	c8 01       	movw	r24, r16
    10e2:	07 d0       	rcall	.+14     	; 0x10f2 <Si114xWriteToRegister>

	return retval;
}
    10e4:	8c 0f       	add	r24, r28
    10e6:	9d 1f       	adc	r25, r29
    10e8:	df 91       	pop	r29
    10ea:	cf 91       	pop	r28
    10ec:	1f 91       	pop	r17
    10ee:	0f 91       	pop	r16
    10f0:	08 95       	ret

000010f2 <Si114xWriteToRegister>:

s16 Si114xBlockRead(HANDLE si114x_handle,
u8 address, u8 length, u8 *values)
{
	return twi_read_packet(&TWIC,SI114X_ADDR,1000,address,values,length);
}
    10f2:	ef 92       	push	r14
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	1f 92       	push	r1
    10fe:	cd b7       	in	r28, 0x3d	; 61
    1100:	de b7       	in	r29, 0x3e	; 62
    1102:	26 2f       	mov	r18, r22
    1104:	49 83       	std	Y+1, r20	; 0x01
    1106:	ee 24       	eor	r14, r14
    1108:	e3 94       	inc	r14
    110a:	8e 01       	movw	r16, r28
    110c:	0f 5f       	subi	r16, 0xFF	; 255
    110e:	1f 4f       	sbci	r17, 0xFF	; 255
    1110:	48 ee       	ldi	r20, 0xE8	; 232
    1112:	6a e5       	ldi	r22, 0x5A	; 90
    1114:	80 e8       	ldi	r24, 0x80	; 128
    1116:	94 e0       	ldi	r25, 0x04	; 4
    1118:	ff d0       	rcall	.+510    	; 0x1318 <twi_write_packet>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	0f 90       	pop	r0
    1120:	df 91       	pop	r29
    1122:	cf 91       	pop	r28
    1124:	1f 91       	pop	r17
    1126:	0f 91       	pop	r16
    1128:	ef 90       	pop	r14
    112a:	08 95       	ret

0000112c <Si114xReadFromRegister>:
    112c:	ef 92       	push	r14
    112e:	0f 93       	push	r16
    1130:	1f 93       	push	r17
    1132:	cf 93       	push	r28
    1134:	df 93       	push	r29
    1136:	1f 92       	push	r1
    1138:	cd b7       	in	r28, 0x3d	; 61
    113a:	de b7       	in	r29, 0x3e	; 62
    113c:	26 2f       	mov	r18, r22
    113e:	ee 24       	eor	r14, r14
    1140:	e3 94       	inc	r14
    1142:	8e 01       	movw	r16, r28
    1144:	0f 5f       	subi	r16, 0xFF	; 255
    1146:	1f 4f       	sbci	r17, 0xFF	; 255
    1148:	48 ee       	ldi	r20, 0xE8	; 232
    114a:	6a e5       	ldi	r22, 0x5A	; 90
    114c:	80 e8       	ldi	r24, 0x80	; 128
    114e:	94 e0       	ldi	r25, 0x04	; 4
    1150:	3f d0       	rcall	.+126    	; 0x11d0 <twi_read_packet>
    1152:	89 81       	ldd	r24, Y+1	; 0x01
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	0f 90       	pop	r0
    1158:	df 91       	pop	r29
    115a:	cf 91       	pop	r28
    115c:	1f 91       	pop	r17
    115e:	0f 91       	pop	r16
    1160:	ef 90       	pop	r14
    1162:	08 95       	ret

00001164 <delay_10ms>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1164:	2f ef       	ldi	r18, 0xFF	; 255
    1166:	89 ef       	ldi	r24, 0xF9	; 249
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	21 50       	subi	r18, 0x01	; 1
    116c:	80 40       	sbci	r24, 0x00	; 0
    116e:	90 40       	sbci	r25, 0x00	; 0
    1170:	e1 f7       	brne	.-8      	; 0x116a <delay_10ms+0x6>
    1172:	00 c0       	rjmp	.+0      	; 0x1174 <delay_10ms+0x10>
    1174:	00 00       	nop
    1176:	08 95       	ret

00001178 <spi_on>:
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
	else
	TWI->MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;

	return true;
}
    1178:	e0 e4       	ldi	r30, 0x40	; 64
    117a:	f6 e0       	ldi	r31, 0x06	; 6
    117c:	80 eb       	ldi	r24, 0xB0	; 176
    117e:	81 83       	std	Z+1, r24	; 0x01
    1180:	80 e1       	ldi	r24, 0x10	; 16
    1182:	85 83       	std	Z+5, r24	; 0x05
    1184:	80 ed       	ldi	r24, 0xD0	; 208
    1186:	80 93 c0 08 	sts	0x08C0, r24
    118a:	08 95       	ret

0000118c <spi_off>:
    118c:	e0 ec       	ldi	r30, 0xC0	; 192
    118e:	f8 e0       	ldi	r31, 0x08	; 8
    1190:	80 81       	ld	r24, Z
    1192:	8f 7b       	andi	r24, 0xBF	; 191
    1194:	80 83       	st	Z, r24
    1196:	e0 e4       	ldi	r30, 0x40	; 64
    1198:	f6 e0       	ldi	r31, 0x06	; 6
    119a:	80 eb       	ldi	r24, 0xB0	; 176
    119c:	82 83       	std	Z+2, r24	; 0x02
    119e:	88 e1       	ldi	r24, 0x18	; 24
    11a0:	84 8b       	std	Z+20, r24	; 0x14
    11a2:	85 8b       	std	Z+21, r24	; 0x15
    11a4:	86 8b       	std	Z+22, r24	; 0x16
    11a6:	87 8b       	std	Z+23, r24	; 0x17
    11a8:	08 95       	ret

000011aa <spi_wr_rd>:
    11aa:	80 93 c3 08 	sts	0x08C3, r24
    11ae:	80 91 c2 08 	lds	r24, 0x08C2
    11b2:	87 ff       	sbrs	r24, 7
    11b4:	fc cf       	rjmp	.-8      	; 0x11ae <spi_wr_rd+0x4>
    11b6:	80 91 c3 08 	lds	r24, 0x08C3
    11ba:	08 95       	ret

000011bc <twi_setup>:
    11bc:	e0 e8       	ldi	r30, 0x80	; 128
    11be:	f4 e0       	ldi	r31, 0x04	; 4
    11c0:	12 82       	std	Z+2, r1	; 0x02
    11c2:	89 e0       	ldi	r24, 0x09	; 9
    11c4:	85 83       	std	Z+5, r24	; 0x05
    11c6:	88 e0       	ldi	r24, 0x08	; 8
    11c8:	81 83       	std	Z+1, r24	; 0x01
    11ca:	81 e0       	ldi	r24, 0x01	; 1
    11cc:	84 83       	std	Z+4, r24	; 0x04
    11ce:	08 95       	ret

000011d0 <twi_read_packet>:
const uint8_t slave_address,
const uint8_t timeout_ms,
const uint8_t reg,
uint8_t* data,
uint8_t length)
{
    11d0:	ef 92       	push	r14
    11d2:	0f 93       	push	r16
    11d4:	1f 93       	push	r17
    11d6:	dc 01       	movw	r26, r24
	uint8_t error_code;
	uint8_t len = length;

	if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_WRITE,
    11d8:	76 2f       	mov	r23, r22
    11da:	77 0f       	add	r23, r23
const uint8_t slave_address, 
const uint8_t timeout_ms)
{
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;
    11dc:	16 96       	adiw	r26, 0x06	; 6
    11de:	7c 93       	st	X, r23
    11e0:	16 97       	sbiw	r26, 0x06	; 6

	timeout_remaining = (timeout_ms * 100);
    11e2:	84 e6       	ldi	r24, 0x64	; 100
    11e4:	48 9f       	mul	r20, r24
    11e6:	a0 01       	movw	r20, r0
    11e8:	11 24       	eor	r1, r1
	while (timeout_remaining)
    11ea:	41 15       	cp	r20, r1
    11ec:	51 05       	cpc	r21, r1
    11ee:	01 f1       	breq	.+64     	; 0x1230 <twi_read_packet+0x60>
    11f0:	fa 01       	movw	r30, r20
    11f2:	0d c0       	rjmp	.+26     	; 0x120e <twi_read_packet+0x3e>

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
		{
			TWI->MASTER.ADDR = slave_address;
		}
		else if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm))
    11f4:	39 2f       	mov	r19, r25
    11f6:	30 75       	andi	r19, 0x50	; 80
    11f8:	30 35       	cpi	r19, 0x50	; 80
    11fa:	f9 f0       	breq	.+62     	; 0x123a <twi_read_packet+0x6a>
		{
			twi_stop_transmission(TWI);
			return TWI_ERROR_SLAVE_RESPONSE_TIMEOUT;
		}
		else if (status & (TWI_MASTER_WIF_bm | TWI_MASTER_RIF_bm))
    11fc:	90 7c       	andi	r25, 0xC0	; 192
    11fe:	29 f5       	brne	.+74     	; 0x124a <twi_read_packet+0x7a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1200:	8a e6       	ldi	r24, 0x6A	; 106
    1202:	8a 95       	dec	r24
    1204:	f1 f7       	brne	.-4      	; 0x1202 <twi_read_packet+0x32>
    1206:	00 c0       	rjmp	.+0      	; 0x1208 <twi_read_packet+0x38>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    1208:	31 97       	sbiw	r30, 0x01	; 1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    120a:	30 97       	sbiw	r30, 0x00	; 0
    120c:	89 f0       	breq	.+34     	; 0x1230 <twi_read_packet+0x60>
	{
		uint8_t status = TWI->MASTER.STATUS;
    120e:	14 96       	adiw	r26, 0x04	; 4
    1210:	9c 91       	ld	r25, X
    1212:	14 97       	sbiw	r26, 0x04	; 4

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
    1214:	39 2f       	mov	r19, r25
    1216:	38 74       	andi	r19, 0x48	; 72
    1218:	38 34       	cpi	r19, 0x48	; 72
    121a:	61 f7       	brne	.-40     	; 0x11f4 <twi_read_packet+0x24>
		{
			TWI->MASTER.ADDR = slave_address;
    121c:	16 96       	adiw	r26, 0x06	; 6
    121e:	7c 93       	st	X, r23
    1220:	16 97       	sbiw	r26, 0x06	; 6
    1222:	8a e6       	ldi	r24, 0x6A	; 106
    1224:	8a 95       	dec	r24
    1226:	f1 f7       	brne	.-4      	; 0x1224 <twi_read_packet+0x54>
    1228:	00 c0       	rjmp	.+0      	; 0x122a <twi_read_packet+0x5a>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    122a:	31 97       	sbiw	r30, 0x01	; 1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    122c:	30 97       	sbiw	r30, 0x00	; 0
    122e:	79 f7       	brne	.-34     	; 0x120e <twi_read_packet+0x3e>
		_delay_us(10);
		timeout_remaining--;
	}

	if (!(timeout_remaining)) {
		if (TWI->MASTER.STATUS & TWI_MASTER_CLKHOLD_bm) {
    1230:	14 96       	adiw	r26, 0x04	; 4
    1232:	8c 91       	ld	r24, X
    1234:	14 97       	sbiw	r26, 0x04	; 4
    1236:	85 ff       	sbrs	r24, 5
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <twi_read_packet+0x70>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    123a:	87 e0       	ldi	r24, 0x07	; 7
    123c:	13 96       	adiw	r26, 0x03	; 3
    123e:	8c 93       	st	X, r24
		}

		twi_stop_transmission(TWI);
	}

	return len;
    1240:	8e 2d       	mov	r24, r14
}
    1242:	1f 91       	pop	r17
    1244:	0f 91       	pop	r16
    1246:	ef 90       	pop	r14
    1248:	08 95       	ret
}

uint8_t twi_send_byte(TWI_t* const TWI, 
const uint8_t data)
{
	TWI->MASTER.DATA = data;
    124a:	17 96       	adiw	r26, 0x07	; 7
    124c:	2c 93       	st	X, r18
    124e:	17 97       	sbiw	r26, 0x07	; 7

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));
    1250:	14 96       	adiw	r26, 0x04	; 4
    1252:	9c 91       	ld	r25, X
    1254:	14 97       	sbiw	r26, 0x04	; 4
    1256:	96 ff       	sbrs	r25, 6
    1258:	fb cf       	rjmp	.-10     	; 0x1250 <twi_read_packet+0x80>

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    125a:	14 96       	adiw	r26, 0x04	; 4
    125c:	8c 91       	ld	r24, X
    125e:	14 97       	sbiw	r26, 0x04	; 4
    1260:	86 ff       	sbrs	r24, 6
    1262:	25 c0       	rjmp	.+74     	; 0x12ae <twi_read_packet+0xde>
    1264:	14 96       	adiw	r26, 0x04	; 4
    1266:	8c 91       	ld	r24, X
    1268:	14 97       	sbiw	r26, 0x04	; 4
    126a:	84 fd       	sbrc	r24, 4
    126c:	20 c0       	rjmp	.+64     	; 0x12ae <twi_read_packet+0xde>
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
		}

		if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_READ,
    126e:	66 0f       	add	r22, r22
    1270:	61 60       	ori	r22, 0x01	; 1
const uint8_t slave_address, 
const uint8_t timeout_ms)
{
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;
    1272:	16 96       	adiw	r26, 0x06	; 6
    1274:	6c 93       	st	X, r22
    1276:	16 97       	sbiw	r26, 0x06	; 6
    1278:	0f c0       	rjmp	.+30     	; 0x1298 <twi_read_packet+0xc8>

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
		{
			TWI->MASTER.ADDR = slave_address;
		}
		else if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm))
    127a:	89 2f       	mov	r24, r25
    127c:	80 75       	andi	r24, 0x50	; 80
    127e:	80 35       	cpi	r24, 0x50	; 80
    1280:	01 f1       	breq	.+64     	; 0x12c2 <twi_read_packet+0xf2>
		{
			twi_stop_transmission(TWI);
			return TWI_ERROR_SLAVE_RESPONSE_TIMEOUT;
		}
		else if (status & (TWI_MASTER_WIF_bm | TWI_MASTER_RIF_bm))
    1282:	90 7c       	andi	r25, 0xC0	; 192
    1284:	39 f5       	brne	.+78     	; 0x12d4 <twi_read_packet+0x104>
    1286:	8a e6       	ldi	r24, 0x6A	; 106
    1288:	8a 95       	dec	r24
    128a:	f1 f7       	brne	.-4      	; 0x1288 <twi_read_packet+0xb8>
    128c:	00 c0       	rjmp	.+0      	; 0x128e <twi_read_packet+0xbe>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    128e:	41 50       	subi	r20, 0x01	; 1
    1290:	51 09       	sbc	r21, r1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    1292:	41 15       	cp	r20, r1
    1294:	51 05       	cpc	r21, r1
    1296:	81 f0       	breq	.+32     	; 0x12b8 <twi_read_packet+0xe8>
	{
		uint8_t status = TWI->MASTER.STATUS;
    1298:	14 96       	adiw	r26, 0x04	; 4
    129a:	9c 91       	ld	r25, X
    129c:	14 97       	sbiw	r26, 0x04	; 4

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
    129e:	89 2f       	mov	r24, r25
    12a0:	88 74       	andi	r24, 0x48	; 72
    12a2:	88 34       	cpi	r24, 0x48	; 72
    12a4:	51 f7       	brne	.-44     	; 0x127a <twi_read_packet+0xaa>
		{
			TWI->MASTER.ADDR = slave_address;
    12a6:	16 96       	adiw	r26, 0x06	; 6
    12a8:	6c 93       	st	X, r22
    12aa:	16 97       	sbiw	r26, 0x06	; 6
    12ac:	ec cf       	rjmp	.-40     	; 0x1286 <twi_read_packet+0xb6>
	timeout_ms)) == TWI_ERROR_NO_ERROR)
	{
		if (!(twi_send_byte(TWI, reg)))
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
    12ae:	86 e0       	ldi	r24, 0x06	; 6

		twi_stop_transmission(TWI);
	}

	return len;
}
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	ef 90       	pop	r14
    12b6:	08 95       	ret
		_delay_us(10);
		timeout_remaining--;
	}

	if (!(timeout_remaining)) {
		if (TWI->MASTER.STATUS & TWI_MASTER_CLKHOLD_bm) {
    12b8:	14 96       	adiw	r26, 0x04	; 4
    12ba:	8c 91       	ld	r24, X
    12bc:	14 97       	sbiw	r26, 0x04	; 4
    12be:	85 ff       	sbrs	r24, 5
    12c0:	04 c0       	rjmp	.+8      	; 0x12ca <twi_read_packet+0xfa>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    12c2:	87 e0       	ldi	r24, 0x07	; 7
    12c4:	13 96       	adiw	r26, 0x03	; 3
    12c6:	8c 93       	st	X, r24
    12c8:	13 97       	sbiw	r26, 0x03	; 3
    12ca:	87 e0       	ldi	r24, 0x07	; 7
    12cc:	13 96       	adiw	r26, 0x03	; 3
    12ce:	8c 93       	st	X, r24
		}

		twi_stop_transmission(TWI);
	}

	return len;
    12d0:	8e 2d       	mov	r24, r14
    12d2:	b7 cf       	rjmp	.-146    	; 0x1242 <twi_read_packet+0x72>
    12d4:	2f ef       	ldi	r18, 0xFF	; 255
    12d6:	2e 0d       	add	r18, r14
    12d8:	f8 01       	movw	r30, r16
	*data = TWI->MASTER.DATA;

	if (end_of_data)
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
	else
	TWI->MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;
    12da:	42 e0       	ldi	r20, 0x02	; 2
	while (!(TWI->MASTER.STATUS & TWI_MASTER_RIF_bm));

	*data = TWI->MASTER.DATA;

	if (end_of_data)
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    12dc:	37 e0       	ldi	r19, 0x07	; 7
		}

		if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_READ,
		timeout_ms)) == TWI_ERROR_NO_ERROR)
		{
			while (length--)
    12de:	2f 3f       	cpi	r18, 0xFF	; 255
    12e0:	a1 f3       	breq	.-24     	; 0x12ca <twi_read_packet+0xfa>

uint8_t twi_receive_byte(TWI_t* const TWI, 
uint8_t* const data, 
const uint8_t end_of_data)
{
	if ((TWI->MASTER.STATUS & (TWI_MASTER_BUSERR_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_BUSERR_bm | TWI_MASTER_ARBLOST_bm)) {
    12e2:	14 96       	adiw	r26, 0x04	; 4
    12e4:	8c 91       	ld	r24, X
    12e6:	14 97       	sbiw	r26, 0x04	; 4
    12e8:	8c 70       	andi	r24, 0x0C	; 12
    12ea:	8c 30       	cpi	r24, 0x0C	; 12
    12ec:	71 f3       	breq	.-36     	; 0x12ca <twi_read_packet+0xfa>
		return false;
	}

	while (!(TWI->MASTER.STATUS & TWI_MASTER_RIF_bm));
    12ee:	14 96       	adiw	r26, 0x04	; 4
    12f0:	9c 91       	ld	r25, X
    12f2:	14 97       	sbiw	r26, 0x04	; 4
    12f4:	97 ff       	sbrs	r25, 7
    12f6:	fb cf       	rjmp	.-10     	; 0x12ee <twi_read_packet+0x11e>

	*data = TWI->MASTER.DATA;
    12f8:	17 96       	adiw	r26, 0x07	; 7
    12fa:	8c 91       	ld	r24, X
    12fc:	17 97       	sbiw	r26, 0x07	; 7
    12fe:	81 93       	st	Z+, r24

	if (end_of_data)
    1300:	21 11       	cpse	r18, r1
    1302:	05 c0       	rjmp	.+10     	; 0x130e <twi_read_packet+0x13e>
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    1304:	13 96       	adiw	r26, 0x03	; 3
    1306:	3c 93       	st	X, r19
    1308:	13 97       	sbiw	r26, 0x03	; 3
    130a:	21 50       	subi	r18, 0x01	; 1
    130c:	e8 cf       	rjmp	.-48     	; 0x12de <twi_read_packet+0x10e>
	else
	TWI->MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;
    130e:	13 96       	adiw	r26, 0x03	; 3
    1310:	4c 93       	st	X, r20
    1312:	13 97       	sbiw	r26, 0x03	; 3
    1314:	21 50       	subi	r18, 0x01	; 1
    1316:	e3 cf       	rjmp	.-58     	; 0x12de <twi_read_packet+0x10e>

00001318 <twi_write_packet>:
const uint8_t slave_address,
const uint8_t timeout_ms,
const uint8_t reg,
const uint8_t* data,
uint8_t length)
{
    1318:	ef 92       	push	r14
    131a:	0f 93       	push	r16
    131c:	1f 93       	push	r17
    131e:	fc 01       	movw	r30, r24
	uint8_t error_code;

	if ((error_code = twi_start_transmission(TWI, (slave_address << 1) | TWI_ADDRESS_WRITE,
    1320:	66 0f       	add	r22, r22
const uint8_t slave_address, 
const uint8_t timeout_ms)
{
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;
    1322:	66 83       	std	Z+6, r22	; 0x06

	timeout_remaining = (timeout_ms * 100);
    1324:	84 e6       	ldi	r24, 0x64	; 100
    1326:	48 9f       	mul	r20, r24
    1328:	a0 01       	movw	r20, r0
    132a:	11 24       	eor	r1, r1
	while (timeout_remaining)
    132c:	41 15       	cp	r20, r1
    132e:	51 05       	cpc	r21, r1
    1330:	81 f4       	brne	.+32     	; 0x1352 <twi_write_packet+0x3a>
    1332:	16 c0       	rjmp	.+44     	; 0x1360 <twi_write_packet+0x48>

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
		{
			TWI->MASTER.ADDR = slave_address;
		}
		else if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_RXACK_bm))
    1334:	39 2f       	mov	r19, r25
    1336:	30 75       	andi	r19, 0x50	; 80
    1338:	30 35       	cpi	r19, 0x50	; 80
    133a:	a9 f0       	breq	.+42     	; 0x1366 <twi_write_packet+0x4e>
		{
			twi_stop_transmission(TWI);
			return TWI_ERROR_SLAVE_RESPONSE_TIMEOUT;
		}
		else if (status & (TWI_MASTER_WIF_bm | TWI_MASTER_RIF_bm))
    133c:	90 7c       	andi	r25, 0xC0	; 192
    133e:	d1 f4       	brne	.+52     	; 0x1374 <twi_write_packet+0x5c>
    1340:	8a e6       	ldi	r24, 0x6A	; 106
    1342:	8a 95       	dec	r24
    1344:	f1 f7       	brne	.-4      	; 0x1342 <twi_write_packet+0x2a>
    1346:	00 c0       	rjmp	.+0      	; 0x1348 <twi_write_packet+0x30>
		{
			return TWI_ERROR_NO_ERROR;
		}

		_delay_us(10);
		timeout_remaining--;
    1348:	41 50       	subi	r20, 0x01	; 1
    134a:	51 09       	sbc	r21, r1
	uint16_t timeout_remaining;

	TWI->MASTER.ADDR = slave_address;

	timeout_remaining = (timeout_ms * 100);
	while (timeout_remaining)
    134c:	41 15       	cp	r20, r1
    134e:	51 05       	cpc	r21, r1
    1350:	39 f0       	breq	.+14     	; 0x1360 <twi_write_packet+0x48>
	{
		uint8_t status = TWI->MASTER.STATUS;
    1352:	94 81       	ldd	r25, Z+4	; 0x04

		if ((status & (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm)) == (TWI_MASTER_WIF_bm | TWI_MASTER_ARBLOST_bm))
    1354:	39 2f       	mov	r19, r25
    1356:	38 74       	andi	r19, 0x48	; 72
    1358:	38 34       	cpi	r19, 0x48	; 72
    135a:	61 f7       	brne	.-40     	; 0x1334 <twi_write_packet+0x1c>
		{
			TWI->MASTER.ADDR = slave_address;
    135c:	66 83       	std	Z+6, r22	; 0x06
    135e:	f0 cf       	rjmp	.-32     	; 0x1340 <twi_write_packet+0x28>
		_delay_us(10);
		timeout_remaining--;
	}

	if (!(timeout_remaining)) {
		if (TWI->MASTER.STATUS & TWI_MASTER_CLKHOLD_bm) {
    1360:	84 81       	ldd	r24, Z+4	; 0x04
    1362:	85 ff       	sbrs	r24, 5
    1364:	02 c0       	rjmp	.+4      	; 0x136a <twi_write_packet+0x52>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    1366:	87 e0       	ldi	r24, 0x07	; 7
    1368:	83 83       	std	Z+3, r24	; 0x03
    136a:	8e 2d       	mov	r24, r14

		twi_stop_transmission(TWI);
	}

	return length;
    136c:	1f 91       	pop	r17
    136e:	0f 91       	pop	r16
    1370:	ef 90       	pop	r14
    1372:	08 95       	ret
}

uint8_t twi_send_byte(TWI_t* const TWI, 
const uint8_t data)
{
	TWI->MASTER.DATA = data;
    1374:	27 83       	std	Z+7, r18	; 0x07

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));
    1376:	94 81       	ldd	r25, Z+4	; 0x04
    1378:	96 ff       	sbrs	r25, 6
    137a:	fd cf       	rjmp	.-6      	; 0x1376 <twi_write_packet+0x5e>

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    137c:	84 81       	ldd	r24, Z+4	; 0x04
    137e:	86 ff       	sbrs	r24, 6
    1380:	13 c0       	rjmp	.+38     	; 0x13a8 <twi_write_packet+0x90>
    1382:	84 81       	ldd	r24, Z+4	; 0x04
    1384:	84 fd       	sbrc	r24, 4
    1386:	10 c0       	rjmp	.+32     	; 0x13a8 <twi_write_packet+0x90>
    1388:	d8 01       	movw	r26, r16
    138a:	8f ef       	ldi	r24, 0xFF	; 255
    138c:	8e 0d       	add	r24, r14
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
		}

		while (length--)
    138e:	8f 3f       	cpi	r24, 0xFF	; 255
    1390:	41 f0       	breq	.+16     	; 0x13a2 <twi_write_packet+0x8a>
		{
			if (!(twi_send_byte(TWI, *(data++))))
    1392:	9d 91       	ld	r25, X+
}

uint8_t twi_send_byte(TWI_t* const TWI, 
const uint8_t data)
{
	TWI->MASTER.DATA = data;
    1394:	97 83       	std	Z+7, r25	; 0x07

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));
    1396:	94 81       	ldd	r25, Z+4	; 0x04
    1398:	96 ff       	sbrs	r25, 6
    139a:	fd cf       	rjmp	.-6      	; 0x1396 <twi_write_packet+0x7e>

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    139c:	94 81       	ldd	r25, Z+4	; 0x04
    139e:	96 fd       	sbrc	r25, 6
    13a0:	08 c0       	rjmp	.+16     	; 0x13b2 <twi_write_packet+0x9a>
	TWIC.MASTER.CTRLA = TWI_MASTER_ENABLE_bm;
	TWIC.MASTER.STATUS = TWI_MASTER_BUSSTATE_IDLE_gc;
}

void twi_stop_transmission(TWI_t* const TWI) {
	TWI->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
    13a2:	97 e0       	ldi	r25, 0x07	; 7
    13a4:	93 83       	std	Z+3, r25	; 0x03
    13a6:	e2 cf       	rjmp	.-60     	; 0x136c <twi_write_packet+0x54>
	timeout_ms)) == TWI_ERROR_NO_ERROR)
	{
		if (!(twi_send_byte(TWI, reg)))
		{
			error_code = TWI_ERROR_SLAVE_NAK;
			return error_code;
    13a8:	86 e0       	ldi	r24, 0x06	; 6

		twi_stop_transmission(TWI);
	}

	return length;
    13aa:	1f 91       	pop	r17
    13ac:	0f 91       	pop	r16
    13ae:	ef 90       	pop	r14
    13b0:	08 95       	ret
{
	TWI->MASTER.DATA = data;

	while (!(TWI->MASTER.STATUS & TWI_MASTER_WIF_bm));

	return (TWI->MASTER.STATUS & TWI_MASTER_WIF_bm) && !(TWI->MASTER.STATUS & TWI_MASTER_RXACK_bm);
    13b2:	94 81       	ldd	r25, Z+4	; 0x04
    13b4:	2f ef       	ldi	r18, 0xFF	; 255
    13b6:	28 0f       	add	r18, r24
    13b8:	94 fd       	sbrc	r25, 4
    13ba:	f3 cf       	rjmp	.-26     	; 0x13a2 <twi_write_packet+0x8a>
    13bc:	82 2f       	mov	r24, r18
    13be:	e7 cf       	rjmp	.-50     	; 0x138e <twi_write_packet+0x76>

000013c0 <sync_window.part.2>:
		}
		else {					/* Dynamic table */
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
				if (clst <= 1) return FR_INT_ERR;
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
    13c0:	8f 92       	push	r8
    13c2:	9f 92       	push	r9
    13c4:	af 92       	push	r10
    13c6:	bf 92       	push	r11
    13c8:	cf 92       	push	r12
    13ca:	df 92       	push	r13
    13cc:	ef 92       	push	r14
    13ce:	ff 92       	push	r15
    13d0:	0f 93       	push	r16
    13d2:	1f 93       	push	r17
    13d4:	cf 93       	push	r28
    13d6:	df 93       	push	r29
    13d8:	ec 01       	movw	r28, r24
    13da:	ce a4       	ldd	r12, Y+46	; 0x2e
    13dc:	df a4       	ldd	r13, Y+47	; 0x2f
    13de:	e8 a8       	ldd	r14, Y+48	; 0x30
    13e0:	f9 a8       	ldd	r15, Y+49	; 0x31
    13e2:	5c 01       	movw	r10, r24
    13e4:	02 e3       	ldi	r16, 0x32	; 50
    13e6:	a0 0e       	add	r10, r16
    13e8:	b1 1c       	adc	r11, r1
    13ea:	01 e0       	ldi	r16, 0x01	; 1
    13ec:	10 e0       	ldi	r17, 0x00	; 0
    13ee:	a7 01       	movw	r20, r14
    13f0:	96 01       	movw	r18, r12
    13f2:	b5 01       	movw	r22, r10
    13f4:	89 81       	ldd	r24, Y+1	; 0x01
    13f6:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    13fa:	81 11       	cpse	r24, r1
    13fc:	40 c0       	rjmp	.+128    	; 0x147e <sync_window.part.2+0xbe>
    13fe:	1c 82       	std	Y+4, r1	; 0x04
    1400:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1402:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1404:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1406:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1408:	4a a1       	ldd	r20, Y+34	; 0x22
    140a:	5b a1       	ldd	r21, Y+35	; 0x23
    140c:	6c a1       	ldd	r22, Y+36	; 0x24
    140e:	7d a1       	ldd	r23, Y+37	; 0x25
    1410:	97 01       	movw	r18, r14
    1412:	86 01       	movw	r16, r12
    1414:	04 1b       	sub	r16, r20
    1416:	15 0b       	sbc	r17, r21
    1418:	26 0b       	sbc	r18, r22
    141a:	37 0b       	sbc	r19, r23
    141c:	08 17       	cp	r16, r24
    141e:	19 07       	cpc	r17, r25
    1420:	2a 07       	cpc	r18, r26
    1422:	3b 07       	cpc	r19, r27
    1424:	f0 f4       	brcc	.+60     	; 0x1462 <sync_window.part.2+0xa2>
    1426:	8b 80       	ldd	r8, Y+3	; 0x03
    1428:	91 2c       	mov	r9, r1
    142a:	12 e0       	ldi	r17, 0x02	; 2
    142c:	81 16       	cp	r8, r17
    142e:	91 04       	cpc	r9, r1
    1430:	28 f4       	brcc	.+10     	; 0x143c <sync_window.part.2+0x7c>
    1432:	17 c0       	rjmp	.+46     	; 0x1462 <sync_window.part.2+0xa2>
    1434:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1436:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1438:	ac 8d       	ldd	r26, Y+28	; 0x1c
    143a:	bd 8d       	ldd	r27, Y+29	; 0x1d
    143c:	c8 0e       	add	r12, r24
    143e:	d9 1e       	adc	r13, r25
    1440:	ea 1e       	adc	r14, r26
    1442:	fb 1e       	adc	r15, r27
    1444:	01 e0       	ldi	r16, 0x01	; 1
    1446:	10 e0       	ldi	r17, 0x00	; 0
    1448:	a7 01       	movw	r20, r14
    144a:	96 01       	movw	r18, r12
    144c:	b5 01       	movw	r22, r10
    144e:	89 81       	ldd	r24, Y+1	; 0x01
    1450:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1454:	21 e0       	ldi	r18, 0x01	; 1
    1456:	82 1a       	sub	r8, r18
    1458:	91 08       	sbc	r9, r1
    145a:	31 e0       	ldi	r19, 0x01	; 1
    145c:	83 16       	cp	r8, r19
    145e:	91 04       	cpc	r9, r1
    1460:	49 f7       	brne	.-46     	; 0x1434 <sync_window.part.2+0x74>
    1462:	80 e0       	ldi	r24, 0x00	; 0
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	1f 91       	pop	r17
    146a:	0f 91       	pop	r16
    146c:	ff 90       	pop	r15
    146e:	ef 90       	pop	r14
    1470:	df 90       	pop	r13
    1472:	cf 90       	pop	r12
    1474:	bf 90       	pop	r11
    1476:	af 90       	pop	r10
    1478:	9f 90       	pop	r9
    147a:	8f 90       	pop	r8
    147c:	08 95       	ret
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	f1 cf       	rjmp	.-30     	; 0x1464 <sync_window.part.2+0xa4>

00001482 <move_window>:
    1482:	4f 92       	push	r4
    1484:	5f 92       	push	r5
    1486:	6f 92       	push	r6
    1488:	7f 92       	push	r7
    148a:	8f 92       	push	r8
    148c:	9f 92       	push	r9
    148e:	af 92       	push	r10
    1490:	bf 92       	push	r11
    1492:	cf 92       	push	r12
    1494:	df 92       	push	r13
    1496:	ef 92       	push	r14
    1498:	ff 92       	push	r15
    149a:	0f 93       	push	r16
    149c:	1f 93       	push	r17
    149e:	cf 93       	push	r28
    14a0:	df 93       	push	r29
    14a2:	ec 01       	movw	r28, r24
    14a4:	2a 01       	movw	r4, r20
    14a6:	3b 01       	movw	r6, r22
    14a8:	ce a4       	ldd	r12, Y+46	; 0x2e
    14aa:	df a4       	ldd	r13, Y+47	; 0x2f
    14ac:	e8 a8       	ldd	r14, Y+48	; 0x30
    14ae:	f9 a8       	ldd	r15, Y+49	; 0x31
    14b0:	c4 16       	cp	r12, r20
    14b2:	d5 06       	cpc	r13, r21
    14b4:	e6 06       	cpc	r14, r22
    14b6:	f7 06       	cpc	r15, r23
    14b8:	09 f4       	brne	.+2      	; 0x14bc <move_window+0x3a>
    14ba:	6f c0       	rjmp	.+222    	; 0x159a <move_window+0x118>
    14bc:	8c 81       	ldd	r24, Y+4	; 0x04
    14be:	5e 01       	movw	r10, r28
    14c0:	81 11       	cpse	r24, r1
    14c2:	22 c0       	rjmp	.+68     	; 0x1508 <move_window+0x86>
    14c4:	82 e3       	ldi	r24, 0x32	; 50
    14c6:	a8 0e       	add	r10, r24
    14c8:	b1 1c       	adc	r11, r1
    14ca:	01 e0       	ldi	r16, 0x01	; 1
    14cc:	10 e0       	ldi	r17, 0x00	; 0
    14ce:	a3 01       	movw	r20, r6
    14d0:	92 01       	movw	r18, r4
    14d2:	b5 01       	movw	r22, r10
    14d4:	89 81       	ldd	r24, Y+1	; 0x01
    14d6:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    14da:	81 11       	cpse	r24, r1
    14dc:	56 c0       	rjmp	.+172    	; 0x158a <move_window+0x108>
    14de:	4e a6       	std	Y+46, r4	; 0x2e
    14e0:	5f a6       	std	Y+47, r5	; 0x2f
    14e2:	68 aa       	std	Y+48, r6	; 0x30
    14e4:	79 aa       	std	Y+49, r7	; 0x31
    14e6:	df 91       	pop	r29
    14e8:	cf 91       	pop	r28
    14ea:	1f 91       	pop	r17
    14ec:	0f 91       	pop	r16
    14ee:	ff 90       	pop	r15
    14f0:	ef 90       	pop	r14
    14f2:	df 90       	pop	r13
    14f4:	cf 90       	pop	r12
    14f6:	bf 90       	pop	r11
    14f8:	af 90       	pop	r10
    14fa:	9f 90       	pop	r9
    14fc:	8f 90       	pop	r8
    14fe:	7f 90       	pop	r7
    1500:	6f 90       	pop	r6
    1502:	5f 90       	pop	r5
    1504:	4f 90       	pop	r4
    1506:	08 95       	ret
    1508:	02 e3       	ldi	r16, 0x32	; 50
    150a:	a0 0e       	add	r10, r16
    150c:	b1 1c       	adc	r11, r1
    150e:	01 e0       	ldi	r16, 0x01	; 1
    1510:	10 e0       	ldi	r17, 0x00	; 0
    1512:	a7 01       	movw	r20, r14
    1514:	96 01       	movw	r18, r12
    1516:	b5 01       	movw	r22, r10
    1518:	89 81       	ldd	r24, Y+1	; 0x01
    151a:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    151e:	81 11       	cpse	r24, r1
    1520:	3a c0       	rjmp	.+116    	; 0x1596 <move_window+0x114>
    1522:	1c 82       	std	Y+4, r1	; 0x04
    1524:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1526:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1528:	ac 8d       	ldd	r26, Y+28	; 0x1c
    152a:	bd 8d       	ldd	r27, Y+29	; 0x1d
    152c:	4a a1       	ldd	r20, Y+34	; 0x22
    152e:	5b a1       	ldd	r21, Y+35	; 0x23
    1530:	6c a1       	ldd	r22, Y+36	; 0x24
    1532:	7d a1       	ldd	r23, Y+37	; 0x25
    1534:	97 01       	movw	r18, r14
    1536:	86 01       	movw	r16, r12
    1538:	04 1b       	sub	r16, r20
    153a:	15 0b       	sbc	r17, r21
    153c:	26 0b       	sbc	r18, r22
    153e:	37 0b       	sbc	r19, r23
    1540:	08 17       	cp	r16, r24
    1542:	19 07       	cpc	r17, r25
    1544:	2a 07       	cpc	r18, r26
    1546:	3b 07       	cpc	r19, r27
    1548:	08 f0       	brcs	.+2      	; 0x154c <move_window+0xca>
    154a:	bf cf       	rjmp	.-130    	; 0x14ca <move_window+0x48>
    154c:	8b 80       	ldd	r8, Y+3	; 0x03
    154e:	91 2c       	mov	r9, r1
    1550:	12 e0       	ldi	r17, 0x02	; 2
    1552:	81 16       	cp	r8, r17
    1554:	91 04       	cpc	r9, r1
    1556:	28 f4       	brcc	.+10     	; 0x1562 <move_window+0xe0>
    1558:	b8 cf       	rjmp	.-144    	; 0x14ca <move_window+0x48>
    155a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    155c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    155e:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1560:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1562:	c8 0e       	add	r12, r24
    1564:	d9 1e       	adc	r13, r25
    1566:	ea 1e       	adc	r14, r26
    1568:	fb 1e       	adc	r15, r27
    156a:	01 e0       	ldi	r16, 0x01	; 1
    156c:	10 e0       	ldi	r17, 0x00	; 0
    156e:	a7 01       	movw	r20, r14
    1570:	96 01       	movw	r18, r12
    1572:	b5 01       	movw	r22, r10
    1574:	89 81       	ldd	r24, Y+1	; 0x01
    1576:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    157a:	21 e0       	ldi	r18, 0x01	; 1
    157c:	82 1a       	sub	r8, r18
    157e:	91 08       	sbc	r9, r1
    1580:	31 e0       	ldi	r19, 0x01	; 1
    1582:	83 16       	cp	r8, r19
    1584:	91 04       	cpc	r9, r1
    1586:	49 f7       	brne	.-46     	; 0x155a <move_window+0xd8>
    1588:	a0 cf       	rjmp	.-192    	; 0x14ca <move_window+0x48>
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	44 24       	eor	r4, r4
    158e:	4a 94       	dec	r4
    1590:	54 2c       	mov	r5, r4
    1592:	32 01       	movw	r6, r4
    1594:	a4 cf       	rjmp	.-184    	; 0x14de <move_window+0x5c>
    1596:	81 e0       	ldi	r24, 0x01	; 1
    1598:	a6 cf       	rjmp	.-180    	; 0x14e6 <move_window+0x64>
    159a:	80 e0       	ldi	r24, 0x00	; 0
    159c:	a4 cf       	rjmp	.-184    	; 0x14e6 <move_window+0x64>

0000159e <sync_fs>:
    159e:	8f 92       	push	r8
    15a0:	9f 92       	push	r9
    15a2:	af 92       	push	r10
    15a4:	bf 92       	push	r11
    15a6:	cf 92       	push	r12
    15a8:	df 92       	push	r13
    15aa:	ef 92       	push	r14
    15ac:	ff 92       	push	r15
    15ae:	0f 93       	push	r16
    15b0:	1f 93       	push	r17
    15b2:	cf 93       	push	r28
    15b4:	df 93       	push	r29
    15b6:	ec 01       	movw	r28, r24
    15b8:	8c 81       	ldd	r24, Y+4	; 0x04
    15ba:	81 11       	cpse	r24, r1
    15bc:	1d c0       	rjmp	.+58     	; 0x15f8 <sync_fs+0x5a>
    15be:	88 81       	ld	r24, Y
    15c0:	83 30       	cpi	r24, 0x03	; 3
    15c2:	09 f4       	brne	.+2      	; 0x15c6 <sync_fs+0x28>
    15c4:	5f c0       	rjmp	.+190    	; 0x1684 <sync_fs+0xe6>
    15c6:	40 e0       	ldi	r20, 0x00	; 0
    15c8:	50 e0       	ldi	r21, 0x00	; 0
    15ca:	60 e0       	ldi	r22, 0x00	; 0
    15cc:	89 81       	ldd	r24, Y+1	; 0x01
    15ce:	0e 94 f3 33 	call	0x67e6	; 0x67e6 <disk_ioctl>
    15d2:	91 e0       	ldi	r25, 0x01	; 1
    15d4:	88 23       	and	r24, r24
    15d6:	71 f0       	breq	.+28     	; 0x15f4 <sync_fs+0x56>
    15d8:	89 2f       	mov	r24, r25
    15da:	df 91       	pop	r29
    15dc:	cf 91       	pop	r28
    15de:	1f 91       	pop	r17
    15e0:	0f 91       	pop	r16
    15e2:	ff 90       	pop	r15
    15e4:	ef 90       	pop	r14
    15e6:	df 90       	pop	r13
    15e8:	cf 90       	pop	r12
    15ea:	bf 90       	pop	r11
    15ec:	af 90       	pop	r10
    15ee:	9f 90       	pop	r9
    15f0:	8f 90       	pop	r8
    15f2:	08 95       	ret
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	f0 cf       	rjmp	.-32     	; 0x15d8 <sync_fs+0x3a>
    15f8:	ce a4       	ldd	r12, Y+46	; 0x2e
    15fa:	df a4       	ldd	r13, Y+47	; 0x2f
    15fc:	e8 a8       	ldd	r14, Y+48	; 0x30
    15fe:	f9 a8       	ldd	r15, Y+49	; 0x31
    1600:	5e 01       	movw	r10, r28
    1602:	02 e3       	ldi	r16, 0x32	; 50
    1604:	a0 0e       	add	r10, r16
    1606:	b1 1c       	adc	r11, r1
    1608:	01 e0       	ldi	r16, 0x01	; 1
    160a:	10 e0       	ldi	r17, 0x00	; 0
    160c:	a7 01       	movw	r20, r14
    160e:	96 01       	movw	r18, r12
    1610:	b5 01       	movw	r22, r10
    1612:	89 81       	ldd	r24, Y+1	; 0x01
    1614:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1618:	81 11       	cpse	r24, r1
    161a:	80 c0       	rjmp	.+256    	; 0x171c <sync_fs+0x17e>
    161c:	1c 82       	std	Y+4, r1	; 0x04
    161e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1620:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1622:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1624:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1626:	4a a1       	ldd	r20, Y+34	; 0x22
    1628:	5b a1       	ldd	r21, Y+35	; 0x23
    162a:	6c a1       	ldd	r22, Y+36	; 0x24
    162c:	7d a1       	ldd	r23, Y+37	; 0x25
    162e:	97 01       	movw	r18, r14
    1630:	86 01       	movw	r16, r12
    1632:	04 1b       	sub	r16, r20
    1634:	15 0b       	sbc	r17, r21
    1636:	26 0b       	sbc	r18, r22
    1638:	37 0b       	sbc	r19, r23
    163a:	08 17       	cp	r16, r24
    163c:	19 07       	cpc	r17, r25
    163e:	2a 07       	cpc	r18, r26
    1640:	3b 07       	cpc	r19, r27
    1642:	08 f0       	brcs	.+2      	; 0x1646 <sync_fs+0xa8>
    1644:	bc cf       	rjmp	.-136    	; 0x15be <sync_fs+0x20>
    1646:	8b 80       	ldd	r8, Y+3	; 0x03
    1648:	91 2c       	mov	r9, r1
    164a:	12 e0       	ldi	r17, 0x02	; 2
    164c:	81 16       	cp	r8, r17
    164e:	91 04       	cpc	r9, r1
    1650:	28 f4       	brcc	.+10     	; 0x165c <sync_fs+0xbe>
    1652:	b5 cf       	rjmp	.-150    	; 0x15be <sync_fs+0x20>
    1654:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1656:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1658:	ac 8d       	ldd	r26, Y+28	; 0x1c
    165a:	bd 8d       	ldd	r27, Y+29	; 0x1d
    165c:	c8 0e       	add	r12, r24
    165e:	d9 1e       	adc	r13, r25
    1660:	ea 1e       	adc	r14, r26
    1662:	fb 1e       	adc	r15, r27
    1664:	01 e0       	ldi	r16, 0x01	; 1
    1666:	10 e0       	ldi	r17, 0x00	; 0
    1668:	a7 01       	movw	r20, r14
    166a:	96 01       	movw	r18, r12
    166c:	b5 01       	movw	r22, r10
    166e:	89 81       	ldd	r24, Y+1	; 0x01
    1670:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1674:	21 e0       	ldi	r18, 0x01	; 1
    1676:	82 1a       	sub	r8, r18
    1678:	91 08       	sbc	r9, r1
    167a:	31 e0       	ldi	r19, 0x01	; 1
    167c:	83 16       	cp	r8, r19
    167e:	91 04       	cpc	r9, r1
    1680:	49 f7       	brne	.-46     	; 0x1654 <sync_fs+0xb6>
    1682:	9d cf       	rjmp	.-198    	; 0x15be <sync_fs+0x20>
    1684:	8d 81       	ldd	r24, Y+5	; 0x05
    1686:	81 30       	cpi	r24, 0x01	; 1
    1688:	09 f0       	breq	.+2      	; 0x168c <sync_fs+0xee>
    168a:	9d cf       	rjmp	.-198    	; 0x15c6 <sync_fs+0x28>
    168c:	80 e0       	ldi	r24, 0x00	; 0
    168e:	92 e0       	ldi	r25, 0x02	; 2
    1690:	be 01       	movw	r22, r28
    1692:	6e 5c       	subi	r22, 0xCE	; 206
    1694:	7f 4f       	sbci	r23, 0xFF	; 255
    1696:	fb 01       	movw	r30, r22
    1698:	8c 01       	movw	r16, r24
    169a:	11 92       	st	Z+, r1
    169c:	01 50       	subi	r16, 0x01	; 1
    169e:	10 40       	sbci	r17, 0x00	; 0
    16a0:	e1 f7       	brne	.-8      	; 0x169a <sync_fs+0xfc>
    16a2:	85 e5       	ldi	r24, 0x55	; 85
    16a4:	9a ea       	ldi	r25, 0xAA	; 170
    16a6:	fe 01       	movw	r30, r28
    16a8:	e0 5d       	subi	r30, 0xD0	; 208
    16aa:	fd 4f       	sbci	r31, 0xFD	; 253
    16ac:	80 83       	st	Z, r24
    16ae:	91 83       	std	Z+1, r25	; 0x01
    16b0:	82 e5       	ldi	r24, 0x52	; 82
    16b2:	92 e5       	ldi	r25, 0x52	; 82
    16b4:	a1 e6       	ldi	r26, 0x61	; 97
    16b6:	b1 e4       	ldi	r27, 0x41	; 65
    16b8:	8a ab       	std	Y+50, r24	; 0x32
    16ba:	9b ab       	std	Y+51, r25	; 0x33
    16bc:	ac ab       	std	Y+52, r26	; 0x34
    16be:	bd ab       	std	Y+53, r27	; 0x35
    16c0:	82 e7       	ldi	r24, 0x72	; 114
    16c2:	92 e7       	ldi	r25, 0x72	; 114
    16c4:	a1 e4       	ldi	r26, 0x41	; 65
    16c6:	b1 e6       	ldi	r27, 0x61	; 97
    16c8:	7a 97       	sbiw	r30, 0x1a	; 26
    16ca:	80 83       	st	Z, r24
    16cc:	91 83       	std	Z+1, r25	; 0x01
    16ce:	a2 83       	std	Z+2, r26	; 0x02
    16d0:	b3 83       	std	Z+3, r27	; 0x03
    16d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    16d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    16d6:	a8 89       	ldd	r26, Y+16	; 0x10
    16d8:	b9 89       	ldd	r27, Y+17	; 0x11
    16da:	34 96       	adiw	r30, 0x04	; 4
    16dc:	80 83       	st	Z, r24
    16de:	91 83       	std	Z+1, r25	; 0x01
    16e0:	a2 83       	std	Z+2, r26	; 0x02
    16e2:	b3 83       	std	Z+3, r27	; 0x03
    16e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    16e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    16e8:	ac 85       	ldd	r26, Y+12	; 0x0c
    16ea:	bd 85       	ldd	r27, Y+13	; 0x0d
    16ec:	34 96       	adiw	r30, 0x04	; 4
    16ee:	80 83       	st	Z, r24
    16f0:	91 83       	std	Z+1, r25	; 0x01
    16f2:	a2 83       	std	Z+2, r26	; 0x02
    16f4:	b3 83       	std	Z+3, r27	; 0x03
    16f6:	2e 8d       	ldd	r18, Y+30	; 0x1e
    16f8:	3f 8d       	ldd	r19, Y+31	; 0x1f
    16fa:	48 a1       	ldd	r20, Y+32	; 0x20
    16fc:	59 a1       	ldd	r21, Y+33	; 0x21
    16fe:	2f 5f       	subi	r18, 0xFF	; 255
    1700:	3f 4f       	sbci	r19, 0xFF	; 255
    1702:	4f 4f       	sbci	r20, 0xFF	; 255
    1704:	5f 4f       	sbci	r21, 0xFF	; 255
    1706:	2e a7       	std	Y+46, r18	; 0x2e
    1708:	3f a7       	std	Y+47, r19	; 0x2f
    170a:	48 ab       	std	Y+48, r20	; 0x30
    170c:	59 ab       	std	Y+49, r21	; 0x31
    170e:	01 e0       	ldi	r16, 0x01	; 1
    1710:	10 e0       	ldi	r17, 0x00	; 0
    1712:	89 81       	ldd	r24, Y+1	; 0x01
    1714:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1718:	1d 82       	std	Y+5, r1	; 0x05
    171a:	55 cf       	rjmp	.-342    	; 0x15c6 <sync_fs+0x28>
    171c:	91 e0       	ldi	r25, 0x01	; 1
    171e:	5c cf       	rjmp	.-328    	; 0x15d8 <sync_fs+0x3a>

00001720 <put_fat.part.6>:
    1720:	2f 92       	push	r2
    1722:	3f 92       	push	r3
    1724:	4f 92       	push	r4
    1726:	5f 92       	push	r5
    1728:	6f 92       	push	r6
    172a:	7f 92       	push	r7
    172c:	8f 92       	push	r8
    172e:	9f 92       	push	r9
    1730:	af 92       	push	r10
    1732:	bf 92       	push	r11
    1734:	cf 92       	push	r12
    1736:	df 92       	push	r13
    1738:	ef 92       	push	r14
    173a:	ff 92       	push	r15
    173c:	0f 93       	push	r16
    173e:	1f 93       	push	r17
    1740:	cf 93       	push	r28
    1742:	df 93       	push	r29
    1744:	cd b7       	in	r28, 0x3d	; 61
    1746:	de b7       	in	r29, 0x3e	; 62
    1748:	60 97       	sbiw	r28, 0x10	; 16
    174a:	cd bf       	out	0x3d, r28	; 61
    174c:	de bf       	out	0x3e, r29	; 62
    174e:	8f 87       	std	Y+15, r24	; 0x0f
    1750:	98 8b       	std	Y+16, r25	; 0x10
    1752:	6a 01       	movw	r12, r20
    1754:	7b 01       	movw	r14, r22
    1756:	48 01       	movw	r8, r16
    1758:	59 01       	movw	r10, r18
    175a:	dc 01       	movw	r26, r24
    175c:	8c 91       	ld	r24, X
    175e:	82 30       	cpi	r24, 0x02	; 2
    1760:	09 f4       	brne	.+2      	; 0x1764 <put_fat.part.6+0x44>
    1762:	73 c1       	rjmp	.+742    	; 0x1a4a <put_fat.part.6+0x32a>
    1764:	83 30       	cpi	r24, 0x03	; 3
    1766:	09 f4       	brne	.+2      	; 0x176a <put_fat.part.6+0x4a>
    1768:	2a c1       	rjmp	.+596    	; 0x19be <put_fat.part.6+0x29e>
    176a:	81 30       	cpi	r24, 0x01	; 1
    176c:	b9 f0       	breq	.+46     	; 0x179c <put_fat.part.6+0x7c>
    176e:	82 e0       	ldi	r24, 0x02	; 2
    1770:	60 96       	adiw	r28, 0x10	; 16
    1772:	cd bf       	out	0x3d, r28	; 61
    1774:	de bf       	out	0x3e, r29	; 62
    1776:	df 91       	pop	r29
    1778:	cf 91       	pop	r28
    177a:	1f 91       	pop	r17
    177c:	0f 91       	pop	r16
    177e:	ff 90       	pop	r15
    1780:	ef 90       	pop	r14
    1782:	df 90       	pop	r13
    1784:	cf 90       	pop	r12
    1786:	bf 90       	pop	r11
    1788:	af 90       	pop	r10
    178a:	9f 90       	pop	r9
    178c:	8f 90       	pop	r8
    178e:	7f 90       	pop	r7
    1790:	6f 90       	pop	r6
    1792:	5f 90       	pop	r5
    1794:	4f 90       	pop	r4
    1796:	3f 90       	pop	r3
    1798:	2f 90       	pop	r2
    179a:	08 95       	ret
    179c:	1a 01       	movw	r2, r20
    179e:	36 94       	lsr	r3
    17a0:	27 94       	ror	r2
    17a2:	24 0e       	add	r2, r20
    17a4:	35 1e       	adc	r3, r21
    17a6:	92 96       	adiw	r26, 0x22	; 34
    17a8:	8d 91       	ld	r24, X+
    17aa:	9d 91       	ld	r25, X+
    17ac:	0d 90       	ld	r0, X+
    17ae:	bc 91       	ld	r27, X
    17b0:	a0 2d       	mov	r26, r0
    17b2:	91 01       	movw	r18, r2
    17b4:	23 2f       	mov	r18, r19
    17b6:	33 27       	eor	r19, r19
    17b8:	26 95       	lsr	r18
    17ba:	ac 01       	movw	r20, r24
    17bc:	bd 01       	movw	r22, r26
    17be:	42 0f       	add	r20, r18
    17c0:	53 1f       	adc	r21, r19
    17c2:	61 1d       	adc	r22, r1
    17c4:	71 1d       	adc	r23, r1
    17c6:	49 83       	std	Y+1, r20	; 0x01
    17c8:	5a 83       	std	Y+2, r21	; 0x02
    17ca:	6b 83       	std	Y+3, r22	; 0x03
    17cc:	7c 83       	std	Y+4, r23	; 0x04
    17ce:	ef 85       	ldd	r30, Y+15	; 0x0f
    17d0:	f8 89       	ldd	r31, Y+16	; 0x10
    17d2:	46 a4       	ldd	r4, Z+46	; 0x2e
    17d4:	57 a4       	ldd	r5, Z+47	; 0x2f
    17d6:	60 a8       	ldd	r6, Z+48	; 0x30
    17d8:	71 a8       	ldd	r7, Z+49	; 0x31
    17da:	44 15       	cp	r20, r4
    17dc:	55 05       	cpc	r21, r5
    17de:	66 05       	cpc	r22, r6
    17e0:	77 05       	cpc	r23, r7
    17e2:	09 f4       	brne	.+2      	; 0x17e6 <put_fat.part.6+0xc6>
    17e4:	cb c2       	rjmp	.+1430   	; 0x1d7c <put_fat.part.6+0x65c>
    17e6:	84 81       	ldd	r24, Z+4	; 0x04
    17e8:	81 11       	cpse	r24, r1
    17ea:	87 c1       	rjmp	.+782    	; 0x1afa <put_fat.part.6+0x3da>
    17ec:	0f 85       	ldd	r16, Y+15	; 0x0f
    17ee:	18 89       	ldd	r17, Y+16	; 0x10
    17f0:	0e 5c       	subi	r16, 0xCE	; 206
    17f2:	1f 4f       	sbci	r17, 0xFF	; 255
    17f4:	0d 83       	std	Y+5, r16	; 0x05
    17f6:	1e 83       	std	Y+6, r17	; 0x06
    17f8:	01 e0       	ldi	r16, 0x01	; 1
    17fa:	10 e0       	ldi	r17, 0x00	; 0
    17fc:	29 81       	ldd	r18, Y+1	; 0x01
    17fe:	3a 81       	ldd	r19, Y+2	; 0x02
    1800:	4b 81       	ldd	r20, Y+3	; 0x03
    1802:	5c 81       	ldd	r21, Y+4	; 0x04
    1804:	6d 81       	ldd	r22, Y+5	; 0x05
    1806:	7e 81       	ldd	r23, Y+6	; 0x06
    1808:	af 85       	ldd	r26, Y+15	; 0x0f
    180a:	b8 89       	ldd	r27, Y+16	; 0x10
    180c:	11 96       	adiw	r26, 0x01	; 1
    180e:	8c 91       	ld	r24, X
    1810:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    1814:	81 11       	cpse	r24, r1
    1816:	0e c1       	rjmp	.+540    	; 0x1a34 <put_fat.part.6+0x314>
    1818:	09 81       	ldd	r16, Y+1	; 0x01
    181a:	1a 81       	ldd	r17, Y+2	; 0x02
    181c:	2b 81       	ldd	r18, Y+3	; 0x03
    181e:	3c 81       	ldd	r19, Y+4	; 0x04
    1820:	af 85       	ldd	r26, Y+15	; 0x0f
    1822:	b8 89       	ldd	r27, Y+16	; 0x10
    1824:	9e 96       	adiw	r26, 0x2e	; 46
    1826:	0d 93       	st	X+, r16
    1828:	1d 93       	st	X+, r17
    182a:	2d 93       	st	X+, r18
    182c:	3c 93       	st	X, r19
    182e:	d1 97       	sbiw	r26, 0x31	; 49
    1830:	fd 01       	movw	r30, r26
    1832:	82 a1       	ldd	r24, Z+34	; 0x22
    1834:	93 a1       	ldd	r25, Z+35	; 0x23
    1836:	a4 a1       	ldd	r26, Z+36	; 0x24
    1838:	b5 a1       	ldd	r27, Z+37	; 0x25
    183a:	28 01       	movw	r4, r16
    183c:	39 01       	movw	r6, r18
    183e:	f1 01       	movw	r30, r2
    1840:	31 96       	adiw	r30, 0x01	; 1
    1842:	ed 83       	std	Y+5, r30	; 0x05
    1844:	fe 83       	std	Y+6, r31	; 0x06
    1846:	f1 e0       	ldi	r31, 0x01	; 1
    1848:	3f 22       	and	r3, r31
    184a:	97 01       	movw	r18, r14
    184c:	86 01       	movw	r16, r12
    184e:	01 70       	andi	r16, 0x01	; 1
    1850:	11 27       	eor	r17, r17
    1852:	22 27       	eor	r18, r18
    1854:	33 27       	eor	r19, r19
    1856:	0b 87       	std	Y+11, r16	; 0x0b
    1858:	1c 87       	std	Y+12, r17	; 0x0c
    185a:	2d 87       	std	Y+13, r18	; 0x0d
    185c:	3e 87       	std	Y+14, r19	; 0x0e
    185e:	c0 fe       	sbrs	r12, 0
    1860:	87 c2       	rjmp	.+1294   	; 0x1d70 <put_fat.part.6+0x650>
    1862:	ef 85       	ldd	r30, Y+15	; 0x0f
    1864:	f8 89       	ldd	r31, Y+16	; 0x10
    1866:	e2 0d       	add	r30, r2
    1868:	f3 1d       	adc	r31, r3
    186a:	42 a9       	ldd	r20, Z+50	; 0x32
    186c:	4f 70       	andi	r20, 0x0F	; 15
    186e:	10 e1       	ldi	r17, 0x10	; 16
    1870:	81 9e       	mul	r8, r17
    1872:	90 01       	movw	r18, r0
    1874:	11 24       	eor	r1, r1
    1876:	42 2b       	or	r20, r18
    1878:	42 ab       	std	Z+50, r20	; 0x32
    187a:	21 e0       	ldi	r18, 0x01	; 1
    187c:	ef 85       	ldd	r30, Y+15	; 0x0f
    187e:	f8 89       	ldd	r31, Y+16	; 0x10
    1880:	24 83       	std	Z+4, r18	; 0x04
    1882:	2d 81       	ldd	r18, Y+5	; 0x05
    1884:	3e 81       	ldd	r19, Y+6	; 0x06
    1886:	23 2f       	mov	r18, r19
    1888:	33 27       	eor	r19, r19
    188a:	26 95       	lsr	r18
    188c:	6c 01       	movw	r12, r24
    188e:	7d 01       	movw	r14, r26
    1890:	c2 0e       	add	r12, r18
    1892:	d3 1e       	adc	r13, r19
    1894:	e1 1c       	adc	r14, r1
    1896:	f1 1c       	adc	r15, r1
    1898:	09 81       	ldd	r16, Y+1	; 0x01
    189a:	1a 81       	ldd	r17, Y+2	; 0x02
    189c:	2b 81       	ldd	r18, Y+3	; 0x03
    189e:	3c 81       	ldd	r19, Y+4	; 0x04
    18a0:	c0 16       	cp	r12, r16
    18a2:	d1 06       	cpc	r13, r17
    18a4:	e2 06       	cpc	r14, r18
    18a6:	f3 06       	cpc	r15, r19
    18a8:	09 f4       	brne	.+2      	; 0x18ac <put_fat.part.6+0x18c>
    18aa:	6a c0       	rjmp	.+212    	; 0x1980 <put_fat.part.6+0x260>
    18ac:	a9 01       	movw	r20, r18
    18ae:	98 01       	movw	r18, r16
    18b0:	df 01       	movw	r26, r30
    18b2:	f2 96       	adiw	r30, 0x32	; 50
    18b4:	ef 83       	std	Y+7, r30	; 0x07
    18b6:	f8 87       	std	Y+8, r31	; 0x08
    18b8:	01 e0       	ldi	r16, 0x01	; 1
    18ba:	10 e0       	ldi	r17, 0x00	; 0
    18bc:	bf 01       	movw	r22, r30
    18be:	11 96       	adiw	r26, 0x01	; 1
    18c0:	8c 91       	ld	r24, X
    18c2:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    18c6:	81 11       	cpse	r24, r1
    18c8:	be c0       	rjmp	.+380    	; 0x1a46 <put_fat.part.6+0x326>
    18ca:	ef 85       	ldd	r30, Y+15	; 0x0f
    18cc:	f8 89       	ldd	r31, Y+16	; 0x10
    18ce:	14 82       	std	Z+4, r1	; 0x04
    18d0:	82 8d       	ldd	r24, Z+26	; 0x1a
    18d2:	93 8d       	ldd	r25, Z+27	; 0x1b
    18d4:	a4 8d       	ldd	r26, Z+28	; 0x1c
    18d6:	b5 8d       	ldd	r27, Z+29	; 0x1d
    18d8:	42 a1       	ldd	r20, Z+34	; 0x22
    18da:	53 a1       	ldd	r21, Z+35	; 0x23
    18dc:	64 a1       	ldd	r22, Z+36	; 0x24
    18de:	75 a1       	ldd	r23, Z+37	; 0x25
    18e0:	09 81       	ldd	r16, Y+1	; 0x01
    18e2:	1a 81       	ldd	r17, Y+2	; 0x02
    18e4:	2b 81       	ldd	r18, Y+3	; 0x03
    18e6:	3c 81       	ldd	r19, Y+4	; 0x04
    18e8:	04 1b       	sub	r16, r20
    18ea:	15 0b       	sbc	r17, r21
    18ec:	26 0b       	sbc	r18, r22
    18ee:	37 0b       	sbc	r19, r23
    18f0:	08 17       	cp	r16, r24
    18f2:	19 07       	cpc	r17, r25
    18f4:	2a 07       	cpc	r18, r26
    18f6:	3b 07       	cpc	r19, r27
    18f8:	70 f5       	brcc	.+92     	; 0x1956 <put_fat.part.6+0x236>
    18fa:	23 81       	ldd	r18, Z+3	; 0x03
    18fc:	22 2e       	mov	r2, r18
    18fe:	31 2c       	mov	r3, r1
    1900:	12 e0       	ldi	r17, 0x02	; 2
    1902:	21 16       	cp	r2, r17
    1904:	31 04       	cpc	r3, r1
    1906:	38 f1       	brcs	.+78     	; 0x1956 <put_fat.part.6+0x236>
    1908:	c9 82       	std	Y+1, r12	; 0x01
    190a:	da 82       	std	Y+2, r13	; 0x02
    190c:	eb 82       	std	Y+3, r14	; 0x03
    190e:	fc 82       	std	Y+4, r15	; 0x04
    1910:	ef 80       	ldd	r14, Y+7	; 0x07
    1912:	f8 84       	ldd	r15, Y+8	; 0x08
    1914:	06 c0       	rjmp	.+12     	; 0x1922 <put_fat.part.6+0x202>
    1916:	ef 85       	ldd	r30, Y+15	; 0x0f
    1918:	f8 89       	ldd	r31, Y+16	; 0x10
    191a:	82 8d       	ldd	r24, Z+26	; 0x1a
    191c:	93 8d       	ldd	r25, Z+27	; 0x1b
    191e:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1920:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1922:	48 0e       	add	r4, r24
    1924:	59 1e       	adc	r5, r25
    1926:	6a 1e       	adc	r6, r26
    1928:	7b 1e       	adc	r7, r27
    192a:	01 e0       	ldi	r16, 0x01	; 1
    192c:	10 e0       	ldi	r17, 0x00	; 0
    192e:	a3 01       	movw	r20, r6
    1930:	92 01       	movw	r18, r4
    1932:	b7 01       	movw	r22, r14
    1934:	af 85       	ldd	r26, Y+15	; 0x0f
    1936:	b8 89       	ldd	r27, Y+16	; 0x10
    1938:	11 96       	adiw	r26, 0x01	; 1
    193a:	8c 91       	ld	r24, X
    193c:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1940:	b1 e0       	ldi	r27, 0x01	; 1
    1942:	2b 1a       	sub	r2, r27
    1944:	31 08       	sbc	r3, r1
    1946:	e1 e0       	ldi	r30, 0x01	; 1
    1948:	2e 16       	cp	r2, r30
    194a:	31 04       	cpc	r3, r1
    194c:	21 f7       	brne	.-56     	; 0x1916 <put_fat.part.6+0x1f6>
    194e:	c9 80       	ldd	r12, Y+1	; 0x01
    1950:	da 80       	ldd	r13, Y+2	; 0x02
    1952:	eb 80       	ldd	r14, Y+3	; 0x03
    1954:	fc 80       	ldd	r15, Y+4	; 0x04
    1956:	01 e0       	ldi	r16, 0x01	; 1
    1958:	10 e0       	ldi	r17, 0x00	; 0
    195a:	a7 01       	movw	r20, r14
    195c:	96 01       	movw	r18, r12
    195e:	6f 81       	ldd	r22, Y+7	; 0x07
    1960:	78 85       	ldd	r23, Y+8	; 0x08
    1962:	ef 85       	ldd	r30, Y+15	; 0x0f
    1964:	f8 89       	ldd	r31, Y+16	; 0x10
    1966:	81 81       	ldd	r24, Z+1	; 0x01
    1968:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    196c:	81 11       	cpse	r24, r1
    196e:	62 c0       	rjmp	.+196    	; 0x1a34 <put_fat.part.6+0x314>
    1970:	af 85       	ldd	r26, Y+15	; 0x0f
    1972:	b8 89       	ldd	r27, Y+16	; 0x10
    1974:	9e 96       	adiw	r26, 0x2e	; 46
    1976:	cd 92       	st	X+, r12
    1978:	dd 92       	st	X+, r13
    197a:	ed 92       	st	X+, r14
    197c:	fc 92       	st	X, r15
    197e:	d1 97       	sbiw	r26, 0x31	; 49
    1980:	ed 81       	ldd	r30, Y+5	; 0x05
    1982:	fe 81       	ldd	r31, Y+6	; 0x06
    1984:	f1 70       	andi	r31, 0x01	; 1
    1986:	0b 85       	ldd	r16, Y+11	; 0x0b
    1988:	1c 85       	ldd	r17, Y+12	; 0x0c
    198a:	2d 85       	ldd	r18, Y+13	; 0x0d
    198c:	3e 85       	ldd	r19, Y+14	; 0x0e
    198e:	01 2b       	or	r16, r17
    1990:	02 2b       	or	r16, r18
    1992:	03 2b       	or	r16, r19
    1994:	09 f4       	brne	.+2      	; 0x1998 <put_fat.part.6+0x278>
    1996:	f5 c1       	rjmp	.+1002   	; 0x1d82 <put_fat.part.6+0x662>
    1998:	74 e0       	ldi	r23, 0x04	; 4
    199a:	b6 94       	lsr	r11
    199c:	a7 94       	ror	r10
    199e:	97 94       	ror	r9
    19a0:	87 94       	ror	r8
    19a2:	7a 95       	dec	r23
    19a4:	d1 f7       	brne	.-12     	; 0x199a <put_fat.part.6+0x27a>
    19a6:	88 2d       	mov	r24, r8
    19a8:	2f 85       	ldd	r18, Y+15	; 0x0f
    19aa:	38 89       	ldd	r19, Y+16	; 0x10
    19ac:	e2 0f       	add	r30, r18
    19ae:	f3 1f       	adc	r31, r19
    19b0:	d9 01       	movw	r26, r18
    19b2:	82 ab       	std	Z+50, r24	; 0x32
    19b4:	81 e0       	ldi	r24, 0x01	; 1
    19b6:	14 96       	adiw	r26, 0x04	; 4
    19b8:	8c 93       	st	X, r24
    19ba:	80 e0       	ldi	r24, 0x00	; 0
    19bc:	d9 ce       	rjmp	.-590    	; 0x1770 <put_fat.part.6+0x50>
    19be:	8a 01       	movw	r16, r20
    19c0:	9b 01       	movw	r18, r22
    19c2:	47 e0       	ldi	r20, 0x07	; 7
    19c4:	36 95       	lsr	r19
    19c6:	27 95       	ror	r18
    19c8:	17 95       	ror	r17
    19ca:	07 95       	ror	r16
    19cc:	4a 95       	dec	r20
    19ce:	d1 f7       	brne	.-12     	; 0x19c4 <put_fat.part.6+0x2a4>
    19d0:	ef 85       	ldd	r30, Y+15	; 0x0f
    19d2:	f8 89       	ldd	r31, Y+16	; 0x10
    19d4:	82 a1       	ldd	r24, Z+34	; 0x22
    19d6:	93 a1       	ldd	r25, Z+35	; 0x23
    19d8:	a4 a1       	ldd	r26, Z+36	; 0x24
    19da:	b5 a1       	ldd	r27, Z+37	; 0x25
    19dc:	08 0f       	add	r16, r24
    19de:	19 1f       	adc	r17, r25
    19e0:	2a 1f       	adc	r18, r26
    19e2:	3b 1f       	adc	r19, r27
    19e4:	09 83       	std	Y+1, r16	; 0x01
    19e6:	1a 83       	std	Y+2, r17	; 0x02
    19e8:	2b 83       	std	Y+3, r18	; 0x03
    19ea:	3c 83       	std	Y+4, r19	; 0x04
    19ec:	46 a4       	ldd	r4, Z+46	; 0x2e
    19ee:	57 a4       	ldd	r5, Z+47	; 0x2f
    19f0:	60 a8       	ldd	r6, Z+48	; 0x30
    19f2:	71 a8       	ldd	r7, Z+49	; 0x31
    19f4:	04 15       	cp	r16, r4
    19f6:	15 05       	cpc	r17, r5
    19f8:	26 05       	cpc	r18, r6
    19fa:	37 05       	cpc	r19, r7
    19fc:	09 f4       	brne	.+2      	; 0x1a00 <put_fat.part.6+0x2e0>
    19fe:	8e c1       	rjmp	.+796    	; 0x1d1c <put_fat.part.6+0x5fc>
    1a00:	84 81       	ldd	r24, Z+4	; 0x04
    1a02:	81 11       	cpse	r24, r1
    1a04:	28 c1       	rjmp	.+592    	; 0x1c56 <put_fat.part.6+0x536>
    1a06:	0f 85       	ldd	r16, Y+15	; 0x0f
    1a08:	18 89       	ldd	r17, Y+16	; 0x10
    1a0a:	0e 5c       	subi	r16, 0xCE	; 206
    1a0c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a0e:	0d 83       	std	Y+5, r16	; 0x05
    1a10:	1e 83       	std	Y+6, r17	; 0x06
    1a12:	01 e0       	ldi	r16, 0x01	; 1
    1a14:	10 e0       	ldi	r17, 0x00	; 0
    1a16:	29 81       	ldd	r18, Y+1	; 0x01
    1a18:	3a 81       	ldd	r19, Y+2	; 0x02
    1a1a:	4b 81       	ldd	r20, Y+3	; 0x03
    1a1c:	5c 81       	ldd	r21, Y+4	; 0x04
    1a1e:	6d 81       	ldd	r22, Y+5	; 0x05
    1a20:	7e 81       	ldd	r23, Y+6	; 0x06
    1a22:	af 85       	ldd	r26, Y+15	; 0x0f
    1a24:	b8 89       	ldd	r27, Y+16	; 0x10
    1a26:	11 96       	adiw	r26, 0x01	; 1
    1a28:	8c 91       	ld	r24, X
    1a2a:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    1a2e:	88 23       	and	r24, r24
    1a30:	09 f4       	brne	.+2      	; 0x1a34 <put_fat.part.6+0x314>
    1a32:	68 c1       	rjmp	.+720    	; 0x1d04 <put_fat.part.6+0x5e4>
    1a34:	8f ef       	ldi	r24, 0xFF	; 255
    1a36:	9f ef       	ldi	r25, 0xFF	; 255
    1a38:	dc 01       	movw	r26, r24
    1a3a:	ef 85       	ldd	r30, Y+15	; 0x0f
    1a3c:	f8 89       	ldd	r31, Y+16	; 0x10
    1a3e:	86 a7       	std	Z+46, r24	; 0x2e
    1a40:	97 a7       	std	Z+47, r25	; 0x2f
    1a42:	a0 ab       	std	Z+48, r26	; 0x30
    1a44:	b1 ab       	std	Z+49, r27	; 0x31
    1a46:	81 e0       	ldi	r24, 0x01	; 1
    1a48:	93 ce       	rjmp	.-730    	; 0x1770 <put_fat.part.6+0x50>
    1a4a:	33 27       	eor	r19, r19
    1a4c:	2f 2d       	mov	r18, r15
    1a4e:	1e 2d       	mov	r17, r14
    1a50:	0d 2d       	mov	r16, r13
    1a52:	ef 85       	ldd	r30, Y+15	; 0x0f
    1a54:	f8 89       	ldd	r31, Y+16	; 0x10
    1a56:	82 a1       	ldd	r24, Z+34	; 0x22
    1a58:	93 a1       	ldd	r25, Z+35	; 0x23
    1a5a:	a4 a1       	ldd	r26, Z+36	; 0x24
    1a5c:	b5 a1       	ldd	r27, Z+37	; 0x25
    1a5e:	08 0f       	add	r16, r24
    1a60:	19 1f       	adc	r17, r25
    1a62:	2a 1f       	adc	r18, r26
    1a64:	3b 1f       	adc	r19, r27
    1a66:	09 83       	std	Y+1, r16	; 0x01
    1a68:	1a 83       	std	Y+2, r17	; 0x02
    1a6a:	2b 83       	std	Y+3, r18	; 0x03
    1a6c:	3c 83       	std	Y+4, r19	; 0x04
    1a6e:	46 a4       	ldd	r4, Z+46	; 0x2e
    1a70:	57 a4       	ldd	r5, Z+47	; 0x2f
    1a72:	60 a8       	ldd	r6, Z+48	; 0x30
    1a74:	71 a8       	ldd	r7, Z+49	; 0x31
    1a76:	04 15       	cp	r16, r4
    1a78:	15 05       	cpc	r17, r5
    1a7a:	26 05       	cpc	r18, r6
    1a7c:	37 05       	cpc	r19, r7
    1a7e:	29 f1       	breq	.+74     	; 0x1aca <put_fat.part.6+0x3aa>
    1a80:	84 81       	ldd	r24, Z+4	; 0x04
    1a82:	81 11       	cpse	r24, r1
    1a84:	91 c0       	rjmp	.+290    	; 0x1ba8 <put_fat.part.6+0x488>
    1a86:	0f 85       	ldd	r16, Y+15	; 0x0f
    1a88:	18 89       	ldd	r17, Y+16	; 0x10
    1a8a:	0e 5c       	subi	r16, 0xCE	; 206
    1a8c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a8e:	0d 83       	std	Y+5, r16	; 0x05
    1a90:	1e 83       	std	Y+6, r17	; 0x06
    1a92:	01 e0       	ldi	r16, 0x01	; 1
    1a94:	10 e0       	ldi	r17, 0x00	; 0
    1a96:	29 81       	ldd	r18, Y+1	; 0x01
    1a98:	3a 81       	ldd	r19, Y+2	; 0x02
    1a9a:	4b 81       	ldd	r20, Y+3	; 0x03
    1a9c:	5c 81       	ldd	r21, Y+4	; 0x04
    1a9e:	6d 81       	ldd	r22, Y+5	; 0x05
    1aa0:	7e 81       	ldd	r23, Y+6	; 0x06
    1aa2:	af 85       	ldd	r26, Y+15	; 0x0f
    1aa4:	b8 89       	ldd	r27, Y+16	; 0x10
    1aa6:	11 96       	adiw	r26, 0x01	; 1
    1aa8:	8c 91       	ld	r24, X
    1aaa:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    1aae:	81 11       	cpse	r24, r1
    1ab0:	c1 cf       	rjmp	.-126    	; 0x1a34 <put_fat.part.6+0x314>
    1ab2:	09 81       	ldd	r16, Y+1	; 0x01
    1ab4:	1a 81       	ldd	r17, Y+2	; 0x02
    1ab6:	2b 81       	ldd	r18, Y+3	; 0x03
    1ab8:	3c 81       	ldd	r19, Y+4	; 0x04
    1aba:	af 85       	ldd	r26, Y+15	; 0x0f
    1abc:	b8 89       	ldd	r27, Y+16	; 0x10
    1abe:	9e 96       	adiw	r26, 0x2e	; 46
    1ac0:	0d 93       	st	X+, r16
    1ac2:	1d 93       	st	X+, r17
    1ac4:	2d 93       	st	X+, r18
    1ac6:	3c 93       	st	X, r19
    1ac8:	d1 97       	sbiw	r26, 0x31	; 49
    1aca:	cc 0c       	add	r12, r12
    1acc:	dd 1c       	adc	r13, r13
    1ace:	ee 1c       	adc	r14, r14
    1ad0:	ff 1c       	adc	r15, r15
    1ad2:	e8 94       	clt
    1ad4:	c0 f8       	bld	r12, 0
    1ad6:	b1 e0       	ldi	r27, 0x01	; 1
    1ad8:	db 22       	and	r13, r27
    1ada:	ee 24       	eor	r14, r14
    1adc:	ff 24       	eor	r15, r15
    1ade:	f6 01       	movw	r30, r12
    1ae0:	f2 96       	adiw	r30, 0x32	; 50
    1ae2:	0f 85       	ldd	r16, Y+15	; 0x0f
    1ae4:	18 89       	ldd	r17, Y+16	; 0x10
    1ae6:	e0 0f       	add	r30, r16
    1ae8:	f1 1f       	adc	r31, r17
    1aea:	80 82       	st	Z, r8
    1aec:	91 82       	std	Z+1, r9	; 0x01
    1aee:	81 e0       	ldi	r24, 0x01	; 1
    1af0:	d8 01       	movw	r26, r16
    1af2:	14 96       	adiw	r26, 0x04	; 4
    1af4:	8c 93       	st	X, r24
    1af6:	80 e0       	ldi	r24, 0x00	; 0
    1af8:	3b ce       	rjmp	.-906    	; 0x1770 <put_fat.part.6+0x50>
    1afa:	f2 96       	adiw	r30, 0x32	; 50
    1afc:	ed 83       	std	Y+5, r30	; 0x05
    1afe:	fe 83       	std	Y+6, r31	; 0x06
    1b00:	01 e0       	ldi	r16, 0x01	; 1
    1b02:	10 e0       	ldi	r17, 0x00	; 0
    1b04:	a3 01       	movw	r20, r6
    1b06:	92 01       	movw	r18, r4
    1b08:	bf 01       	movw	r22, r30
    1b0a:	af 85       	ldd	r26, Y+15	; 0x0f
    1b0c:	b8 89       	ldd	r27, Y+16	; 0x10
    1b0e:	11 96       	adiw	r26, 0x01	; 1
    1b10:	8c 91       	ld	r24, X
    1b12:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1b16:	81 11       	cpse	r24, r1
    1b18:	96 cf       	rjmp	.-212    	; 0x1a46 <put_fat.part.6+0x326>
    1b1a:	ef 85       	ldd	r30, Y+15	; 0x0f
    1b1c:	f8 89       	ldd	r31, Y+16	; 0x10
    1b1e:	14 82       	std	Z+4, r1	; 0x04
    1b20:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b22:	93 8d       	ldd	r25, Z+27	; 0x1b
    1b24:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1b26:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1b28:	42 a1       	ldd	r20, Z+34	; 0x22
    1b2a:	53 a1       	ldd	r21, Z+35	; 0x23
    1b2c:	64 a1       	ldd	r22, Z+36	; 0x24
    1b2e:	75 a1       	ldd	r23, Z+37	; 0x25
    1b30:	93 01       	movw	r18, r6
    1b32:	82 01       	movw	r16, r4
    1b34:	04 1b       	sub	r16, r20
    1b36:	15 0b       	sbc	r17, r21
    1b38:	26 0b       	sbc	r18, r22
    1b3a:	37 0b       	sbc	r19, r23
    1b3c:	08 17       	cp	r16, r24
    1b3e:	19 07       	cpc	r17, r25
    1b40:	2a 07       	cpc	r18, r26
    1b42:	3b 07       	cpc	r19, r27
    1b44:	08 f0       	brcs	.+2      	; 0x1b48 <put_fat.part.6+0x428>
    1b46:	58 ce       	rjmp	.-848    	; 0x17f8 <put_fat.part.6+0xd8>
    1b48:	23 81       	ldd	r18, Z+3	; 0x03
    1b4a:	02 2f       	mov	r16, r18
    1b4c:	10 e0       	ldi	r17, 0x00	; 0
    1b4e:	02 30       	cpi	r16, 0x02	; 2
    1b50:	11 05       	cpc	r17, r1
    1b52:	08 f4       	brcc	.+2      	; 0x1b56 <put_fat.part.6+0x436>
    1b54:	51 ce       	rjmp	.-862    	; 0x17f8 <put_fat.part.6+0xd8>
    1b56:	cf 82       	std	Y+7, r12	; 0x07
    1b58:	d8 86       	std	Y+8, r13	; 0x08
    1b5a:	e9 86       	std	Y+9, r14	; 0x09
    1b5c:	fa 86       	std	Y+10, r15	; 0x0a
    1b5e:	cd 80       	ldd	r12, Y+5	; 0x05
    1b60:	de 80       	ldd	r13, Y+6	; 0x06
    1b62:	78 01       	movw	r14, r16
    1b64:	06 c0       	rjmp	.+12     	; 0x1b72 <put_fat.part.6+0x452>
    1b66:	ef 85       	ldd	r30, Y+15	; 0x0f
    1b68:	f8 89       	ldd	r31, Y+16	; 0x10
    1b6a:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b6c:	93 8d       	ldd	r25, Z+27	; 0x1b
    1b6e:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1b70:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1b72:	48 0e       	add	r4, r24
    1b74:	59 1e       	adc	r5, r25
    1b76:	6a 1e       	adc	r6, r26
    1b78:	7b 1e       	adc	r7, r27
    1b7a:	01 e0       	ldi	r16, 0x01	; 1
    1b7c:	10 e0       	ldi	r17, 0x00	; 0
    1b7e:	a3 01       	movw	r20, r6
    1b80:	92 01       	movw	r18, r4
    1b82:	b6 01       	movw	r22, r12
    1b84:	af 85       	ldd	r26, Y+15	; 0x0f
    1b86:	b8 89       	ldd	r27, Y+16	; 0x10
    1b88:	11 96       	adiw	r26, 0x01	; 1
    1b8a:	8c 91       	ld	r24, X
    1b8c:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1b90:	b1 e0       	ldi	r27, 0x01	; 1
    1b92:	eb 1a       	sub	r14, r27
    1b94:	f1 08       	sbc	r15, r1
    1b96:	e1 e0       	ldi	r30, 0x01	; 1
    1b98:	ee 16       	cp	r14, r30
    1b9a:	f1 04       	cpc	r15, r1
    1b9c:	21 f7       	brne	.-56     	; 0x1b66 <put_fat.part.6+0x446>
    1b9e:	cf 80       	ldd	r12, Y+7	; 0x07
    1ba0:	d8 84       	ldd	r13, Y+8	; 0x08
    1ba2:	e9 84       	ldd	r14, Y+9	; 0x09
    1ba4:	fa 84       	ldd	r15, Y+10	; 0x0a
    1ba6:	28 ce       	rjmp	.-944    	; 0x17f8 <put_fat.part.6+0xd8>
    1ba8:	f2 96       	adiw	r30, 0x32	; 50
    1baa:	ed 83       	std	Y+5, r30	; 0x05
    1bac:	fe 83       	std	Y+6, r31	; 0x06
    1bae:	01 e0       	ldi	r16, 0x01	; 1
    1bb0:	10 e0       	ldi	r17, 0x00	; 0
    1bb2:	a3 01       	movw	r20, r6
    1bb4:	92 01       	movw	r18, r4
    1bb6:	bf 01       	movw	r22, r30
    1bb8:	af 85       	ldd	r26, Y+15	; 0x0f
    1bba:	b8 89       	ldd	r27, Y+16	; 0x10
    1bbc:	11 96       	adiw	r26, 0x01	; 1
    1bbe:	8c 91       	ld	r24, X
    1bc0:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1bc4:	81 11       	cpse	r24, r1
    1bc6:	3f cf       	rjmp	.-386    	; 0x1a46 <put_fat.part.6+0x326>
    1bc8:	ef 85       	ldd	r30, Y+15	; 0x0f
    1bca:	f8 89       	ldd	r31, Y+16	; 0x10
    1bcc:	14 82       	std	Z+4, r1	; 0x04
    1bce:	82 8d       	ldd	r24, Z+26	; 0x1a
    1bd0:	93 8d       	ldd	r25, Z+27	; 0x1b
    1bd2:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1bd4:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1bd6:	42 a1       	ldd	r20, Z+34	; 0x22
    1bd8:	53 a1       	ldd	r21, Z+35	; 0x23
    1bda:	64 a1       	ldd	r22, Z+36	; 0x24
    1bdc:	75 a1       	ldd	r23, Z+37	; 0x25
    1bde:	93 01       	movw	r18, r6
    1be0:	82 01       	movw	r16, r4
    1be2:	04 1b       	sub	r16, r20
    1be4:	15 0b       	sbc	r17, r21
    1be6:	26 0b       	sbc	r18, r22
    1be8:	37 0b       	sbc	r19, r23
    1bea:	08 17       	cp	r16, r24
    1bec:	19 07       	cpc	r17, r25
    1bee:	2a 07       	cpc	r18, r26
    1bf0:	3b 07       	cpc	r19, r27
    1bf2:	08 f0       	brcs	.+2      	; 0x1bf6 <put_fat.part.6+0x4d6>
    1bf4:	4e cf       	rjmp	.-356    	; 0x1a92 <put_fat.part.6+0x372>
    1bf6:	23 81       	ldd	r18, Z+3	; 0x03
    1bf8:	22 2e       	mov	r2, r18
    1bfa:	31 2c       	mov	r3, r1
    1bfc:	12 e0       	ldi	r17, 0x02	; 2
    1bfe:	21 16       	cp	r2, r17
    1c00:	31 04       	cpc	r3, r1
    1c02:	08 f4       	brcc	.+2      	; 0x1c06 <put_fat.part.6+0x4e6>
    1c04:	46 cf       	rjmp	.-372    	; 0x1a92 <put_fat.part.6+0x372>
    1c06:	cf 82       	std	Y+7, r12	; 0x07
    1c08:	d8 86       	std	Y+8, r13	; 0x08
    1c0a:	e9 86       	std	Y+9, r14	; 0x09
    1c0c:	fa 86       	std	Y+10, r15	; 0x0a
    1c0e:	ed 80       	ldd	r14, Y+5	; 0x05
    1c10:	fe 80       	ldd	r15, Y+6	; 0x06
    1c12:	06 c0       	rjmp	.+12     	; 0x1c20 <put_fat.part.6+0x500>
    1c14:	ef 85       	ldd	r30, Y+15	; 0x0f
    1c16:	f8 89       	ldd	r31, Y+16	; 0x10
    1c18:	82 8d       	ldd	r24, Z+26	; 0x1a
    1c1a:	93 8d       	ldd	r25, Z+27	; 0x1b
    1c1c:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1c1e:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1c20:	48 0e       	add	r4, r24
    1c22:	59 1e       	adc	r5, r25
    1c24:	6a 1e       	adc	r6, r26
    1c26:	7b 1e       	adc	r7, r27
    1c28:	01 e0       	ldi	r16, 0x01	; 1
    1c2a:	10 e0       	ldi	r17, 0x00	; 0
    1c2c:	a3 01       	movw	r20, r6
    1c2e:	92 01       	movw	r18, r4
    1c30:	b7 01       	movw	r22, r14
    1c32:	af 85       	ldd	r26, Y+15	; 0x0f
    1c34:	b8 89       	ldd	r27, Y+16	; 0x10
    1c36:	11 96       	adiw	r26, 0x01	; 1
    1c38:	8c 91       	ld	r24, X
    1c3a:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1c3e:	b1 e0       	ldi	r27, 0x01	; 1
    1c40:	2b 1a       	sub	r2, r27
    1c42:	31 08       	sbc	r3, r1
    1c44:	e1 e0       	ldi	r30, 0x01	; 1
    1c46:	2e 16       	cp	r2, r30
    1c48:	31 04       	cpc	r3, r1
    1c4a:	21 f7       	brne	.-56     	; 0x1c14 <put_fat.part.6+0x4f4>
    1c4c:	cf 80       	ldd	r12, Y+7	; 0x07
    1c4e:	d8 84       	ldd	r13, Y+8	; 0x08
    1c50:	e9 84       	ldd	r14, Y+9	; 0x09
    1c52:	fa 84       	ldd	r15, Y+10	; 0x0a
    1c54:	1e cf       	rjmp	.-452    	; 0x1a92 <put_fat.part.6+0x372>
    1c56:	f2 96       	adiw	r30, 0x32	; 50
    1c58:	ed 83       	std	Y+5, r30	; 0x05
    1c5a:	fe 83       	std	Y+6, r31	; 0x06
    1c5c:	01 e0       	ldi	r16, 0x01	; 1
    1c5e:	10 e0       	ldi	r17, 0x00	; 0
    1c60:	a3 01       	movw	r20, r6
    1c62:	92 01       	movw	r18, r4
    1c64:	bf 01       	movw	r22, r30
    1c66:	af 85       	ldd	r26, Y+15	; 0x0f
    1c68:	b8 89       	ldd	r27, Y+16	; 0x10
    1c6a:	11 96       	adiw	r26, 0x01	; 1
    1c6c:	8c 91       	ld	r24, X
    1c6e:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1c72:	81 11       	cpse	r24, r1
    1c74:	e8 ce       	rjmp	.-560    	; 0x1a46 <put_fat.part.6+0x326>
    1c76:	ef 85       	ldd	r30, Y+15	; 0x0f
    1c78:	f8 89       	ldd	r31, Y+16	; 0x10
    1c7a:	14 82       	std	Z+4, r1	; 0x04
    1c7c:	82 8d       	ldd	r24, Z+26	; 0x1a
    1c7e:	93 8d       	ldd	r25, Z+27	; 0x1b
    1c80:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1c82:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1c84:	42 a1       	ldd	r20, Z+34	; 0x22
    1c86:	53 a1       	ldd	r21, Z+35	; 0x23
    1c88:	64 a1       	ldd	r22, Z+36	; 0x24
    1c8a:	75 a1       	ldd	r23, Z+37	; 0x25
    1c8c:	93 01       	movw	r18, r6
    1c8e:	82 01       	movw	r16, r4
    1c90:	04 1b       	sub	r16, r20
    1c92:	15 0b       	sbc	r17, r21
    1c94:	26 0b       	sbc	r18, r22
    1c96:	37 0b       	sbc	r19, r23
    1c98:	08 17       	cp	r16, r24
    1c9a:	19 07       	cpc	r17, r25
    1c9c:	2a 07       	cpc	r18, r26
    1c9e:	3b 07       	cpc	r19, r27
    1ca0:	08 f0       	brcs	.+2      	; 0x1ca4 <put_fat.part.6+0x584>
    1ca2:	b7 ce       	rjmp	.-658    	; 0x1a12 <put_fat.part.6+0x2f2>
    1ca4:	23 81       	ldd	r18, Z+3	; 0x03
    1ca6:	22 2e       	mov	r2, r18
    1ca8:	31 2c       	mov	r3, r1
    1caa:	12 e0       	ldi	r17, 0x02	; 2
    1cac:	21 16       	cp	r2, r17
    1cae:	31 04       	cpc	r3, r1
    1cb0:	08 f4       	brcc	.+2      	; 0x1cb4 <put_fat.part.6+0x594>
    1cb2:	af ce       	rjmp	.-674    	; 0x1a12 <put_fat.part.6+0x2f2>
    1cb4:	cf 82       	std	Y+7, r12	; 0x07
    1cb6:	d8 86       	std	Y+8, r13	; 0x08
    1cb8:	e9 86       	std	Y+9, r14	; 0x09
    1cba:	fa 86       	std	Y+10, r15	; 0x0a
    1cbc:	ed 80       	ldd	r14, Y+5	; 0x05
    1cbe:	fe 80       	ldd	r15, Y+6	; 0x06
    1cc0:	06 c0       	rjmp	.+12     	; 0x1cce <put_fat.part.6+0x5ae>
    1cc2:	ef 85       	ldd	r30, Y+15	; 0x0f
    1cc4:	f8 89       	ldd	r31, Y+16	; 0x10
    1cc6:	82 8d       	ldd	r24, Z+26	; 0x1a
    1cc8:	93 8d       	ldd	r25, Z+27	; 0x1b
    1cca:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1ccc:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1cce:	48 0e       	add	r4, r24
    1cd0:	59 1e       	adc	r5, r25
    1cd2:	6a 1e       	adc	r6, r26
    1cd4:	7b 1e       	adc	r7, r27
    1cd6:	01 e0       	ldi	r16, 0x01	; 1
    1cd8:	10 e0       	ldi	r17, 0x00	; 0
    1cda:	a3 01       	movw	r20, r6
    1cdc:	92 01       	movw	r18, r4
    1cde:	b7 01       	movw	r22, r14
    1ce0:	af 85       	ldd	r26, Y+15	; 0x0f
    1ce2:	b8 89       	ldd	r27, Y+16	; 0x10
    1ce4:	11 96       	adiw	r26, 0x01	; 1
    1ce6:	8c 91       	ld	r24, X
    1ce8:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    1cec:	b1 e0       	ldi	r27, 0x01	; 1
    1cee:	2b 1a       	sub	r2, r27
    1cf0:	31 08       	sbc	r3, r1
    1cf2:	e1 e0       	ldi	r30, 0x01	; 1
    1cf4:	2e 16       	cp	r2, r30
    1cf6:	31 04       	cpc	r3, r1
    1cf8:	21 f7       	brne	.-56     	; 0x1cc2 <put_fat.part.6+0x5a2>
    1cfa:	cf 80       	ldd	r12, Y+7	; 0x07
    1cfc:	d8 84       	ldd	r13, Y+8	; 0x08
    1cfe:	e9 84       	ldd	r14, Y+9	; 0x09
    1d00:	fa 84       	ldd	r15, Y+10	; 0x0a
    1d02:	87 ce       	rjmp	.-754    	; 0x1a12 <put_fat.part.6+0x2f2>
    1d04:	09 81       	ldd	r16, Y+1	; 0x01
    1d06:	1a 81       	ldd	r17, Y+2	; 0x02
    1d08:	2b 81       	ldd	r18, Y+3	; 0x03
    1d0a:	3c 81       	ldd	r19, Y+4	; 0x04
    1d0c:	af 85       	ldd	r26, Y+15	; 0x0f
    1d0e:	b8 89       	ldd	r27, Y+16	; 0x10
    1d10:	9e 96       	adiw	r26, 0x2e	; 46
    1d12:	0d 93       	st	X+, r16
    1d14:	1d 93       	st	X+, r17
    1d16:	2d 93       	st	X+, r18
    1d18:	3c 93       	st	X, r19
    1d1a:	d1 97       	sbiw	r26, 0x31	; 49
    1d1c:	cc 0c       	add	r12, r12
    1d1e:	dd 1c       	adc	r13, r13
    1d20:	ee 1c       	adc	r14, r14
    1d22:	ff 1c       	adc	r15, r15
    1d24:	cc 0c       	add	r12, r12
    1d26:	dd 1c       	adc	r13, r13
    1d28:	ee 1c       	adc	r14, r14
    1d2a:	ff 1c       	adc	r15, r15
    1d2c:	bc ef       	ldi	r27, 0xFC	; 252
    1d2e:	cb 22       	and	r12, r27
    1d30:	b1 e0       	ldi	r27, 0x01	; 1
    1d32:	db 22       	and	r13, r27
    1d34:	ee 24       	eor	r14, r14
    1d36:	ff 24       	eor	r15, r15
    1d38:	f6 01       	movw	r30, r12
    1d3a:	f2 96       	adiw	r30, 0x32	; 50
    1d3c:	0f 85       	ldd	r16, Y+15	; 0x0f
    1d3e:	18 89       	ldd	r17, Y+16	; 0x10
    1d40:	e0 0f       	add	r30, r16
    1d42:	f1 1f       	adc	r31, r17
    1d44:	80 81       	ld	r24, Z
    1d46:	91 81       	ldd	r25, Z+1	; 0x01
    1d48:	a2 81       	ldd	r26, Z+2	; 0x02
    1d4a:	b3 81       	ldd	r27, Z+3	; 0x03
    1d4c:	88 27       	eor	r24, r24
    1d4e:	99 27       	eor	r25, r25
    1d50:	aa 27       	eor	r26, r26
    1d52:	b0 7f       	andi	r27, 0xF0	; 240
    1d54:	88 29       	or	r24, r8
    1d56:	99 29       	or	r25, r9
    1d58:	aa 29       	or	r26, r10
    1d5a:	bb 29       	or	r27, r11
    1d5c:	80 83       	st	Z, r24
    1d5e:	91 83       	std	Z+1, r25	; 0x01
    1d60:	a2 83       	std	Z+2, r26	; 0x02
    1d62:	b3 83       	std	Z+3, r27	; 0x03
    1d64:	81 e0       	ldi	r24, 0x01	; 1
    1d66:	d8 01       	movw	r26, r16
    1d68:	14 96       	adiw	r26, 0x04	; 4
    1d6a:	8c 93       	st	X, r24
    1d6c:	80 e0       	ldi	r24, 0x00	; 0
    1d6e:	00 cd       	rjmp	.-1536   	; 0x1770 <put_fat.part.6+0x50>
    1d70:	48 2d       	mov	r20, r8
    1d72:	ef 85       	ldd	r30, Y+15	; 0x0f
    1d74:	f8 89       	ldd	r31, Y+16	; 0x10
    1d76:	e2 0d       	add	r30, r2
    1d78:	f3 1d       	adc	r31, r3
    1d7a:	7e cd       	rjmp	.-1284   	; 0x1878 <put_fat.part.6+0x158>
    1d7c:	2a 01       	movw	r4, r20
    1d7e:	3b 01       	movw	r6, r22
    1d80:	5e cd       	rjmp	.-1348   	; 0x183e <put_fat.part.6+0x11e>
    1d82:	4f 85       	ldd	r20, Y+15	; 0x0f
    1d84:	58 89       	ldd	r21, Y+16	; 0x10
    1d86:	e4 0f       	add	r30, r20
    1d88:	f5 1f       	adc	r31, r21
    1d8a:	82 a9       	ldd	r24, Z+50	; 0x32
    1d8c:	80 7f       	andi	r24, 0xF0	; 240
    1d8e:	99 2d       	mov	r25, r9
    1d90:	9f 70       	andi	r25, 0x0F	; 15
    1d92:	89 2b       	or	r24, r25
    1d94:	da 01       	movw	r26, r20
    1d96:	0d ce       	rjmp	.-998    	; 0x19b2 <put_fat.part.6+0x292>

00001d98 <get_fat.part.4>:
    1d98:	2f 92       	push	r2
    1d9a:	3f 92       	push	r3
    1d9c:	4f 92       	push	r4
    1d9e:	5f 92       	push	r5
    1da0:	6f 92       	push	r6
    1da2:	7f 92       	push	r7
    1da4:	8f 92       	push	r8
    1da6:	9f 92       	push	r9
    1da8:	af 92       	push	r10
    1daa:	bf 92       	push	r11
    1dac:	cf 92       	push	r12
    1dae:	df 92       	push	r13
    1db0:	ef 92       	push	r14
    1db2:	ff 92       	push	r15
    1db4:	0f 93       	push	r16
    1db6:	1f 93       	push	r17
    1db8:	cf 93       	push	r28
    1dba:	df 93       	push	r29
    1dbc:	cd b7       	in	r28, 0x3d	; 61
    1dbe:	de b7       	in	r29, 0x3e	; 62
    1dc0:	2d 97       	sbiw	r28, 0x0d	; 13
    1dc2:	cd bf       	out	0x3d, r28	; 61
    1dc4:	de bf       	out	0x3e, r29	; 62
    1dc6:	8c 87       	std	Y+12, r24	; 0x0c
    1dc8:	9d 87       	std	Y+13, r25	; 0x0d
    1dca:	6a 01       	movw	r12, r20
    1dcc:	7b 01       	movw	r14, r22
    1dce:	dc 01       	movw	r26, r24
    1dd0:	8c 91       	ld	r24, X
    1dd2:	82 30       	cpi	r24, 0x02	; 2
    1dd4:	09 f4       	brne	.+2      	; 0x1dd8 <get_fat.part.4+0x40>
    1dd6:	04 c1       	rjmp	.+520    	; 0x1fe0 <get_fat.part.4+0x248>
    1dd8:	83 30       	cpi	r24, 0x03	; 3
    1dda:	09 f4       	brne	.+2      	; 0x1dde <get_fat.part.4+0x46>
    1ddc:	bf c0       	rjmp	.+382    	; 0x1f5c <get_fat.part.4+0x1c4>
    1dde:	81 30       	cpi	r24, 0x01	; 1
    1de0:	d1 f0       	breq	.+52     	; 0x1e16 <get_fat.part.4+0x7e>
    1de2:	61 e0       	ldi	r22, 0x01	; 1
    1de4:	70 e0       	ldi	r23, 0x00	; 0
    1de6:	80 e0       	ldi	r24, 0x00	; 0
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	2d 96       	adiw	r28, 0x0d	; 13
    1dec:	cd bf       	out	0x3d, r28	; 61
    1dee:	de bf       	out	0x3e, r29	; 62
    1df0:	df 91       	pop	r29
    1df2:	cf 91       	pop	r28
    1df4:	1f 91       	pop	r17
    1df6:	0f 91       	pop	r16
    1df8:	ff 90       	pop	r15
    1dfa:	ef 90       	pop	r14
    1dfc:	df 90       	pop	r13
    1dfe:	cf 90       	pop	r12
    1e00:	bf 90       	pop	r11
    1e02:	af 90       	pop	r10
    1e04:	9f 90       	pop	r9
    1e06:	8f 90       	pop	r8
    1e08:	7f 90       	pop	r7
    1e0a:	6f 90       	pop	r6
    1e0c:	5f 90       	pop	r5
    1e0e:	4f 90       	pop	r4
    1e10:	3f 90       	pop	r3
    1e12:	2f 90       	pop	r2
    1e14:	08 95       	ret
    1e16:	1a 01       	movw	r2, r20
    1e18:	36 94       	lsr	r3
    1e1a:	27 94       	ror	r2
    1e1c:	24 0e       	add	r2, r20
    1e1e:	35 1e       	adc	r3, r21
    1e20:	92 96       	adiw	r26, 0x22	; 34
    1e22:	8d 91       	ld	r24, X+
    1e24:	9d 91       	ld	r25, X+
    1e26:	0d 90       	ld	r0, X+
    1e28:	bc 91       	ld	r27, X
    1e2a:	a0 2d       	mov	r26, r0
    1e2c:	91 01       	movw	r18, r2
    1e2e:	23 2f       	mov	r18, r19
    1e30:	33 27       	eor	r19, r19
    1e32:	26 95       	lsr	r18
    1e34:	ac 01       	movw	r20, r24
    1e36:	bd 01       	movw	r22, r26
    1e38:	42 0f       	add	r20, r18
    1e3a:	53 1f       	adc	r21, r19
    1e3c:	61 1d       	adc	r22, r1
    1e3e:	71 1d       	adc	r23, r1
    1e40:	49 83       	std	Y+1, r20	; 0x01
    1e42:	5a 83       	std	Y+2, r21	; 0x02
    1e44:	6b 83       	std	Y+3, r22	; 0x03
    1e46:	7c 83       	std	Y+4, r23	; 0x04
    1e48:	ec 85       	ldd	r30, Y+12	; 0x0c
    1e4a:	fd 85       	ldd	r31, Y+13	; 0x0d
    1e4c:	46 a4       	ldd	r4, Z+46	; 0x2e
    1e4e:	57 a4       	ldd	r5, Z+47	; 0x2f
    1e50:	60 a8       	ldd	r6, Z+48	; 0x30
    1e52:	71 a8       	ldd	r7, Z+49	; 0x31
    1e54:	44 15       	cp	r20, r4
    1e56:	55 05       	cpc	r21, r5
    1e58:	66 05       	cpc	r22, r6
    1e5a:	77 05       	cpc	r23, r7
    1e5c:	09 f4       	brne	.+2      	; 0x1e60 <get_fat.part.4+0xc8>
    1e5e:	21 c2       	rjmp	.+1090   	; 0x22a2 <get_fat.part.4+0x50a>
    1e60:	84 81       	ldd	r24, Z+4	; 0x04
    1e62:	81 11       	cpse	r24, r1
    1e64:	05 c1       	rjmp	.+522    	; 0x2070 <get_fat.part.4+0x2d8>
    1e66:	ac 84       	ldd	r10, Y+12	; 0x0c
    1e68:	bd 84       	ldd	r11, Y+13	; 0x0d
    1e6a:	f2 e3       	ldi	r31, 0x32	; 50
    1e6c:	af 0e       	add	r10, r31
    1e6e:	b1 1c       	adc	r11, r1
    1e70:	01 e0       	ldi	r16, 0x01	; 1
    1e72:	10 e0       	ldi	r17, 0x00	; 0
    1e74:	29 81       	ldd	r18, Y+1	; 0x01
    1e76:	3a 81       	ldd	r19, Y+2	; 0x02
    1e78:	4b 81       	ldd	r20, Y+3	; 0x03
    1e7a:	5c 81       	ldd	r21, Y+4	; 0x04
    1e7c:	b5 01       	movw	r22, r10
    1e7e:	ac 85       	ldd	r26, Y+12	; 0x0c
    1e80:	bd 85       	ldd	r27, Y+13	; 0x0d
    1e82:	11 96       	adiw	r26, 0x01	; 1
    1e84:	8c 91       	ld	r24, X
    1e86:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    1e8a:	81 11       	cpse	r24, r1
    1e8c:	9c c0       	rjmp	.+312    	; 0x1fc6 <get_fat.part.4+0x22e>
    1e8e:	09 81       	ldd	r16, Y+1	; 0x01
    1e90:	1a 81       	ldd	r17, Y+2	; 0x02
    1e92:	2b 81       	ldd	r18, Y+3	; 0x03
    1e94:	3c 81       	ldd	r19, Y+4	; 0x04
    1e96:	ac 85       	ldd	r26, Y+12	; 0x0c
    1e98:	bd 85       	ldd	r27, Y+13	; 0x0d
    1e9a:	9e 96       	adiw	r26, 0x2e	; 46
    1e9c:	0d 93       	st	X+, r16
    1e9e:	1d 93       	st	X+, r17
    1ea0:	2d 93       	st	X+, r18
    1ea2:	3c 93       	st	X, r19
    1ea4:	d1 97       	sbiw	r26, 0x31	; 49
    1ea6:	92 96       	adiw	r26, 0x22	; 34
    1ea8:	4d 90       	ld	r4, X+
    1eaa:	5d 90       	ld	r5, X+
    1eac:	6d 90       	ld	r6, X+
    1eae:	7c 90       	ld	r7, X
    1eb0:	95 97       	sbiw	r26, 0x25	; 37
    1eb2:	48 01       	movw	r8, r16
    1eb4:	59 01       	movw	r10, r18
    1eb6:	8d 01       	movw	r16, r26
    1eb8:	f1 01       	movw	r30, r2
    1eba:	31 96       	adiw	r30, 0x01	; 1
    1ebc:	ed 83       	std	Y+5, r30	; 0x05
    1ebe:	fe 83       	std	Y+6, r31	; 0x06
    1ec0:	f1 01       	movw	r30, r2
    1ec2:	f1 70       	andi	r31, 0x01	; 1
    1ec4:	e0 0f       	add	r30, r16
    1ec6:	f1 1f       	adc	r31, r17
    1ec8:	92 a9       	ldd	r25, Z+50	; 0x32
    1eca:	9b 87       	std	Y+11, r25	; 0x0b
    1ecc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ece:	9e 81       	ldd	r25, Y+6	; 0x06
    1ed0:	89 2f       	mov	r24, r25
    1ed2:	99 27       	eor	r25, r25
    1ed4:	86 95       	lsr	r24
    1ed6:	48 0e       	add	r4, r24
    1ed8:	59 1e       	adc	r5, r25
    1eda:	61 1c       	adc	r6, r1
    1edc:	71 1c       	adc	r7, r1
    1ede:	09 81       	ldd	r16, Y+1	; 0x01
    1ee0:	1a 81       	ldd	r17, Y+2	; 0x02
    1ee2:	2b 81       	ldd	r18, Y+3	; 0x03
    1ee4:	3c 81       	ldd	r19, Y+4	; 0x04
    1ee6:	40 16       	cp	r4, r16
    1ee8:	51 06       	cpc	r5, r17
    1eea:	62 06       	cpc	r6, r18
    1eec:	73 06       	cpc	r7, r19
    1eee:	f9 f0       	breq	.+62     	; 0x1f2e <get_fat.part.4+0x196>
    1ef0:	ac 85       	ldd	r26, Y+12	; 0x0c
    1ef2:	bd 85       	ldd	r27, Y+13	; 0x0d
    1ef4:	14 96       	adiw	r26, 0x04	; 4
    1ef6:	8c 91       	ld	r24, X
    1ef8:	14 97       	sbiw	r26, 0x04	; 4
    1efa:	fd 01       	movw	r30, r26
    1efc:	81 11       	cpse	r24, r1
    1efe:	d8 c1       	rjmp	.+944    	; 0x22b0 <get_fat.part.4+0x518>
    1f00:	f2 96       	adiw	r30, 0x32	; 50
    1f02:	e9 87       	std	Y+9, r30	; 0x09
    1f04:	fa 87       	std	Y+10, r31	; 0x0a
    1f06:	01 e0       	ldi	r16, 0x01	; 1
    1f08:	10 e0       	ldi	r17, 0x00	; 0
    1f0a:	a3 01       	movw	r20, r6
    1f0c:	92 01       	movw	r18, r4
    1f0e:	69 85       	ldd	r22, Y+9	; 0x09
    1f10:	7a 85       	ldd	r23, Y+10	; 0x0a
    1f12:	ac 85       	ldd	r26, Y+12	; 0x0c
    1f14:	bd 85       	ldd	r27, Y+13	; 0x0d
    1f16:	11 96       	adiw	r26, 0x01	; 1
    1f18:	8c 91       	ld	r24, X
    1f1a:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    1f1e:	81 11       	cpse	r24, r1
    1f20:	52 c0       	rjmp	.+164    	; 0x1fc6 <get_fat.part.4+0x22e>
    1f22:	ec 85       	ldd	r30, Y+12	; 0x0c
    1f24:	fd 85       	ldd	r31, Y+13	; 0x0d
    1f26:	46 a6       	std	Z+46, r4	; 0x2e
    1f28:	57 a6       	std	Z+47, r5	; 0x2f
    1f2a:	60 aa       	std	Z+48, r6	; 0x30
    1f2c:	71 aa       	std	Z+49, r7	; 0x31
    1f2e:	ed 81       	ldd	r30, Y+5	; 0x05
    1f30:	fe 81       	ldd	r31, Y+6	; 0x06
    1f32:	f1 70       	andi	r31, 0x01	; 1
    1f34:	0c 85       	ldd	r16, Y+12	; 0x0c
    1f36:	1d 85       	ldd	r17, Y+13	; 0x0d
    1f38:	e0 0f       	add	r30, r16
    1f3a:	f1 1f       	adc	r31, r17
    1f3c:	82 a9       	ldd	r24, Z+50	; 0x32
    1f3e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f40:	69 2f       	mov	r22, r25
    1f42:	70 e0       	ldi	r23, 0x00	; 0
    1f44:	78 2b       	or	r23, r24
    1f46:	c0 fe       	sbrs	r12, 0
    1f48:	12 c2       	rjmp	.+1060   	; 0x236e <get_fat.part.4+0x5d6>
    1f4a:	72 95       	swap	r23
    1f4c:	62 95       	swap	r22
    1f4e:	6f 70       	andi	r22, 0x0F	; 15
    1f50:	67 27       	eor	r22, r23
    1f52:	7f 70       	andi	r23, 0x0F	; 15
    1f54:	67 27       	eor	r22, r23
    1f56:	80 e0       	ldi	r24, 0x00	; 0
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	47 cf       	rjmp	.-370    	; 0x1dea <get_fat.part.4+0x52>
    1f5c:	2a 01       	movw	r4, r20
    1f5e:	3b 01       	movw	r6, r22
    1f60:	67 e0       	ldi	r22, 0x07	; 7
    1f62:	76 94       	lsr	r7
    1f64:	67 94       	ror	r6
    1f66:	57 94       	ror	r5
    1f68:	47 94       	ror	r4
    1f6a:	6a 95       	dec	r22
    1f6c:	d1 f7       	brne	.-12     	; 0x1f62 <get_fat.part.4+0x1ca>
    1f6e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1f70:	fd 85       	ldd	r31, Y+13	; 0x0d
    1f72:	82 a1       	ldd	r24, Z+34	; 0x22
    1f74:	93 a1       	ldd	r25, Z+35	; 0x23
    1f76:	a4 a1       	ldd	r26, Z+36	; 0x24
    1f78:	b5 a1       	ldd	r27, Z+37	; 0x25
    1f7a:	48 0e       	add	r4, r24
    1f7c:	59 1e       	adc	r5, r25
    1f7e:	6a 1e       	adc	r6, r26
    1f80:	7b 1e       	adc	r7, r27
    1f82:	86 a4       	ldd	r8, Z+46	; 0x2e
    1f84:	97 a4       	ldd	r9, Z+47	; 0x2f
    1f86:	a0 a8       	ldd	r10, Z+48	; 0x30
    1f88:	b1 a8       	ldd	r11, Z+49	; 0x31
    1f8a:	48 14       	cp	r4, r8
    1f8c:	59 04       	cpc	r5, r9
    1f8e:	6a 04       	cpc	r6, r10
    1f90:	7b 04       	cpc	r7, r11
    1f92:	09 f4       	brne	.+2      	; 0x1f96 <get_fat.part.4+0x1fe>
    1f94:	70 c1       	rjmp	.+736    	; 0x2276 <get_fat.part.4+0x4de>
    1f96:	84 81       	ldd	r24, Z+4	; 0x04
    1f98:	81 11       	cpse	r24, r1
    1f9a:	0d c1       	rjmp	.+538    	; 0x21b6 <get_fat.part.4+0x41e>
    1f9c:	0c 85       	ldd	r16, Y+12	; 0x0c
    1f9e:	1d 85       	ldd	r17, Y+13	; 0x0d
    1fa0:	0e 5c       	subi	r16, 0xCE	; 206
    1fa2:	1f 4f       	sbci	r17, 0xFF	; 255
    1fa4:	09 83       	std	Y+1, r16	; 0x01
    1fa6:	1a 83       	std	Y+2, r17	; 0x02
    1fa8:	01 e0       	ldi	r16, 0x01	; 1
    1faa:	10 e0       	ldi	r17, 0x00	; 0
    1fac:	a3 01       	movw	r20, r6
    1fae:	92 01       	movw	r18, r4
    1fb0:	69 81       	ldd	r22, Y+1	; 0x01
    1fb2:	7a 81       	ldd	r23, Y+2	; 0x02
    1fb4:	ac 85       	ldd	r26, Y+12	; 0x0c
    1fb6:	bd 85       	ldd	r27, Y+13	; 0x0d
    1fb8:	11 96       	adiw	r26, 0x01	; 1
    1fba:	8c 91       	ld	r24, X
    1fbc:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    1fc0:	88 23       	and	r24, r24
    1fc2:	09 f4       	brne	.+2      	; 0x1fc6 <get_fat.part.4+0x22e>
    1fc4:	4f c1       	rjmp	.+670    	; 0x2264 <get_fat.part.4+0x4cc>
    1fc6:	8f ef       	ldi	r24, 0xFF	; 255
    1fc8:	9f ef       	ldi	r25, 0xFF	; 255
    1fca:	dc 01       	movw	r26, r24
    1fcc:	ec 85       	ldd	r30, Y+12	; 0x0c
    1fce:	fd 85       	ldd	r31, Y+13	; 0x0d
    1fd0:	86 a7       	std	Z+46, r24	; 0x2e
    1fd2:	97 a7       	std	Z+47, r25	; 0x2f
    1fd4:	a0 ab       	std	Z+48, r26	; 0x30
    1fd6:	b1 ab       	std	Z+49, r27	; 0x31
    1fd8:	6f ef       	ldi	r22, 0xFF	; 255
    1fda:	7f ef       	ldi	r23, 0xFF	; 255
    1fdc:	cb 01       	movw	r24, r22
    1fde:	05 cf       	rjmp	.-502    	; 0x1dea <get_fat.part.4+0x52>
    1fe0:	45 2e       	mov	r4, r21
    1fe2:	56 2e       	mov	r5, r22
    1fe4:	67 2e       	mov	r6, r23
    1fe6:	77 24       	eor	r7, r7
    1fe8:	ec 85       	ldd	r30, Y+12	; 0x0c
    1fea:	fd 85       	ldd	r31, Y+13	; 0x0d
    1fec:	82 a1       	ldd	r24, Z+34	; 0x22
    1fee:	93 a1       	ldd	r25, Z+35	; 0x23
    1ff0:	a4 a1       	ldd	r26, Z+36	; 0x24
    1ff2:	b5 a1       	ldd	r27, Z+37	; 0x25
    1ff4:	48 0e       	add	r4, r24
    1ff6:	59 1e       	adc	r5, r25
    1ff8:	6a 1e       	adc	r6, r26
    1ffa:	7b 1e       	adc	r7, r27
    1ffc:	86 a4       	ldd	r8, Z+46	; 0x2e
    1ffe:	97 a4       	ldd	r9, Z+47	; 0x2f
    2000:	a0 a8       	ldd	r10, Z+48	; 0x30
    2002:	b1 a8       	ldd	r11, Z+49	; 0x31
    2004:	48 14       	cp	r4, r8
    2006:	59 04       	cpc	r5, r9
    2008:	6a 04       	cpc	r6, r10
    200a:	7b 04       	cpc	r7, r11
    200c:	01 f1       	breq	.+64     	; 0x204e <get_fat.part.4+0x2b6>
    200e:	84 81       	ldd	r24, Z+4	; 0x04
    2010:	81 11       	cpse	r24, r1
    2012:	7a c0       	rjmp	.+244    	; 0x2108 <get_fat.part.4+0x370>
    2014:	0c 85       	ldd	r16, Y+12	; 0x0c
    2016:	1d 85       	ldd	r17, Y+13	; 0x0d
    2018:	0e 5c       	subi	r16, 0xCE	; 206
    201a:	1f 4f       	sbci	r17, 0xFF	; 255
    201c:	09 83       	std	Y+1, r16	; 0x01
    201e:	1a 83       	std	Y+2, r17	; 0x02
    2020:	01 e0       	ldi	r16, 0x01	; 1
    2022:	10 e0       	ldi	r17, 0x00	; 0
    2024:	a3 01       	movw	r20, r6
    2026:	92 01       	movw	r18, r4
    2028:	69 81       	ldd	r22, Y+1	; 0x01
    202a:	7a 81       	ldd	r23, Y+2	; 0x02
    202c:	ac 85       	ldd	r26, Y+12	; 0x0c
    202e:	bd 85       	ldd	r27, Y+13	; 0x0d
    2030:	11 96       	adiw	r26, 0x01	; 1
    2032:	8c 91       	ld	r24, X
    2034:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    2038:	81 11       	cpse	r24, r1
    203a:	c5 cf       	rjmp	.-118    	; 0x1fc6 <get_fat.part.4+0x22e>
    203c:	ac 85       	ldd	r26, Y+12	; 0x0c
    203e:	bd 85       	ldd	r27, Y+13	; 0x0d
    2040:	9e 96       	adiw	r26, 0x2e	; 46
    2042:	4d 92       	st	X+, r4
    2044:	5d 92       	st	X+, r5
    2046:	6d 92       	st	X+, r6
    2048:	7c 92       	st	X, r7
    204a:	d1 97       	sbiw	r26, 0x31	; 49
    204c:	fd 01       	movw	r30, r26
    204e:	cc 0c       	add	r12, r12
    2050:	dd 1c       	adc	r13, r13
    2052:	ee 1c       	adc	r14, r14
    2054:	ff 1c       	adc	r15, r15
    2056:	e8 94       	clt
    2058:	c0 f8       	bld	r12, 0
    205a:	b1 e0       	ldi	r27, 0x01	; 1
    205c:	db 22       	and	r13, r27
    205e:	ee 24       	eor	r14, r14
    2060:	ff 24       	eor	r15, r15
    2062:	ec 0d       	add	r30, r12
    2064:	fd 1d       	adc	r31, r13
    2066:	62 a9       	ldd	r22, Z+50	; 0x32
    2068:	73 a9       	ldd	r23, Z+51	; 0x33
    206a:	80 e0       	ldi	r24, 0x00	; 0
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	bd ce       	rjmp	.-646    	; 0x1dea <get_fat.part.4+0x52>
    2070:	5f 01       	movw	r10, r30
    2072:	f2 e3       	ldi	r31, 0x32	; 50
    2074:	af 0e       	add	r10, r31
    2076:	b1 1c       	adc	r11, r1
    2078:	01 e0       	ldi	r16, 0x01	; 1
    207a:	10 e0       	ldi	r17, 0x00	; 0
    207c:	a3 01       	movw	r20, r6
    207e:	92 01       	movw	r18, r4
    2080:	b5 01       	movw	r22, r10
    2082:	ac 85       	ldd	r26, Y+12	; 0x0c
    2084:	bd 85       	ldd	r27, Y+13	; 0x0d
    2086:	11 96       	adiw	r26, 0x01	; 1
    2088:	8c 91       	ld	r24, X
    208a:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    208e:	81 11       	cpse	r24, r1
    2090:	a3 cf       	rjmp	.-186    	; 0x1fd8 <get_fat.part.4+0x240>
    2092:	ec 85       	ldd	r30, Y+12	; 0x0c
    2094:	fd 85       	ldd	r31, Y+13	; 0x0d
    2096:	14 82       	std	Z+4, r1	; 0x04
    2098:	82 8d       	ldd	r24, Z+26	; 0x1a
    209a:	93 8d       	ldd	r25, Z+27	; 0x1b
    209c:	a4 8d       	ldd	r26, Z+28	; 0x1c
    209e:	b5 8d       	ldd	r27, Z+29	; 0x1d
    20a0:	42 a1       	ldd	r20, Z+34	; 0x22
    20a2:	53 a1       	ldd	r21, Z+35	; 0x23
    20a4:	64 a1       	ldd	r22, Z+36	; 0x24
    20a6:	75 a1       	ldd	r23, Z+37	; 0x25
    20a8:	93 01       	movw	r18, r6
    20aa:	82 01       	movw	r16, r4
    20ac:	04 1b       	sub	r16, r20
    20ae:	15 0b       	sbc	r17, r21
    20b0:	26 0b       	sbc	r18, r22
    20b2:	37 0b       	sbc	r19, r23
    20b4:	08 17       	cp	r16, r24
    20b6:	19 07       	cpc	r17, r25
    20b8:	2a 07       	cpc	r18, r26
    20ba:	3b 07       	cpc	r19, r27
    20bc:	08 f0       	brcs	.+2      	; 0x20c0 <get_fat.part.4+0x328>
    20be:	d8 ce       	rjmp	.-592    	; 0x1e70 <get_fat.part.4+0xd8>
    20c0:	83 80       	ldd	r8, Z+3	; 0x03
    20c2:	91 2c       	mov	r9, r1
    20c4:	12 e0       	ldi	r17, 0x02	; 2
    20c6:	81 16       	cp	r8, r17
    20c8:	91 04       	cpc	r9, r1
    20ca:	38 f4       	brcc	.+14     	; 0x20da <get_fat.part.4+0x342>
    20cc:	d1 ce       	rjmp	.-606    	; 0x1e70 <get_fat.part.4+0xd8>
    20ce:	ec 85       	ldd	r30, Y+12	; 0x0c
    20d0:	fd 85       	ldd	r31, Y+13	; 0x0d
    20d2:	82 8d       	ldd	r24, Z+26	; 0x1a
    20d4:	93 8d       	ldd	r25, Z+27	; 0x1b
    20d6:	a4 8d       	ldd	r26, Z+28	; 0x1c
    20d8:	b5 8d       	ldd	r27, Z+29	; 0x1d
    20da:	48 0e       	add	r4, r24
    20dc:	59 1e       	adc	r5, r25
    20de:	6a 1e       	adc	r6, r26
    20e0:	7b 1e       	adc	r7, r27
    20e2:	01 e0       	ldi	r16, 0x01	; 1
    20e4:	10 e0       	ldi	r17, 0x00	; 0
    20e6:	a3 01       	movw	r20, r6
    20e8:	92 01       	movw	r18, r4
    20ea:	b5 01       	movw	r22, r10
    20ec:	ac 85       	ldd	r26, Y+12	; 0x0c
    20ee:	bd 85       	ldd	r27, Y+13	; 0x0d
    20f0:	11 96       	adiw	r26, 0x01	; 1
    20f2:	8c 91       	ld	r24, X
    20f4:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    20f8:	b1 e0       	ldi	r27, 0x01	; 1
    20fa:	8b 1a       	sub	r8, r27
    20fc:	91 08       	sbc	r9, r1
    20fe:	e1 e0       	ldi	r30, 0x01	; 1
    2100:	8e 16       	cp	r8, r30
    2102:	91 04       	cpc	r9, r1
    2104:	21 f7       	brne	.-56     	; 0x20ce <get_fat.part.4+0x336>
    2106:	b4 ce       	rjmp	.-664    	; 0x1e70 <get_fat.part.4+0xd8>
    2108:	f2 96       	adiw	r30, 0x32	; 50
    210a:	e9 83       	std	Y+1, r30	; 0x01
    210c:	fa 83       	std	Y+2, r31	; 0x02
    210e:	01 e0       	ldi	r16, 0x01	; 1
    2110:	10 e0       	ldi	r17, 0x00	; 0
    2112:	a5 01       	movw	r20, r10
    2114:	94 01       	movw	r18, r8
    2116:	bf 01       	movw	r22, r30
    2118:	ac 85       	ldd	r26, Y+12	; 0x0c
    211a:	bd 85       	ldd	r27, Y+13	; 0x0d
    211c:	11 96       	adiw	r26, 0x01	; 1
    211e:	8c 91       	ld	r24, X
    2120:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2124:	81 11       	cpse	r24, r1
    2126:	58 cf       	rjmp	.-336    	; 0x1fd8 <get_fat.part.4+0x240>
    2128:	ec 85       	ldd	r30, Y+12	; 0x0c
    212a:	fd 85       	ldd	r31, Y+13	; 0x0d
    212c:	14 82       	std	Z+4, r1	; 0x04
    212e:	82 8d       	ldd	r24, Z+26	; 0x1a
    2130:	93 8d       	ldd	r25, Z+27	; 0x1b
    2132:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2134:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2136:	42 a1       	ldd	r20, Z+34	; 0x22
    2138:	53 a1       	ldd	r21, Z+35	; 0x23
    213a:	64 a1       	ldd	r22, Z+36	; 0x24
    213c:	75 a1       	ldd	r23, Z+37	; 0x25
    213e:	95 01       	movw	r18, r10
    2140:	84 01       	movw	r16, r8
    2142:	04 1b       	sub	r16, r20
    2144:	15 0b       	sbc	r17, r21
    2146:	26 0b       	sbc	r18, r22
    2148:	37 0b       	sbc	r19, r23
    214a:	08 17       	cp	r16, r24
    214c:	19 07       	cpc	r17, r25
    214e:	2a 07       	cpc	r18, r26
    2150:	3b 07       	cpc	r19, r27
    2152:	08 f0       	brcs	.+2      	; 0x2156 <get_fat.part.4+0x3be>
    2154:	65 cf       	rjmp	.-310    	; 0x2020 <get_fat.part.4+0x288>
    2156:	23 81       	ldd	r18, Z+3	; 0x03
    2158:	22 2e       	mov	r2, r18
    215a:	31 2c       	mov	r3, r1
    215c:	12 e0       	ldi	r17, 0x02	; 2
    215e:	21 16       	cp	r2, r17
    2160:	31 04       	cpc	r3, r1
    2162:	08 f4       	brcc	.+2      	; 0x2166 <get_fat.part.4+0x3ce>
    2164:	5d cf       	rjmp	.-326    	; 0x2020 <get_fat.part.4+0x288>
    2166:	cd 82       	std	Y+5, r12	; 0x05
    2168:	de 82       	std	Y+6, r13	; 0x06
    216a:	ef 82       	std	Y+7, r14	; 0x07
    216c:	f8 86       	std	Y+8, r15	; 0x08
    216e:	e9 80       	ldd	r14, Y+1	; 0x01
    2170:	fa 80       	ldd	r15, Y+2	; 0x02
    2172:	06 c0       	rjmp	.+12     	; 0x2180 <get_fat.part.4+0x3e8>
    2174:	ec 85       	ldd	r30, Y+12	; 0x0c
    2176:	fd 85       	ldd	r31, Y+13	; 0x0d
    2178:	82 8d       	ldd	r24, Z+26	; 0x1a
    217a:	93 8d       	ldd	r25, Z+27	; 0x1b
    217c:	a4 8d       	ldd	r26, Z+28	; 0x1c
    217e:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2180:	88 0e       	add	r8, r24
    2182:	99 1e       	adc	r9, r25
    2184:	aa 1e       	adc	r10, r26
    2186:	bb 1e       	adc	r11, r27
    2188:	01 e0       	ldi	r16, 0x01	; 1
    218a:	10 e0       	ldi	r17, 0x00	; 0
    218c:	a5 01       	movw	r20, r10
    218e:	94 01       	movw	r18, r8
    2190:	b7 01       	movw	r22, r14
    2192:	ac 85       	ldd	r26, Y+12	; 0x0c
    2194:	bd 85       	ldd	r27, Y+13	; 0x0d
    2196:	11 96       	adiw	r26, 0x01	; 1
    2198:	8c 91       	ld	r24, X
    219a:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    219e:	b1 e0       	ldi	r27, 0x01	; 1
    21a0:	2b 1a       	sub	r2, r27
    21a2:	31 08       	sbc	r3, r1
    21a4:	e1 e0       	ldi	r30, 0x01	; 1
    21a6:	2e 16       	cp	r2, r30
    21a8:	31 04       	cpc	r3, r1
    21aa:	21 f7       	brne	.-56     	; 0x2174 <get_fat.part.4+0x3dc>
    21ac:	cd 80       	ldd	r12, Y+5	; 0x05
    21ae:	de 80       	ldd	r13, Y+6	; 0x06
    21b0:	ef 80       	ldd	r14, Y+7	; 0x07
    21b2:	f8 84       	ldd	r15, Y+8	; 0x08
    21b4:	35 cf       	rjmp	.-406    	; 0x2020 <get_fat.part.4+0x288>
    21b6:	f2 96       	adiw	r30, 0x32	; 50
    21b8:	e9 83       	std	Y+1, r30	; 0x01
    21ba:	fa 83       	std	Y+2, r31	; 0x02
    21bc:	01 e0       	ldi	r16, 0x01	; 1
    21be:	10 e0       	ldi	r17, 0x00	; 0
    21c0:	a5 01       	movw	r20, r10
    21c2:	94 01       	movw	r18, r8
    21c4:	bf 01       	movw	r22, r30
    21c6:	ac 85       	ldd	r26, Y+12	; 0x0c
    21c8:	bd 85       	ldd	r27, Y+13	; 0x0d
    21ca:	11 96       	adiw	r26, 0x01	; 1
    21cc:	8c 91       	ld	r24, X
    21ce:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    21d2:	81 11       	cpse	r24, r1
    21d4:	01 cf       	rjmp	.-510    	; 0x1fd8 <get_fat.part.4+0x240>
    21d6:	ec 85       	ldd	r30, Y+12	; 0x0c
    21d8:	fd 85       	ldd	r31, Y+13	; 0x0d
    21da:	14 82       	std	Z+4, r1	; 0x04
    21dc:	82 8d       	ldd	r24, Z+26	; 0x1a
    21de:	93 8d       	ldd	r25, Z+27	; 0x1b
    21e0:	a4 8d       	ldd	r26, Z+28	; 0x1c
    21e2:	b5 8d       	ldd	r27, Z+29	; 0x1d
    21e4:	42 a1       	ldd	r20, Z+34	; 0x22
    21e6:	53 a1       	ldd	r21, Z+35	; 0x23
    21e8:	64 a1       	ldd	r22, Z+36	; 0x24
    21ea:	75 a1       	ldd	r23, Z+37	; 0x25
    21ec:	95 01       	movw	r18, r10
    21ee:	84 01       	movw	r16, r8
    21f0:	04 1b       	sub	r16, r20
    21f2:	15 0b       	sbc	r17, r21
    21f4:	26 0b       	sbc	r18, r22
    21f6:	37 0b       	sbc	r19, r23
    21f8:	08 17       	cp	r16, r24
    21fa:	19 07       	cpc	r17, r25
    21fc:	2a 07       	cpc	r18, r26
    21fe:	3b 07       	cpc	r19, r27
    2200:	08 f0       	brcs	.+2      	; 0x2204 <get_fat.part.4+0x46c>
    2202:	d2 ce       	rjmp	.-604    	; 0x1fa8 <get_fat.part.4+0x210>
    2204:	23 81       	ldd	r18, Z+3	; 0x03
    2206:	22 2e       	mov	r2, r18
    2208:	31 2c       	mov	r3, r1
    220a:	12 e0       	ldi	r17, 0x02	; 2
    220c:	21 16       	cp	r2, r17
    220e:	31 04       	cpc	r3, r1
    2210:	08 f4       	brcc	.+2      	; 0x2214 <get_fat.part.4+0x47c>
    2212:	ca ce       	rjmp	.-620    	; 0x1fa8 <get_fat.part.4+0x210>
    2214:	cd 82       	std	Y+5, r12	; 0x05
    2216:	de 82       	std	Y+6, r13	; 0x06
    2218:	ef 82       	std	Y+7, r14	; 0x07
    221a:	f8 86       	std	Y+8, r15	; 0x08
    221c:	e9 80       	ldd	r14, Y+1	; 0x01
    221e:	fa 80       	ldd	r15, Y+2	; 0x02
    2220:	06 c0       	rjmp	.+12     	; 0x222e <get_fat.part.4+0x496>
    2222:	ec 85       	ldd	r30, Y+12	; 0x0c
    2224:	fd 85       	ldd	r31, Y+13	; 0x0d
    2226:	82 8d       	ldd	r24, Z+26	; 0x1a
    2228:	93 8d       	ldd	r25, Z+27	; 0x1b
    222a:	a4 8d       	ldd	r26, Z+28	; 0x1c
    222c:	b5 8d       	ldd	r27, Z+29	; 0x1d
    222e:	88 0e       	add	r8, r24
    2230:	99 1e       	adc	r9, r25
    2232:	aa 1e       	adc	r10, r26
    2234:	bb 1e       	adc	r11, r27
    2236:	01 e0       	ldi	r16, 0x01	; 1
    2238:	10 e0       	ldi	r17, 0x00	; 0
    223a:	a5 01       	movw	r20, r10
    223c:	94 01       	movw	r18, r8
    223e:	b7 01       	movw	r22, r14
    2240:	ac 85       	ldd	r26, Y+12	; 0x0c
    2242:	bd 85       	ldd	r27, Y+13	; 0x0d
    2244:	11 96       	adiw	r26, 0x01	; 1
    2246:	8c 91       	ld	r24, X
    2248:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    224c:	b1 e0       	ldi	r27, 0x01	; 1
    224e:	2b 1a       	sub	r2, r27
    2250:	31 08       	sbc	r3, r1
    2252:	e1 e0       	ldi	r30, 0x01	; 1
    2254:	2e 16       	cp	r2, r30
    2256:	31 04       	cpc	r3, r1
    2258:	21 f7       	brne	.-56     	; 0x2222 <get_fat.part.4+0x48a>
    225a:	cd 80       	ldd	r12, Y+5	; 0x05
    225c:	de 80       	ldd	r13, Y+6	; 0x06
    225e:	ef 80       	ldd	r14, Y+7	; 0x07
    2260:	f8 84       	ldd	r15, Y+8	; 0x08
    2262:	a2 ce       	rjmp	.-700    	; 0x1fa8 <get_fat.part.4+0x210>
    2264:	ac 85       	ldd	r26, Y+12	; 0x0c
    2266:	bd 85       	ldd	r27, Y+13	; 0x0d
    2268:	9e 96       	adiw	r26, 0x2e	; 46
    226a:	4d 92       	st	X+, r4
    226c:	5d 92       	st	X+, r5
    226e:	6d 92       	st	X+, r6
    2270:	7c 92       	st	X, r7
    2272:	d1 97       	sbiw	r26, 0x31	; 49
    2274:	fd 01       	movw	r30, r26
    2276:	cc 0c       	add	r12, r12
    2278:	dd 1c       	adc	r13, r13
    227a:	ee 1c       	adc	r14, r14
    227c:	ff 1c       	adc	r15, r15
    227e:	cc 0c       	add	r12, r12
    2280:	dd 1c       	adc	r13, r13
    2282:	ee 1c       	adc	r14, r14
    2284:	ff 1c       	adc	r15, r15
    2286:	bc ef       	ldi	r27, 0xFC	; 252
    2288:	cb 22       	and	r12, r27
    228a:	b1 e0       	ldi	r27, 0x01	; 1
    228c:	db 22       	and	r13, r27
    228e:	ee 24       	eor	r14, r14
    2290:	ff 24       	eor	r15, r15
    2292:	ec 0d       	add	r30, r12
    2294:	fd 1d       	adc	r31, r13
    2296:	62 a9       	ldd	r22, Z+50	; 0x32
    2298:	73 a9       	ldd	r23, Z+51	; 0x33
    229a:	84 a9       	ldd	r24, Z+52	; 0x34
    229c:	95 a9       	ldd	r25, Z+53	; 0x35
    229e:	9f 70       	andi	r25, 0x0F	; 15
    22a0:	a4 cd       	rjmp	.-1208   	; 0x1dea <get_fat.part.4+0x52>
    22a2:	4a 01       	movw	r8, r20
    22a4:	5b 01       	movw	r10, r22
    22a6:	2c 01       	movw	r4, r24
    22a8:	3d 01       	movw	r6, r26
    22aa:	0c 85       	ldd	r16, Y+12	; 0x0c
    22ac:	1d 85       	ldd	r17, Y+13	; 0x0d
    22ae:	04 ce       	rjmp	.-1016   	; 0x1eb8 <get_fat.part.4+0x120>
    22b0:	d2 96       	adiw	r26, 0x32	; 50
    22b2:	a9 87       	std	Y+9, r26	; 0x09
    22b4:	ba 87       	std	Y+10, r27	; 0x0a
    22b6:	01 e0       	ldi	r16, 0x01	; 1
    22b8:	10 e0       	ldi	r17, 0x00	; 0
    22ba:	29 81       	ldd	r18, Y+1	; 0x01
    22bc:	3a 81       	ldd	r19, Y+2	; 0x02
    22be:	4b 81       	ldd	r20, Y+3	; 0x03
    22c0:	5c 81       	ldd	r21, Y+4	; 0x04
    22c2:	bd 01       	movw	r22, r26
    22c4:	81 81       	ldd	r24, Z+1	; 0x01
    22c6:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    22ca:	81 11       	cpse	r24, r1
    22cc:	85 ce       	rjmp	.-758    	; 0x1fd8 <get_fat.part.4+0x240>
    22ce:	ac 85       	ldd	r26, Y+12	; 0x0c
    22d0:	bd 85       	ldd	r27, Y+13	; 0x0d
    22d2:	14 96       	adiw	r26, 0x04	; 4
    22d4:	1c 92       	st	X, r1
    22d6:	14 97       	sbiw	r26, 0x04	; 4
    22d8:	5a 96       	adiw	r26, 0x1a	; 26
    22da:	4d 91       	ld	r20, X+
    22dc:	5d 91       	ld	r21, X+
    22de:	6d 91       	ld	r22, X+
    22e0:	7c 91       	ld	r23, X
    22e2:	5d 97       	sbiw	r26, 0x1d	; 29
    22e4:	fd 01       	movw	r30, r26
    22e6:	82 a1       	ldd	r24, Z+34	; 0x22
    22e8:	93 a1       	ldd	r25, Z+35	; 0x23
    22ea:	a4 a1       	ldd	r26, Z+36	; 0x24
    22ec:	b5 a1       	ldd	r27, Z+37	; 0x25
    22ee:	09 81       	ldd	r16, Y+1	; 0x01
    22f0:	1a 81       	ldd	r17, Y+2	; 0x02
    22f2:	2b 81       	ldd	r18, Y+3	; 0x03
    22f4:	3c 81       	ldd	r19, Y+4	; 0x04
    22f6:	08 1b       	sub	r16, r24
    22f8:	19 0b       	sbc	r17, r25
    22fa:	2a 0b       	sbc	r18, r26
    22fc:	3b 0b       	sbc	r19, r27
    22fe:	04 17       	cp	r16, r20
    2300:	15 07       	cpc	r17, r21
    2302:	26 07       	cpc	r18, r22
    2304:	37 07       	cpc	r19, r23
    2306:	08 f0       	brcs	.+2      	; 0x230a <get_fat.part.4+0x572>
    2308:	fe cd       	rjmp	.-1028   	; 0x1f06 <get_fat.part.4+0x16e>
    230a:	83 81       	ldd	r24, Z+3	; 0x03
    230c:	28 2e       	mov	r2, r24
    230e:	31 2c       	mov	r3, r1
    2310:	12 e0       	ldi	r17, 0x02	; 2
    2312:	21 16       	cp	r2, r17
    2314:	31 04       	cpc	r3, r1
    2316:	08 f4       	brcc	.+2      	; 0x231a <get_fat.part.4+0x582>
    2318:	f6 cd       	rjmp	.-1044   	; 0x1f06 <get_fat.part.4+0x16e>
    231a:	c9 82       	std	Y+1, r12	; 0x01
    231c:	da 82       	std	Y+2, r13	; 0x02
    231e:	eb 82       	std	Y+3, r14	; 0x03
    2320:	fc 82       	std	Y+4, r15	; 0x04
    2322:	e9 84       	ldd	r14, Y+9	; 0x09
    2324:	fa 84       	ldd	r15, Y+10	; 0x0a
    2326:	ac 85       	ldd	r26, Y+12	; 0x0c
    2328:	bd 85       	ldd	r27, Y+13	; 0x0d
    232a:	08 c0       	rjmp	.+16     	; 0x233c <get_fat.part.4+0x5a4>
    232c:	ac 85       	ldd	r26, Y+12	; 0x0c
    232e:	bd 85       	ldd	r27, Y+13	; 0x0d
    2330:	5a 96       	adiw	r26, 0x1a	; 26
    2332:	4d 91       	ld	r20, X+
    2334:	5d 91       	ld	r21, X+
    2336:	6d 91       	ld	r22, X+
    2338:	7c 91       	ld	r23, X
    233a:	5d 97       	sbiw	r26, 0x1d	; 29
    233c:	84 0e       	add	r8, r20
    233e:	95 1e       	adc	r9, r21
    2340:	a6 1e       	adc	r10, r22
    2342:	b7 1e       	adc	r11, r23
    2344:	01 e0       	ldi	r16, 0x01	; 1
    2346:	10 e0       	ldi	r17, 0x00	; 0
    2348:	a5 01       	movw	r20, r10
    234a:	94 01       	movw	r18, r8
    234c:	b7 01       	movw	r22, r14
    234e:	11 96       	adiw	r26, 0x01	; 1
    2350:	8c 91       	ld	r24, X
    2352:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2356:	b1 e0       	ldi	r27, 0x01	; 1
    2358:	2b 1a       	sub	r2, r27
    235a:	31 08       	sbc	r3, r1
    235c:	e1 e0       	ldi	r30, 0x01	; 1
    235e:	2e 16       	cp	r2, r30
    2360:	31 04       	cpc	r3, r1
    2362:	21 f7       	brne	.-56     	; 0x232c <get_fat.part.4+0x594>
    2364:	c9 80       	ldd	r12, Y+1	; 0x01
    2366:	da 80       	ldd	r13, Y+2	; 0x02
    2368:	eb 80       	ldd	r14, Y+3	; 0x03
    236a:	fc 80       	ldd	r15, Y+4	; 0x04
    236c:	cc cd       	rjmp	.-1128   	; 0x1f06 <get_fat.part.4+0x16e>
    236e:	7f 70       	andi	r23, 0x0F	; 15
    2370:	80 e0       	ldi	r24, 0x00	; 0
    2372:	90 e0       	ldi	r25, 0x00	; 0
    2374:	3a cd       	rjmp	.-1420   	; 0x1dea <get_fat.part.4+0x52>

00002376 <dir_sdi>:
    2376:	8f 92       	push	r8
    2378:	9f 92       	push	r9
    237a:	af 92       	push	r10
    237c:	bf 92       	push	r11
    237e:	cf 92       	push	r12
    2380:	df 92       	push	r13
    2382:	ef 92       	push	r14
    2384:	ff 92       	push	r15
    2386:	0f 93       	push	r16
    2388:	1f 93       	push	r17
    238a:	cf 93       	push	r28
    238c:	df 93       	push	r29
    238e:	8c 01       	movw	r16, r24
    2390:	eb 01       	movw	r28, r22
    2392:	dc 01       	movw	r26, r24
    2394:	14 96       	adiw	r26, 0x04	; 4
    2396:	6d 93       	st	X+, r22
    2398:	7c 93       	st	X, r23
    239a:	15 97       	sbiw	r26, 0x05	; 5
    239c:	16 96       	adiw	r26, 0x06	; 6
    239e:	cd 90       	ld	r12, X+
    23a0:	dd 90       	ld	r13, X+
    23a2:	ed 90       	ld	r14, X+
    23a4:	fc 90       	ld	r15, X
    23a6:	19 97       	sbiw	r26, 0x09	; 9
    23a8:	b1 e0       	ldi	r27, 0x01	; 1
    23aa:	cb 16       	cp	r12, r27
    23ac:	d1 04       	cpc	r13, r1
    23ae:	e1 04       	cpc	r14, r1
    23b0:	f1 04       	cpc	r15, r1
    23b2:	61 f0       	breq	.+24     	; 0x23cc <dir_sdi+0x56>
    23b4:	dc 01       	movw	r26, r24
    23b6:	ed 91       	ld	r30, X+
    23b8:	fc 91       	ld	r31, X
    23ba:	86 89       	ldd	r24, Z+22	; 0x16
    23bc:	97 89       	ldd	r25, Z+23	; 0x17
    23be:	a0 8d       	ldd	r26, Z+24	; 0x18
    23c0:	b1 8d       	ldd	r27, Z+25	; 0x19
    23c2:	c8 16       	cp	r12, r24
    23c4:	d9 06       	cpc	r13, r25
    23c6:	ea 06       	cpc	r14, r26
    23c8:	fb 06       	cpc	r15, r27
    23ca:	70 f0       	brcs	.+28     	; 0x23e8 <dir_sdi+0x72>
    23cc:	82 e0       	ldi	r24, 0x02	; 2
    23ce:	df 91       	pop	r29
    23d0:	cf 91       	pop	r28
    23d2:	1f 91       	pop	r17
    23d4:	0f 91       	pop	r16
    23d6:	ff 90       	pop	r15
    23d8:	ef 90       	pop	r14
    23da:	df 90       	pop	r13
    23dc:	cf 90       	pop	r12
    23de:	bf 90       	pop	r11
    23e0:	af 90       	pop	r10
    23e2:	9f 90       	pop	r9
    23e4:	8f 90       	pop	r8
    23e6:	08 95       	ret
    23e8:	c1 14       	cp	r12, r1
    23ea:	d1 04       	cpc	r13, r1
    23ec:	e1 04       	cpc	r14, r1
    23ee:	f1 04       	cpc	r15, r1
    23f0:	09 f0       	breq	.+2      	; 0x23f4 <dir_sdi+0x7e>
    23f2:	4a c0       	rjmp	.+148    	; 0x2488 <dir_sdi+0x112>
    23f4:	20 81       	ld	r18, Z
    23f6:	23 30       	cpi	r18, 0x03	; 3
    23f8:	d9 f1       	breq	.+118    	; 0x2470 <dir_sdi+0xfa>
    23fa:	80 85       	ldd	r24, Z+8	; 0x08
    23fc:	91 85       	ldd	r25, Z+9	; 0x09
    23fe:	c8 17       	cp	r28, r24
    2400:	d9 07       	cpc	r29, r25
    2402:	20 f7       	brcc	.-56     	; 0x23cc <dir_sdi+0x56>
    2404:	66 a1       	ldd	r22, Z+38	; 0x26
    2406:	77 a1       	ldd	r23, Z+39	; 0x27
    2408:	80 a5       	ldd	r24, Z+40	; 0x28
    240a:	91 a5       	ldd	r25, Z+41	; 0x29
    240c:	d8 01       	movw	r26, r16
    240e:	1a 96       	adiw	r26, 0x0a	; 10
    2410:	cd 92       	st	X+, r12
    2412:	dd 92       	st	X+, r13
    2414:	ed 92       	st	X+, r14
    2416:	fc 92       	st	X, r15
    2418:	1d 97       	sbiw	r26, 0x0d	; 13
    241a:	61 15       	cp	r22, r1
    241c:	71 05       	cpc	r23, r1
    241e:	81 05       	cpc	r24, r1
    2420:	91 05       	cpc	r25, r1
    2422:	a1 f2       	breq	.-88     	; 0x23cc <dir_sdi+0x56>
    2424:	9e 01       	movw	r18, r28
    2426:	32 95       	swap	r19
    2428:	22 95       	swap	r18
    242a:	2f 70       	andi	r18, 0x0F	; 15
    242c:	23 27       	eor	r18, r19
    242e:	3f 70       	andi	r19, 0x0F	; 15
    2430:	23 27       	eor	r18, r19
    2432:	ab 01       	movw	r20, r22
    2434:	bc 01       	movw	r22, r24
    2436:	42 0f       	add	r20, r18
    2438:	53 1f       	adc	r21, r19
    243a:	61 1d       	adc	r22, r1
    243c:	71 1d       	adc	r23, r1
    243e:	1e 96       	adiw	r26, 0x0e	; 14
    2440:	4d 93       	st	X+, r20
    2442:	5d 93       	st	X+, r21
    2444:	6d 93       	st	X+, r22
    2446:	7c 93       	st	X, r23
    2448:	51 97       	sbiw	r26, 0x11	; 17
    244a:	cf 70       	andi	r28, 0x0F	; 15
    244c:	dd 27       	eor	r29, r29
    244e:	cc 0f       	add	r28, r28
    2450:	dd 1f       	adc	r29, r29
    2452:	c2 95       	swap	r28
    2454:	d2 95       	swap	r29
    2456:	d0 7f       	andi	r29, 0xF0	; 240
    2458:	dc 27       	eor	r29, r28
    245a:	c0 7f       	andi	r28, 0xF0	; 240
    245c:	dc 27       	eor	r29, r28
    245e:	e2 96       	adiw	r28, 0x32	; 50
    2460:	ce 0f       	add	r28, r30
    2462:	df 1f       	adc	r29, r31
    2464:	52 96       	adiw	r26, 0x12	; 18
    2466:	cd 93       	st	X+, r28
    2468:	dc 93       	st	X, r29
    246a:	53 97       	sbiw	r26, 0x13	; 19
    246c:	80 e0       	ldi	r24, 0x00	; 0
    246e:	af cf       	rjmp	.-162    	; 0x23ce <dir_sdi+0x58>
    2470:	46 a1       	ldd	r20, Z+38	; 0x26
    2472:	57 a1       	ldd	r21, Z+39	; 0x27
    2474:	60 a5       	ldd	r22, Z+40	; 0x28
    2476:	71 a5       	ldd	r23, Z+41	; 0x29
    2478:	41 15       	cp	r20, r1
    247a:	51 05       	cpc	r21, r1
    247c:	61 05       	cpc	r22, r1
    247e:	71 05       	cpc	r23, r1
    2480:	09 f4       	brne	.+2      	; 0x2484 <dir_sdi+0x10e>
    2482:	bb cf       	rjmp	.-138    	; 0x23fa <dir_sdi+0x84>
    2484:	6a 01       	movw	r12, r20
    2486:	7b 01       	movw	r14, r22
    2488:	a2 80       	ldd	r10, Z+2	; 0x02
    248a:	20 e1       	ldi	r18, 0x10	; 16
    248c:	a2 9e       	mul	r10, r18
    248e:	50 01       	movw	r10, r0
    2490:	11 24       	eor	r1, r1
    2492:	ca 15       	cp	r28, r10
    2494:	db 05       	cpc	r29, r11
    2496:	a8 f1       	brcs	.+106    	; 0x2502 <dir_sdi+0x18c>
    2498:	22 e0       	ldi	r18, 0x02	; 2
    249a:	c2 16       	cp	r12, r18
    249c:	d1 04       	cpc	r13, r1
    249e:	e1 04       	cpc	r14, r1
    24a0:	f1 04       	cpc	r15, r1
    24a2:	08 f4       	brcc	.+2      	; 0x24a6 <dir_sdi+0x130>
    24a4:	93 cf       	rjmp	.-218    	; 0x23cc <dir_sdi+0x56>
    24a6:	c8 16       	cp	r12, r24
    24a8:	d9 06       	cpc	r13, r25
    24aa:	ea 06       	cpc	r14, r26
    24ac:	fb 06       	cpc	r15, r27
    24ae:	08 f0       	brcs	.+2      	; 0x24b2 <dir_sdi+0x13c>
    24b0:	8d cf       	rjmp	.-230    	; 0x23cc <dir_sdi+0x56>
    24b2:	19 c0       	rjmp	.+50     	; 0x24e6 <dir_sdi+0x170>
    24b4:	a2 e0       	ldi	r26, 0x02	; 2
    24b6:	ca 16       	cp	r12, r26
    24b8:	d1 04       	cpc	r13, r1
    24ba:	e1 04       	cpc	r14, r1
    24bc:	f1 04       	cpc	r15, r1
    24be:	08 f4       	brcc	.+2      	; 0x24c2 <dir_sdi+0x14c>
    24c0:	85 cf       	rjmp	.-246    	; 0x23cc <dir_sdi+0x56>
    24c2:	d8 01       	movw	r26, r16
    24c4:	ed 91       	ld	r30, X+
    24c6:	fc 91       	ld	r31, X
    24c8:	86 89       	ldd	r24, Z+22	; 0x16
    24ca:	97 89       	ldd	r25, Z+23	; 0x17
    24cc:	a0 8d       	ldd	r26, Z+24	; 0x18
    24ce:	b1 8d       	ldd	r27, Z+25	; 0x19
    24d0:	c8 16       	cp	r12, r24
    24d2:	d9 06       	cpc	r13, r25
    24d4:	ea 06       	cpc	r14, r26
    24d6:	fb 06       	cpc	r15, r27
    24d8:	08 f0       	brcs	.+2      	; 0x24dc <dir_sdi+0x166>
    24da:	78 cf       	rjmp	.-272    	; 0x23cc <dir_sdi+0x56>
    24dc:	ca 19       	sub	r28, r10
    24de:	db 09       	sbc	r29, r11
    24e0:	ca 15       	cp	r28, r10
    24e2:	db 05       	cpc	r29, r11
    24e4:	70 f0       	brcs	.+28     	; 0x2502 <dir_sdi+0x18c>
    24e6:	b7 01       	movw	r22, r14
    24e8:	a6 01       	movw	r20, r12
    24ea:	cf 01       	movw	r24, r30
    24ec:	55 dc       	rcall	.-1878   	; 0x1d98 <get_fat.part.4>
    24ee:	6b 01       	movw	r12, r22
    24f0:	7c 01       	movw	r14, r24
    24f2:	8f ef       	ldi	r24, 0xFF	; 255
    24f4:	c8 16       	cp	r12, r24
    24f6:	d8 06       	cpc	r13, r24
    24f8:	e8 06       	cpc	r14, r24
    24fa:	f8 06       	cpc	r15, r24
    24fc:	d9 f6       	brne	.-74     	; 0x24b4 <dir_sdi+0x13e>
    24fe:	81 e0       	ldi	r24, 0x01	; 1
    2500:	66 cf       	rjmp	.-308    	; 0x23ce <dir_sdi+0x58>
    2502:	a7 01       	movw	r20, r14
    2504:	96 01       	movw	r18, r12
    2506:	22 50       	subi	r18, 0x02	; 2
    2508:	31 09       	sbc	r19, r1
    250a:	41 09       	sbc	r20, r1
    250c:	51 09       	sbc	r21, r1
    250e:	02 97       	sbiw	r24, 0x02	; 2
    2510:	a1 09       	sbc	r26, r1
    2512:	b1 09       	sbc	r27, r1
    2514:	28 17       	cp	r18, r24
    2516:	39 07       	cpc	r19, r25
    2518:	4a 07       	cpc	r20, r26
    251a:	5b 07       	cpc	r21, r27
    251c:	68 f4       	brcc	.+26     	; 0x2538 <dir_sdi+0x1c2>
    251e:	a2 81       	ldd	r26, Z+2	; 0x02
    2520:	b0 e0       	ldi	r27, 0x00	; 0
    2522:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    2526:	82 a4       	ldd	r8, Z+42	; 0x2a
    2528:	93 a4       	ldd	r9, Z+43	; 0x2b
    252a:	a4 a4       	ldd	r10, Z+44	; 0x2c
    252c:	b5 a4       	ldd	r11, Z+45	; 0x2d
    252e:	68 0d       	add	r22, r8
    2530:	79 1d       	adc	r23, r9
    2532:	8a 1d       	adc	r24, r10
    2534:	9b 1d       	adc	r25, r11
    2536:	6a cf       	rjmp	.-300    	; 0x240c <dir_sdi+0x96>
    2538:	f8 01       	movw	r30, r16
    253a:	c2 86       	std	Z+10, r12	; 0x0a
    253c:	d3 86       	std	Z+11, r13	; 0x0b
    253e:	e4 86       	std	Z+12, r14	; 0x0c
    2540:	f5 86       	std	Z+13, r15	; 0x0d
    2542:	44 cf       	rjmp	.-376    	; 0x23cc <dir_sdi+0x56>

00002544 <create_chain>:
    2544:	2f 92       	push	r2
    2546:	3f 92       	push	r3
    2548:	4f 92       	push	r4
    254a:	5f 92       	push	r5
    254c:	6f 92       	push	r6
    254e:	7f 92       	push	r7
    2550:	8f 92       	push	r8
    2552:	9f 92       	push	r9
    2554:	af 92       	push	r10
    2556:	bf 92       	push	r11
    2558:	cf 92       	push	r12
    255a:	df 92       	push	r13
    255c:	ef 92       	push	r14
    255e:	ff 92       	push	r15
    2560:	0f 93       	push	r16
    2562:	1f 93       	push	r17
    2564:	cf 93       	push	r28
    2566:	df 93       	push	r29
    2568:	cd b7       	in	r28, 0x3d	; 61
    256a:	de b7       	in	r29, 0x3e	; 62
    256c:	6a 97       	sbiw	r28, 0x1a	; 26
    256e:	cd bf       	out	0x3d, r28	; 61
    2570:	de bf       	out	0x3e, r29	; 62
    2572:	5c 01       	movw	r10, r24
    2574:	49 87       	std	Y+9, r20	; 0x09
    2576:	5a 87       	std	Y+10, r21	; 0x0a
    2578:	6b 87       	std	Y+11, r22	; 0x0b
    257a:	7c 87       	std	Y+12, r23	; 0x0c
    257c:	45 2b       	or	r20, r21
    257e:	46 2b       	or	r20, r22
    2580:	47 2b       	or	r20, r23
    2582:	09 f0       	breq	.+2      	; 0x2586 <create_chain+0x42>
    2584:	d9 c0       	rjmp	.+434    	; 0x2738 <create_chain+0x1f4>
    2586:	dc 01       	movw	r26, r24
    2588:	1a 96       	adiw	r26, 0x0a	; 10
    258a:	0d 91       	ld	r16, X+
    258c:	1d 91       	ld	r17, X+
    258e:	2d 91       	ld	r18, X+
    2590:	3c 91       	ld	r19, X
    2592:	1d 97       	sbiw	r26, 0x0d	; 13
    2594:	09 83       	std	Y+1, r16	; 0x01
    2596:	1a 83       	std	Y+2, r17	; 0x02
    2598:	2b 83       	std	Y+3, r18	; 0x03
    259a:	3c 83       	std	Y+4, r19	; 0x04
    259c:	01 15       	cp	r16, r1
    259e:	11 05       	cpc	r17, r1
    25a0:	21 05       	cpc	r18, r1
    25a2:	31 05       	cpc	r19, r1
    25a4:	09 f0       	breq	.+2      	; 0x25a8 <create_chain+0x64>
    25a6:	fb c0       	rjmp	.+502    	; 0x279e <create_chain+0x25a>
    25a8:	56 96       	adiw	r26, 0x16	; 22
    25aa:	8d 91       	ld	r24, X+
    25ac:	9d 91       	ld	r25, X+
    25ae:	0d 90       	ld	r0, X+
    25b0:	bc 91       	ld	r27, X
    25b2:	a0 2d       	mov	r26, r0
    25b4:	01 e0       	ldi	r16, 0x01	; 1
    25b6:	10 e0       	ldi	r17, 0x00	; 0
    25b8:	20 e0       	ldi	r18, 0x00	; 0
    25ba:	30 e0       	ldi	r19, 0x00	; 0
    25bc:	09 83       	std	Y+1, r16	; 0x01
    25be:	1a 83       	std	Y+2, r17	; 0x02
    25c0:	2b 83       	std	Y+3, r18	; 0x03
    25c2:	3c 83       	std	Y+4, r19	; 0x04
    25c4:	28 01       	movw	r4, r16
    25c6:	39 01       	movw	r6, r18
    25c8:	15 01       	movw	r2, r10
    25ca:	32 e3       	ldi	r19, 0x32	; 50
    25cc:	23 0e       	add	r2, r19
    25ce:	31 1c       	adc	r3, r1
    25d0:	a9 8e       	std	Y+25, r10	; 0x19
    25d2:	ba 8e       	std	Y+26, r11	; 0x1a
    25d4:	4f ef       	ldi	r20, 0xFF	; 255
    25d6:	44 1a       	sub	r4, r20
    25d8:	54 0a       	sbc	r5, r20
    25da:	64 0a       	sbc	r6, r20
    25dc:	74 0a       	sbc	r7, r20
    25de:	48 16       	cp	r4, r24
    25e0:	59 06       	cpc	r5, r25
    25e2:	6a 06       	cpc	r6, r26
    25e4:	7b 06       	cpc	r7, r27
    25e6:	08 f4       	brcc	.+2      	; 0x25ea <create_chain+0xa6>
    25e8:	f0 c0       	rjmp	.+480    	; 0x27ca <create_chain+0x286>
    25ea:	09 81       	ldd	r16, Y+1	; 0x01
    25ec:	1a 81       	ldd	r17, Y+2	; 0x02
    25ee:	2b 81       	ldd	r18, Y+3	; 0x03
    25f0:	3c 81       	ldd	r19, Y+4	; 0x04
    25f2:	02 30       	cpi	r16, 0x02	; 2
    25f4:	11 05       	cpc	r17, r1
    25f6:	21 05       	cpc	r18, r1
    25f8:	31 05       	cpc	r19, r1
    25fa:	08 f4       	brcc	.+2      	; 0x25fe <create_chain+0xba>
    25fc:	fd c2       	rjmp	.+1530   	; 0x2bf8 <create_chain+0x6b4>
    25fe:	03 97       	sbiw	r24, 0x03	; 3
    2600:	a1 05       	cpc	r26, r1
    2602:	b1 05       	cpc	r27, r1
    2604:	08 f4       	brcc	.+2      	; 0x2608 <create_chain+0xc4>
    2606:	ae c0       	rjmp	.+348    	; 0x2764 <create_chain+0x220>
    2608:	82 e0       	ldi	r24, 0x02	; 2
    260a:	48 2e       	mov	r4, r24
    260c:	51 2c       	mov	r5, r1
    260e:	61 2c       	mov	r6, r1
    2610:	71 2c       	mov	r7, r1
    2612:	a9 8d       	ldd	r26, Y+25	; 0x19
    2614:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2616:	8c 91       	ld	r24, X
    2618:	82 30       	cpi	r24, 0x02	; 2
    261a:	09 f4       	brne	.+2      	; 0x261e <create_chain+0xda>
    261c:	e2 c0       	rjmp	.+452    	; 0x27e2 <create_chain+0x29e>
    261e:	83 30       	cpi	r24, 0x03	; 3
    2620:	09 f4       	brne	.+2      	; 0x2624 <create_chain+0xe0>
    2622:	83 c1       	rjmp	.+774    	; 0x292a <create_chain+0x3e6>
    2624:	81 30       	cpi	r24, 0x01	; 1
    2626:	09 f0       	breq	.+2      	; 0x262a <create_chain+0xe6>
    2628:	9d c0       	rjmp	.+314    	; 0x2764 <create_chain+0x220>
    262a:	f2 01       	movw	r30, r4
    262c:	f6 95       	lsr	r31
    262e:	e7 95       	ror	r30
    2630:	e4 0d       	add	r30, r4
    2632:	f5 1d       	adc	r31, r5
    2634:	ed 83       	std	Y+5, r30	; 0x05
    2636:	fe 83       	std	Y+6, r31	; 0x06
    2638:	92 96       	adiw	r26, 0x22	; 34
    263a:	4d 91       	ld	r20, X+
    263c:	5d 91       	ld	r21, X+
    263e:	6d 91       	ld	r22, X+
    2640:	7c 91       	ld	r23, X
    2642:	95 97       	sbiw	r26, 0x25	; 37
    2644:	cf 01       	movw	r24, r30
    2646:	89 2f       	mov	r24, r25
    2648:	99 27       	eor	r25, r25
    264a:	86 95       	lsr	r24
    264c:	6a 01       	movw	r12, r20
    264e:	7b 01       	movw	r14, r22
    2650:	c8 0e       	add	r12, r24
    2652:	d9 1e       	adc	r13, r25
    2654:	e1 1c       	adc	r14, r1
    2656:	f1 1c       	adc	r15, r1
    2658:	9e 96       	adiw	r26, 0x2e	; 46
    265a:	8d 90       	ld	r8, X+
    265c:	9d 90       	ld	r9, X+
    265e:	ad 90       	ld	r10, X+
    2660:	bc 90       	ld	r11, X
    2662:	d1 97       	sbiw	r26, 0x31	; 49
    2664:	c8 14       	cp	r12, r8
    2666:	d9 04       	cpc	r13, r9
    2668:	ea 04       	cpc	r14, r10
    266a:	fb 04       	cpc	r15, r11
    266c:	09 f4       	brne	.+2      	; 0x2670 <create_chain+0x12c>
    266e:	bd c2       	rjmp	.+1402   	; 0x2bea <create_chain+0x6a6>
    2670:	14 96       	adiw	r26, 0x04	; 4
    2672:	8c 91       	ld	r24, X
    2674:	14 97       	sbiw	r26, 0x04	; 4
    2676:	81 11       	cpse	r24, r1
    2678:	61 c2       	rjmp	.+1218   	; 0x2b3c <create_chain+0x5f8>
    267a:	01 e0       	ldi	r16, 0x01	; 1
    267c:	10 e0       	ldi	r17, 0x00	; 0
    267e:	a7 01       	movw	r20, r14
    2680:	96 01       	movw	r18, r12
    2682:	b1 01       	movw	r22, r2
    2684:	e9 8d       	ldd	r30, Y+25	; 0x19
    2686:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2688:	81 81       	ldd	r24, Z+1	; 0x01
    268a:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    268e:	81 11       	cpse	r24, r1
    2690:	44 c0       	rjmp	.+136    	; 0x271a <create_chain+0x1d6>
    2692:	a9 8d       	ldd	r26, Y+25	; 0x19
    2694:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2696:	9e 96       	adiw	r26, 0x2e	; 46
    2698:	cd 92       	st	X+, r12
    269a:	dd 92       	st	X+, r13
    269c:	ed 92       	st	X+, r14
    269e:	fc 92       	st	X, r15
    26a0:	d1 97       	sbiw	r26, 0x31	; 49
    26a2:	92 96       	adiw	r26, 0x22	; 34
    26a4:	4d 91       	ld	r20, X+
    26a6:	5d 91       	ld	r21, X+
    26a8:	6d 91       	ld	r22, X+
    26aa:	7c 91       	ld	r23, X
    26ac:	95 97       	sbiw	r26, 0x25	; 37
    26ae:	c9 8a       	std	Y+17, r12	; 0x11
    26b0:	da 8a       	std	Y+18, r13	; 0x12
    26b2:	eb 8a       	std	Y+19, r14	; 0x13
    26b4:	fc 8a       	std	Y+20, r15	; 0x14
    26b6:	9d 01       	movw	r18, r26
    26b8:	0d 81       	ldd	r16, Y+5	; 0x05
    26ba:	1e 81       	ldd	r17, Y+6	; 0x06
    26bc:	0f 5f       	subi	r16, 0xFF	; 255
    26be:	1f 4f       	sbci	r17, 0xFF	; 255
    26c0:	0d 87       	std	Y+13, r16	; 0x0d
    26c2:	1e 87       	std	Y+14, r17	; 0x0e
    26c4:	ed 81       	ldd	r30, Y+5	; 0x05
    26c6:	fe 81       	ldd	r31, Y+6	; 0x06
    26c8:	f1 70       	andi	r31, 0x01	; 1
    26ca:	e2 0f       	add	r30, r18
    26cc:	f3 1f       	adc	r31, r19
    26ce:	92 a9       	ldd	r25, Z+50	; 0x32
    26d0:	9d 83       	std	Y+5, r25	; 0x05
    26d2:	c8 01       	movw	r24, r16
    26d4:	89 2f       	mov	r24, r25
    26d6:	99 27       	eor	r25, r25
    26d8:	86 95       	lsr	r24
    26da:	4a 01       	movw	r8, r20
    26dc:	5b 01       	movw	r10, r22
    26de:	88 0e       	add	r8, r24
    26e0:	99 1e       	adc	r9, r25
    26e2:	a1 1c       	adc	r10, r1
    26e4:	b1 1c       	adc	r11, r1
    26e6:	c8 14       	cp	r12, r8
    26e8:	d9 04       	cpc	r13, r9
    26ea:	ea 04       	cpc	r14, r10
    26ec:	fb 04       	cpc	r15, r11
    26ee:	09 f4       	brne	.+2      	; 0x26f2 <create_chain+0x1ae>
    26f0:	19 c3       	rjmp	.+1586   	; 0x2d24 <create_chain+0x7e0>
    26f2:	d9 01       	movw	r26, r18
    26f4:	14 96       	adiw	r26, 0x04	; 4
    26f6:	8c 91       	ld	r24, X
    26f8:	14 97       	sbiw	r26, 0x04	; 4
    26fa:	81 11       	cpse	r24, r1
    26fc:	b2 c2       	rjmp	.+1380   	; 0x2c62 <create_chain+0x71e>
    26fe:	01 e0       	ldi	r16, 0x01	; 1
    2700:	10 e0       	ldi	r17, 0x00	; 0
    2702:	a5 01       	movw	r20, r10
    2704:	94 01       	movw	r18, r8
    2706:	b1 01       	movw	r22, r2
    2708:	a9 8d       	ldd	r26, Y+25	; 0x19
    270a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    270c:	11 96       	adiw	r26, 0x01	; 1
    270e:	8c 91       	ld	r24, X
    2710:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    2714:	88 23       	and	r24, r24
    2716:	09 f4       	brne	.+2      	; 0x271a <create_chain+0x1d6>
    2718:	ff c2       	rjmp	.+1534   	; 0x2d18 <create_chain+0x7d4>
    271a:	a9 8c       	ldd	r10, Y+25	; 0x19
    271c:	ba 8c       	ldd	r11, Y+26	; 0x1a
    271e:	8f ef       	ldi	r24, 0xFF	; 255
    2720:	9f ef       	ldi	r25, 0xFF	; 255
    2722:	dc 01       	movw	r26, r24
    2724:	f5 01       	movw	r30, r10
    2726:	86 a7       	std	Z+46, r24	; 0x2e
    2728:	97 a7       	std	Z+47, r25	; 0x2f
    272a:	a0 ab       	std	Z+48, r26	; 0x30
    272c:	b1 ab       	std	Z+49, r27	; 0x31
    272e:	4f ef       	ldi	r20, 0xFF	; 255
    2730:	3f ef       	ldi	r19, 0xFF	; 255
    2732:	2f ef       	ldi	r18, 0xFF	; 255
    2734:	9f ef       	ldi	r25, 0xFF	; 255
    2736:	1a c0       	rjmp	.+52     	; 0x276c <create_chain+0x228>
    2738:	29 85       	ldd	r18, Y+9	; 0x09
    273a:	3a 85       	ldd	r19, Y+10	; 0x0a
    273c:	4b 85       	ldd	r20, Y+11	; 0x0b
    273e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2740:	22 30       	cpi	r18, 0x02	; 2
    2742:	31 05       	cpc	r19, r1
    2744:	41 05       	cpc	r20, r1
    2746:	51 05       	cpc	r21, r1
    2748:	68 f0       	brcs	.+26     	; 0x2764 <create_chain+0x220>
    274a:	89 01       	movw	r16, r18
    274c:	9a 01       	movw	r18, r20
    274e:	fc 01       	movw	r30, r24
    2750:	86 89       	ldd	r24, Z+22	; 0x16
    2752:	97 89       	ldd	r25, Z+23	; 0x17
    2754:	a0 8d       	ldd	r26, Z+24	; 0x18
    2756:	b1 8d       	ldd	r27, Z+25	; 0x19
    2758:	08 17       	cp	r16, r24
    275a:	19 07       	cpc	r17, r25
    275c:	2a 07       	cpc	r18, r26
    275e:	3b 07       	cpc	r19, r27
    2760:	08 f4       	brcc	.+2      	; 0x2764 <create_chain+0x220>
    2762:	54 c2       	rjmp	.+1192   	; 0x2c0c <create_chain+0x6c8>
    2764:	41 e0       	ldi	r20, 0x01	; 1
    2766:	30 e0       	ldi	r19, 0x00	; 0
    2768:	20 e0       	ldi	r18, 0x00	; 0
    276a:	90 e0       	ldi	r25, 0x00	; 0
    276c:	64 2f       	mov	r22, r20
    276e:	73 2f       	mov	r23, r19
    2770:	82 2f       	mov	r24, r18
    2772:	6a 96       	adiw	r28, 0x1a	; 26
    2774:	cd bf       	out	0x3d, r28	; 61
    2776:	de bf       	out	0x3e, r29	; 62
    2778:	df 91       	pop	r29
    277a:	cf 91       	pop	r28
    277c:	1f 91       	pop	r17
    277e:	0f 91       	pop	r16
    2780:	ff 90       	pop	r15
    2782:	ef 90       	pop	r14
    2784:	df 90       	pop	r13
    2786:	cf 90       	pop	r12
    2788:	bf 90       	pop	r11
    278a:	af 90       	pop	r10
    278c:	9f 90       	pop	r9
    278e:	8f 90       	pop	r8
    2790:	7f 90       	pop	r7
    2792:	6f 90       	pop	r6
    2794:	5f 90       	pop	r5
    2796:	4f 90       	pop	r4
    2798:	3f 90       	pop	r3
    279a:	2f 90       	pop	r2
    279c:	08 95       	ret
    279e:	fc 01       	movw	r30, r24
    27a0:	86 89       	ldd	r24, Z+22	; 0x16
    27a2:	97 89       	ldd	r25, Z+23	; 0x17
    27a4:	a0 8d       	ldd	r26, Z+24	; 0x18
    27a6:	b1 8d       	ldd	r27, Z+25	; 0x19
    27a8:	08 17       	cp	r16, r24
    27aa:	19 07       	cpc	r17, r25
    27ac:	2a 07       	cpc	r18, r26
    27ae:	3b 07       	cpc	r19, r27
    27b0:	08 f4       	brcc	.+2      	; 0x27b4 <create_chain+0x270>
    27b2:	27 c2       	rjmp	.+1102   	; 0x2c02 <create_chain+0x6be>
    27b4:	21 e0       	ldi	r18, 0x01	; 1
    27b6:	30 e0       	ldi	r19, 0x00	; 0
    27b8:	40 e0       	ldi	r20, 0x00	; 0
    27ba:	50 e0       	ldi	r21, 0x00	; 0
    27bc:	29 83       	std	Y+1, r18	; 0x01
    27be:	3a 83       	std	Y+2, r19	; 0x02
    27c0:	4b 83       	std	Y+3, r20	; 0x03
    27c2:	5c 83       	std	Y+4, r21	; 0x04
    27c4:	29 01       	movw	r4, r18
    27c6:	3a 01       	movw	r6, r20
    27c8:	ff ce       	rjmp	.-514    	; 0x25c8 <create_chain+0x84>
    27ca:	12 e0       	ldi	r17, 0x02	; 2
    27cc:	41 16       	cp	r4, r17
    27ce:	51 04       	cpc	r5, r1
    27d0:	61 04       	cpc	r6, r1
    27d2:	71 04       	cpc	r7, r1
    27d4:	38 f2       	brcs	.-114    	; 0x2764 <create_chain+0x220>
    27d6:	a9 8d       	ldd	r26, Y+25	; 0x19
    27d8:	ba 8d       	ldd	r27, Y+26	; 0x1a
    27da:	8c 91       	ld	r24, X
    27dc:	82 30       	cpi	r24, 0x02	; 2
    27de:	09 f0       	breq	.+2      	; 0x27e2 <create_chain+0x29e>
    27e0:	1e cf       	rjmp	.-452    	; 0x261e <create_chain+0xda>
    27e2:	fd 01       	movw	r30, r26
    27e4:	bb 24       	eor	r11, r11
    27e6:	a7 2c       	mov	r10, r7
    27e8:	96 2c       	mov	r9, r6
    27ea:	85 2c       	mov	r8, r5
    27ec:	82 a1       	ldd	r24, Z+34	; 0x22
    27ee:	93 a1       	ldd	r25, Z+35	; 0x23
    27f0:	a4 a1       	ldd	r26, Z+36	; 0x24
    27f2:	b5 a1       	ldd	r27, Z+37	; 0x25
    27f4:	88 0e       	add	r8, r24
    27f6:	99 1e       	adc	r9, r25
    27f8:	aa 1e       	adc	r10, r26
    27fa:	bb 1e       	adc	r11, r27
    27fc:	c6 a4       	ldd	r12, Z+46	; 0x2e
    27fe:	d7 a4       	ldd	r13, Z+47	; 0x2f
    2800:	e0 a8       	ldd	r14, Z+48	; 0x30
    2802:	f1 a8       	ldd	r15, Z+49	; 0x31
    2804:	8c 14       	cp	r8, r12
    2806:	9d 04       	cpc	r9, r13
    2808:	ae 04       	cpc	r10, r14
    280a:	bf 04       	cpc	r11, r15
    280c:	c9 f0       	breq	.+50     	; 0x2840 <create_chain+0x2fc>
    280e:	84 81       	ldd	r24, Z+4	; 0x04
    2810:	81 11       	cpse	r24, r1
    2812:	42 c1       	rjmp	.+644    	; 0x2a98 <create_chain+0x554>
    2814:	01 e0       	ldi	r16, 0x01	; 1
    2816:	10 e0       	ldi	r17, 0x00	; 0
    2818:	a5 01       	movw	r20, r10
    281a:	94 01       	movw	r18, r8
    281c:	b1 01       	movw	r22, r2
    281e:	a9 8d       	ldd	r26, Y+25	; 0x19
    2820:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2822:	11 96       	adiw	r26, 0x01	; 1
    2824:	8c 91       	ld	r24, X
    2826:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    282a:	81 11       	cpse	r24, r1
    282c:	76 cf       	rjmp	.-276    	; 0x271a <create_chain+0x1d6>
    282e:	a9 8d       	ldd	r26, Y+25	; 0x19
    2830:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2832:	9e 96       	adiw	r26, 0x2e	; 46
    2834:	8d 92       	st	X+, r8
    2836:	9d 92       	st	X+, r9
    2838:	ad 92       	st	X+, r10
    283a:	bc 92       	st	X, r11
    283c:	d1 97       	sbiw	r26, 0x31	; 49
    283e:	fd 01       	movw	r30, r26
    2840:	d3 01       	movw	r26, r6
    2842:	c2 01       	movw	r24, r4
    2844:	88 0f       	add	r24, r24
    2846:	99 1f       	adc	r25, r25
    2848:	aa 1f       	adc	r26, r26
    284a:	bb 1f       	adc	r27, r27
    284c:	8e 7f       	andi	r24, 0xFE	; 254
    284e:	91 70       	andi	r25, 0x01	; 1
    2850:	aa 27       	eor	r26, r26
    2852:	bb 27       	eor	r27, r27
    2854:	e8 0f       	add	r30, r24
    2856:	f9 1f       	adc	r31, r25
    2858:	82 a9       	ldd	r24, Z+50	; 0x32
    285a:	93 a9       	ldd	r25, Z+51	; 0x33
    285c:	a0 e0       	ldi	r26, 0x00	; 0
    285e:	b0 e0       	ldi	r27, 0x00	; 0
    2860:	00 97       	sbiw	r24, 0x00	; 0
    2862:	a1 05       	cpc	r26, r1
    2864:	b1 05       	cpc	r27, r1
    2866:	09 f0       	breq	.+2      	; 0x286a <create_chain+0x326>
    2868:	af c0       	rjmp	.+350    	; 0x29c8 <create_chain+0x484>
    286a:	a9 8c       	ldd	r10, Y+25	; 0x19
    286c:	ba 8c       	ldd	r11, Y+26	; 0x1a
    286e:	f5 01       	movw	r30, r10
    2870:	86 89       	ldd	r24, Z+22	; 0x16
    2872:	97 89       	ldd	r25, Z+23	; 0x17
    2874:	a0 8d       	ldd	r26, Z+24	; 0x18
    2876:	b1 8d       	ldd	r27, Z+25	; 0x19
    2878:	48 16       	cp	r4, r24
    287a:	59 06       	cpc	r5, r25
    287c:	6a 06       	cpc	r6, r26
    287e:	7b 06       	cpc	r7, r27
    2880:	08 f0       	brcs	.+2      	; 0x2884 <create_chain+0x340>
    2882:	70 cf       	rjmp	.-288    	; 0x2764 <create_chain+0x220>
    2884:	0f ef       	ldi	r16, 0xFF	; 255
    2886:	1f ef       	ldi	r17, 0xFF	; 255
    2888:	2f ef       	ldi	r18, 0xFF	; 255
    288a:	3f e0       	ldi	r19, 0x0F	; 15
    288c:	b3 01       	movw	r22, r6
    288e:	a2 01       	movw	r20, r4
    2890:	c5 01       	movw	r24, r10
    2892:	0e 94 90 0b 	call	0x1720	; 0x1720 <put_fat.part.6>
    2896:	81 11       	cpse	r24, r1
    2898:	60 c2       	rjmp	.+1216   	; 0x2d5a <create_chain+0x816>
    289a:	09 85       	ldd	r16, Y+9	; 0x09
    289c:	1a 85       	ldd	r17, Y+10	; 0x0a
    289e:	2b 85       	ldd	r18, Y+11	; 0x0b
    28a0:	3c 85       	ldd	r19, Y+12	; 0x0c
    28a2:	01 15       	cp	r16, r1
    28a4:	11 05       	cpc	r17, r1
    28a6:	21 05       	cpc	r18, r1
    28a8:	31 05       	cpc	r19, r1
    28aa:	e1 f0       	breq	.+56     	; 0x28e4 <create_chain+0x3a0>
    28ac:	02 30       	cpi	r16, 0x02	; 2
    28ae:	11 05       	cpc	r17, r1
    28b0:	21 05       	cpc	r18, r1
    28b2:	31 05       	cpc	r19, r1
    28b4:	08 f4       	brcc	.+2      	; 0x28b8 <create_chain+0x374>
    28b6:	56 cf       	rjmp	.-340    	; 0x2764 <create_chain+0x220>
    28b8:	f5 01       	movw	r30, r10
    28ba:	86 89       	ldd	r24, Z+22	; 0x16
    28bc:	97 89       	ldd	r25, Z+23	; 0x17
    28be:	a0 8d       	ldd	r26, Z+24	; 0x18
    28c0:	b1 8d       	ldd	r27, Z+25	; 0x19
    28c2:	08 17       	cp	r16, r24
    28c4:	19 07       	cpc	r17, r25
    28c6:	2a 07       	cpc	r18, r26
    28c8:	3b 07       	cpc	r19, r27
    28ca:	08 f0       	brcs	.+2      	; 0x28ce <create_chain+0x38a>
    28cc:	4b cf       	rjmp	.-362    	; 0x2764 <create_chain+0x220>
    28ce:	93 01       	movw	r18, r6
    28d0:	82 01       	movw	r16, r4
    28d2:	49 85       	ldd	r20, Y+9	; 0x09
    28d4:	5a 85       	ldd	r21, Y+10	; 0x0a
    28d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    28d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    28da:	c5 01       	movw	r24, r10
    28dc:	0e 94 90 0b 	call	0x1720	; 0x1720 <put_fat.part.6>
    28e0:	81 11       	cpse	r24, r1
    28e2:	3b c2       	rjmp	.+1142   	; 0x2d5a <create_chain+0x816>
    28e4:	d5 01       	movw	r26, r10
    28e6:	1a 96       	adiw	r26, 0x0a	; 10
    28e8:	4d 92       	st	X+, r4
    28ea:	5d 92       	st	X+, r5
    28ec:	6d 92       	st	X+, r6
    28ee:	7c 92       	st	X, r7
    28f0:	1d 97       	sbiw	r26, 0x0d	; 13
    28f2:	1e 96       	adiw	r26, 0x0e	; 14
    28f4:	8d 91       	ld	r24, X+
    28f6:	9d 91       	ld	r25, X+
    28f8:	0d 90       	ld	r0, X+
    28fa:	bc 91       	ld	r27, X
    28fc:	a0 2d       	mov	r26, r0
    28fe:	8f 3f       	cpi	r24, 0xFF	; 255
    2900:	ef ef       	ldi	r30, 0xFF	; 255
    2902:	9e 07       	cpc	r25, r30
    2904:	ae 07       	cpc	r26, r30
    2906:	be 07       	cpc	r27, r30
    2908:	59 f0       	breq	.+22     	; 0x2920 <create_chain+0x3dc>
    290a:	01 97       	sbiw	r24, 0x01	; 1
    290c:	a1 09       	sbc	r26, r1
    290e:	b1 09       	sbc	r27, r1
    2910:	f5 01       	movw	r30, r10
    2912:	86 87       	std	Z+14, r24	; 0x0e
    2914:	97 87       	std	Z+15, r25	; 0x0f
    2916:	a0 8b       	std	Z+16, r26	; 0x10
    2918:	b1 8b       	std	Z+17, r27	; 0x11
    291a:	85 81       	ldd	r24, Z+5	; 0x05
    291c:	81 60       	ori	r24, 0x01	; 1
    291e:	85 83       	std	Z+5, r24	; 0x05
    2920:	44 2d       	mov	r20, r4
    2922:	35 2d       	mov	r19, r5
    2924:	26 2d       	mov	r18, r6
    2926:	97 2d       	mov	r25, r7
    2928:	21 cf       	rjmp	.-446    	; 0x276c <create_chain+0x228>
    292a:	53 01       	movw	r10, r6
    292c:	42 01       	movw	r8, r4
    292e:	77 e0       	ldi	r23, 0x07	; 7
    2930:	b6 94       	lsr	r11
    2932:	a7 94       	ror	r10
    2934:	97 94       	ror	r9
    2936:	87 94       	ror	r8
    2938:	7a 95       	dec	r23
    293a:	d1 f7       	brne	.-12     	; 0x2930 <create_chain+0x3ec>
    293c:	e9 8d       	ldd	r30, Y+25	; 0x19
    293e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2940:	82 a1       	ldd	r24, Z+34	; 0x22
    2942:	93 a1       	ldd	r25, Z+35	; 0x23
    2944:	a4 a1       	ldd	r26, Z+36	; 0x24
    2946:	b5 a1       	ldd	r27, Z+37	; 0x25
    2948:	88 0e       	add	r8, r24
    294a:	99 1e       	adc	r9, r25
    294c:	aa 1e       	adc	r10, r26
    294e:	bb 1e       	adc	r11, r27
    2950:	c6 a4       	ldd	r12, Z+46	; 0x2e
    2952:	d7 a4       	ldd	r13, Z+47	; 0x2f
    2954:	e0 a8       	ldd	r14, Z+48	; 0x30
    2956:	f1 a8       	ldd	r15, Z+49	; 0x31
    2958:	8c 14       	cp	r8, r12
    295a:	9d 04       	cpc	r9, r13
    295c:	ae 04       	cpc	r10, r14
    295e:	bf 04       	cpc	r11, r15
    2960:	c9 f0       	breq	.+50     	; 0x2994 <create_chain+0x450>
    2962:	84 81       	ldd	r24, Z+4	; 0x04
    2964:	81 11       	cpse	r24, r1
    2966:	46 c0       	rjmp	.+140    	; 0x29f4 <create_chain+0x4b0>
    2968:	01 e0       	ldi	r16, 0x01	; 1
    296a:	10 e0       	ldi	r17, 0x00	; 0
    296c:	a5 01       	movw	r20, r10
    296e:	94 01       	movw	r18, r8
    2970:	b1 01       	movw	r22, r2
    2972:	a9 8d       	ldd	r26, Y+25	; 0x19
    2974:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2976:	11 96       	adiw	r26, 0x01	; 1
    2978:	8c 91       	ld	r24, X
    297a:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    297e:	81 11       	cpse	r24, r1
    2980:	cc ce       	rjmp	.-616    	; 0x271a <create_chain+0x1d6>
    2982:	a9 8d       	ldd	r26, Y+25	; 0x19
    2984:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2986:	9e 96       	adiw	r26, 0x2e	; 46
    2988:	8d 92       	st	X+, r8
    298a:	9d 92       	st	X+, r9
    298c:	ad 92       	st	X+, r10
    298e:	bc 92       	st	X, r11
    2990:	d1 97       	sbiw	r26, 0x31	; 49
    2992:	fd 01       	movw	r30, r26
    2994:	d3 01       	movw	r26, r6
    2996:	c2 01       	movw	r24, r4
    2998:	88 0f       	add	r24, r24
    299a:	99 1f       	adc	r25, r25
    299c:	aa 1f       	adc	r26, r26
    299e:	bb 1f       	adc	r27, r27
    29a0:	88 0f       	add	r24, r24
    29a2:	99 1f       	adc	r25, r25
    29a4:	aa 1f       	adc	r26, r26
    29a6:	bb 1f       	adc	r27, r27
    29a8:	8c 7f       	andi	r24, 0xFC	; 252
    29aa:	91 70       	andi	r25, 0x01	; 1
    29ac:	aa 27       	eor	r26, r26
    29ae:	bb 27       	eor	r27, r27
    29b0:	e8 0f       	add	r30, r24
    29b2:	f9 1f       	adc	r31, r25
    29b4:	82 a9       	ldd	r24, Z+50	; 0x32
    29b6:	93 a9       	ldd	r25, Z+51	; 0x33
    29b8:	a4 a9       	ldd	r26, Z+52	; 0x34
    29ba:	b5 a9       	ldd	r27, Z+53	; 0x35
    29bc:	bf 70       	andi	r27, 0x0F	; 15
    29be:	00 97       	sbiw	r24, 0x00	; 0
    29c0:	a1 05       	cpc	r26, r1
    29c2:	b1 05       	cpc	r27, r1
    29c4:	09 f4       	brne	.+2      	; 0x29c8 <create_chain+0x484>
    29c6:	51 cf       	rjmp	.-350    	; 0x286a <create_chain+0x326>
    29c8:	01 97       	sbiw	r24, 0x01	; 1
    29ca:	a1 05       	cpc	r26, r1
    29cc:	b1 05       	cpc	r27, r1
    29ce:	09 f4       	brne	.+2      	; 0x29d2 <create_chain+0x48e>
    29d0:	c9 ce       	rjmp	.-622    	; 0x2764 <create_chain+0x220>
    29d2:	09 81       	ldd	r16, Y+1	; 0x01
    29d4:	1a 81       	ldd	r17, Y+2	; 0x02
    29d6:	2b 81       	ldd	r18, Y+3	; 0x03
    29d8:	3c 81       	ldd	r19, Y+4	; 0x04
    29da:	04 15       	cp	r16, r4
    29dc:	15 05       	cpc	r17, r5
    29de:	26 05       	cpc	r18, r6
    29e0:	37 05       	cpc	r19, r7
    29e2:	09 f4       	brne	.+2      	; 0x29e6 <create_chain+0x4a2>
    29e4:	09 c1       	rjmp	.+530    	; 0x2bf8 <create_chain+0x6b4>
    29e6:	e9 8d       	ldd	r30, Y+25	; 0x19
    29e8:	fa 8d       	ldd	r31, Y+26	; 0x1a
    29ea:	86 89       	ldd	r24, Z+22	; 0x16
    29ec:	97 89       	ldd	r25, Z+23	; 0x17
    29ee:	a0 8d       	ldd	r26, Z+24	; 0x18
    29f0:	b1 8d       	ldd	r27, Z+25	; 0x19
    29f2:	f0 cd       	rjmp	.-1056   	; 0x25d4 <create_chain+0x90>
    29f4:	01 e0       	ldi	r16, 0x01	; 1
    29f6:	10 e0       	ldi	r17, 0x00	; 0
    29f8:	a7 01       	movw	r20, r14
    29fa:	96 01       	movw	r18, r12
    29fc:	b1 01       	movw	r22, r2
    29fe:	81 81       	ldd	r24, Z+1	; 0x01
    2a00:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2a04:	81 11       	cpse	r24, r1
    2a06:	93 ce       	rjmp	.-730    	; 0x272e <create_chain+0x1ea>
    2a08:	a9 8d       	ldd	r26, Y+25	; 0x19
    2a0a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2a0c:	14 96       	adiw	r26, 0x04	; 4
    2a0e:	1c 92       	st	X, r1
    2a10:	14 97       	sbiw	r26, 0x04	; 4
    2a12:	fd 01       	movw	r30, r26
    2a14:	82 8d       	ldd	r24, Z+26	; 0x1a
    2a16:	93 8d       	ldd	r25, Z+27	; 0x1b
    2a18:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2a1a:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2a1c:	42 a1       	ldd	r20, Z+34	; 0x22
    2a1e:	53 a1       	ldd	r21, Z+35	; 0x23
    2a20:	64 a1       	ldd	r22, Z+36	; 0x24
    2a22:	75 a1       	ldd	r23, Z+37	; 0x25
    2a24:	97 01       	movw	r18, r14
    2a26:	86 01       	movw	r16, r12
    2a28:	04 1b       	sub	r16, r20
    2a2a:	15 0b       	sbc	r17, r21
    2a2c:	26 0b       	sbc	r18, r22
    2a2e:	37 0b       	sbc	r19, r23
    2a30:	08 17       	cp	r16, r24
    2a32:	19 07       	cpc	r17, r25
    2a34:	2a 07       	cpc	r18, r26
    2a36:	3b 07       	cpc	r19, r27
    2a38:	08 f0       	brcs	.+2      	; 0x2a3c <create_chain+0x4f8>
    2a3a:	96 cf       	rjmp	.-212    	; 0x2968 <create_chain+0x424>
    2a3c:	23 81       	ldd	r18, Z+3	; 0x03
    2a3e:	02 2f       	mov	r16, r18
    2a40:	10 e0       	ldi	r17, 0x00	; 0
    2a42:	02 30       	cpi	r16, 0x02	; 2
    2a44:	11 05       	cpc	r17, r1
    2a46:	08 f4       	brcc	.+2      	; 0x2a4a <create_chain+0x506>
    2a48:	8f cf       	rjmp	.-226    	; 0x2968 <create_chain+0x424>
    2a4a:	8d 82       	std	Y+5, r8	; 0x05
    2a4c:	9e 82       	std	Y+6, r9	; 0x06
    2a4e:	af 82       	std	Y+7, r10	; 0x07
    2a50:	b8 86       	std	Y+8, r11	; 0x08
    2a52:	58 01       	movw	r10, r16
    2a54:	06 c0       	rjmp	.+12     	; 0x2a62 <create_chain+0x51e>
    2a56:	e9 8d       	ldd	r30, Y+25	; 0x19
    2a58:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2a5a:	82 8d       	ldd	r24, Z+26	; 0x1a
    2a5c:	93 8d       	ldd	r25, Z+27	; 0x1b
    2a5e:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2a60:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2a62:	c8 0e       	add	r12, r24
    2a64:	d9 1e       	adc	r13, r25
    2a66:	ea 1e       	adc	r14, r26
    2a68:	fb 1e       	adc	r15, r27
    2a6a:	01 e0       	ldi	r16, 0x01	; 1
    2a6c:	10 e0       	ldi	r17, 0x00	; 0
    2a6e:	a7 01       	movw	r20, r14
    2a70:	96 01       	movw	r18, r12
    2a72:	b1 01       	movw	r22, r2
    2a74:	a9 8d       	ldd	r26, Y+25	; 0x19
    2a76:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2a78:	11 96       	adiw	r26, 0x01	; 1
    2a7a:	8c 91       	ld	r24, X
    2a7c:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2a80:	b1 e0       	ldi	r27, 0x01	; 1
    2a82:	ab 1a       	sub	r10, r27
    2a84:	b1 08       	sbc	r11, r1
    2a86:	e1 e0       	ldi	r30, 0x01	; 1
    2a88:	ae 16       	cp	r10, r30
    2a8a:	b1 04       	cpc	r11, r1
    2a8c:	21 f7       	brne	.-56     	; 0x2a56 <create_chain+0x512>
    2a8e:	8d 80       	ldd	r8, Y+5	; 0x05
    2a90:	9e 80       	ldd	r9, Y+6	; 0x06
    2a92:	af 80       	ldd	r10, Y+7	; 0x07
    2a94:	b8 84       	ldd	r11, Y+8	; 0x08
    2a96:	68 cf       	rjmp	.-304    	; 0x2968 <create_chain+0x424>
    2a98:	01 e0       	ldi	r16, 0x01	; 1
    2a9a:	10 e0       	ldi	r17, 0x00	; 0
    2a9c:	a7 01       	movw	r20, r14
    2a9e:	96 01       	movw	r18, r12
    2aa0:	b1 01       	movw	r22, r2
    2aa2:	81 81       	ldd	r24, Z+1	; 0x01
    2aa4:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2aa8:	81 11       	cpse	r24, r1
    2aaa:	41 ce       	rjmp	.-894    	; 0x272e <create_chain+0x1ea>
    2aac:	a9 8d       	ldd	r26, Y+25	; 0x19
    2aae:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2ab0:	14 96       	adiw	r26, 0x04	; 4
    2ab2:	1c 92       	st	X, r1
    2ab4:	14 97       	sbiw	r26, 0x04	; 4
    2ab6:	fd 01       	movw	r30, r26
    2ab8:	82 8d       	ldd	r24, Z+26	; 0x1a
    2aba:	93 8d       	ldd	r25, Z+27	; 0x1b
    2abc:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2abe:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2ac0:	42 a1       	ldd	r20, Z+34	; 0x22
    2ac2:	53 a1       	ldd	r21, Z+35	; 0x23
    2ac4:	64 a1       	ldd	r22, Z+36	; 0x24
    2ac6:	75 a1       	ldd	r23, Z+37	; 0x25
    2ac8:	97 01       	movw	r18, r14
    2aca:	86 01       	movw	r16, r12
    2acc:	04 1b       	sub	r16, r20
    2ace:	15 0b       	sbc	r17, r21
    2ad0:	26 0b       	sbc	r18, r22
    2ad2:	37 0b       	sbc	r19, r23
    2ad4:	08 17       	cp	r16, r24
    2ad6:	19 07       	cpc	r17, r25
    2ad8:	2a 07       	cpc	r18, r26
    2ada:	3b 07       	cpc	r19, r27
    2adc:	08 f0       	brcs	.+2      	; 0x2ae0 <create_chain+0x59c>
    2ade:	9a ce       	rjmp	.-716    	; 0x2814 <create_chain+0x2d0>
    2ae0:	23 81       	ldd	r18, Z+3	; 0x03
    2ae2:	02 2f       	mov	r16, r18
    2ae4:	10 e0       	ldi	r17, 0x00	; 0
    2ae6:	02 30       	cpi	r16, 0x02	; 2
    2ae8:	11 05       	cpc	r17, r1
    2aea:	08 f4       	brcc	.+2      	; 0x2aee <create_chain+0x5aa>
    2aec:	93 ce       	rjmp	.-730    	; 0x2814 <create_chain+0x2d0>
    2aee:	8d 82       	std	Y+5, r8	; 0x05
    2af0:	9e 82       	std	Y+6, r9	; 0x06
    2af2:	af 82       	std	Y+7, r10	; 0x07
    2af4:	b8 86       	std	Y+8, r11	; 0x08
    2af6:	58 01       	movw	r10, r16
    2af8:	06 c0       	rjmp	.+12     	; 0x2b06 <create_chain+0x5c2>
    2afa:	e9 8d       	ldd	r30, Y+25	; 0x19
    2afc:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2afe:	82 8d       	ldd	r24, Z+26	; 0x1a
    2b00:	93 8d       	ldd	r25, Z+27	; 0x1b
    2b02:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2b04:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2b06:	c8 0e       	add	r12, r24
    2b08:	d9 1e       	adc	r13, r25
    2b0a:	ea 1e       	adc	r14, r26
    2b0c:	fb 1e       	adc	r15, r27
    2b0e:	01 e0       	ldi	r16, 0x01	; 1
    2b10:	10 e0       	ldi	r17, 0x00	; 0
    2b12:	a7 01       	movw	r20, r14
    2b14:	96 01       	movw	r18, r12
    2b16:	b1 01       	movw	r22, r2
    2b18:	a9 8d       	ldd	r26, Y+25	; 0x19
    2b1a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2b1c:	11 96       	adiw	r26, 0x01	; 1
    2b1e:	8c 91       	ld	r24, X
    2b20:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2b24:	b1 e0       	ldi	r27, 0x01	; 1
    2b26:	ab 1a       	sub	r10, r27
    2b28:	b1 08       	sbc	r11, r1
    2b2a:	e1 e0       	ldi	r30, 0x01	; 1
    2b2c:	ae 16       	cp	r10, r30
    2b2e:	b1 04       	cpc	r11, r1
    2b30:	21 f7       	brne	.-56     	; 0x2afa <create_chain+0x5b6>
    2b32:	8d 80       	ldd	r8, Y+5	; 0x05
    2b34:	9e 80       	ldd	r9, Y+6	; 0x06
    2b36:	af 80       	ldd	r10, Y+7	; 0x07
    2b38:	b8 84       	ldd	r11, Y+8	; 0x08
    2b3a:	6c ce       	rjmp	.-808    	; 0x2814 <create_chain+0x2d0>
    2b3c:	01 e0       	ldi	r16, 0x01	; 1
    2b3e:	10 e0       	ldi	r17, 0x00	; 0
    2b40:	a5 01       	movw	r20, r10
    2b42:	94 01       	movw	r18, r8
    2b44:	b1 01       	movw	r22, r2
    2b46:	11 96       	adiw	r26, 0x01	; 1
    2b48:	8c 91       	ld	r24, X
    2b4a:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2b4e:	81 11       	cpse	r24, r1
    2b50:	ee cd       	rjmp	.-1060   	; 0x272e <create_chain+0x1ea>
    2b52:	a9 8d       	ldd	r26, Y+25	; 0x19
    2b54:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2b56:	14 96       	adiw	r26, 0x04	; 4
    2b58:	1c 92       	st	X, r1
    2b5a:	14 97       	sbiw	r26, 0x04	; 4
    2b5c:	5a 96       	adiw	r26, 0x1a	; 26
    2b5e:	4d 91       	ld	r20, X+
    2b60:	5d 91       	ld	r21, X+
    2b62:	6d 91       	ld	r22, X+
    2b64:	7c 91       	ld	r23, X
    2b66:	5d 97       	sbiw	r26, 0x1d	; 29
    2b68:	fd 01       	movw	r30, r26
    2b6a:	82 a1       	ldd	r24, Z+34	; 0x22
    2b6c:	93 a1       	ldd	r25, Z+35	; 0x23
    2b6e:	a4 a1       	ldd	r26, Z+36	; 0x24
    2b70:	b5 a1       	ldd	r27, Z+37	; 0x25
    2b72:	95 01       	movw	r18, r10
    2b74:	84 01       	movw	r16, r8
    2b76:	08 1b       	sub	r16, r24
    2b78:	19 0b       	sbc	r17, r25
    2b7a:	2a 0b       	sbc	r18, r26
    2b7c:	3b 0b       	sbc	r19, r27
    2b7e:	04 17       	cp	r16, r20
    2b80:	15 07       	cpc	r17, r21
    2b82:	26 07       	cpc	r18, r22
    2b84:	37 07       	cpc	r19, r23
    2b86:	08 f0       	brcs	.+2      	; 0x2b8a <create_chain+0x646>
    2b88:	78 cd       	rjmp	.-1296   	; 0x267a <create_chain+0x136>
    2b8a:	83 81       	ldd	r24, Z+3	; 0x03
    2b8c:	08 2f       	mov	r16, r24
    2b8e:	10 e0       	ldi	r17, 0x00	; 0
    2b90:	02 30       	cpi	r16, 0x02	; 2
    2b92:	11 05       	cpc	r17, r1
    2b94:	08 f4       	brcc	.+2      	; 0x2b98 <create_chain+0x654>
    2b96:	71 cd       	rjmp	.-1310   	; 0x267a <create_chain+0x136>
    2b98:	cd 86       	std	Y+13, r12	; 0x0d
    2b9a:	de 86       	std	Y+14, r13	; 0x0e
    2b9c:	ef 86       	std	Y+15, r14	; 0x0f
    2b9e:	f8 8a       	std	Y+16, r15	; 0x10
    2ba0:	78 01       	movw	r14, r16
    2ba2:	a9 8d       	ldd	r26, Y+25	; 0x19
    2ba4:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2ba6:	08 c0       	rjmp	.+16     	; 0x2bb8 <create_chain+0x674>
    2ba8:	a9 8d       	ldd	r26, Y+25	; 0x19
    2baa:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2bac:	5a 96       	adiw	r26, 0x1a	; 26
    2bae:	4d 91       	ld	r20, X+
    2bb0:	5d 91       	ld	r21, X+
    2bb2:	6d 91       	ld	r22, X+
    2bb4:	7c 91       	ld	r23, X
    2bb6:	5d 97       	sbiw	r26, 0x1d	; 29
    2bb8:	84 0e       	add	r8, r20
    2bba:	95 1e       	adc	r9, r21
    2bbc:	a6 1e       	adc	r10, r22
    2bbe:	b7 1e       	adc	r11, r23
    2bc0:	01 e0       	ldi	r16, 0x01	; 1
    2bc2:	10 e0       	ldi	r17, 0x00	; 0
    2bc4:	a5 01       	movw	r20, r10
    2bc6:	94 01       	movw	r18, r8
    2bc8:	b1 01       	movw	r22, r2
    2bca:	11 96       	adiw	r26, 0x01	; 1
    2bcc:	8c 91       	ld	r24, X
    2bce:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2bd2:	b1 e0       	ldi	r27, 0x01	; 1
    2bd4:	eb 1a       	sub	r14, r27
    2bd6:	f1 08       	sbc	r15, r1
    2bd8:	e1 e0       	ldi	r30, 0x01	; 1
    2bda:	ee 16       	cp	r14, r30
    2bdc:	f1 04       	cpc	r15, r1
    2bde:	21 f7       	brne	.-56     	; 0x2ba8 <create_chain+0x664>
    2be0:	cd 84       	ldd	r12, Y+13	; 0x0d
    2be2:	de 84       	ldd	r13, Y+14	; 0x0e
    2be4:	ef 84       	ldd	r14, Y+15	; 0x0f
    2be6:	f8 88       	ldd	r15, Y+16	; 0x10
    2be8:	48 cd       	rjmp	.-1392   	; 0x267a <create_chain+0x136>
    2bea:	c9 8a       	std	Y+17, r12	; 0x11
    2bec:	da 8a       	std	Y+18, r13	; 0x12
    2bee:	eb 8a       	std	Y+19, r14	; 0x13
    2bf0:	fc 8a       	std	Y+20, r15	; 0x14
    2bf2:	29 8d       	ldd	r18, Y+25	; 0x19
    2bf4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2bf6:	60 cd       	rjmp	.-1344   	; 0x26b8 <create_chain+0x174>
    2bf8:	40 e0       	ldi	r20, 0x00	; 0
    2bfa:	30 e0       	ldi	r19, 0x00	; 0
    2bfc:	20 e0       	ldi	r18, 0x00	; 0
    2bfe:	90 e0       	ldi	r25, 0x00	; 0
    2c00:	b5 cd       	rjmp	.-1174   	; 0x276c <create_chain+0x228>
    2c02:	49 80       	ldd	r4, Y+1	; 0x01
    2c04:	5a 80       	ldd	r5, Y+2	; 0x02
    2c06:	6b 80       	ldd	r6, Y+3	; 0x03
    2c08:	7c 80       	ldd	r7, Y+4	; 0x04
    2c0a:	de cc       	rjmp	.-1604   	; 0x25c8 <create_chain+0x84>
    2c0c:	b9 01       	movw	r22, r18
    2c0e:	a8 01       	movw	r20, r16
    2c10:	c5 01       	movw	r24, r10
    2c12:	c2 d8       	rcall	.-3708   	; 0x1d98 <get_fat.part.4>
    2c14:	62 30       	cpi	r22, 0x02	; 2
    2c16:	71 05       	cpc	r23, r1
    2c18:	81 05       	cpc	r24, r1
    2c1a:	91 05       	cpc	r25, r1
    2c1c:	08 f4       	brcc	.+2      	; 0x2c20 <create_chain+0x6dc>
    2c1e:	a2 cd       	rjmp	.-1212   	; 0x2764 <create_chain+0x220>
    2c20:	6f 3f       	cpi	r22, 0xFF	; 255
    2c22:	1f ef       	ldi	r17, 0xFF	; 255
    2c24:	71 07       	cpc	r23, r17
    2c26:	81 07       	cpc	r24, r17
    2c28:	91 07       	cpc	r25, r17
    2c2a:	09 f4       	brne	.+2      	; 0x2c2e <create_chain+0x6ea>
    2c2c:	80 cd       	rjmp	.-1280   	; 0x272e <create_chain+0x1ea>
    2c2e:	d5 01       	movw	r26, r10
    2c30:	56 96       	adiw	r26, 0x16	; 22
    2c32:	cd 90       	ld	r12, X+
    2c34:	dd 90       	ld	r13, X+
    2c36:	ed 90       	ld	r14, X+
    2c38:	fc 90       	ld	r15, X
    2c3a:	59 97       	sbiw	r26, 0x19	; 25
    2c3c:	6c 15       	cp	r22, r12
    2c3e:	7d 05       	cpc	r23, r13
    2c40:	8e 05       	cpc	r24, r14
    2c42:	9f 05       	cpc	r25, r15
    2c44:	08 f4       	brcc	.+2      	; 0x2c48 <create_chain+0x704>
    2c46:	64 c0       	rjmp	.+200    	; 0x2d10 <create_chain+0x7cc>
    2c48:	d7 01       	movw	r26, r14
    2c4a:	c6 01       	movw	r24, r12
    2c4c:	09 85       	ldd	r16, Y+9	; 0x09
    2c4e:	1a 85       	ldd	r17, Y+10	; 0x0a
    2c50:	2b 85       	ldd	r18, Y+11	; 0x0b
    2c52:	3c 85       	ldd	r19, Y+12	; 0x0c
    2c54:	09 83       	std	Y+1, r16	; 0x01
    2c56:	1a 83       	std	Y+2, r17	; 0x02
    2c58:	2b 83       	std	Y+3, r18	; 0x03
    2c5a:	3c 83       	std	Y+4, r19	; 0x04
    2c5c:	28 01       	movw	r4, r16
    2c5e:	39 01       	movw	r6, r18
    2c60:	b3 cc       	rjmp	.-1690   	; 0x25c8 <create_chain+0x84>
    2c62:	01 e0       	ldi	r16, 0x01	; 1
    2c64:	10 e0       	ldi	r17, 0x00	; 0
    2c66:	a7 01       	movw	r20, r14
    2c68:	96 01       	movw	r18, r12
    2c6a:	b1 01       	movw	r22, r2
    2c6c:	11 96       	adiw	r26, 0x01	; 1
    2c6e:	8c 91       	ld	r24, X
    2c70:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2c74:	81 11       	cpse	r24, r1
    2c76:	5b cd       	rjmp	.-1354   	; 0x272e <create_chain+0x1ea>
    2c78:	e9 8d       	ldd	r30, Y+25	; 0x19
    2c7a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2c7c:	14 82       	std	Z+4, r1	; 0x04
    2c7e:	42 8d       	ldd	r20, Z+26	; 0x1a
    2c80:	53 8d       	ldd	r21, Z+27	; 0x1b
    2c82:	64 8d       	ldd	r22, Z+28	; 0x1c
    2c84:	75 8d       	ldd	r23, Z+29	; 0x1d
    2c86:	82 a1       	ldd	r24, Z+34	; 0x22
    2c88:	93 a1       	ldd	r25, Z+35	; 0x23
    2c8a:	a4 a1       	ldd	r26, Z+36	; 0x24
    2c8c:	b5 a1       	ldd	r27, Z+37	; 0x25
    2c8e:	97 01       	movw	r18, r14
    2c90:	86 01       	movw	r16, r12
    2c92:	08 1b       	sub	r16, r24
    2c94:	19 0b       	sbc	r17, r25
    2c96:	2a 0b       	sbc	r18, r26
    2c98:	3b 0b       	sbc	r19, r27
    2c9a:	04 17       	cp	r16, r20
    2c9c:	15 07       	cpc	r17, r21
    2c9e:	26 07       	cpc	r18, r22
    2ca0:	37 07       	cpc	r19, r23
    2ca2:	08 f0       	brcs	.+2      	; 0x2ca6 <create_chain+0x762>
    2ca4:	2c cd       	rjmp	.-1448   	; 0x26fe <create_chain+0x1ba>
    2ca6:	83 81       	ldd	r24, Z+3	; 0x03
    2ca8:	e8 2e       	mov	r14, r24
    2caa:	f1 2c       	mov	r15, r1
    2cac:	12 e0       	ldi	r17, 0x02	; 2
    2cae:	e1 16       	cp	r14, r17
    2cb0:	f1 04       	cpc	r15, r1
    2cb2:	08 f4       	brcc	.+2      	; 0x2cb6 <create_chain+0x772>
    2cb4:	24 cd       	rjmp	.-1464   	; 0x26fe <create_chain+0x1ba>
    2cb6:	db 01       	movw	r26, r22
    2cb8:	ca 01       	movw	r24, r20
    2cba:	8d 8a       	std	Y+21, r8	; 0x15
    2cbc:	9e 8a       	std	Y+22, r9	; 0x16
    2cbe:	af 8a       	std	Y+23, r10	; 0x17
    2cc0:	b8 8e       	std	Y+24, r11	; 0x18
    2cc2:	57 01       	movw	r10, r14
    2cc4:	c9 88       	ldd	r12, Y+17	; 0x11
    2cc6:	da 88       	ldd	r13, Y+18	; 0x12
    2cc8:	eb 88       	ldd	r14, Y+19	; 0x13
    2cca:	fc 88       	ldd	r15, Y+20	; 0x14
    2ccc:	06 c0       	rjmp	.+12     	; 0x2cda <create_chain+0x796>
    2cce:	e9 8d       	ldd	r30, Y+25	; 0x19
    2cd0:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2cd2:	82 8d       	ldd	r24, Z+26	; 0x1a
    2cd4:	93 8d       	ldd	r25, Z+27	; 0x1b
    2cd6:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2cd8:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2cda:	c8 0e       	add	r12, r24
    2cdc:	d9 1e       	adc	r13, r25
    2cde:	ea 1e       	adc	r14, r26
    2ce0:	fb 1e       	adc	r15, r27
    2ce2:	01 e0       	ldi	r16, 0x01	; 1
    2ce4:	10 e0       	ldi	r17, 0x00	; 0
    2ce6:	a7 01       	movw	r20, r14
    2ce8:	96 01       	movw	r18, r12
    2cea:	b1 01       	movw	r22, r2
    2cec:	a9 8d       	ldd	r26, Y+25	; 0x19
    2cee:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2cf0:	11 96       	adiw	r26, 0x01	; 1
    2cf2:	8c 91       	ld	r24, X
    2cf4:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2cf8:	b1 e0       	ldi	r27, 0x01	; 1
    2cfa:	ab 1a       	sub	r10, r27
    2cfc:	b1 08       	sbc	r11, r1
    2cfe:	e1 e0       	ldi	r30, 0x01	; 1
    2d00:	ae 16       	cp	r10, r30
    2d02:	b1 04       	cpc	r11, r1
    2d04:	21 f7       	brne	.-56     	; 0x2cce <create_chain+0x78a>
    2d06:	8d 88       	ldd	r8, Y+21	; 0x15
    2d08:	9e 88       	ldd	r9, Y+22	; 0x16
    2d0a:	af 88       	ldd	r10, Y+23	; 0x17
    2d0c:	b8 8c       	ldd	r11, Y+24	; 0x18
    2d0e:	f7 cc       	rjmp	.-1554   	; 0x26fe <create_chain+0x1ba>
    2d10:	46 2f       	mov	r20, r22
    2d12:	37 2f       	mov	r19, r23
    2d14:	28 2f       	mov	r18, r24
    2d16:	2a cd       	rjmp	.-1452   	; 0x276c <create_chain+0x228>
    2d18:	e9 8d       	ldd	r30, Y+25	; 0x19
    2d1a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2d1c:	86 a6       	std	Z+46, r8	; 0x2e
    2d1e:	97 a6       	std	Z+47, r9	; 0x2f
    2d20:	a0 aa       	std	Z+48, r10	; 0x30
    2d22:	b1 aa       	std	Z+49, r11	; 0x31
    2d24:	ed 85       	ldd	r30, Y+13	; 0x0d
    2d26:	fe 85       	ldd	r31, Y+14	; 0x0e
    2d28:	f1 70       	andi	r31, 0x01	; 1
    2d2a:	09 8d       	ldd	r16, Y+25	; 0x19
    2d2c:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2d2e:	e0 0f       	add	r30, r16
    2d30:	f1 1f       	adc	r31, r17
    2d32:	22 a9       	ldd	r18, Z+50	; 0x32
    2d34:	1d 81       	ldd	r17, Y+5	; 0x05
    2d36:	81 2f       	mov	r24, r17
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	92 2b       	or	r25, r18
    2d3c:	40 fe       	sbrs	r4, 0
    2d3e:	09 c0       	rjmp	.+18     	; 0x2d52 <create_chain+0x80e>
    2d40:	92 95       	swap	r25
    2d42:	82 95       	swap	r24
    2d44:	8f 70       	andi	r24, 0x0F	; 15
    2d46:	89 27       	eor	r24, r25
    2d48:	9f 70       	andi	r25, 0x0F	; 15
    2d4a:	89 27       	eor	r24, r25
    2d4c:	a0 e0       	ldi	r26, 0x00	; 0
    2d4e:	b0 e0       	ldi	r27, 0x00	; 0
    2d50:	36 ce       	rjmp	.-916    	; 0x29be <create_chain+0x47a>
    2d52:	9f 70       	andi	r25, 0x0F	; 15
    2d54:	a0 e0       	ldi	r26, 0x00	; 0
    2d56:	b0 e0       	ldi	r27, 0x00	; 0
    2d58:	32 ce       	rjmp	.-924    	; 0x29be <create_chain+0x47a>
    2d5a:	81 30       	cpi	r24, 0x01	; 1
    2d5c:	09 f0       	breq	.+2      	; 0x2d60 <create_chain+0x81c>
    2d5e:	02 cd       	rjmp	.-1532   	; 0x2764 <create_chain+0x220>
    2d60:	e6 cc       	rjmp	.-1588   	; 0x272e <create_chain+0x1ea>

00002d62 <dir_alloc.constprop.10>:
    2d62:	2f 92       	push	r2
    2d64:	3f 92       	push	r3
    2d66:	4f 92       	push	r4
    2d68:	5f 92       	push	r5
    2d6a:	6f 92       	push	r6
    2d6c:	7f 92       	push	r7
    2d6e:	8f 92       	push	r8
    2d70:	9f 92       	push	r9
    2d72:	af 92       	push	r10
    2d74:	bf 92       	push	r11
    2d76:	cf 92       	push	r12
    2d78:	df 92       	push	r13
    2d7a:	ef 92       	push	r14
    2d7c:	ff 92       	push	r15
    2d7e:	0f 93       	push	r16
    2d80:	1f 93       	push	r17
    2d82:	cf 93       	push	r28
    2d84:	df 93       	push	r29
    2d86:	cd b7       	in	r28, 0x3d	; 61
    2d88:	de b7       	in	r29, 0x3e	; 62
    2d8a:	27 97       	sbiw	r28, 0x07	; 7
    2d8c:	cd bf       	out	0x3d, r28	; 61
    2d8e:	de bf       	out	0x3e, r29	; 62
    2d90:	1c 01       	movw	r2, r24
    2d92:	60 e0       	ldi	r22, 0x00	; 0
    2d94:	70 e0       	ldi	r23, 0x00	; 0
    2d96:	ef da       	rcall	.-2594   	; 0x2376 <dir_sdi>
    2d98:	89 83       	std	Y+1, r24	; 0x01
    2d9a:	88 23       	and	r24, r24
    2d9c:	d9 f0       	breq	.+54     	; 0x2dd4 <dir_alloc.constprop.10+0x72>
    2d9e:	b9 81       	ldd	r27, Y+1	; 0x01
    2da0:	b4 30       	cpi	r27, 0x04	; 4
    2da2:	09 f4       	brne	.+2      	; 0x2da6 <dir_alloc.constprop.10+0x44>
    2da4:	6e c0       	rjmp	.+220    	; 0x2e82 <dir_alloc.constprop.10+0x120>
    2da6:	89 81       	ldd	r24, Y+1	; 0x01
    2da8:	27 96       	adiw	r28, 0x07	; 7
    2daa:	cd bf       	out	0x3d, r28	; 61
    2dac:	de bf       	out	0x3e, r29	; 62
    2dae:	df 91       	pop	r29
    2db0:	cf 91       	pop	r28
    2db2:	1f 91       	pop	r17
    2db4:	0f 91       	pop	r16
    2db6:	ff 90       	pop	r15
    2db8:	ef 90       	pop	r14
    2dba:	df 90       	pop	r13
    2dbc:	cf 90       	pop	r12
    2dbe:	bf 90       	pop	r11
    2dc0:	af 90       	pop	r10
    2dc2:	9f 90       	pop	r9
    2dc4:	8f 90       	pop	r8
    2dc6:	7f 90       	pop	r7
    2dc8:	6f 90       	pop	r6
    2dca:	5f 90       	pop	r5
    2dcc:	4f 90       	pop	r4
    2dce:	3f 90       	pop	r3
    2dd0:	2f 90       	pop	r2
    2dd2:	08 95       	ret
    2dd4:	d1 01       	movw	r26, r2
    2dd6:	0d 90       	ld	r0, X+
    2dd8:	bc 91       	ld	r27, X
    2dda:	a0 2d       	mov	r26, r0
    2ddc:	ae 83       	std	Y+6, r26	; 0x06
    2dde:	bf 83       	std	Y+7, r27	; 0x07
    2de0:	f1 01       	movw	r30, r2
    2de2:	46 84       	ldd	r4, Z+14	; 0x0e
    2de4:	57 84       	ldd	r5, Z+15	; 0x0f
    2de6:	60 88       	ldd	r6, Z+16	; 0x10
    2de8:	71 88       	ldd	r7, Z+17	; 0x11
    2dea:	9e 96       	adiw	r26, 0x2e	; 46
    2dec:	cd 90       	ld	r12, X+
    2dee:	dd 90       	ld	r13, X+
    2df0:	ed 90       	ld	r14, X+
    2df2:	fc 90       	ld	r15, X
    2df4:	d1 97       	sbiw	r26, 0x31	; 49
    2df6:	c4 14       	cp	r12, r4
    2df8:	d5 04       	cpc	r13, r5
    2dfa:	e6 04       	cpc	r14, r6
    2dfc:	f7 04       	cpc	r15, r7
    2dfe:	59 f1       	breq	.+86     	; 0x2e56 <dir_alloc.constprop.10+0xf4>
    2e00:	14 96       	adiw	r26, 0x04	; 4
    2e02:	8c 91       	ld	r24, X
    2e04:	14 97       	sbiw	r26, 0x04	; 4
    2e06:	81 11       	cpse	r24, r1
    2e08:	71 c0       	rjmp	.+226    	; 0x2eec <dir_alloc.constprop.10+0x18a>
    2e0a:	ae 80       	ldd	r10, Y+6	; 0x06
    2e0c:	bf 80       	ldd	r11, Y+7	; 0x07
    2e0e:	f2 e3       	ldi	r31, 0x32	; 50
    2e10:	af 0e       	add	r10, r31
    2e12:	b1 1c       	adc	r11, r1
    2e14:	01 e0       	ldi	r16, 0x01	; 1
    2e16:	10 e0       	ldi	r17, 0x00	; 0
    2e18:	a3 01       	movw	r20, r6
    2e1a:	92 01       	movw	r18, r4
    2e1c:	b5 01       	movw	r22, r10
    2e1e:	ae 81       	ldd	r26, Y+6	; 0x06
    2e20:	bf 81       	ldd	r27, Y+7	; 0x07
    2e22:	11 96       	adiw	r26, 0x01	; 1
    2e24:	8c 91       	ld	r24, X
    2e26:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    2e2a:	88 23       	and	r24, r24
    2e2c:	61 f0       	breq	.+24     	; 0x2e46 <dir_alloc.constprop.10+0xe4>
    2e2e:	8f ef       	ldi	r24, 0xFF	; 255
    2e30:	9f ef       	ldi	r25, 0xFF	; 255
    2e32:	dc 01       	movw	r26, r24
    2e34:	ee 81       	ldd	r30, Y+6	; 0x06
    2e36:	ff 81       	ldd	r31, Y+7	; 0x07
    2e38:	86 a7       	std	Z+46, r24	; 0x2e
    2e3a:	97 a7       	std	Z+47, r25	; 0x2f
    2e3c:	a0 ab       	std	Z+48, r26	; 0x30
    2e3e:	b1 ab       	std	Z+49, r27	; 0x31
    2e40:	f1 e0       	ldi	r31, 0x01	; 1
    2e42:	f9 83       	std	Y+1, r31	; 0x01
    2e44:	b0 cf       	rjmp	.-160    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    2e46:	ae 81       	ldd	r26, Y+6	; 0x06
    2e48:	bf 81       	ldd	r27, Y+7	; 0x07
    2e4a:	9e 96       	adiw	r26, 0x2e	; 46
    2e4c:	4d 92       	st	X+, r4
    2e4e:	5d 92       	st	X+, r5
    2e50:	6d 92       	st	X+, r6
    2e52:	7c 92       	st	X, r7
    2e54:	d1 97       	sbiw	r26, 0x31	; 49
    2e56:	d1 01       	movw	r26, r2
    2e58:	52 96       	adiw	r26, 0x12	; 18
    2e5a:	ed 91       	ld	r30, X+
    2e5c:	fc 91       	ld	r31, X
    2e5e:	53 97       	sbiw	r26, 0x13	; 19
    2e60:	80 81       	ld	r24, Z
    2e62:	85 3e       	cpi	r24, 0xE5	; 229
    2e64:	09 f4       	brne	.+2      	; 0x2e68 <dir_alloc.constprop.10+0x106>
    2e66:	9f cf       	rjmp	.-194    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    2e68:	88 23       	and	r24, r24
    2e6a:	09 f4       	brne	.+2      	; 0x2e6e <dir_alloc.constprop.10+0x10c>
    2e6c:	9c cf       	rjmp	.-200    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    2e6e:	14 96       	adiw	r26, 0x04	; 4
    2e70:	ed 90       	ld	r14, X+
    2e72:	fc 90       	ld	r15, X
    2e74:	15 97       	sbiw	r26, 0x05	; 5
    2e76:	bf ef       	ldi	r27, 0xFF	; 255
    2e78:	eb 1a       	sub	r14, r27
    2e7a:	fb 0a       	sbc	r15, r27
    2e7c:	e1 14       	cp	r14, r1
    2e7e:	f1 04       	cpc	r15, r1
    2e80:	19 f4       	brne	.+6      	; 0x2e88 <dir_alloc.constprop.10+0x126>
    2e82:	e7 e0       	ldi	r30, 0x07	; 7
    2e84:	e9 83       	std	Y+1, r30	; 0x01
    2e86:	8f cf       	rjmp	.-226    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    2e88:	f1 01       	movw	r30, r2
    2e8a:	46 84       	ldd	r4, Z+14	; 0x0e
    2e8c:	57 84       	ldd	r5, Z+15	; 0x0f
    2e8e:	60 88       	ldd	r6, Z+16	; 0x10
    2e90:	71 88       	ldd	r7, Z+17	; 0x11
    2e92:	41 14       	cp	r4, r1
    2e94:	51 04       	cpc	r5, r1
    2e96:	61 04       	cpc	r6, r1
    2e98:	71 04       	cpc	r7, r1
    2e9a:	99 f3       	breq	.-26     	; 0x2e82 <dir_alloc.constprop.10+0x120>
    2e9c:	67 01       	movw	r12, r14
    2e9e:	ff e0       	ldi	r31, 0x0F	; 15
    2ea0:	cf 22       	and	r12, r31
    2ea2:	dd 24       	eor	r13, r13
    2ea4:	c1 14       	cp	r12, r1
    2ea6:	d1 04       	cpc	r13, r1
    2ea8:	09 f4       	brne	.+2      	; 0x2eac <dir_alloc.constprop.10+0x14a>
    2eaa:	71 c0       	rjmp	.+226    	; 0x2f8e <dir_alloc.constprop.10+0x22c>
    2eac:	d1 01       	movw	r26, r2
    2eae:	0d 90       	ld	r0, X+
    2eb0:	bc 91       	ld	r27, X
    2eb2:	a0 2d       	mov	r26, r0
    2eb4:	ae 83       	std	Y+6, r26	; 0x06
    2eb6:	bf 83       	std	Y+7, r27	; 0x07
    2eb8:	f1 01       	movw	r30, r2
    2eba:	e4 82       	std	Z+4, r14	; 0x04
    2ebc:	f5 82       	std	Z+5, r15	; 0x05
    2ebe:	cc 0c       	add	r12, r12
    2ec0:	dd 1c       	adc	r13, r13
    2ec2:	c2 94       	swap	r12
    2ec4:	d2 94       	swap	r13
    2ec6:	90 ef       	ldi	r25, 0xF0	; 240
    2ec8:	d9 22       	and	r13, r25
    2eca:	dc 24       	eor	r13, r12
    2ecc:	c9 22       	and	r12, r25
    2ece:	dc 24       	eor	r13, r12
    2ed0:	f2 e3       	ldi	r31, 0x32	; 50
    2ed2:	cf 0e       	add	r12, r31
    2ed4:	d1 1c       	adc	r13, r1
    2ed6:	0e 81       	ldd	r16, Y+6	; 0x06
    2ed8:	1f 81       	ldd	r17, Y+7	; 0x07
    2eda:	c0 0e       	add	r12, r16
    2edc:	d1 1e       	adc	r13, r17
    2ede:	d1 01       	movw	r26, r2
    2ee0:	52 96       	adiw	r26, 0x12	; 18
    2ee2:	cd 92       	st	X+, r12
    2ee4:	dc 92       	st	X, r13
    2ee6:	53 97       	sbiw	r26, 0x13	; 19
    2ee8:	d8 01       	movw	r26, r16
    2eea:	7f cf       	rjmp	.-258    	; 0x2dea <dir_alloc.constprop.10+0x88>
    2eec:	5d 01       	movw	r10, r26
    2eee:	b2 e3       	ldi	r27, 0x32	; 50
    2ef0:	ab 0e       	add	r10, r27
    2ef2:	b1 1c       	adc	r11, r1
    2ef4:	01 e0       	ldi	r16, 0x01	; 1
    2ef6:	10 e0       	ldi	r17, 0x00	; 0
    2ef8:	a7 01       	movw	r20, r14
    2efa:	96 01       	movw	r18, r12
    2efc:	b5 01       	movw	r22, r10
    2efe:	ee 81       	ldd	r30, Y+6	; 0x06
    2f00:	ff 81       	ldd	r31, Y+7	; 0x07
    2f02:	81 81       	ldd	r24, Z+1	; 0x01
    2f04:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2f08:	81 11       	cpse	r24, r1
    2f0a:	3e c0       	rjmp	.+124    	; 0x2f88 <dir_alloc.constprop.10+0x226>
    2f0c:	ae 81       	ldd	r26, Y+6	; 0x06
    2f0e:	bf 81       	ldd	r27, Y+7	; 0x07
    2f10:	14 96       	adiw	r26, 0x04	; 4
    2f12:	1c 92       	st	X, r1
    2f14:	14 97       	sbiw	r26, 0x04	; 4
    2f16:	fd 01       	movw	r30, r26
    2f18:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f1a:	93 8d       	ldd	r25, Z+27	; 0x1b
    2f1c:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2f1e:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2f20:	42 a1       	ldd	r20, Z+34	; 0x22
    2f22:	53 a1       	ldd	r21, Z+35	; 0x23
    2f24:	64 a1       	ldd	r22, Z+36	; 0x24
    2f26:	75 a1       	ldd	r23, Z+37	; 0x25
    2f28:	97 01       	movw	r18, r14
    2f2a:	86 01       	movw	r16, r12
    2f2c:	04 1b       	sub	r16, r20
    2f2e:	15 0b       	sbc	r17, r21
    2f30:	26 0b       	sbc	r18, r22
    2f32:	37 0b       	sbc	r19, r23
    2f34:	08 17       	cp	r16, r24
    2f36:	19 07       	cpc	r17, r25
    2f38:	2a 07       	cpc	r18, r26
    2f3a:	3b 07       	cpc	r19, r27
    2f3c:	08 f0       	brcs	.+2      	; 0x2f40 <dir_alloc.constprop.10+0x1de>
    2f3e:	6a cf       	rjmp	.-300    	; 0x2e14 <dir_alloc.constprop.10+0xb2>
    2f40:	83 80       	ldd	r8, Z+3	; 0x03
    2f42:	91 2c       	mov	r9, r1
    2f44:	12 e0       	ldi	r17, 0x02	; 2
    2f46:	81 16       	cp	r8, r17
    2f48:	91 04       	cpc	r9, r1
    2f4a:	38 f4       	brcc	.+14     	; 0x2f5a <dir_alloc.constprop.10+0x1f8>
    2f4c:	63 cf       	rjmp	.-314    	; 0x2e14 <dir_alloc.constprop.10+0xb2>
    2f4e:	ee 81       	ldd	r30, Y+6	; 0x06
    2f50:	ff 81       	ldd	r31, Y+7	; 0x07
    2f52:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f54:	93 8d       	ldd	r25, Z+27	; 0x1b
    2f56:	a4 8d       	ldd	r26, Z+28	; 0x1c
    2f58:	b5 8d       	ldd	r27, Z+29	; 0x1d
    2f5a:	c8 0e       	add	r12, r24
    2f5c:	d9 1e       	adc	r13, r25
    2f5e:	ea 1e       	adc	r14, r26
    2f60:	fb 1e       	adc	r15, r27
    2f62:	01 e0       	ldi	r16, 0x01	; 1
    2f64:	10 e0       	ldi	r17, 0x00	; 0
    2f66:	a7 01       	movw	r20, r14
    2f68:	96 01       	movw	r18, r12
    2f6a:	b5 01       	movw	r22, r10
    2f6c:	ae 81       	ldd	r26, Y+6	; 0x06
    2f6e:	bf 81       	ldd	r27, Y+7	; 0x07
    2f70:	11 96       	adiw	r26, 0x01	; 1
    2f72:	8c 91       	ld	r24, X
    2f74:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    2f78:	b1 e0       	ldi	r27, 0x01	; 1
    2f7a:	8b 1a       	sub	r8, r27
    2f7c:	91 08       	sbc	r9, r1
    2f7e:	e1 e0       	ldi	r30, 0x01	; 1
    2f80:	8e 16       	cp	r8, r30
    2f82:	91 04       	cpc	r9, r1
    2f84:	21 f7       	brne	.-56     	; 0x2f4e <dir_alloc.constprop.10+0x1ec>
    2f86:	46 cf       	rjmp	.-372    	; 0x2e14 <dir_alloc.constprop.10+0xb2>
    2f88:	01 e0       	ldi	r16, 0x01	; 1
    2f8a:	09 83       	std	Y+1, r16	; 0x01
    2f8c:	0c cf       	rjmp	.-488    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    2f8e:	bf ef       	ldi	r27, 0xFF	; 255
    2f90:	4b 1a       	sub	r4, r27
    2f92:	5b 0a       	sbc	r5, r27
    2f94:	6b 0a       	sbc	r6, r27
    2f96:	7b 0a       	sbc	r7, r27
    2f98:	f1 01       	movw	r30, r2
    2f9a:	46 86       	std	Z+14, r4	; 0x0e
    2f9c:	57 86       	std	Z+15, r5	; 0x0f
    2f9e:	60 8a       	std	Z+16, r6	; 0x10
    2fa0:	71 8a       	std	Z+17, r7	; 0x11
    2fa2:	42 85       	ldd	r20, Z+10	; 0x0a
    2fa4:	53 85       	ldd	r21, Z+11	; 0x0b
    2fa6:	64 85       	ldd	r22, Z+12	; 0x0c
    2fa8:	75 85       	ldd	r23, Z+13	; 0x0d
    2faa:	41 15       	cp	r20, r1
    2fac:	51 05       	cpc	r21, r1
    2fae:	61 05       	cpc	r22, r1
    2fb0:	71 05       	cpc	r23, r1
    2fb2:	41 f1       	breq	.+80     	; 0x3004 <__stack+0x5>
    2fb4:	f1 01       	movw	r30, r2
    2fb6:	01 90       	ld	r0, Z+
    2fb8:	f0 81       	ld	r31, Z
    2fba:	e0 2d       	mov	r30, r0
    2fbc:	ee 83       	std	Y+6, r30	; 0x06
    2fbe:	ff 83       	std	Y+7, r31	; 0x07
    2fc0:	82 81       	ldd	r24, Z+2	; 0x02
    2fc2:	90 e0       	ldi	r25, 0x00	; 0
    2fc4:	01 97       	sbiw	r24, 0x01	; 1
    2fc6:	97 01       	movw	r18, r14
    2fc8:	32 95       	swap	r19
    2fca:	22 95       	swap	r18
    2fcc:	2f 70       	andi	r18, 0x0F	; 15
    2fce:	23 27       	eor	r18, r19
    2fd0:	3f 70       	andi	r19, 0x0F	; 15
    2fd2:	23 27       	eor	r18, r19
    2fd4:	82 23       	and	r24, r18
    2fd6:	93 23       	and	r25, r19
    2fd8:	89 2b       	or	r24, r25
    2fda:	09 f0       	breq	.+2      	; 0x2fde <dir_alloc.constprop.10+0x27c>
    2fdc:	6d cf       	rjmp	.-294    	; 0x2eb8 <dir_alloc.constprop.10+0x156>
    2fde:	42 30       	cpi	r20, 0x02	; 2
    2fe0:	51 05       	cpc	r21, r1
    2fe2:	61 05       	cpc	r22, r1
    2fe4:	71 05       	cpc	r23, r1
    2fe6:	58 f0       	brcs	.+22     	; 0x2ffe <dir_alloc.constprop.10+0x29c>
    2fe8:	ee 81       	ldd	r30, Y+6	; 0x06
    2fea:	ff 81       	ldd	r31, Y+7	; 0x07
    2fec:	86 89       	ldd	r24, Z+22	; 0x16
    2fee:	97 89       	ldd	r25, Z+23	; 0x17
    2ff0:	a0 8d       	ldd	r26, Z+24	; 0x18
    2ff2:	b1 8d       	ldd	r27, Z+25	; 0x19
    2ff4:	48 17       	cp	r20, r24
    2ff6:	59 07       	cpc	r21, r25
    2ff8:	6a 07       	cpc	r22, r26
    2ffa:	7b 07       	cpc	r23, r27
    2ffc:	88 f0       	brcs	.+34     	; 0x3020 <__stack+0x21>
    2ffe:	f2 e0       	ldi	r31, 0x02	; 2
    3000:	f9 83       	std	Y+1, r31	; 0x01
    3002:	d1 ce       	rjmp	.-606    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    3004:	00 81       	ld	r16, Z
    3006:	11 81       	ldd	r17, Z+1	; 0x01
    3008:	0e 83       	std	Y+6, r16	; 0x06
    300a:	1f 83       	std	Y+7, r17	; 0x07
    300c:	d8 01       	movw	r26, r16
    300e:	18 96       	adiw	r26, 0x08	; 8
    3010:	8d 91       	ld	r24, X+
    3012:	9c 91       	ld	r25, X
    3014:	19 97       	sbiw	r26, 0x09	; 9
    3016:	e8 16       	cp	r14, r24
    3018:	f9 06       	cpc	r15, r25
    301a:	08 f0       	brcs	.+2      	; 0x301e <__stack+0x1f>
    301c:	32 cf       	rjmp	.-412    	; 0x2e82 <dir_alloc.constprop.10+0x120>
    301e:	4c cf       	rjmp	.-360    	; 0x2eb8 <dir_alloc.constprop.10+0x156>
    3020:	cf 01       	movw	r24, r30
    3022:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <get_fat.part.4>
    3026:	4b 01       	movw	r8, r22
    3028:	5c 01       	movw	r10, r24
    302a:	62 30       	cpi	r22, 0x02	; 2
    302c:	71 05       	cpc	r23, r1
    302e:	81 05       	cpc	r24, r1
    3030:	91 05       	cpc	r25, r1
    3032:	28 f3       	brcs	.-54     	; 0x2ffe <dir_alloc.constprop.10+0x29c>
    3034:	6f 3f       	cpi	r22, 0xFF	; 255
    3036:	0f ef       	ldi	r16, 0xFF	; 255
    3038:	70 07       	cpc	r23, r16
    303a:	80 07       	cpc	r24, r16
    303c:	90 07       	cpc	r25, r16
    303e:	09 f4       	brne	.+2      	; 0x3042 <__stack+0x43>
    3040:	4e c0       	rjmp	.+156    	; 0x30de <__stack+0xdf>
    3042:	d1 01       	movw	r26, r2
    3044:	0d 90       	ld	r0, X+
    3046:	bc 91       	ld	r27, X
    3048:	a0 2d       	mov	r26, r0
    304a:	ae 83       	std	Y+6, r26	; 0x06
    304c:	bf 83       	std	Y+7, r27	; 0x07
    304e:	56 96       	adiw	r26, 0x16	; 22
    3050:	8d 91       	ld	r24, X+
    3052:	9d 91       	ld	r25, X+
    3054:	0d 90       	ld	r0, X+
    3056:	bc 91       	ld	r27, X
    3058:	a0 2d       	mov	r26, r0
    305a:	88 16       	cp	r8, r24
    305c:	99 06       	cpc	r9, r25
    305e:	aa 06       	cpc	r10, r26
    3060:	bb 06       	cpc	r11, r27
    3062:	58 f5       	brcc	.+86     	; 0x30ba <__stack+0xbb>
    3064:	a5 01       	movw	r20, r10
    3066:	94 01       	movw	r18, r8
    3068:	22 50       	subi	r18, 0x02	; 2
    306a:	31 09       	sbc	r19, r1
    306c:	41 09       	sbc	r20, r1
    306e:	51 09       	sbc	r21, r1
    3070:	f1 01       	movw	r30, r2
    3072:	82 86       	std	Z+10, r8	; 0x0a
    3074:	93 86       	std	Z+11, r9	; 0x0b
    3076:	a4 86       	std	Z+12, r10	; 0x0c
    3078:	b5 86       	std	Z+13, r11	; 0x0d
    307a:	02 97       	sbiw	r24, 0x02	; 2
    307c:	a1 09       	sbc	r26, r1
    307e:	b1 09       	sbc	r27, r1
    3080:	28 17       	cp	r18, r24
    3082:	39 07       	cpc	r19, r25
    3084:	4a 07       	cpc	r20, r26
    3086:	5b 07       	cpc	r21, r27
    3088:	68 f5       	brcc	.+90     	; 0x30e4 <__stack+0xe5>
    308a:	ee 81       	ldd	r30, Y+6	; 0x06
    308c:	ff 81       	ldd	r31, Y+7	; 0x07
    308e:	a2 81       	ldd	r26, Z+2	; 0x02
    3090:	b0 e0       	ldi	r27, 0x00	; 0
    3092:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    3096:	2b 01       	movw	r4, r22
    3098:	3c 01       	movw	r6, r24
    309a:	82 a5       	ldd	r24, Z+42	; 0x2a
    309c:	93 a5       	ldd	r25, Z+43	; 0x2b
    309e:	a4 a5       	ldd	r26, Z+44	; 0x2c
    30a0:	b5 a5       	ldd	r27, Z+45	; 0x2d
    30a2:	48 0e       	add	r4, r24
    30a4:	59 1e       	adc	r5, r25
    30a6:	6a 1e       	adc	r6, r26
    30a8:	7b 1e       	adc	r7, r27
    30aa:	d1 01       	movw	r26, r2
    30ac:	1e 96       	adiw	r26, 0x0e	; 14
    30ae:	4d 92       	st	X+, r4
    30b0:	5d 92       	st	X+, r5
    30b2:	6d 92       	st	X+, r6
    30b4:	7c 92       	st	X, r7
    30b6:	51 97       	sbiw	r26, 0x11	; 17
    30b8:	ff ce       	rjmp	.-514    	; 0x2eb8 <dir_alloc.constprop.10+0x156>
    30ba:	f1 01       	movw	r30, r2
    30bc:	42 85       	ldd	r20, Z+10	; 0x0a
    30be:	53 85       	ldd	r21, Z+11	; 0x0b
    30c0:	64 85       	ldd	r22, Z+12	; 0x0c
    30c2:	75 85       	ldd	r23, Z+13	; 0x0d
    30c4:	8e 81       	ldd	r24, Y+6	; 0x06
    30c6:	9f 81       	ldd	r25, Y+7	; 0x07
    30c8:	3d da       	rcall	.-2950   	; 0x2544 <create_chain>
    30ca:	4b 01       	movw	r8, r22
    30cc:	5c 01       	movw	r10, r24
    30ce:	61 15       	cp	r22, r1
    30d0:	71 05       	cpc	r23, r1
    30d2:	81 05       	cpc	r24, r1
    30d4:	91 05       	cpc	r25, r1
    30d6:	51 f4       	brne	.+20     	; 0x30ec <__stack+0xed>
    30d8:	f7 e0       	ldi	r31, 0x07	; 7
    30da:	f9 83       	std	Y+1, r31	; 0x01
    30dc:	64 ce       	rjmp	.-824    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    30de:	11 e0       	ldi	r17, 0x01	; 1
    30e0:	19 83       	std	Y+1, r17	; 0x01
    30e2:	61 ce       	rjmp	.-830    	; 0x2da6 <dir_alloc.constprop.10+0x44>
    30e4:	41 2c       	mov	r4, r1
    30e6:	51 2c       	mov	r5, r1
    30e8:	32 01       	movw	r6, r4
    30ea:	df cf       	rjmp	.-66     	; 0x30aa <__stack+0xab>
    30ec:	61 30       	cpi	r22, 0x01	; 1
    30ee:	71 05       	cpc	r23, r1
    30f0:	81 05       	cpc	r24, r1
    30f2:	91 05       	cpc	r25, r1
    30f4:	09 f4       	brne	.+2      	; 0x30f8 <__stack+0xf9>
    30f6:	83 cf       	rjmp	.-250    	; 0x2ffe <dir_alloc.constprop.10+0x29c>
    30f8:	6f 3f       	cpi	r22, 0xFF	; 255
    30fa:	0f ef       	ldi	r16, 0xFF	; 255
    30fc:	70 07       	cpc	r23, r16
    30fe:	80 07       	cpc	r24, r16
    3100:	90 07       	cpc	r25, r16
    3102:	69 f3       	breq	.-38     	; 0x30de <__stack+0xdf>
    3104:	d1 01       	movw	r26, r2
    3106:	8d 91       	ld	r24, X+
    3108:	9c 91       	ld	r25, X
    310a:	fc 01       	movw	r30, r24
    310c:	24 81       	ldd	r18, Z+4	; 0x04
    310e:	21 11       	cpse	r18, r1
    3110:	9b c0       	rjmp	.+310    	; 0x3248 <__stack+0x249>
    3112:	fc 01       	movw	r30, r24
    3114:	f2 96       	adiw	r30, 0x32	; 50
    3116:	df 01       	movw	r26, r30
    3118:	00 e0       	ldi	r16, 0x00	; 0
    311a:	12 e0       	ldi	r17, 0x02	; 2
    311c:	1d 92       	st	X+, r1
    311e:	01 50       	subi	r16, 0x01	; 1
    3120:	10 40       	sbci	r17, 0x00	; 0
    3122:	e1 f7       	brne	.-8      	; 0x311c <__stack+0x11d>
    3124:	d1 01       	movw	r26, r2
    3126:	0d 90       	ld	r0, X+
    3128:	bc 91       	ld	r27, X
    312a:	a0 2d       	mov	r26, r0
    312c:	ae 83       	std	Y+6, r26	; 0x06
    312e:	bf 83       	std	Y+7, r27	; 0x07
    3130:	95 01       	movw	r18, r10
    3132:	84 01       	movw	r16, r8
    3134:	02 50       	subi	r16, 0x02	; 2
    3136:	11 09       	sbc	r17, r1
    3138:	21 09       	sbc	r18, r1
    313a:	31 09       	sbc	r19, r1
    313c:	0a 83       	std	Y+2, r16	; 0x02
    313e:	1b 83       	std	Y+3, r17	; 0x03
    3140:	2c 83       	std	Y+4, r18	; 0x04
    3142:	3d 83       	std	Y+5, r19	; 0x05
    3144:	56 96       	adiw	r26, 0x16	; 22
    3146:	8d 91       	ld	r24, X+
    3148:	9d 91       	ld	r25, X+
    314a:	0d 90       	ld	r0, X+
    314c:	bc 91       	ld	r27, X
    314e:	a0 2d       	mov	r26, r0
    3150:	02 97       	sbiw	r24, 0x02	; 2
    3152:	a1 09       	sbc	r26, r1
    3154:	b1 09       	sbc	r27, r1
    3156:	08 17       	cp	r16, r24
    3158:	19 07       	cpc	r17, r25
    315a:	2a 07       	cpc	r18, r26
    315c:	3b 07       	cpc	r19, r27
    315e:	08 f0       	brcs	.+2      	; 0x3162 <__stack+0x163>
    3160:	53 c0       	rjmp	.+166    	; 0x3208 <__stack+0x209>
    3162:	a9 01       	movw	r20, r18
    3164:	98 01       	movw	r18, r16
    3166:	ee 81       	ldd	r30, Y+6	; 0x06
    3168:	ff 81       	ldd	r31, Y+7	; 0x07
    316a:	12 81       	ldd	r17, Z+2	; 0x02
    316c:	a1 2f       	mov	r26, r17
    316e:	b0 e0       	ldi	r27, 0x00	; 0
    3170:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    3174:	42 a4       	ldd	r4, Z+42	; 0x2a
    3176:	53 a4       	ldd	r5, Z+43	; 0x2b
    3178:	64 a4       	ldd	r6, Z+44	; 0x2c
    317a:	75 a4       	ldd	r7, Z+45	; 0x2d
    317c:	64 0d       	add	r22, r4
    317e:	75 1d       	adc	r23, r5
    3180:	86 1d       	adc	r24, r6
    3182:	97 1d       	adc	r25, r7
    3184:	e1 2f       	mov	r30, r17
    3186:	ae 81       	ldd	r26, Y+6	; 0x06
    3188:	bf 81       	ldd	r27, Y+7	; 0x07
    318a:	9e 96       	adiw	r26, 0x2e	; 46
    318c:	6d 93       	st	X+, r22
    318e:	7d 93       	st	X+, r23
    3190:	8d 93       	st	X+, r24
    3192:	9c 93       	st	X, r25
    3194:	d1 97       	sbiw	r26, 0x31	; 49
    3196:	61 2c       	mov	r6, r1
    3198:	71 2c       	mov	r7, r1
    319a:	e1 11       	cpse	r30, r1
    319c:	19 c0       	rjmp	.+50     	; 0x31d0 <__stack+0x1d1>
    319e:	3f c0       	rjmp	.+126    	; 0x321e <__stack+0x21f>
    31a0:	9e 96       	adiw	r26, 0x2e	; 46
    31a2:	4d 91       	ld	r20, X+
    31a4:	5d 91       	ld	r21, X+
    31a6:	6d 91       	ld	r22, X+
    31a8:	7c 91       	ld	r23, X
    31aa:	d1 97       	sbiw	r26, 0x31	; 49
    31ac:	4f 5f       	subi	r20, 0xFF	; 255
    31ae:	5f 4f       	sbci	r21, 0xFF	; 255
    31b0:	6f 4f       	sbci	r22, 0xFF	; 255
    31b2:	7f 4f       	sbci	r23, 0xFF	; 255
    31b4:	fd 01       	movw	r30, r26
    31b6:	46 a7       	std	Z+46, r20	; 0x2e
    31b8:	57 a7       	std	Z+47, r21	; 0x2f
    31ba:	60 ab       	std	Z+48, r22	; 0x30
    31bc:	71 ab       	std	Z+49, r23	; 0x31
    31be:	ff ef       	ldi	r31, 0xFF	; 255
    31c0:	6f 1a       	sub	r6, r31
    31c2:	7f 0a       	sbc	r7, r31
    31c4:	12 96       	adiw	r26, 0x02	; 2
    31c6:	8c 91       	ld	r24, X
    31c8:	90 e0       	ldi	r25, 0x00	; 0
    31ca:	68 16       	cp	r6, r24
    31cc:	79 06       	cpc	r7, r25
    31ce:	28 f5       	brcc	.+74     	; 0x321a <__stack+0x21b>
    31d0:	01 e0       	ldi	r16, 0x01	; 1
    31d2:	ee 81       	ldd	r30, Y+6	; 0x06
    31d4:	ff 81       	ldd	r31, Y+7	; 0x07
    31d6:	04 83       	std	Z+4, r16	; 0x04
    31d8:	d1 01       	movw	r26, r2
    31da:	0d 90       	ld	r0, X+
    31dc:	bc 91       	ld	r27, X
    31de:	a0 2d       	mov	r26, r0
    31e0:	ae 83       	std	Y+6, r26	; 0x06
    31e2:	bf 83       	std	Y+7, r27	; 0x07
    31e4:	14 96       	adiw	r26, 0x04	; 4
    31e6:	8c 91       	ld	r24, X
    31e8:	14 97       	sbiw	r26, 0x04	; 4
    31ea:	88 23       	and	r24, r24
    31ec:	c9 f2       	breq	.-78     	; 0x31a0 <__stack+0x1a1>
    31ee:	cd 01       	movw	r24, r26
    31f0:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <sync_window.part.2>
    31f4:	81 11       	cpse	r24, r1
    31f6:	73 cf       	rjmp	.-282    	; 0x30de <__stack+0xdf>
    31f8:	f1 01       	movw	r30, r2
    31fa:	01 90       	ld	r0, Z+
    31fc:	f0 81       	ld	r31, Z
    31fe:	e0 2d       	mov	r30, r0
    3200:	ee 83       	std	Y+6, r30	; 0x06
    3202:	ff 83       	std	Y+7, r31	; 0x07
    3204:	df 01       	movw	r26, r30
    3206:	cc cf       	rjmp	.-104    	; 0x31a0 <__stack+0x1a1>
    3208:	ae 81       	ldd	r26, Y+6	; 0x06
    320a:	bf 81       	ldd	r27, Y+7	; 0x07
    320c:	12 96       	adiw	r26, 0x02	; 2
    320e:	ec 91       	ld	r30, X
    3210:	12 97       	sbiw	r26, 0x02	; 2
    3212:	60 e0       	ldi	r22, 0x00	; 0
    3214:	70 e0       	ldi	r23, 0x00	; 0
    3216:	cb 01       	movw	r24, r22
    3218:	b8 cf       	rjmp	.-144    	; 0x318a <__stack+0x18b>
    321a:	cb 01       	movw	r24, r22
    321c:	ba 01       	movw	r22, r20
    321e:	dc 01       	movw	r26, r24
    3220:	cb 01       	movw	r24, r22
    3222:	86 19       	sub	r24, r6
    3224:	97 09       	sbc	r25, r7
    3226:	a1 09       	sbc	r26, r1
    3228:	b1 09       	sbc	r27, r1
    322a:	ee 81       	ldd	r30, Y+6	; 0x06
    322c:	ff 81       	ldd	r31, Y+7	; 0x07
    322e:	86 a7       	std	Z+46, r24	; 0x2e
    3230:	97 a7       	std	Z+47, r25	; 0x2f
    3232:	a0 ab       	std	Z+48, r26	; 0x30
    3234:	b1 ab       	std	Z+49, r27	; 0x31
    3236:	86 89       	ldd	r24, Z+22	; 0x16
    3238:	97 89       	ldd	r25, Z+23	; 0x17
    323a:	a0 8d       	ldd	r26, Z+24	; 0x18
    323c:	b1 8d       	ldd	r27, Z+25	; 0x19
    323e:	2a 81       	ldd	r18, Y+2	; 0x02
    3240:	3b 81       	ldd	r19, Y+3	; 0x03
    3242:	4c 81       	ldd	r20, Y+4	; 0x04
    3244:	5d 81       	ldd	r21, Y+5	; 0x05
    3246:	14 cf       	rjmp	.-472    	; 0x3070 <__stack+0x71>
    3248:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <sync_window.part.2>
    324c:	81 11       	cpse	r24, r1
    324e:	47 cf       	rjmp	.-370    	; 0x30de <__stack+0xdf>
    3250:	d1 01       	movw	r26, r2
    3252:	8d 91       	ld	r24, X+
    3254:	9c 91       	ld	r25, X
    3256:	5d cf       	rjmp	.-326    	; 0x3112 <__stack+0x113>

00003258 <dir_register>:
    3258:	2f 92       	push	r2
    325a:	3f 92       	push	r3
    325c:	4f 92       	push	r4
    325e:	5f 92       	push	r5
    3260:	6f 92       	push	r6
    3262:	7f 92       	push	r7
    3264:	8f 92       	push	r8
    3266:	9f 92       	push	r9
    3268:	af 92       	push	r10
    326a:	bf 92       	push	r11
    326c:	cf 92       	push	r12
    326e:	df 92       	push	r13
    3270:	ef 92       	push	r14
    3272:	ff 92       	push	r15
    3274:	0f 93       	push	r16
    3276:	1f 93       	push	r17
    3278:	cf 93       	push	r28
    327a:	df 93       	push	r29
    327c:	cd b7       	in	r28, 0x3d	; 61
    327e:	de b7       	in	r29, 0x3e	; 62
    3280:	2f 97       	sbiw	r28, 0x0f	; 15
    3282:	cd bf       	out	0x3d, r28	; 61
    3284:	de bf       	out	0x3e, r29	; 62
    3286:	2c 01       	movw	r4, r24
    3288:	6c dd       	rcall	.-1320   	; 0x2d62 <dir_alloc.constprop.10>
    328a:	98 2f       	mov	r25, r24
    328c:	88 23       	and	r24, r24
    328e:	b9 f0       	breq	.+46     	; 0x32be <dir_register+0x66>
    3290:	89 2f       	mov	r24, r25
    3292:	2f 96       	adiw	r28, 0x0f	; 15
    3294:	cd bf       	out	0x3d, r28	; 61
    3296:	de bf       	out	0x3e, r29	; 62
    3298:	df 91       	pop	r29
    329a:	cf 91       	pop	r28
    329c:	1f 91       	pop	r17
    329e:	0f 91       	pop	r16
    32a0:	ff 90       	pop	r15
    32a2:	ef 90       	pop	r14
    32a4:	df 90       	pop	r13
    32a6:	cf 90       	pop	r12
    32a8:	bf 90       	pop	r11
    32aa:	af 90       	pop	r10
    32ac:	9f 90       	pop	r9
    32ae:	8f 90       	pop	r8
    32b0:	7f 90       	pop	r7
    32b2:	6f 90       	pop	r6
    32b4:	5f 90       	pop	r5
    32b6:	4f 90       	pop	r4
    32b8:	3f 90       	pop	r3
    32ba:	2f 90       	pop	r2
    32bc:	08 95       	ret
    32be:	d2 01       	movw	r26, r4
    32c0:	1e 96       	adiw	r26, 0x0e	; 14
    32c2:	6d 90       	ld	r6, X+
    32c4:	7d 90       	ld	r7, X+
    32c6:	8d 90       	ld	r8, X+
    32c8:	9c 90       	ld	r9, X
    32ca:	51 97       	sbiw	r26, 0x11	; 17
    32cc:	6c 86       	std	Y+12, r6	; 0x0c
    32ce:	7d 86       	std	Y+13, r7	; 0x0d
    32d0:	8e 86       	std	Y+14, r8	; 0x0e
    32d2:	9f 86       	std	Y+15, r9	; 0x0f
    32d4:	ad 90       	ld	r10, X+
    32d6:	bc 90       	ld	r11, X
    32d8:	f5 01       	movw	r30, r10
    32da:	c6 a4       	ldd	r12, Z+46	; 0x2e
    32dc:	d7 a4       	ldd	r13, Z+47	; 0x2f
    32de:	e0 a8       	ldd	r14, Z+48	; 0x30
    32e0:	f1 a8       	ldd	r15, Z+49	; 0x31
    32e2:	6c 14       	cp	r6, r12
    32e4:	7d 04       	cpc	r7, r13
    32e6:	8e 04       	cpc	r8, r14
    32e8:	9f 04       	cpc	r9, r15
    32ea:	59 f1       	breq	.+86     	; 0x3342 <dir_register+0xea>
    32ec:	84 81       	ldd	r24, Z+4	; 0x04
    32ee:	15 01       	movw	r2, r10
    32f0:	81 11       	cpse	r24, r1
    32f2:	5d c0       	rjmp	.+186    	; 0x33ae <dir_register+0x156>
    32f4:	b2 e3       	ldi	r27, 0x32	; 50
    32f6:	2b 0e       	add	r2, r27
    32f8:	31 1c       	adc	r3, r1
    32fa:	01 e0       	ldi	r16, 0x01	; 1
    32fc:	10 e0       	ldi	r17, 0x00	; 0
    32fe:	2c 85       	ldd	r18, Y+12	; 0x0c
    3300:	3d 85       	ldd	r19, Y+13	; 0x0d
    3302:	4e 85       	ldd	r20, Y+14	; 0x0e
    3304:	5f 85       	ldd	r21, Y+15	; 0x0f
    3306:	b1 01       	movw	r22, r2
    3308:	f5 01       	movw	r30, r10
    330a:	81 81       	ldd	r24, Z+1	; 0x01
    330c:	99 83       	std	Y+1, r25	; 0x01
    330e:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    3312:	99 81       	ldd	r25, Y+1	; 0x01
    3314:	88 23       	and	r24, r24
    3316:	51 f0       	breq	.+20     	; 0x332c <dir_register+0xd4>
    3318:	8f ef       	ldi	r24, 0xFF	; 255
    331a:	9f ef       	ldi	r25, 0xFF	; 255
    331c:	dc 01       	movw	r26, r24
    331e:	f5 01       	movw	r30, r10
    3320:	86 a7       	std	Z+46, r24	; 0x2e
    3322:	97 a7       	std	Z+47, r25	; 0x2f
    3324:	a0 ab       	std	Z+48, r26	; 0x30
    3326:	b1 ab       	std	Z+49, r27	; 0x31
    3328:	91 e0       	ldi	r25, 0x01	; 1
    332a:	b2 cf       	rjmp	.-156    	; 0x3290 <dir_register+0x38>
    332c:	6c 84       	ldd	r6, Y+12	; 0x0c
    332e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3330:	8e 84       	ldd	r8, Y+14	; 0x0e
    3332:	9f 84       	ldd	r9, Y+15	; 0x0f
    3334:	d5 01       	movw	r26, r10
    3336:	9e 96       	adiw	r26, 0x2e	; 46
    3338:	6d 92       	st	X+, r6
    333a:	7d 92       	st	X+, r7
    333c:	8d 92       	st	X+, r8
    333e:	9c 92       	st	X, r9
    3340:	d1 97       	sbiw	r26, 0x31	; 49
    3342:	d2 01       	movw	r26, r4
    3344:	52 96       	adiw	r26, 0x12	; 18
    3346:	ed 91       	ld	r30, X+
    3348:	fc 91       	ld	r31, X
    334a:	53 97       	sbiw	r26, 0x13	; 19
    334c:	80 e2       	ldi	r24, 0x20	; 32
    334e:	df 01       	movw	r26, r30
    3350:	1d 92       	st	X+, r1
    3352:	8a 95       	dec	r24
    3354:	e9 f7       	brne	.-6      	; 0x3350 <dir_register+0xf8>
    3356:	f2 01       	movw	r30, r4
    3358:	a4 89       	ldd	r26, Z+20	; 0x14
    335a:	b5 89       	ldd	r27, Z+21	; 0x15
    335c:	42 89       	ldd	r20, Z+18	; 0x12
    335e:	53 89       	ldd	r21, Z+19	; 0x13
    3360:	2d 91       	ld	r18, X+
    3362:	3c 91       	ld	r19, X
    3364:	11 97       	sbiw	r26, 0x01	; 1
    3366:	fa 01       	movw	r30, r20
    3368:	20 83       	st	Z, r18
    336a:	31 83       	std	Z+1, r19	; 0x01
    336c:	12 96       	adiw	r26, 0x02	; 2
    336e:	2d 91       	ld	r18, X+
    3370:	3c 91       	ld	r19, X
    3372:	13 97       	sbiw	r26, 0x03	; 3
    3374:	22 83       	std	Z+2, r18	; 0x02
    3376:	33 83       	std	Z+3, r19	; 0x03
    3378:	14 96       	adiw	r26, 0x04	; 4
    337a:	2d 91       	ld	r18, X+
    337c:	3c 91       	ld	r19, X
    337e:	15 97       	sbiw	r26, 0x05	; 5
    3380:	24 83       	std	Z+4, r18	; 0x04
    3382:	35 83       	std	Z+5, r19	; 0x05
    3384:	16 96       	adiw	r26, 0x06	; 6
    3386:	2d 91       	ld	r18, X+
    3388:	3c 91       	ld	r19, X
    338a:	17 97       	sbiw	r26, 0x07	; 7
    338c:	26 83       	std	Z+6, r18	; 0x06
    338e:	37 83       	std	Z+7, r19	; 0x07
    3390:	18 96       	adiw	r26, 0x08	; 8
    3392:	2d 91       	ld	r18, X+
    3394:	3c 91       	ld	r19, X
    3396:	19 97       	sbiw	r26, 0x09	; 9
    3398:	20 87       	std	Z+8, r18	; 0x08
    339a:	31 87       	std	Z+9, r19	; 0x09
    339c:	1a 96       	adiw	r26, 0x0a	; 10
    339e:	8c 91       	ld	r24, X
    33a0:	82 87       	std	Z+10, r24	; 0x0a
    33a2:	d2 01       	movw	r26, r4
    33a4:	ed 91       	ld	r30, X+
    33a6:	fc 91       	ld	r31, X
    33a8:	81 e0       	ldi	r24, 0x01	; 1
    33aa:	84 83       	std	Z+4, r24	; 0x04
    33ac:	71 cf       	rjmp	.-286    	; 0x3290 <dir_register+0x38>
    33ae:	f2 e3       	ldi	r31, 0x32	; 50
    33b0:	2f 0e       	add	r2, r31
    33b2:	31 1c       	adc	r3, r1
    33b4:	01 e0       	ldi	r16, 0x01	; 1
    33b6:	10 e0       	ldi	r17, 0x00	; 0
    33b8:	a7 01       	movw	r20, r14
    33ba:	96 01       	movw	r18, r12
    33bc:	b1 01       	movw	r22, r2
    33be:	d5 01       	movw	r26, r10
    33c0:	11 96       	adiw	r26, 0x01	; 1
    33c2:	8c 91       	ld	r24, X
    33c4:	99 83       	std	Y+1, r25	; 0x01
    33c6:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    33ca:	99 81       	ldd	r25, Y+1	; 0x01
    33cc:	81 11       	cpse	r24, r1
    33ce:	ac cf       	rjmp	.-168    	; 0x3328 <dir_register+0xd0>
    33d0:	f5 01       	movw	r30, r10
    33d2:	14 82       	std	Z+4, r1	; 0x04
    33d4:	62 8c       	ldd	r6, Z+26	; 0x1a
    33d6:	73 8c       	ldd	r7, Z+27	; 0x1b
    33d8:	84 8c       	ldd	r8, Z+28	; 0x1c
    33da:	95 8c       	ldd	r9, Z+29	; 0x1d
    33dc:	68 86       	std	Y+8, r6	; 0x08
    33de:	79 86       	std	Y+9, r7	; 0x09
    33e0:	8a 86       	std	Y+10, r8	; 0x0a
    33e2:	9b 86       	std	Y+11, r9	; 0x0b
    33e4:	62 a0       	ldd	r6, Z+34	; 0x22
    33e6:	73 a0       	ldd	r7, Z+35	; 0x23
    33e8:	84 a0       	ldd	r8, Z+36	; 0x24
    33ea:	95 a0       	ldd	r9, Z+37	; 0x25
    33ec:	97 01       	movw	r18, r14
    33ee:	86 01       	movw	r16, r12
    33f0:	06 19       	sub	r16, r6
    33f2:	17 09       	sbc	r17, r7
    33f4:	28 09       	sbc	r18, r8
    33f6:	39 09       	sbc	r19, r9
    33f8:	48 85       	ldd	r20, Y+8	; 0x08
    33fa:	59 85       	ldd	r21, Y+9	; 0x09
    33fc:	6a 85       	ldd	r22, Y+10	; 0x0a
    33fe:	7b 85       	ldd	r23, Y+11	; 0x0b
    3400:	04 17       	cp	r16, r20
    3402:	15 07       	cpc	r17, r21
    3404:	26 07       	cpc	r18, r22
    3406:	37 07       	cpc	r19, r23
    3408:	08 f0       	brcs	.+2      	; 0x340c <dir_register+0x1b4>
    340a:	77 cf       	rjmp	.-274    	; 0x32fa <dir_register+0xa2>
    340c:	83 80       	ldd	r8, Z+3	; 0x03
    340e:	91 2c       	mov	r9, r1
    3410:	52 e0       	ldi	r21, 0x02	; 2
    3412:	85 16       	cp	r8, r21
    3414:	91 04       	cpc	r9, r1
    3416:	08 f4       	brcc	.+2      	; 0x341a <dir_register+0x1c2>
    3418:	70 cf       	rjmp	.-288    	; 0x32fa <dir_register+0xa2>
    341a:	48 85       	ldd	r20, Y+8	; 0x08
    341c:	59 85       	ldd	r21, Y+9	; 0x09
    341e:	6a 85       	ldd	r22, Y+10	; 0x0a
    3420:	7b 85       	ldd	r23, Y+11	; 0x0b
    3422:	07 c0       	rjmp	.+14     	; 0x3432 <dir_register+0x1da>
    3424:	d5 01       	movw	r26, r10
    3426:	5a 96       	adiw	r26, 0x1a	; 26
    3428:	4d 91       	ld	r20, X+
    342a:	5d 91       	ld	r21, X+
    342c:	6d 91       	ld	r22, X+
    342e:	7c 91       	ld	r23, X
    3430:	5d 97       	sbiw	r26, 0x1d	; 29
    3432:	c4 0e       	add	r12, r20
    3434:	d5 1e       	adc	r13, r21
    3436:	e6 1e       	adc	r14, r22
    3438:	f7 1e       	adc	r15, r23
    343a:	01 e0       	ldi	r16, 0x01	; 1
    343c:	10 e0       	ldi	r17, 0x00	; 0
    343e:	a7 01       	movw	r20, r14
    3440:	96 01       	movw	r18, r12
    3442:	b1 01       	movw	r22, r2
    3444:	d5 01       	movw	r26, r10
    3446:	11 96       	adiw	r26, 0x01	; 1
    3448:	8c 91       	ld	r24, X
    344a:	99 83       	std	Y+1, r25	; 0x01
    344c:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    3450:	b1 e0       	ldi	r27, 0x01	; 1
    3452:	8b 1a       	sub	r8, r27
    3454:	91 08       	sbc	r9, r1
    3456:	99 81       	ldd	r25, Y+1	; 0x01
    3458:	e1 e0       	ldi	r30, 0x01	; 1
    345a:	8e 16       	cp	r8, r30
    345c:	91 04       	cpc	r9, r1
    345e:	11 f7       	brne	.-60     	; 0x3424 <dir_register+0x1cc>
    3460:	4c cf       	rjmp	.-360    	; 0x32fa <dir_register+0xa2>

00003462 <follow_path>:
    3462:	2f 92       	push	r2
    3464:	3f 92       	push	r3
    3466:	4f 92       	push	r4
    3468:	5f 92       	push	r5
    346a:	6f 92       	push	r6
    346c:	7f 92       	push	r7
    346e:	8f 92       	push	r8
    3470:	9f 92       	push	r9
    3472:	af 92       	push	r10
    3474:	bf 92       	push	r11
    3476:	cf 92       	push	r12
    3478:	df 92       	push	r13
    347a:	ef 92       	push	r14
    347c:	ff 92       	push	r15
    347e:	0f 93       	push	r16
    3480:	1f 93       	push	r17
    3482:	cf 93       	push	r28
    3484:	df 93       	push	r29
    3486:	00 d0       	rcall	.+0      	; 0x3488 <follow_path+0x26>
    3488:	00 d0       	rcall	.+0      	; 0x348a <follow_path+0x28>
    348a:	cd b7       	in	r28, 0x3d	; 61
    348c:	de b7       	in	r29, 0x3e	; 62
    348e:	5c 01       	movw	r10, r24
    3490:	69 83       	std	Y+1, r22	; 0x01
    3492:	7a 83       	std	Y+2, r23	; 0x02
    3494:	db 01       	movw	r26, r22
    3496:	8c 91       	ld	r24, X
    3498:	8f 32       	cpi	r24, 0x2F	; 47
    349a:	09 f4       	brne	.+2      	; 0x349e <follow_path+0x3c>
    349c:	75 c2       	rjmp	.+1258   	; 0x3988 <follow_path+0x526>
    349e:	8c 35       	cpi	r24, 0x5C	; 92
    34a0:	09 f4       	brne	.+2      	; 0x34a4 <follow_path+0x42>
    34a2:	72 c2       	rjmp	.+1252   	; 0x3988 <follow_path+0x526>
    34a4:	d5 01       	movw	r26, r10
    34a6:	ed 91       	ld	r30, X+
    34a8:	fc 91       	ld	r31, X
    34aa:	82 89       	ldd	r24, Z+18	; 0x12
    34ac:	93 89       	ldd	r25, Z+19	; 0x13
    34ae:	a4 89       	ldd	r26, Z+20	; 0x14
    34b0:	b5 89       	ldd	r27, Z+21	; 0x15
    34b2:	f5 01       	movw	r30, r10
    34b4:	86 83       	std	Z+6, r24	; 0x06
    34b6:	97 83       	std	Z+7, r25	; 0x07
    34b8:	a0 87       	std	Z+8, r26	; 0x08
    34ba:	b1 87       	std	Z+9, r27	; 0x09
    34bc:	a9 81       	ldd	r26, Y+1	; 0x01
    34be:	ba 81       	ldd	r27, Y+2	; 0x02
    34c0:	8c 91       	ld	r24, X
    34c2:	80 32       	cpi	r24, 0x20	; 32
    34c4:	08 f4       	brcc	.+2      	; 0x34c8 <follow_path+0x66>
    34c6:	71 c2       	rjmp	.+1250   	; 0x39aa <follow_path+0x548>
    34c8:	f5 01       	movw	r30, r10
    34ca:	c4 88       	ldd	r12, Z+20	; 0x14
    34cc:	d5 88       	ldd	r13, Z+21	; 0x15
    34ce:	89 81       	ldd	r24, Y+1	; 0x01
    34d0:	9a 81       	ldd	r25, Y+2	; 0x02
    34d2:	dc 01       	movw	r26, r24
    34d4:	2c 91       	ld	r18, X
    34d6:	01 96       	adiw	r24, 0x01	; 1
    34d8:	2f 32       	cpi	r18, 0x2F	; 47
    34da:	d9 f3       	breq	.-10     	; 0x34d2 <follow_path+0x70>
    34dc:	2c 35       	cpi	r18, 0x5C	; 92
    34de:	c9 f3       	breq	.-14     	; 0x34d2 <follow_path+0x70>
    34e0:	00 e2       	ldi	r16, 0x20	; 32
    34e2:	f6 01       	movw	r30, r12
    34e4:	00 83       	st	Z, r16
    34e6:	01 83       	std	Z+1, r16	; 0x01
    34e8:	02 83       	std	Z+2, r16	; 0x02
    34ea:	03 83       	std	Z+3, r16	; 0x03
    34ec:	04 83       	std	Z+4, r16	; 0x04
    34ee:	05 83       	std	Z+5, r16	; 0x05
    34f0:	06 83       	std	Z+6, r16	; 0x06
    34f2:	07 83       	std	Z+7, r16	; 0x07
    34f4:	00 87       	std	Z+8, r16	; 0x08
    34f6:	01 87       	std	Z+9, r16	; 0x09
    34f8:	02 87       	std	Z+10, r16	; 0x0a
    34fa:	8c 91       	ld	r24, X
    34fc:	8e 32       	cpi	r24, 0x2E	; 46
    34fe:	09 f4       	brne	.+2      	; 0x3502 <follow_path+0xa0>
    3500:	4c c0       	rjmp	.+152    	; 0x359a <follow_path+0x138>
    3502:	20 e0       	ldi	r18, 0x00	; 0
    3504:	30 e0       	ldi	r19, 0x00	; 0
    3506:	80 e0       	ldi	r24, 0x00	; 0
    3508:	90 e0       	ldi	r25, 0x00	; 0
    350a:	48 e0       	ldi	r20, 0x08	; 8
    350c:	50 e0       	ldi	r21, 0x00	; 0
    350e:	10 e0       	ldi	r17, 0x00	; 0
    3510:	bc 01       	movw	r22, r24
    3512:	6f 5f       	subi	r22, 0xFF	; 255
    3514:	7f 4f       	sbci	r23, 0xFF	; 255
    3516:	fd 01       	movw	r30, r26
    3518:	e8 0f       	add	r30, r24
    351a:	f9 1f       	adc	r31, r25
    351c:	00 81       	ld	r16, Z
    351e:	01 32       	cpi	r16, 0x21	; 33
    3520:	08 f4       	brcc	.+2      	; 0x3524 <follow_path+0xc2>
    3522:	dc c2       	rjmp	.+1464   	; 0x3adc <follow_path+0x67a>
    3524:	0f 32       	cpi	r16, 0x2F	; 47
    3526:	09 f4       	brne	.+2      	; 0x352a <follow_path+0xc8>
    3528:	ba c2       	rjmp	.+1396   	; 0x3a9e <follow_path+0x63c>
    352a:	0c 35       	cpi	r16, 0x5C	; 92
    352c:	09 f4       	brne	.+2      	; 0x3530 <follow_path+0xce>
    352e:	b7 c2       	rjmp	.+1390   	; 0x3a9e <follow_path+0x63c>
    3530:	0e 32       	cpi	r16, 0x2E	; 46
    3532:	09 f4       	brne	.+2      	; 0x3536 <follow_path+0xd4>
    3534:	e9 c2       	rjmp	.+1490   	; 0x3b08 <follow_path+0x6a6>
    3536:	24 17       	cp	r18, r20
    3538:	35 07       	cpc	r19, r21
    353a:	08 f0       	brcs	.+2      	; 0x353e <follow_path+0xdc>
    353c:	43 c0       	rjmp	.+134    	; 0x35c4 <follow_path+0x162>
    353e:	07 fd       	sbrc	r16, 7
    3540:	4e c2       	rjmp	.+1180   	; 0x39de <follow_path+0x57c>
    3542:	ef e7       	ldi	r30, 0x7F	; 127
    3544:	e0 0f       	add	r30, r16
    3546:	ef 31       	cpi	r30, 0x1F	; 31
    3548:	28 f0       	brcs	.+10     	; 0x3554 <follow_path+0xf2>
    354a:	e0 e2       	ldi	r30, 0x20	; 32
    354c:	e0 0f       	add	r30, r16
    354e:	ed 31       	cpi	r30, 0x1D	; 29
    3550:	08 f0       	brcs	.+2      	; 0x3554 <follow_path+0xf2>
    3552:	4f c0       	rjmp	.+158    	; 0x35f2 <follow_path+0x190>
    3554:	02 96       	adiw	r24, 0x02	; 2
    3556:	6a 0f       	add	r22, r26
    3558:	7b 1f       	adc	r23, r27
    355a:	fb 01       	movw	r30, r22
    355c:	f0 80       	ld	r15, Z
    355e:	60 ec       	ldi	r22, 0xC0	; 192
    3560:	6f 0d       	add	r22, r15
    3562:	6f 33       	cpi	r22, 0x3F	; 63
    3564:	20 f0       	brcs	.+8      	; 0x356e <follow_path+0x10c>
    3566:	60 e8       	ldi	r22, 0x80	; 128
    3568:	6f 0d       	add	r22, r15
    356a:	6d 37       	cpi	r22, 0x7D	; 125
    356c:	58 f5       	brcc	.+86     	; 0x35c4 <follow_path+0x162>
    356e:	ba 01       	movw	r22, r20
    3570:	61 50       	subi	r22, 0x01	; 1
    3572:	71 09       	sbc	r23, r1
    3574:	26 17       	cp	r18, r22
    3576:	37 07       	cpc	r19, r23
    3578:	28 f5       	brcc	.+74     	; 0x35c4 <follow_path+0x162>
    357a:	49 01       	movw	r8, r18
    357c:	ff ef       	ldi	r31, 0xFF	; 255
    357e:	8f 1a       	sub	r8, r31
    3580:	9f 0a       	sbc	r9, r31
    3582:	b6 01       	movw	r22, r12
    3584:	62 0f       	add	r22, r18
    3586:	73 1f       	adc	r23, r19
    3588:	fb 01       	movw	r30, r22
    358a:	00 83       	st	Z, r16
    358c:	2e 5f       	subi	r18, 0xFE	; 254
    358e:	3f 4f       	sbci	r19, 0xFF	; 255
    3590:	8c 0c       	add	r8, r12
    3592:	9d 1c       	adc	r9, r13
    3594:	f4 01       	movw	r30, r8
    3596:	f0 82       	st	Z, r15
    3598:	bb cf       	rjmp	.-138    	; 0x3510 <follow_path+0xae>
    359a:	f6 01       	movw	r30, r12
    359c:	80 83       	st	Z, r24
    359e:	11 96       	adiw	r26, 0x01	; 1
    35a0:	2c 91       	ld	r18, X
    35a2:	11 97       	sbiw	r26, 0x01	; 1
    35a4:	2e 32       	cpi	r18, 0x2E	; 46
    35a6:	09 f0       	breq	.+2      	; 0x35aa <follow_path+0x148>
    35a8:	a2 c2       	rjmp	.+1348   	; 0x3aee <follow_path+0x68c>
    35aa:	21 83       	std	Z+1, r18	; 0x01
    35ac:	12 96       	adiw	r26, 0x02	; 2
    35ae:	2c 91       	ld	r18, X
    35b0:	12 97       	sbiw	r26, 0x02	; 2
    35b2:	83 e0       	ldi	r24, 0x03	; 3
    35b4:	90 e0       	ldi	r25, 0x00	; 0
    35b6:	2f 32       	cpi	r18, 0x2F	; 47
    35b8:	d1 f1       	breq	.+116    	; 0x362e <follow_path+0x1cc>
    35ba:	2c 35       	cpi	r18, 0x5C	; 92
    35bc:	c1 f1       	breq	.+112    	; 0x362e <follow_path+0x1cc>
    35be:	21 32       	cpi	r18, 0x21	; 33
    35c0:	08 f4       	brcc	.+2      	; 0x35c4 <follow_path+0x162>
    35c2:	0f c2       	rjmp	.+1054   	; 0x39e2 <follow_path+0x580>
    35c4:	86 e0       	ldi	r24, 0x06	; 6
    35c6:	24 96       	adiw	r28, 0x04	; 4
    35c8:	cd bf       	out	0x3d, r28	; 61
    35ca:	de bf       	out	0x3e, r29	; 62
    35cc:	df 91       	pop	r29
    35ce:	cf 91       	pop	r28
    35d0:	1f 91       	pop	r17
    35d2:	0f 91       	pop	r16
    35d4:	ff 90       	pop	r15
    35d6:	ef 90       	pop	r14
    35d8:	df 90       	pop	r13
    35da:	cf 90       	pop	r12
    35dc:	bf 90       	pop	r11
    35de:	af 90       	pop	r10
    35e0:	9f 90       	pop	r9
    35e2:	8f 90       	pop	r8
    35e4:	7f 90       	pop	r7
    35e6:	6f 90       	pop	r6
    35e8:	5f 90       	pop	r5
    35ea:	4f 90       	pop	r4
    35ec:	3f 90       	pop	r3
    35ee:	2f 90       	pop	r2
    35f0:	08 95       	ret
    35f2:	e0 2e       	mov	r14, r16
    35f4:	f1 2c       	mov	r15, r1
    35f6:	f2 e2       	ldi	r31, 0x22	; 34
    35f8:	ef 16       	cp	r14, r31
    35fa:	f1 04       	cpc	r15, r1
    35fc:	19 f3       	breq	.-58     	; 0x35c4 <follow_path+0x162>
    35fe:	ef e0       	ldi	r30, 0x0F	; 15
    3600:	f1 e2       	ldi	r31, 0x21	; 33
    3602:	04 c0       	rjmp	.+8      	; 0x360c <follow_path+0x1aa>
    3604:	90 e0       	ldi	r25, 0x00	; 0
    3606:	e8 16       	cp	r14, r24
    3608:	f9 06       	cpc	r15, r25
    360a:	e1 f2       	breq	.-72     	; 0x35c4 <follow_path+0x162>
    360c:	81 91       	ld	r24, Z+
    360e:	81 11       	cpse	r24, r1
    3610:	f9 cf       	rjmp	.-14     	; 0x3604 <follow_path+0x1a2>
    3612:	8f eb       	ldi	r24, 0xBF	; 191
    3614:	80 0f       	add	r24, r16
    3616:	8a 31       	cpi	r24, 0x1A	; 26
    3618:	08 f0       	brcs	.+2      	; 0x361c <follow_path+0x1ba>
    361a:	39 c2       	rjmp	.+1138   	; 0x3a8e <follow_path+0x62c>
    361c:	12 60       	ori	r17, 0x02	; 2
    361e:	f6 01       	movw	r30, r12
    3620:	e2 0f       	add	r30, r18
    3622:	f3 1f       	adc	r31, r19
    3624:	00 83       	st	Z, r16
    3626:	2f 5f       	subi	r18, 0xFF	; 255
    3628:	3f 4f       	sbci	r19, 0xFF	; 255
    362a:	cb 01       	movw	r24, r22
    362c:	71 cf       	rjmp	.-286    	; 0x3510 <follow_path+0xae>
    362e:	fd 01       	movw	r30, r26
    3630:	e8 0f       	add	r30, r24
    3632:	f9 1f       	adc	r31, r25
    3634:	e9 83       	std	Y+1, r30	; 0x01
    3636:	fa 83       	std	Y+2, r31	; 0x02
    3638:	80 e2       	ldi	r24, 0x20	; 32
    363a:	d6 01       	movw	r26, r12
    363c:	1b 96       	adiw	r26, 0x0b	; 11
    363e:	8c 93       	st	X, r24
    3640:	60 e0       	ldi	r22, 0x00	; 0
    3642:	70 e0       	ldi	r23, 0x00	; 0
    3644:	c5 01       	movw	r24, r10
    3646:	0e 94 bb 11 	call	0x2376	; 0x2376 <dir_sdi>
    364a:	81 11       	cpse	r24, r1
    364c:	b8 c0       	rjmp	.+368    	; 0x37be <follow_path+0x35c>
    364e:	f5 01       	movw	r30, r10
    3650:	01 90       	ld	r0, Z+
    3652:	f0 81       	ld	r31, Z
    3654:	e0 2d       	mov	r30, r0
    3656:	eb 83       	std	Y+3, r30	; 0x03
    3658:	fc 83       	std	Y+4, r31	; 0x04
    365a:	d5 01       	movw	r26, r10
    365c:	1e 96       	adiw	r26, 0x0e	; 14
    365e:	4d 90       	ld	r4, X+
    3660:	5d 90       	ld	r5, X+
    3662:	6d 90       	ld	r6, X+
    3664:	7c 90       	ld	r7, X
    3666:	51 97       	sbiw	r26, 0x11	; 17
    3668:	c6 a4       	ldd	r12, Z+46	; 0x2e
    366a:	d7 a4       	ldd	r13, Z+47	; 0x2f
    366c:	e0 a8       	ldd	r14, Z+48	; 0x30
    366e:	f1 a8       	ldd	r15, Z+49	; 0x31
    3670:	c4 14       	cp	r12, r4
    3672:	d5 04       	cpc	r13, r5
    3674:	e6 04       	cpc	r14, r6
    3676:	f7 04       	cpc	r15, r7
    3678:	41 f1       	breq	.+80     	; 0x36ca <follow_path+0x268>
    367a:	84 81       	ldd	r24, Z+4	; 0x04
    367c:	81 11       	cpse	r24, r1
    367e:	e9 c0       	rjmp	.+466    	; 0x3852 <follow_path+0x3f0>
    3680:	2b 80       	ldd	r2, Y+3	; 0x03
    3682:	3c 80       	ldd	r3, Y+4	; 0x04
    3684:	f2 e3       	ldi	r31, 0x32	; 50
    3686:	2f 0e       	add	r2, r31
    3688:	31 1c       	adc	r3, r1
    368a:	01 e0       	ldi	r16, 0x01	; 1
    368c:	10 e0       	ldi	r17, 0x00	; 0
    368e:	a3 01       	movw	r20, r6
    3690:	92 01       	movw	r18, r4
    3692:	b1 01       	movw	r22, r2
    3694:	ab 81       	ldd	r26, Y+3	; 0x03
    3696:	bc 81       	ldd	r27, Y+4	; 0x04
    3698:	11 96       	adiw	r26, 0x01	; 1
    369a:	8c 91       	ld	r24, X
    369c:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    36a0:	88 23       	and	r24, r24
    36a2:	59 f0       	breq	.+22     	; 0x36ba <follow_path+0x258>
    36a4:	8f ef       	ldi	r24, 0xFF	; 255
    36a6:	9f ef       	ldi	r25, 0xFF	; 255
    36a8:	dc 01       	movw	r26, r24
    36aa:	eb 81       	ldd	r30, Y+3	; 0x03
    36ac:	fc 81       	ldd	r31, Y+4	; 0x04
    36ae:	86 a7       	std	Z+46, r24	; 0x2e
    36b0:	97 a7       	std	Z+47, r25	; 0x2f
    36b2:	a0 ab       	std	Z+48, r26	; 0x30
    36b4:	b1 ab       	std	Z+49, r27	; 0x31
    36b6:	81 e0       	ldi	r24, 0x01	; 1
    36b8:	86 cf       	rjmp	.-244    	; 0x35c6 <follow_path+0x164>
    36ba:	ab 81       	ldd	r26, Y+3	; 0x03
    36bc:	bc 81       	ldd	r27, Y+4	; 0x04
    36be:	9e 96       	adiw	r26, 0x2e	; 46
    36c0:	4d 92       	st	X+, r4
    36c2:	5d 92       	st	X+, r5
    36c4:	6d 92       	st	X+, r6
    36c6:	7c 92       	st	X, r7
    36c8:	d1 97       	sbiw	r26, 0x31	; 49
    36ca:	f5 01       	movw	r30, r10
    36cc:	62 89       	ldd	r22, Z+18	; 0x12
    36ce:	73 89       	ldd	r23, Z+19	; 0x13
    36d0:	db 01       	movw	r26, r22
    36d2:	2c 91       	ld	r18, X
    36d4:	22 23       	and	r18, r18
    36d6:	09 f4       	brne	.+2      	; 0x36da <follow_path+0x278>
    36d8:	52 c1       	rjmp	.+676    	; 0x397e <follow_path+0x51c>
    36da:	1b 96       	adiw	r26, 0x0b	; 11
    36dc:	4c 91       	ld	r20, X
    36de:	1b 97       	sbiw	r26, 0x0b	; 11
    36e0:	43 fd       	sbrc	r20, 3
    36e2:	63 c0       	rjmp	.+198    	; 0x37aa <follow_path+0x348>
    36e4:	04 88       	ldd	r0, Z+20	; 0x14
    36e6:	f5 89       	ldd	r31, Z+21	; 0x15
    36e8:	e0 2d       	mov	r30, r0
    36ea:	30 e0       	ldi	r19, 0x00	; 0
    36ec:	80 81       	ld	r24, Z
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	28 17       	cp	r18, r24
    36f2:	39 07       	cpc	r19, r25
    36f4:	09 f0       	breq	.+2      	; 0x36f8 <follow_path+0x296>
    36f6:	59 c0       	rjmp	.+178    	; 0x37aa <follow_path+0x348>
    36f8:	11 96       	adiw	r26, 0x01	; 1
    36fa:	9c 91       	ld	r25, X
    36fc:	11 97       	sbiw	r26, 0x01	; 1
    36fe:	81 81       	ldd	r24, Z+1	; 0x01
    3700:	98 13       	cpse	r25, r24
    3702:	53 c0       	rjmp	.+166    	; 0x37aa <follow_path+0x348>
    3704:	12 96       	adiw	r26, 0x02	; 2
    3706:	9c 91       	ld	r25, X
    3708:	12 97       	sbiw	r26, 0x02	; 2
    370a:	82 81       	ldd	r24, Z+2	; 0x02
    370c:	98 13       	cpse	r25, r24
    370e:	4d c0       	rjmp	.+154    	; 0x37aa <follow_path+0x348>
    3710:	13 96       	adiw	r26, 0x03	; 3
    3712:	9c 91       	ld	r25, X
    3714:	13 97       	sbiw	r26, 0x03	; 3
    3716:	83 81       	ldd	r24, Z+3	; 0x03
    3718:	98 13       	cpse	r25, r24
    371a:	47 c0       	rjmp	.+142    	; 0x37aa <follow_path+0x348>
    371c:	14 96       	adiw	r26, 0x04	; 4
    371e:	9c 91       	ld	r25, X
    3720:	14 97       	sbiw	r26, 0x04	; 4
    3722:	84 81       	ldd	r24, Z+4	; 0x04
    3724:	98 13       	cpse	r25, r24
    3726:	41 c0       	rjmp	.+130    	; 0x37aa <follow_path+0x348>
    3728:	15 96       	adiw	r26, 0x05	; 5
    372a:	9c 91       	ld	r25, X
    372c:	15 97       	sbiw	r26, 0x05	; 5
    372e:	85 81       	ldd	r24, Z+5	; 0x05
    3730:	98 13       	cpse	r25, r24
    3732:	3b c0       	rjmp	.+118    	; 0x37aa <follow_path+0x348>
    3734:	16 96       	adiw	r26, 0x06	; 6
    3736:	9c 91       	ld	r25, X
    3738:	16 97       	sbiw	r26, 0x06	; 6
    373a:	86 81       	ldd	r24, Z+6	; 0x06
    373c:	98 13       	cpse	r25, r24
    373e:	35 c0       	rjmp	.+106    	; 0x37aa <follow_path+0x348>
    3740:	17 96       	adiw	r26, 0x07	; 7
    3742:	9c 91       	ld	r25, X
    3744:	17 97       	sbiw	r26, 0x07	; 7
    3746:	87 81       	ldd	r24, Z+7	; 0x07
    3748:	98 13       	cpse	r25, r24
    374a:	2f c0       	rjmp	.+94     	; 0x37aa <follow_path+0x348>
    374c:	18 96       	adiw	r26, 0x08	; 8
    374e:	9c 91       	ld	r25, X
    3750:	18 97       	sbiw	r26, 0x08	; 8
    3752:	80 85       	ldd	r24, Z+8	; 0x08
    3754:	98 13       	cpse	r25, r24
    3756:	29 c0       	rjmp	.+82     	; 0x37aa <follow_path+0x348>
    3758:	19 96       	adiw	r26, 0x09	; 9
    375a:	9c 91       	ld	r25, X
    375c:	19 97       	sbiw	r26, 0x09	; 9
    375e:	81 85       	ldd	r24, Z+9	; 0x09
    3760:	98 13       	cpse	r25, r24
    3762:	23 c0       	rjmp	.+70     	; 0x37aa <follow_path+0x348>
    3764:	1a 96       	adiw	r26, 0x0a	; 10
    3766:	9c 91       	ld	r25, X
    3768:	82 85       	ldd	r24, Z+10	; 0x0a
    376a:	98 13       	cpse	r25, r24
    376c:	1e c0       	rjmp	.+60     	; 0x37aa <follow_path+0x348>
    376e:	83 85       	ldd	r24, Z+11	; 0x0b
    3770:	82 fd       	sbrc	r24, 2
    3772:	39 c0       	rjmp	.+114    	; 0x37e6 <follow_path+0x384>
    3774:	44 ff       	sbrs	r20, 4
    3776:	b9 c1       	rjmp	.+882    	; 0x3aea <follow_path+0x688>
    3778:	db 01       	movw	r26, r22
    377a:	5a 96       	adiw	r26, 0x1a	; 26
    377c:	8d 91       	ld	r24, X+
    377e:	9c 91       	ld	r25, X
    3780:	5b 97       	sbiw	r26, 0x1b	; 27
    3782:	6c 01       	movw	r12, r24
    3784:	e1 2c       	mov	r14, r1
    3786:	f1 2c       	mov	r15, r1
    3788:	d5 01       	movw	r26, r10
    378a:	2d 91       	ld	r18, X+
    378c:	3c 91       	ld	r19, X
    378e:	d9 01       	movw	r26, r18
    3790:	2c 91       	ld	r18, X
    3792:	23 30       	cpi	r18, 0x03	; 3
    3794:	09 f4       	brne	.+2      	; 0x3798 <follow_path+0x336>
    3796:	14 c1       	rjmp	.+552    	; 0x39c0 <follow_path+0x55e>
    3798:	d5 01       	movw	r26, r10
    379a:	16 96       	adiw	r26, 0x06	; 6
    379c:	cd 92       	st	X+, r12
    379e:	dd 92       	st	X+, r13
    37a0:	ed 92       	st	X+, r14
    37a2:	fc 92       	st	X, r15
    37a4:	19 97       	sbiw	r26, 0x09	; 9
    37a6:	6f 01       	movw	r12, r30
    37a8:	92 ce       	rjmp	.-732    	; 0x34ce <follow_path+0x6c>
    37aa:	f5 01       	movw	r30, r10
    37ac:	e4 80       	ldd	r14, Z+4	; 0x04
    37ae:	f5 80       	ldd	r15, Z+5	; 0x05
    37b0:	ff ef       	ldi	r31, 0xFF	; 255
    37b2:	ef 1a       	sub	r14, r31
    37b4:	ff 0a       	sbc	r15, r31
    37b6:	e1 14       	cp	r14, r1
    37b8:	f1 04       	cpc	r15, r1
    37ba:	b9 f4       	brne	.+46     	; 0x37ea <follow_path+0x388>
    37bc:	84 e0       	ldi	r24, 0x04	; 4
    37be:	d5 01       	movw	r26, r10
    37c0:	54 96       	adiw	r26, 0x14	; 20
    37c2:	ed 91       	ld	r30, X+
    37c4:	fc 91       	ld	r31, X
    37c6:	55 97       	sbiw	r26, 0x15	; 21
    37c8:	93 85       	ldd	r25, Z+11	; 0x0b
    37ca:	84 30       	cpi	r24, 0x04	; 4
    37cc:	09 f0       	breq	.+2      	; 0x37d0 <follow_path+0x36e>
    37ce:	fb ce       	rjmp	.-522    	; 0x35c6 <follow_path+0x164>
    37d0:	95 ff       	sbrs	r25, 5
    37d2:	96 c1       	rjmp	.+812    	; 0x3b00 <follow_path+0x69e>
    37d4:	f5 01       	movw	r30, r10
    37d6:	16 82       	std	Z+6, r1	; 0x06
    37d8:	17 82       	std	Z+7, r1	; 0x07
    37da:	10 86       	std	Z+8, r1	; 0x08
    37dc:	11 86       	std	Z+9, r1	; 0x09
    37de:	12 8a       	std	Z+18, r1	; 0x12
    37e0:	13 8a       	std	Z+19, r1	; 0x13
    37e2:	92 ff       	sbrs	r25, 2
    37e4:	71 ce       	rjmp	.-798    	; 0x34c8 <follow_path+0x66>
    37e6:	80 e0       	ldi	r24, 0x00	; 0
    37e8:	ee ce       	rjmp	.-548    	; 0x35c6 <follow_path+0x164>
    37ea:	d5 01       	movw	r26, r10
    37ec:	1e 96       	adiw	r26, 0x0e	; 14
    37ee:	4d 90       	ld	r4, X+
    37f0:	5d 90       	ld	r5, X+
    37f2:	6d 90       	ld	r6, X+
    37f4:	7c 90       	ld	r7, X
    37f6:	51 97       	sbiw	r26, 0x11	; 17
    37f8:	41 14       	cp	r4, r1
    37fa:	51 04       	cpc	r5, r1
    37fc:	61 04       	cpc	r6, r1
    37fe:	71 04       	cpc	r7, r1
    3800:	e9 f2       	breq	.-70     	; 0x37bc <follow_path+0x35a>
    3802:	67 01       	movw	r12, r14
    3804:	bf e0       	ldi	r27, 0x0F	; 15
    3806:	cb 22       	and	r12, r27
    3808:	dd 24       	eor	r13, r13
    380a:	c1 14       	cp	r12, r1
    380c:	d1 04       	cpc	r13, r1
    380e:	09 f4       	brne	.+2      	; 0x3812 <follow_path+0x3b0>
    3810:	6c c0       	rjmp	.+216    	; 0x38ea <follow_path+0x488>
    3812:	f5 01       	movw	r30, r10
    3814:	01 90       	ld	r0, Z+
    3816:	f0 81       	ld	r31, Z
    3818:	e0 2d       	mov	r30, r0
    381a:	eb 83       	std	Y+3, r30	; 0x03
    381c:	fc 83       	std	Y+4, r31	; 0x04
    381e:	f5 01       	movw	r30, r10
    3820:	e4 82       	std	Z+4, r14	; 0x04
    3822:	f5 82       	std	Z+5, r15	; 0x05
    3824:	cc 0c       	add	r12, r12
    3826:	dd 1c       	adc	r13, r13
    3828:	c2 94       	swap	r12
    382a:	d2 94       	swap	r13
    382c:	80 ef       	ldi	r24, 0xF0	; 240
    382e:	d8 22       	and	r13, r24
    3830:	dc 24       	eor	r13, r12
    3832:	c8 22       	and	r12, r24
    3834:	dc 24       	eor	r13, r12
    3836:	f2 e3       	ldi	r31, 0x32	; 50
    3838:	cf 0e       	add	r12, r31
    383a:	d1 1c       	adc	r13, r1
    383c:	0b 81       	ldd	r16, Y+3	; 0x03
    383e:	1c 81       	ldd	r17, Y+4	; 0x04
    3840:	c0 0e       	add	r12, r16
    3842:	d1 1e       	adc	r13, r17
    3844:	d5 01       	movw	r26, r10
    3846:	52 96       	adiw	r26, 0x12	; 18
    3848:	cd 92       	st	X+, r12
    384a:	dc 92       	st	X, r13
    384c:	53 97       	sbiw	r26, 0x13	; 19
    384e:	f8 01       	movw	r30, r16
    3850:	0b cf       	rjmp	.-490    	; 0x3668 <follow_path+0x206>
    3852:	1f 01       	movw	r2, r30
    3854:	f2 e3       	ldi	r31, 0x32	; 50
    3856:	2f 0e       	add	r2, r31
    3858:	31 1c       	adc	r3, r1
    385a:	01 e0       	ldi	r16, 0x01	; 1
    385c:	10 e0       	ldi	r17, 0x00	; 0
    385e:	a7 01       	movw	r20, r14
    3860:	96 01       	movw	r18, r12
    3862:	b1 01       	movw	r22, r2
    3864:	ab 81       	ldd	r26, Y+3	; 0x03
    3866:	bc 81       	ldd	r27, Y+4	; 0x04
    3868:	11 96       	adiw	r26, 0x01	; 1
    386a:	8c 91       	ld	r24, X
    386c:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    3870:	81 11       	cpse	r24, r1
    3872:	21 cf       	rjmp	.-446    	; 0x36b6 <follow_path+0x254>
    3874:	eb 81       	ldd	r30, Y+3	; 0x03
    3876:	fc 81       	ldd	r31, Y+4	; 0x04
    3878:	14 82       	std	Z+4, r1	; 0x04
    387a:	82 8d       	ldd	r24, Z+26	; 0x1a
    387c:	93 8d       	ldd	r25, Z+27	; 0x1b
    387e:	a4 8d       	ldd	r26, Z+28	; 0x1c
    3880:	b5 8d       	ldd	r27, Z+29	; 0x1d
    3882:	42 a1       	ldd	r20, Z+34	; 0x22
    3884:	53 a1       	ldd	r21, Z+35	; 0x23
    3886:	64 a1       	ldd	r22, Z+36	; 0x24
    3888:	75 a1       	ldd	r23, Z+37	; 0x25
    388a:	97 01       	movw	r18, r14
    388c:	86 01       	movw	r16, r12
    388e:	04 1b       	sub	r16, r20
    3890:	15 0b       	sbc	r17, r21
    3892:	26 0b       	sbc	r18, r22
    3894:	37 0b       	sbc	r19, r23
    3896:	08 17       	cp	r16, r24
    3898:	19 07       	cpc	r17, r25
    389a:	2a 07       	cpc	r18, r26
    389c:	3b 07       	cpc	r19, r27
    389e:	08 f0       	brcs	.+2      	; 0x38a2 <follow_path+0x440>
    38a0:	f4 ce       	rjmp	.-536    	; 0x368a <follow_path+0x228>
    38a2:	83 80       	ldd	r8, Z+3	; 0x03
    38a4:	91 2c       	mov	r9, r1
    38a6:	12 e0       	ldi	r17, 0x02	; 2
    38a8:	81 16       	cp	r8, r17
    38aa:	91 04       	cpc	r9, r1
    38ac:	38 f4       	brcc	.+14     	; 0x38bc <follow_path+0x45a>
    38ae:	ed ce       	rjmp	.-550    	; 0x368a <follow_path+0x228>
    38b0:	eb 81       	ldd	r30, Y+3	; 0x03
    38b2:	fc 81       	ldd	r31, Y+4	; 0x04
    38b4:	82 8d       	ldd	r24, Z+26	; 0x1a
    38b6:	93 8d       	ldd	r25, Z+27	; 0x1b
    38b8:	a4 8d       	ldd	r26, Z+28	; 0x1c
    38ba:	b5 8d       	ldd	r27, Z+29	; 0x1d
    38bc:	c8 0e       	add	r12, r24
    38be:	d9 1e       	adc	r13, r25
    38c0:	ea 1e       	adc	r14, r26
    38c2:	fb 1e       	adc	r15, r27
    38c4:	01 e0       	ldi	r16, 0x01	; 1
    38c6:	10 e0       	ldi	r17, 0x00	; 0
    38c8:	a7 01       	movw	r20, r14
    38ca:	96 01       	movw	r18, r12
    38cc:	b1 01       	movw	r22, r2
    38ce:	ab 81       	ldd	r26, Y+3	; 0x03
    38d0:	bc 81       	ldd	r27, Y+4	; 0x04
    38d2:	11 96       	adiw	r26, 0x01	; 1
    38d4:	8c 91       	ld	r24, X
    38d6:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    38da:	b1 e0       	ldi	r27, 0x01	; 1
    38dc:	8b 1a       	sub	r8, r27
    38de:	91 08       	sbc	r9, r1
    38e0:	e1 e0       	ldi	r30, 0x01	; 1
    38e2:	8e 16       	cp	r8, r30
    38e4:	91 04       	cpc	r9, r1
    38e6:	21 f7       	brne	.-56     	; 0x38b0 <follow_path+0x44e>
    38e8:	d0 ce       	rjmp	.-608    	; 0x368a <follow_path+0x228>
    38ea:	ff ef       	ldi	r31, 0xFF	; 255
    38ec:	4f 1a       	sub	r4, r31
    38ee:	5f 0a       	sbc	r5, r31
    38f0:	6f 0a       	sbc	r6, r31
    38f2:	7f 0a       	sbc	r7, r31
    38f4:	d5 01       	movw	r26, r10
    38f6:	1e 96       	adiw	r26, 0x0e	; 14
    38f8:	4d 92       	st	X+, r4
    38fa:	5d 92       	st	X+, r5
    38fc:	6d 92       	st	X+, r6
    38fe:	7c 92       	st	X, r7
    3900:	51 97       	sbiw	r26, 0x11	; 17
    3902:	1a 96       	adiw	r26, 0x0a	; 10
    3904:	4d 91       	ld	r20, X+
    3906:	5d 91       	ld	r21, X+
    3908:	6d 91       	ld	r22, X+
    390a:	7c 91       	ld	r23, X
    390c:	1d 97       	sbiw	r26, 0x0d	; 13
    390e:	41 15       	cp	r20, r1
    3910:	51 05       	cpc	r21, r1
    3912:	61 05       	cpc	r22, r1
    3914:	71 05       	cpc	r23, r1
    3916:	59 f4       	brne	.+22     	; 0x392e <follow_path+0x4cc>
    3918:	ed 91       	ld	r30, X+
    391a:	fc 91       	ld	r31, X
    391c:	eb 83       	std	Y+3, r30	; 0x03
    391e:	fc 83       	std	Y+4, r31	; 0x04
    3920:	80 85       	ldd	r24, Z+8	; 0x08
    3922:	91 85       	ldd	r25, Z+9	; 0x09
    3924:	e8 16       	cp	r14, r24
    3926:	f9 06       	cpc	r15, r25
    3928:	08 f0       	brcs	.+2      	; 0x392c <follow_path+0x4ca>
    392a:	48 cf       	rjmp	.-368    	; 0x37bc <follow_path+0x35a>
    392c:	78 cf       	rjmp	.-272    	; 0x381e <follow_path+0x3bc>
    392e:	d5 01       	movw	r26, r10
    3930:	0d 90       	ld	r0, X+
    3932:	bc 91       	ld	r27, X
    3934:	a0 2d       	mov	r26, r0
    3936:	ab 83       	std	Y+3, r26	; 0x03
    3938:	bc 83       	std	Y+4, r27	; 0x04
    393a:	12 96       	adiw	r26, 0x02	; 2
    393c:	8c 91       	ld	r24, X
    393e:	90 e0       	ldi	r25, 0x00	; 0
    3940:	01 97       	sbiw	r24, 0x01	; 1
    3942:	97 01       	movw	r18, r14
    3944:	32 95       	swap	r19
    3946:	22 95       	swap	r18
    3948:	2f 70       	andi	r18, 0x0F	; 15
    394a:	23 27       	eor	r18, r19
    394c:	3f 70       	andi	r19, 0x0F	; 15
    394e:	23 27       	eor	r18, r19
    3950:	82 23       	and	r24, r18
    3952:	93 23       	and	r25, r19
    3954:	89 2b       	or	r24, r25
    3956:	09 f0       	breq	.+2      	; 0x395a <follow_path+0x4f8>
    3958:	62 cf       	rjmp	.-316    	; 0x381e <follow_path+0x3bc>
    395a:	42 30       	cpi	r20, 0x02	; 2
    395c:	51 05       	cpc	r21, r1
    395e:	61 05       	cpc	r22, r1
    3960:	71 05       	cpc	r23, r1
    3962:	58 f0       	brcs	.+22     	; 0x397a <follow_path+0x518>
    3964:	eb 81       	ldd	r30, Y+3	; 0x03
    3966:	fc 81       	ldd	r31, Y+4	; 0x04
    3968:	86 89       	ldd	r24, Z+22	; 0x16
    396a:	97 89       	ldd	r25, Z+23	; 0x17
    396c:	a0 8d       	ldd	r26, Z+24	; 0x18
    396e:	b1 8d       	ldd	r27, Z+25	; 0x19
    3970:	48 17       	cp	r20, r24
    3972:	59 07       	cpc	r21, r25
    3974:	6a 07       	cpc	r22, r26
    3976:	7b 07       	cpc	r23, r27
    3978:	d8 f1       	brcs	.+118    	; 0x39f0 <follow_path+0x58e>
    397a:	82 e0       	ldi	r24, 0x02	; 2
    397c:	20 cf       	rjmp	.-448    	; 0x37be <follow_path+0x35c>
    397e:	04 88       	ldd	r0, Z+20	; 0x14
    3980:	f5 89       	ldd	r31, Z+21	; 0x15
    3982:	e0 2d       	mov	r30, r0
    3984:	93 85       	ldd	r25, Z+11	; 0x0b
    3986:	24 cf       	rjmp	.-440    	; 0x37d0 <follow_path+0x36e>
    3988:	e9 81       	ldd	r30, Y+1	; 0x01
    398a:	fa 81       	ldd	r31, Y+2	; 0x02
    398c:	31 96       	adiw	r30, 0x01	; 1
    398e:	e9 83       	std	Y+1, r30	; 0x01
    3990:	fa 83       	std	Y+2, r31	; 0x02
    3992:	d5 01       	movw	r26, r10
    3994:	16 96       	adiw	r26, 0x06	; 6
    3996:	1d 92       	st	X+, r1
    3998:	1d 92       	st	X+, r1
    399a:	1d 92       	st	X+, r1
    399c:	1c 92       	st	X, r1
    399e:	19 97       	sbiw	r26, 0x09	; 9
    39a0:	df 01       	movw	r26, r30
    39a2:	8c 91       	ld	r24, X
    39a4:	80 32       	cpi	r24, 0x20	; 32
    39a6:	08 f0       	brcs	.+2      	; 0x39aa <follow_path+0x548>
    39a8:	8f cd       	rjmp	.-1250   	; 0x34c8 <follow_path+0x66>
    39aa:	60 e0       	ldi	r22, 0x00	; 0
    39ac:	70 e0       	ldi	r23, 0x00	; 0
    39ae:	c5 01       	movw	r24, r10
    39b0:	0e 94 bb 11 	call	0x2376	; 0x2376 <dir_sdi>
    39b4:	d5 01       	movw	r26, r10
    39b6:	52 96       	adiw	r26, 0x12	; 18
    39b8:	1d 92       	st	X+, r1
    39ba:	1c 92       	st	X, r1
    39bc:	53 97       	sbiw	r26, 0x13	; 19
    39be:	03 ce       	rjmp	.-1018   	; 0x35c6 <follow_path+0x164>
    39c0:	db 01       	movw	r26, r22
    39c2:	54 96       	adiw	r26, 0x14	; 20
    39c4:	4d 91       	ld	r20, X+
    39c6:	5c 91       	ld	r21, X
    39c8:	55 97       	sbiw	r26, 0x15	; 21
    39ca:	60 e0       	ldi	r22, 0x00	; 0
    39cc:	70 e0       	ldi	r23, 0x00	; 0
    39ce:	ba 01       	movw	r22, r20
    39d0:	55 27       	eor	r21, r21
    39d2:	44 27       	eor	r20, r20
    39d4:	c4 2a       	or	r12, r20
    39d6:	d5 2a       	or	r13, r21
    39d8:	e6 2a       	or	r14, r22
    39da:	f7 2a       	or	r15, r23
    39dc:	dd ce       	rjmp	.-582    	; 0x3798 <follow_path+0x336>
    39de:	13 60       	ori	r17, 0x03	; 3
    39e0:	b0 cd       	rjmp	.-1184   	; 0x3542 <follow_path+0xe0>
    39e2:	8d 01       	movw	r16, r26
    39e4:	08 0f       	add	r16, r24
    39e6:	19 1f       	adc	r17, r25
    39e8:	09 83       	std	Y+1, r16	; 0x01
    39ea:	1a 83       	std	Y+2, r17	; 0x02
    39ec:	84 e2       	ldi	r24, 0x24	; 36
    39ee:	25 ce       	rjmp	.-950    	; 0x363a <follow_path+0x1d8>
    39f0:	cf 01       	movw	r24, r30
    39f2:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <get_fat.part.4>
    39f6:	62 30       	cpi	r22, 0x02	; 2
    39f8:	71 05       	cpc	r23, r1
    39fa:	81 05       	cpc	r24, r1
    39fc:	91 05       	cpc	r25, r1
    39fe:	08 f4       	brcc	.+2      	; 0x3a02 <follow_path+0x5a0>
    3a00:	bc cf       	rjmp	.-136    	; 0x397a <follow_path+0x518>
    3a02:	6f 3f       	cpi	r22, 0xFF	; 255
    3a04:	ff ef       	ldi	r31, 0xFF	; 255
    3a06:	7f 07       	cpc	r23, r31
    3a08:	8f 07       	cpc	r24, r31
    3a0a:	9f 07       	cpc	r25, r31
    3a0c:	09 f4       	brne	.+2      	; 0x3a10 <follow_path+0x5ae>
    3a0e:	76 c0       	rjmp	.+236    	; 0x3afc <follow_path+0x69a>
    3a10:	d5 01       	movw	r26, r10
    3a12:	0d 90       	ld	r0, X+
    3a14:	bc 91       	ld	r27, X
    3a16:	a0 2d       	mov	r26, r0
    3a18:	ab 83       	std	Y+3, r26	; 0x03
    3a1a:	bc 83       	std	Y+4, r27	; 0x04
    3a1c:	56 96       	adiw	r26, 0x16	; 22
    3a1e:	4d 90       	ld	r4, X+
    3a20:	5d 90       	ld	r5, X+
    3a22:	6d 90       	ld	r6, X+
    3a24:	7c 90       	ld	r7, X
    3a26:	59 97       	sbiw	r26, 0x19	; 25
    3a28:	64 15       	cp	r22, r4
    3a2a:	75 05       	cpc	r23, r5
    3a2c:	86 05       	cpc	r24, r6
    3a2e:	97 05       	cpc	r25, r7
    3a30:	08 f0       	brcs	.+2      	; 0x3a34 <follow_path+0x5d2>
    3a32:	c4 ce       	rjmp	.-632    	; 0x37bc <follow_path+0x35a>
    3a34:	f5 01       	movw	r30, r10
    3a36:	62 87       	std	Z+10, r22	; 0x0a
    3a38:	73 87       	std	Z+11, r23	; 0x0b
    3a3a:	84 87       	std	Z+12, r24	; 0x0c
    3a3c:	95 87       	std	Z+13, r25	; 0x0d
    3a3e:	9b 01       	movw	r18, r22
    3a40:	ac 01       	movw	r20, r24
    3a42:	22 50       	subi	r18, 0x02	; 2
    3a44:	31 09       	sbc	r19, r1
    3a46:	41 09       	sbc	r20, r1
    3a48:	51 09       	sbc	r21, r1
    3a4a:	f2 e0       	ldi	r31, 0x02	; 2
    3a4c:	4f 1a       	sub	r4, r31
    3a4e:	51 08       	sbc	r5, r1
    3a50:	61 08       	sbc	r6, r1
    3a52:	71 08       	sbc	r7, r1
    3a54:	24 15       	cp	r18, r4
    3a56:	35 05       	cpc	r19, r5
    3a58:	46 05       	cpc	r20, r6
    3a5a:	57 05       	cpc	r21, r7
    3a5c:	08 f0       	brcs	.+2      	; 0x3a60 <follow_path+0x5fe>
    3a5e:	4a c0       	rjmp	.+148    	; 0x3af4 <follow_path+0x692>
    3a60:	fd 01       	movw	r30, r26
    3a62:	a2 81       	ldd	r26, Z+2	; 0x02
    3a64:	b0 e0       	ldi	r27, 0x00	; 0
    3a66:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    3a6a:	2b 01       	movw	r4, r22
    3a6c:	3c 01       	movw	r6, r24
    3a6e:	82 a5       	ldd	r24, Z+42	; 0x2a
    3a70:	93 a5       	ldd	r25, Z+43	; 0x2b
    3a72:	a4 a5       	ldd	r26, Z+44	; 0x2c
    3a74:	b5 a5       	ldd	r27, Z+45	; 0x2d
    3a76:	48 0e       	add	r4, r24
    3a78:	59 1e       	adc	r5, r25
    3a7a:	6a 1e       	adc	r6, r26
    3a7c:	7b 1e       	adc	r7, r27
    3a7e:	d5 01       	movw	r26, r10
    3a80:	1e 96       	adiw	r26, 0x0e	; 14
    3a82:	4d 92       	st	X+, r4
    3a84:	5d 92       	st	X+, r5
    3a86:	6d 92       	st	X+, r6
    3a88:	7c 92       	st	X, r7
    3a8a:	51 97       	sbiw	r26, 0x11	; 17
    3a8c:	c8 ce       	rjmp	.-624    	; 0x381e <follow_path+0x3bc>
    3a8e:	8f e9       	ldi	r24, 0x9F	; 159
    3a90:	80 0f       	add	r24, r16
    3a92:	8a 31       	cpi	r24, 0x1A	; 26
    3a94:	08 f0       	brcs	.+2      	; 0x3a98 <follow_path+0x636>
    3a96:	c3 cd       	rjmp	.-1146   	; 0x361e <follow_path+0x1bc>
    3a98:	11 60       	ori	r17, 0x01	; 1
    3a9a:	00 52       	subi	r16, 0x20	; 32
    3a9c:	c0 cd       	rjmp	.-1152   	; 0x361e <follow_path+0x1bc>
    3a9e:	cd 01       	movw	r24, r26
    3aa0:	86 0f       	add	r24, r22
    3aa2:	97 1f       	adc	r25, r23
    3aa4:	89 83       	std	Y+1, r24	; 0x01
    3aa6:	9a 83       	std	Y+2, r25	; 0x02
    3aa8:	80 e0       	ldi	r24, 0x00	; 0
    3aaa:	23 2b       	or	r18, r19
    3aac:	09 f4       	brne	.+2      	; 0x3ab0 <follow_path+0x64e>
    3aae:	8a cd       	rjmp	.-1260   	; 0x35c4 <follow_path+0x162>
    3ab0:	d6 01       	movw	r26, r12
    3ab2:	9c 91       	ld	r25, X
    3ab4:	95 3e       	cpi	r25, 0xE5	; 229
    3ab6:	11 f4       	brne	.+4      	; 0x3abc <follow_path+0x65a>
    3ab8:	e5 e0       	ldi	r30, 0x05	; 5
    3aba:	ec 93       	st	X, r30
    3abc:	48 30       	cpi	r20, 0x08	; 8
    3abe:	51 05       	cpc	r21, r1
    3ac0:	11 f4       	brne	.+4      	; 0x3ac6 <follow_path+0x664>
    3ac2:	11 0f       	add	r17, r17
    3ac4:	11 0f       	add	r17, r17
    3ac6:	91 2f       	mov	r25, r17
    3ac8:	93 70       	andi	r25, 0x03	; 3
    3aca:	91 30       	cpi	r25, 0x01	; 1
    3acc:	09 f4       	brne	.+2      	; 0x3ad0 <follow_path+0x66e>
    3ace:	80 61       	ori	r24, 0x10	; 16
    3ad0:	1c 70       	andi	r17, 0x0C	; 12
    3ad2:	14 30       	cpi	r17, 0x04	; 4
    3ad4:	09 f0       	breq	.+2      	; 0x3ad8 <follow_path+0x676>
    3ad6:	b1 cd       	rjmp	.-1182   	; 0x363a <follow_path+0x1d8>
    3ad8:	88 60       	ori	r24, 0x08	; 8
    3ada:	af cd       	rjmp	.-1186   	; 0x363a <follow_path+0x1d8>
    3adc:	fd 01       	movw	r30, r26
    3ade:	e6 0f       	add	r30, r22
    3ae0:	f7 1f       	adc	r31, r23
    3ae2:	e9 83       	std	Y+1, r30	; 0x01
    3ae4:	fa 83       	std	Y+2, r31	; 0x02
    3ae6:	84 e0       	ldi	r24, 0x04	; 4
    3ae8:	e0 cf       	rjmp	.-64     	; 0x3aaa <follow_path+0x648>
    3aea:	85 e0       	ldi	r24, 0x05	; 5
    3aec:	6c cd       	rjmp	.-1320   	; 0x35c6 <follow_path+0x164>
    3aee:	82 e0       	ldi	r24, 0x02	; 2
    3af0:	90 e0       	ldi	r25, 0x00	; 0
    3af2:	61 cd       	rjmp	.-1342   	; 0x35b6 <follow_path+0x154>
    3af4:	41 2c       	mov	r4, r1
    3af6:	51 2c       	mov	r5, r1
    3af8:	32 01       	movw	r6, r4
    3afa:	c1 cf       	rjmp	.-126    	; 0x3a7e <follow_path+0x61c>
    3afc:	81 e0       	ldi	r24, 0x01	; 1
    3afe:	5f ce       	rjmp	.-834    	; 0x37be <follow_path+0x35c>
    3b00:	92 ff       	sbrs	r25, 2
    3b02:	f3 cf       	rjmp	.-26     	; 0x3aea <follow_path+0x688>
    3b04:	84 e0       	ldi	r24, 0x04	; 4
    3b06:	5f cd       	rjmp	.-1346   	; 0x35c6 <follow_path+0x164>
    3b08:	48 30       	cpi	r20, 0x08	; 8
    3b0a:	51 05       	cpc	r21, r1
    3b0c:	09 f0       	breq	.+2      	; 0x3b10 <follow_path+0x6ae>
    3b0e:	5a cd       	rjmp	.-1356   	; 0x35c4 <follow_path+0x162>
    3b10:	11 0f       	add	r17, r17
    3b12:	11 0f       	add	r17, r17
    3b14:	cb 01       	movw	r24, r22
    3b16:	28 e0       	ldi	r18, 0x08	; 8
    3b18:	30 e0       	ldi	r19, 0x00	; 0
    3b1a:	4b e0       	ldi	r20, 0x0B	; 11
    3b1c:	50 e0       	ldi	r21, 0x00	; 0
    3b1e:	f8 cc       	rjmp	.-1552   	; 0x3510 <follow_path+0xae>

00003b20 <find_volume>:
    3b20:	2f 92       	push	r2
    3b22:	3f 92       	push	r3
    3b24:	4f 92       	push	r4
    3b26:	5f 92       	push	r5
    3b28:	6f 92       	push	r6
    3b2a:	7f 92       	push	r7
    3b2c:	8f 92       	push	r8
    3b2e:	9f 92       	push	r9
    3b30:	af 92       	push	r10
    3b32:	bf 92       	push	r11
    3b34:	cf 92       	push	r12
    3b36:	df 92       	push	r13
    3b38:	ef 92       	push	r14
    3b3a:	ff 92       	push	r15
    3b3c:	0f 93       	push	r16
    3b3e:	1f 93       	push	r17
    3b40:	cf 93       	push	r28
    3b42:	df 93       	push	r29
    3b44:	cd b7       	in	r28, 0x3d	; 61
    3b46:	de b7       	in	r29, 0x3e	; 62
    3b48:	a1 97       	sbiw	r28, 0x21	; 33
    3b4a:	cd bf       	out	0x3d, r28	; 61
    3b4c:	de bf       	out	0x3e, r29	; 62
    3b4e:	dc 01       	movw	r26, r24
    3b50:	1d 92       	st	X+, r1
    3b52:	1c 92       	st	X, r1
    3b54:	db 01       	movw	r26, r22
    3b56:	ed 91       	ld	r30, X+
    3b58:	fc 91       	ld	r31, X
    3b5a:	30 97       	sbiw	r30, 0x00	; 0
    3b5c:	a1 f1       	breq	.+104    	; 0x3bc6 <find_volume+0xa6>
    3b5e:	00 81       	ld	r16, Z
    3b60:	01 32       	cpi	r16, 0x21	; 33
    3b62:	60 f0       	brcs	.+24     	; 0x3b7c <find_volume+0x5c>
    3b64:	0a 33       	cpi	r16, 0x3A	; 58
    3b66:	79 f1       	breq	.+94     	; 0x3bc6 <find_volume+0xa6>
    3b68:	df 01       	movw	r26, r30
    3b6a:	11 96       	adiw	r26, 0x01	; 1
    3b6c:	fd 01       	movw	r30, r26
    3b6e:	02 c0       	rjmp	.+4      	; 0x3b74 <find_volume+0x54>
    3b70:	5a 33       	cpi	r21, 0x3A	; 58
    3b72:	29 f1       	breq	.+74     	; 0x3bbe <find_volume+0x9e>
    3b74:	9f 01       	movw	r18, r30
    3b76:	51 91       	ld	r21, Z+
    3b78:	51 32       	cpi	r21, 0x21	; 33
    3b7a:	d0 f7       	brcc	.-12     	; 0x3b70 <find_volume+0x50>
    3b7c:	00 91 d1 22 	lds	r16, 0x22D1
    3b80:	10 e0       	ldi	r17, 0x00	; 0
    3b82:	f8 01       	movw	r30, r16
    3b84:	ee 0f       	add	r30, r30
    3b86:	ff 1f       	adc	r31, r31
    3b88:	ec 52       	subi	r30, 0x2C	; 44
    3b8a:	fd 4d       	sbci	r31, 0xDD	; 221
    3b8c:	a0 80       	ld	r10, Z
    3b8e:	b1 80       	ldd	r11, Z+1	; 0x01
    3b90:	a1 14       	cp	r10, r1
    3b92:	b1 04       	cpc	r11, r1
    3b94:	f1 f1       	breq	.+124    	; 0x3c12 <find_volume+0xf2>
    3b96:	dc 01       	movw	r26, r24
    3b98:	ad 92       	st	X+, r10
    3b9a:	bc 92       	st	X, r11
    3b9c:	f5 01       	movw	r30, r10
    3b9e:	80 81       	ld	r24, Z
    3ba0:	88 23       	and	r24, r24
    3ba2:	41 f1       	breq	.+80     	; 0x3bf4 <find_volume+0xd4>
    3ba4:	81 81       	ldd	r24, Z+1	; 0x01
    3ba6:	49 a3       	std	Y+33, r20	; 0x21
    3ba8:	0e 94 a0 32 	call	0x6540	; 0x6540 <disk_status>
    3bac:	49 a1       	ldd	r20, Y+33	; 0x21
    3bae:	80 fd       	sbrc	r24, 0
    3bb0:	21 c0       	rjmp	.+66     	; 0x3bf4 <find_volume+0xd4>
    3bb2:	44 23       	and	r20, r20
    3bb4:	61 f1       	breq	.+88     	; 0x3c0e <find_volume+0xee>
    3bb6:	82 ff       	sbrs	r24, 2
    3bb8:	2a c0       	rjmp	.+84     	; 0x3c0e <find_volume+0xee>
    3bba:	8a e0       	ldi	r24, 0x0A	; 10
    3bbc:	05 c0       	rjmp	.+10     	; 0x3bc8 <find_volume+0xa8>
    3bbe:	2a 17       	cp	r18, r26
    3bc0:	3b 07       	cpc	r19, r27
    3bc2:	09 f4       	brne	.+2      	; 0x3bc6 <find_volume+0xa6>
    3bc4:	63 c0       	rjmp	.+198    	; 0x3c8c <find_volume+0x16c>
    3bc6:	8b e0       	ldi	r24, 0x0B	; 11
    3bc8:	a1 96       	adiw	r28, 0x21	; 33
    3bca:	cd bf       	out	0x3d, r28	; 61
    3bcc:	de bf       	out	0x3e, r29	; 62
    3bce:	df 91       	pop	r29
    3bd0:	cf 91       	pop	r28
    3bd2:	1f 91       	pop	r17
    3bd4:	0f 91       	pop	r16
    3bd6:	ff 90       	pop	r15
    3bd8:	ef 90       	pop	r14
    3bda:	df 90       	pop	r13
    3bdc:	cf 90       	pop	r12
    3bde:	bf 90       	pop	r11
    3be0:	af 90       	pop	r10
    3be2:	9f 90       	pop	r9
    3be4:	8f 90       	pop	r8
    3be6:	7f 90       	pop	r7
    3be8:	6f 90       	pop	r6
    3bea:	5f 90       	pop	r5
    3bec:	4f 90       	pop	r4
    3bee:	3f 90       	pop	r3
    3bf0:	2f 90       	pop	r2
    3bf2:	08 95       	ret
    3bf4:	d5 01       	movw	r26, r10
    3bf6:	1c 92       	st	X, r1
    3bf8:	11 96       	adiw	r26, 0x01	; 1
    3bfa:	0c 93       	st	X, r16
    3bfc:	80 2f       	mov	r24, r16
    3bfe:	49 a3       	std	Y+33, r20	; 0x21
    3c00:	0e 94 df 31 	call	0x63be	; 0x63be <disk_initialize>
    3c04:	49 a1       	ldd	r20, Y+33	; 0x21
    3c06:	80 ff       	sbrs	r24, 0
    3c08:	06 c0       	rjmp	.+12     	; 0x3c16 <find_volume+0xf6>
    3c0a:	83 e0       	ldi	r24, 0x03	; 3
    3c0c:	dd cf       	rjmp	.-70     	; 0x3bc8 <find_volume+0xa8>
    3c0e:	80 e0       	ldi	r24, 0x00	; 0
    3c10:	db cf       	rjmp	.-74     	; 0x3bc8 <find_volume+0xa8>
    3c12:	8c e0       	ldi	r24, 0x0C	; 12
    3c14:	d9 cf       	rjmp	.-78     	; 0x3bc8 <find_volume+0xa8>
    3c16:	44 23       	and	r20, r20
    3c18:	11 f0       	breq	.+4      	; 0x3c1e <find_volume+0xfe>
    3c1a:	82 fd       	sbrc	r24, 2
    3c1c:	ce cf       	rjmp	.-100    	; 0x3bba <find_volume+0x9a>
    3c1e:	f5 01       	movw	r30, r10
    3c20:	14 82       	std	Z+4, r1	; 0x04
    3c22:	44 24       	eor	r4, r4
    3c24:	4a 94       	dec	r4
    3c26:	54 2c       	mov	r5, r4
    3c28:	32 01       	movw	r6, r4
    3c2a:	46 a6       	std	Z+46, r4	; 0x2e
    3c2c:	57 a6       	std	Z+47, r5	; 0x2f
    3c2e:	60 aa       	std	Z+48, r6	; 0x30
    3c30:	71 aa       	std	Z+49, r7	; 0x31
    3c32:	15 01       	movw	r2, r10
    3c34:	b2 e3       	ldi	r27, 0x32	; 50
    3c36:	2b 0e       	add	r2, r27
    3c38:	31 1c       	adc	r3, r1
    3c3a:	01 e0       	ldi	r16, 0x01	; 1
    3c3c:	10 e0       	ldi	r17, 0x00	; 0
    3c3e:	20 e0       	ldi	r18, 0x00	; 0
    3c40:	30 e0       	ldi	r19, 0x00	; 0
    3c42:	a9 01       	movw	r20, r18
    3c44:	b1 01       	movw	r22, r2
    3c46:	81 81       	ldd	r24, Z+1	; 0x01
    3c48:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    3c4c:	81 11       	cpse	r24, r1
    3c4e:	2b c0       	rjmp	.+86     	; 0x3ca6 <find_volume+0x186>
    3c50:	d5 01       	movw	r26, r10
    3c52:	9e 96       	adiw	r26, 0x2e	; 46
    3c54:	1d 92       	st	X+, r1
    3c56:	1d 92       	st	X+, r1
    3c58:	1d 92       	st	X+, r1
    3c5a:	1c 92       	st	X, r1
    3c5c:	d1 97       	sbiw	r26, 0x31	; 49
    3c5e:	25 01       	movw	r4, r10
    3c60:	b0 ed       	ldi	r27, 0xD0	; 208
    3c62:	4b 1a       	sub	r4, r27
    3c64:	bd ef       	ldi	r27, 0xFD	; 253
    3c66:	5b 0a       	sbc	r5, r27
    3c68:	f2 01       	movw	r30, r4
    3c6a:	80 81       	ld	r24, Z
    3c6c:	91 81       	ldd	r25, Z+1	; 0x01
    3c6e:	85 35       	cpi	r24, 0x55	; 85
    3c70:	9a 4a       	sbci	r25, 0xAA	; 170
    3c72:	09 f4       	brne	.+2      	; 0x3c76 <find_volume+0x156>
    3c74:	6e c1       	rjmp	.+732    	; 0x3f52 <find_volume+0x432>
    3c76:	82 e0       	ldi	r24, 0x02	; 2
    3c78:	c1 2c       	mov	r12, r1
    3c7a:	d1 2c       	mov	r13, r1
    3c7c:	76 01       	movw	r14, r12
    3c7e:	83 30       	cpi	r24, 0x03	; 3
    3c80:	09 f4       	brne	.+2      	; 0x3c84 <find_volume+0x164>
    3c82:	11 c2       	rjmp	.+1058   	; 0x40a6 <find_volume+0x586>
    3c84:	88 23       	and	r24, r24
    3c86:	d9 f0       	breq	.+54     	; 0x3cbe <find_volume+0x19e>
    3c88:	8d e0       	ldi	r24, 0x0D	; 13
    3c8a:	9e cf       	rjmp	.-196    	; 0x3bc8 <find_volume+0xa8>
    3c8c:	20 ed       	ldi	r18, 0xD0	; 208
    3c8e:	20 0f       	add	r18, r16
    3c90:	22 30       	cpi	r18, 0x02	; 2
    3c92:	08 f0       	brcs	.+2      	; 0x3c96 <find_volume+0x176>
    3c94:	98 cf       	rjmp	.-208    	; 0x3bc6 <find_volume+0xa6>
    3c96:	10 e0       	ldi	r17, 0x00	; 0
    3c98:	00 53       	subi	r16, 0x30	; 48
    3c9a:	11 09       	sbc	r17, r1
    3c9c:	11 96       	adiw	r26, 0x01	; 1
    3c9e:	fb 01       	movw	r30, r22
    3ca0:	a0 83       	st	Z, r26
    3ca2:	b1 83       	std	Z+1, r27	; 0x01
    3ca4:	6e cf       	rjmp	.-292    	; 0x3b82 <find_volume+0x62>
    3ca6:	d5 01       	movw	r26, r10
    3ca8:	9e 96       	adiw	r26, 0x2e	; 46
    3caa:	4d 92       	st	X+, r4
    3cac:	5d 92       	st	X+, r5
    3cae:	6d 92       	st	X+, r6
    3cb0:	7c 92       	st	X, r7
    3cb2:	d1 97       	sbiw	r26, 0x31	; 49
    3cb4:	83 e0       	ldi	r24, 0x03	; 3
    3cb6:	e0 cf       	rjmp	.-64     	; 0x3c78 <find_volume+0x158>
    3cb8:	c1 2c       	mov	r12, r1
    3cba:	d1 2c       	mov	r13, r1
    3cbc:	76 01       	movw	r14, r12
    3cbe:	d5 01       	movw	r26, r10
    3cc0:	dd 96       	adiw	r26, 0x3d	; 61
    3cc2:	8d 91       	ld	r24, X+
    3cc4:	9c 91       	ld	r25, X
    3cc6:	de 97       	sbiw	r26, 0x3e	; 62
    3cc8:	81 15       	cp	r24, r1
    3cca:	92 40       	sbci	r25, 0x02	; 2
    3ccc:	e9 f6       	brne	.-70     	; 0x3c88 <find_volume+0x168>
    3cce:	f5 01       	movw	r30, r10
    3cd0:	e8 5b       	subi	r30, 0xB8	; 184
    3cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd4:	80 81       	ld	r24, Z
    3cd6:	91 81       	ldd	r25, Z+1	; 0x01
    3cd8:	3c 01       	movw	r6, r24
    3cda:	81 2c       	mov	r8, r1
    3cdc:	91 2c       	mov	r9, r1
    3cde:	6d 8a       	std	Y+21, r6	; 0x15
    3ce0:	7e 8a       	std	Y+22, r7	; 0x16
    3ce2:	8f 8a       	std	Y+23, r8	; 0x17
    3ce4:	98 8e       	std	Y+24, r9	; 0x18
    3ce6:	61 14       	cp	r6, r1
    3ce8:	71 04       	cpc	r7, r1
    3cea:	81 04       	cpc	r8, r1
    3cec:	91 04       	cpc	r9, r1
    3cee:	49 f4       	brne	.+18     	; 0x3d02 <find_volume+0x1e2>
    3cf0:	3e 96       	adiw	r30, 0x0e	; 14
    3cf2:	60 80       	ld	r6, Z
    3cf4:	71 80       	ldd	r7, Z+1	; 0x01
    3cf6:	82 80       	ldd	r8, Z+2	; 0x02
    3cf8:	93 80       	ldd	r9, Z+3	; 0x03
    3cfa:	6d 8a       	std	Y+21, r6	; 0x15
    3cfc:	7e 8a       	std	Y+22, r7	; 0x16
    3cfe:	8f 8a       	std	Y+23, r8	; 0x17
    3d00:	98 8e       	std	Y+24, r9	; 0x18
    3d02:	d5 01       	movw	r26, r10
    3d04:	5a 96       	adiw	r26, 0x1a	; 26
    3d06:	6d 92       	st	X+, r6
    3d08:	7d 92       	st	X+, r7
    3d0a:	8d 92       	st	X+, r8
    3d0c:	9c 92       	st	X, r9
    3d0e:	5d 97       	sbiw	r26, 0x1d	; 29
    3d10:	f5 01       	movw	r30, r10
    3d12:	ee 5b       	subi	r30, 0xBE	; 190
    3d14:	ff 4f       	sbci	r31, 0xFF	; 255
    3d16:	a0 81       	ld	r26, Z
    3d18:	f5 01       	movw	r30, r10
    3d1a:	a3 83       	std	Z+3, r26	; 0x03
    3d1c:	8f ef       	ldi	r24, 0xFF	; 255
    3d1e:	8a 0f       	add	r24, r26
    3d20:	82 30       	cpi	r24, 0x02	; 2
    3d22:	08 f0       	brcs	.+2      	; 0x3d26 <find_volume+0x206>
    3d24:	b1 cf       	rjmp	.-158    	; 0x3c88 <find_volume+0x168>
    3d26:	b0 e0       	ldi	r27, 0x00	; 0
    3d28:	a4 01       	movw	r20, r8
    3d2a:	93 01       	movw	r18, r6
    3d2c:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    3d30:	6d 8f       	std	Y+29, r22	; 0x1d
    3d32:	7e 8f       	std	Y+30, r23	; 0x1e
    3d34:	8f 8f       	std	Y+31, r24	; 0x1f
    3d36:	98 a3       	std	Y+32, r25	; 0x20
    3d38:	27 ad       	ldd	r18, Z+63	; 0x3f
    3d3a:	22 83       	std	Z+2, r18	; 0x02
    3d3c:	22 23       	and	r18, r18
    3d3e:	09 f4       	brne	.+2      	; 0x3d42 <find_volume+0x222>
    3d40:	a3 cf       	rjmp	.-186    	; 0x3c88 <find_volume+0x168>
    3d42:	42 2f       	mov	r20, r18
    3d44:	50 e0       	ldi	r21, 0x00	; 0
    3d46:	ca 01       	movw	r24, r20
    3d48:	01 97       	sbiw	r24, 0x01	; 1
    3d4a:	84 23       	and	r24, r20
    3d4c:	95 23       	and	r25, r21
    3d4e:	89 2b       	or	r24, r25
    3d50:	09 f0       	breq	.+2      	; 0x3d54 <find_volume+0x234>
    3d52:	9a cf       	rjmp	.-204    	; 0x3c88 <find_volume+0x168>
    3d54:	ed 5b       	subi	r30, 0xBD	; 189
    3d56:	ff 4f       	sbci	r31, 0xFF	; 255
    3d58:	00 81       	ld	r16, Z
    3d5a:	11 81       	ldd	r17, Z+1	; 0x01
    3d5c:	d5 01       	movw	r26, r10
    3d5e:	18 96       	adiw	r26, 0x08	; 8
    3d60:	0d 93       	st	X+, r16
    3d62:	1c 93       	st	X, r17
    3d64:	19 97       	sbiw	r26, 0x09	; 9
    3d66:	c8 01       	movw	r24, r16
    3d68:	8f 70       	andi	r24, 0x0F	; 15
    3d6a:	99 27       	eor	r25, r25
    3d6c:	89 2b       	or	r24, r25
    3d6e:	09 f0       	breq	.+2      	; 0x3d72 <find_volume+0x252>
    3d70:	8b cf       	rjmp	.-234    	; 0x3c88 <find_volume+0x168>
    3d72:	32 96       	adiw	r30, 0x02	; 2
    3d74:	60 81       	ld	r22, Z
    3d76:	71 81       	ldd	r23, Z+1	; 0x01
    3d78:	cb 01       	movw	r24, r22
    3d7a:	a0 e0       	ldi	r26, 0x00	; 0
    3d7c:	b0 e0       	ldi	r27, 0x00	; 0
    3d7e:	00 97       	sbiw	r24, 0x00	; 0
    3d80:	a1 05       	cpc	r26, r1
    3d82:	b1 05       	cpc	r27, r1
    3d84:	29 f4       	brne	.+10     	; 0x3d90 <find_volume+0x270>
    3d86:	3d 96       	adiw	r30, 0x0d	; 13
    3d88:	80 81       	ld	r24, Z
    3d8a:	91 81       	ldd	r25, Z+1	; 0x01
    3d8c:	a2 81       	ldd	r26, Z+2	; 0x02
    3d8e:	b3 81       	ldd	r27, Z+3	; 0x03
    3d90:	f5 01       	movw	r30, r10
    3d92:	e0 5c       	subi	r30, 0xC0	; 192
    3d94:	ff 4f       	sbci	r31, 0xFF	; 255
    3d96:	40 81       	ld	r20, Z
    3d98:	51 81       	ldd	r21, Z+1	; 0x01
    3d9a:	41 15       	cp	r20, r1
    3d9c:	51 05       	cpc	r21, r1
    3d9e:	09 f4       	brne	.+2      	; 0x3da2 <find_volume+0x282>
    3da0:	73 cf       	rjmp	.-282    	; 0x3c88 <find_volume+0x168>
    3da2:	3a 01       	movw	r6, r20
    3da4:	81 2c       	mov	r8, r1
    3da6:	91 2c       	mov	r9, r1
    3da8:	69 8e       	std	Y+25, r6	; 0x19
    3daa:	7a 8e       	std	Y+26, r7	; 0x1a
    3dac:	8b 8e       	std	Y+27, r8	; 0x1b
    3dae:	9c 8e       	std	Y+28, r9	; 0x1c
    3db0:	a8 01       	movw	r20, r16
    3db2:	52 95       	swap	r21
    3db4:	42 95       	swap	r20
    3db6:	4f 70       	andi	r20, 0x0F	; 15
    3db8:	45 27       	eor	r20, r21
    3dba:	5f 70       	andi	r21, 0x0F	; 15
    3dbc:	45 27       	eor	r20, r21
    3dbe:	64 0e       	add	r6, r20
    3dc0:	75 1e       	adc	r7, r21
    3dc2:	81 1c       	adc	r8, r1
    3dc4:	91 1c       	adc	r9, r1
    3dc6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    3dc8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    3dca:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3dcc:	78 a1       	ldd	r23, Y+32	; 0x20
    3dce:	64 0e       	add	r6, r20
    3dd0:	75 1e       	adc	r7, r21
    3dd2:	86 1e       	adc	r8, r22
    3dd4:	97 1e       	adc	r9, r23
    3dd6:	69 8a       	std	Y+17, r6	; 0x11
    3dd8:	7a 8a       	std	Y+18, r7	; 0x12
    3dda:	8b 8a       	std	Y+19, r8	; 0x13
    3ddc:	9c 8a       	std	Y+20, r9	; 0x14
    3dde:	86 15       	cp	r24, r6
    3de0:	97 05       	cpc	r25, r7
    3de2:	a8 05       	cpc	r26, r8
    3de4:	b9 05       	cpc	r27, r9
    3de6:	08 f4       	brcc	.+2      	; 0x3dea <find_volume+0x2ca>
    3de8:	4f cf       	rjmp	.-354    	; 0x3c88 <find_volume+0x168>
    3dea:	bc 01       	movw	r22, r24
    3dec:	cd 01       	movw	r24, r26
    3dee:	66 19       	sub	r22, r6
    3df0:	77 09       	sbc	r23, r7
    3df2:	88 09       	sbc	r24, r8
    3df4:	99 09       	sbc	r25, r9
    3df6:	30 e0       	ldi	r19, 0x00	; 0
    3df8:	40 e0       	ldi	r20, 0x00	; 0
    3dfa:	50 e0       	ldi	r21, 0x00	; 0
    3dfc:	0e 94 53 3c 	call	0x78a6	; 0x78a6 <__udivmodsi4>
    3e00:	21 15       	cp	r18, r1
    3e02:	31 05       	cpc	r19, r1
    3e04:	41 05       	cpc	r20, r1
    3e06:	51 05       	cpc	r21, r1
    3e08:	09 f4       	brne	.+2      	; 0x3e0c <find_volume+0x2ec>
    3e0a:	3e cf       	rjmp	.-388    	; 0x3c88 <find_volume+0x168>
    3e0c:	26 3f       	cpi	r18, 0xF6	; 246
    3e0e:	6f e0       	ldi	r22, 0x0F	; 15
    3e10:	36 07       	cpc	r19, r22
    3e12:	41 05       	cpc	r20, r1
    3e14:	51 05       	cpc	r21, r1
    3e16:	08 f4       	brcc	.+2      	; 0x3e1a <find_volume+0x2fa>
    3e18:	ff c2       	rjmp	.+1534   	; 0x4418 <find_volume+0x8f8>
    3e1a:	26 3f       	cpi	r18, 0xF6	; 246
    3e1c:	7f ef       	ldi	r23, 0xFF	; 255
    3e1e:	37 07       	cpc	r19, r23
    3e20:	41 05       	cpc	r20, r1
    3e22:	51 05       	cpc	r21, r1
    3e24:	08 f0       	brcs	.+2      	; 0x3e28 <find_volume+0x308>
    3e26:	b4 c2       	rjmp	.+1384   	; 0x4390 <find_volume+0x870>
    3e28:	62 e0       	ldi	r22, 0x02	; 2
    3e2a:	36 2e       	mov	r3, r22
    3e2c:	29 01       	movw	r4, r18
    3e2e:	3a 01       	movw	r6, r20
    3e30:	f2 e0       	ldi	r31, 0x02	; 2
    3e32:	4f 0e       	add	r4, r31
    3e34:	51 1c       	adc	r5, r1
    3e36:	61 1c       	adc	r6, r1
    3e38:	71 1c       	adc	r7, r1
    3e3a:	d5 01       	movw	r26, r10
    3e3c:	56 96       	adiw	r26, 0x16	; 22
    3e3e:	4d 92       	st	X+, r4
    3e40:	5d 92       	st	X+, r5
    3e42:	6d 92       	st	X+, r6
    3e44:	7c 92       	st	X, r7
    3e46:	59 97       	sbiw	r26, 0x19	; 25
    3e48:	f5 01       	movw	r30, r10
    3e4a:	c6 8e       	std	Z+30, r12	; 0x1e
    3e4c:	d7 8e       	std	Z+31, r13	; 0x1f
    3e4e:	e0 a2       	std	Z+32, r14	; 0x20
    3e50:	f1 a2       	std	Z+33, r15	; 0x21
    3e52:	89 8d       	ldd	r24, Y+25	; 0x19
    3e54:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3e56:	ab 8d       	ldd	r26, Y+27	; 0x1b
    3e58:	bc 8d       	ldd	r27, Y+28	; 0x1c
    3e5a:	8c 0d       	add	r24, r12
    3e5c:	9d 1d       	adc	r25, r13
    3e5e:	ae 1d       	adc	r26, r14
    3e60:	bf 1d       	adc	r27, r15
    3e62:	82 a3       	std	Z+34, r24	; 0x22
    3e64:	93 a3       	std	Z+35, r25	; 0x23
    3e66:	a4 a3       	std	Z+36, r26	; 0x24
    3e68:	b5 a3       	std	Z+37, r27	; 0x25
    3e6a:	49 89       	ldd	r20, Y+17	; 0x11
    3e6c:	5a 89       	ldd	r21, Y+18	; 0x12
    3e6e:	6b 89       	ldd	r22, Y+19	; 0x13
    3e70:	7c 89       	ldd	r23, Y+20	; 0x14
    3e72:	4c 0d       	add	r20, r12
    3e74:	5d 1d       	adc	r21, r13
    3e76:	6e 1d       	adc	r22, r14
    3e78:	7f 1d       	adc	r23, r15
    3e7a:	42 a7       	std	Z+42, r20	; 0x2a
    3e7c:	53 a7       	std	Z+43, r21	; 0x2b
    3e7e:	64 a7       	std	Z+44, r22	; 0x2c
    3e80:	75 a7       	std	Z+45, r23	; 0x2d
    3e82:	01 2b       	or	r16, r17
    3e84:	09 f4       	brne	.+2      	; 0x3e88 <find_volume+0x368>
    3e86:	00 cf       	rjmp	.-512    	; 0x3c88 <find_volume+0x168>
    3e88:	2d 8d       	ldd	r18, Y+29	; 0x1d
    3e8a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    3e8c:	4f 8d       	ldd	r20, Y+31	; 0x1f
    3e8e:	58 a1       	ldd	r21, Y+32	; 0x20
    3e90:	82 0f       	add	r24, r18
    3e92:	93 1f       	adc	r25, r19
    3e94:	a4 1f       	adc	r26, r20
    3e96:	b5 1f       	adc	r27, r21
    3e98:	f5 01       	movw	r30, r10
    3e9a:	86 a3       	std	Z+38, r24	; 0x26
    3e9c:	97 a3       	std	Z+39, r25	; 0x27
    3e9e:	a0 a7       	std	Z+40, r26	; 0x28
    3ea0:	b1 a7       	std	Z+41, r27	; 0x29
    3ea2:	f2 e0       	ldi	r31, 0x02	; 2
    3ea4:	3f 16       	cp	r3, r31
    3ea6:	09 f4       	brne	.+2      	; 0x3eaa <find_volume+0x38a>
    3ea8:	6c c2       	rjmp	.+1240   	; 0x4382 <find_volume+0x862>
    3eaa:	a3 e0       	ldi	r26, 0x03	; 3
    3eac:	b0 e0       	ldi	r27, 0x00	; 0
    3eae:	a3 01       	movw	r20, r6
    3eb0:	92 01       	movw	r18, r4
    3eb2:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    3eb6:	96 95       	lsr	r25
    3eb8:	87 95       	ror	r24
    3eba:	77 95       	ror	r23
    3ebc:	67 95       	ror	r22
    3ebe:	21 e0       	ldi	r18, 0x01	; 1
    3ec0:	42 22       	and	r4, r18
    3ec2:	55 24       	eor	r5, r5
    3ec4:	66 24       	eor	r6, r6
    3ec6:	77 24       	eor	r7, r7
    3ec8:	64 0d       	add	r22, r4
    3eca:	75 1d       	adc	r23, r5
    3ecc:	86 1d       	adc	r24, r6
    3ece:	97 1d       	adc	r25, r7
    3ed0:	33 24       	eor	r3, r3
    3ed2:	33 94       	inc	r3
    3ed4:	dc 01       	movw	r26, r24
    3ed6:	cb 01       	movw	r24, r22
    3ed8:	81 50       	subi	r24, 0x01	; 1
    3eda:	9e 4f       	sbci	r25, 0xFE	; 254
    3edc:	af 4f       	sbci	r26, 0xFF	; 255
    3ede:	bf 4f       	sbci	r27, 0xFF	; 255
    3ee0:	19 e0       	ldi	r17, 0x09	; 9
    3ee2:	b6 95       	lsr	r27
    3ee4:	a7 95       	ror	r26
    3ee6:	97 95       	ror	r25
    3ee8:	87 95       	ror	r24
    3eea:	1a 95       	dec	r17
    3eec:	d1 f7       	brne	.-12     	; 0x3ee2 <find_volume+0x3c2>
    3eee:	6d 88       	ldd	r6, Y+21	; 0x15
    3ef0:	7e 88       	ldd	r7, Y+22	; 0x16
    3ef2:	8f 88       	ldd	r8, Y+23	; 0x17
    3ef4:	98 8c       	ldd	r9, Y+24	; 0x18
    3ef6:	68 16       	cp	r6, r24
    3ef8:	79 06       	cpc	r7, r25
    3efa:	8a 06       	cpc	r8, r26
    3efc:	9b 06       	cpc	r9, r27
    3efe:	08 f4       	brcc	.+2      	; 0x3f02 <find_volume+0x3e2>
    3f00:	c3 ce       	rjmp	.-634    	; 0x3c88 <find_volume+0x168>
    3f02:	8f ef       	ldi	r24, 0xFF	; 255
    3f04:	9f ef       	ldi	r25, 0xFF	; 255
    3f06:	dc 01       	movw	r26, r24
    3f08:	f5 01       	movw	r30, r10
    3f0a:	86 87       	std	Z+14, r24	; 0x0e
    3f0c:	97 87       	std	Z+15, r25	; 0x0f
    3f0e:	a0 8b       	std	Z+16, r26	; 0x10
    3f10:	b1 8b       	std	Z+17, r27	; 0x11
    3f12:	82 87       	std	Z+10, r24	; 0x0a
    3f14:	93 87       	std	Z+11, r25	; 0x0b
    3f16:	a4 87       	std	Z+12, r26	; 0x0c
    3f18:	b5 87       	std	Z+13, r27	; 0x0d
    3f1a:	80 e8       	ldi	r24, 0x80	; 128
    3f1c:	85 83       	std	Z+5, r24	; 0x05
    3f1e:	f3 e0       	ldi	r31, 0x03	; 3
    3f20:	3f 16       	cp	r3, r31
    3f22:	09 f4       	brne	.+2      	; 0x3f26 <find_volume+0x406>
    3f24:	e1 c1       	rjmp	.+962    	; 0x42e8 <find_volume+0x7c8>
    3f26:	d5 01       	movw	r26, r10
    3f28:	3c 92       	st	X, r3
    3f2a:	80 91 d2 22 	lds	r24, 0x22D2
    3f2e:	90 91 d3 22 	lds	r25, 0x22D3
    3f32:	01 96       	adiw	r24, 0x01	; 1
    3f34:	80 93 d2 22 	sts	0x22D2, r24
    3f38:	90 93 d3 22 	sts	0x22D3, r25
    3f3c:	16 96       	adiw	r26, 0x06	; 6
    3f3e:	8d 93       	st	X+, r24
    3f40:	9c 93       	st	X, r25
    3f42:	17 97       	sbiw	r26, 0x07	; 7
    3f44:	f5 01       	movw	r30, r10
    3f46:	12 8a       	std	Z+18, r1	; 0x12
    3f48:	13 8a       	std	Z+19, r1	; 0x13
    3f4a:	14 8a       	std	Z+20, r1	; 0x14
    3f4c:	15 8a       	std	Z+21, r1	; 0x15
    3f4e:	80 e0       	ldi	r24, 0x00	; 0
    3f50:	3b ce       	rjmp	.-906    	; 0x3bc8 <find_volume+0xa8>
    3f52:	95 01       	movw	r18, r10
    3f54:	28 59       	subi	r18, 0x98	; 152
    3f56:	3f 4f       	sbci	r19, 0xFF	; 255
    3f58:	29 8b       	std	Y+17, r18	; 0x11
    3f5a:	3a 8b       	std	Y+18, r19	; 0x12
    3f5c:	f9 01       	movw	r30, r18
    3f5e:	80 81       	ld	r24, Z
    3f60:	91 81       	ldd	r25, Z+1	; 0x01
    3f62:	a2 81       	ldd	r26, Z+2	; 0x02
    3f64:	b3 81       	ldd	r27, Z+3	; 0x03
    3f66:	bb 27       	eor	r27, r27
    3f68:	86 34       	cpi	r24, 0x46	; 70
    3f6a:	91 44       	sbci	r25, 0x41	; 65
    3f6c:	a4 45       	sbci	r26, 0x54	; 84
    3f6e:	b1 05       	cpc	r27, r1
    3f70:	09 f4       	brne	.+2      	; 0x3f74 <find_volume+0x454>
    3f72:	b8 c1       	rjmp	.+880    	; 0x42e4 <find_volume+0x7c4>
    3f74:	24 5e       	subi	r18, 0xE4	; 228
    3f76:	3f 4f       	sbci	r19, 0xFF	; 255
    3f78:	2d 8b       	std	Y+21, r18	; 0x15
    3f7a:	3e 8b       	std	Y+22, r19	; 0x16
    3f7c:	f9 01       	movw	r30, r18
    3f7e:	80 81       	ld	r24, Z
    3f80:	91 81       	ldd	r25, Z+1	; 0x01
    3f82:	a2 81       	ldd	r26, Z+2	; 0x02
    3f84:	b3 81       	ldd	r27, Z+3	; 0x03
    3f86:	bb 27       	eor	r27, r27
    3f88:	86 34       	cpi	r24, 0x46	; 70
    3f8a:	91 44       	sbci	r25, 0x41	; 65
    3f8c:	a4 45       	sbci	r26, 0x54	; 84
    3f8e:	b1 05       	cpc	r27, r1
    3f90:	09 f4       	brne	.+2      	; 0x3f94 <find_volume+0x474>
    3f92:	92 ce       	rjmp	.-732    	; 0x3cb8 <find_volume+0x198>
    3f94:	f5 01       	movw	r30, r10
    3f96:	ec 50       	subi	r30, 0x0C	; 12
    3f98:	fe 4f       	sbci	r31, 0xFE	; 254
    3f9a:	80 81       	ld	r24, Z
    3f9c:	88 23       	and	r24, r24
    3f9e:	09 f4       	brne	.+2      	; 0x3fa2 <find_volume+0x482>
    3fa0:	9d c1       	rjmp	.+826    	; 0x42dc <find_volume+0x7bc>
    3fa2:	34 96       	adiw	r30, 0x04	; 4
    3fa4:	80 81       	ld	r24, Z
    3fa6:	91 81       	ldd	r25, Z+1	; 0x01
    3fa8:	a2 81       	ldd	r26, Z+2	; 0x02
    3faa:	b3 81       	ldd	r27, Z+3	; 0x03
    3fac:	89 83       	std	Y+1, r24	; 0x01
    3fae:	9a 83       	std	Y+2, r25	; 0x02
    3fb0:	ab 83       	std	Y+3, r26	; 0x03
    3fb2:	bc 83       	std	Y+4, r27	; 0x04
    3fb4:	f5 01       	movw	r30, r10
    3fb6:	ec 5f       	subi	r30, 0xFC	; 252
    3fb8:	fd 4f       	sbci	r31, 0xFD	; 253
    3fba:	80 81       	ld	r24, Z
    3fbc:	88 23       	and	r24, r24
    3fbe:	09 f4       	brne	.+2      	; 0x3fc2 <find_volume+0x4a2>
    3fc0:	89 c1       	rjmp	.+786    	; 0x42d4 <find_volume+0x7b4>
    3fc2:	34 96       	adiw	r30, 0x04	; 4
    3fc4:	80 81       	ld	r24, Z
    3fc6:	91 81       	ldd	r25, Z+1	; 0x01
    3fc8:	a2 81       	ldd	r26, Z+2	; 0x02
    3fca:	b3 81       	ldd	r27, Z+3	; 0x03
    3fcc:	8d 83       	std	Y+5, r24	; 0x05
    3fce:	9e 83       	std	Y+6, r25	; 0x06
    3fd0:	af 83       	std	Y+7, r26	; 0x07
    3fd2:	b8 87       	std	Y+8, r27	; 0x08
    3fd4:	f5 01       	movw	r30, r10
    3fd6:	ec 5e       	subi	r30, 0xEC	; 236
    3fd8:	fd 4f       	sbci	r31, 0xFD	; 253
    3fda:	80 81       	ld	r24, Z
    3fdc:	88 23       	and	r24, r24
    3fde:	09 f4       	brne	.+2      	; 0x3fe2 <find_volume+0x4c2>
    3fe0:	75 c1       	rjmp	.+746    	; 0x42cc <find_volume+0x7ac>
    3fe2:	34 96       	adiw	r30, 0x04	; 4
    3fe4:	80 81       	ld	r24, Z
    3fe6:	91 81       	ldd	r25, Z+1	; 0x01
    3fe8:	a2 81       	ldd	r26, Z+2	; 0x02
    3fea:	b3 81       	ldd	r27, Z+3	; 0x03
    3fec:	89 87       	std	Y+9, r24	; 0x09
    3fee:	9a 87       	std	Y+10, r25	; 0x0a
    3ff0:	ab 87       	std	Y+11, r26	; 0x0b
    3ff2:	bc 87       	std	Y+12, r27	; 0x0c
    3ff4:	f5 01       	movw	r30, r10
    3ff6:	ec 5d       	subi	r30, 0xDC	; 220
    3ff8:	fd 4f       	sbci	r31, 0xFD	; 253
    3ffa:	80 81       	ld	r24, Z
    3ffc:	88 23       	and	r24, r24
    3ffe:	09 f4       	brne	.+2      	; 0x4002 <find_volume+0x4e2>
    4000:	61 c1       	rjmp	.+706    	; 0x42c4 <find_volume+0x7a4>
    4002:	34 96       	adiw	r30, 0x04	; 4
    4004:	80 81       	ld	r24, Z
    4006:	91 81       	ldd	r25, Z+1	; 0x01
    4008:	a2 81       	ldd	r26, Z+2	; 0x02
    400a:	b3 81       	ldd	r27, Z+3	; 0x03
    400c:	8d 87       	std	Y+13, r24	; 0x0d
    400e:	9e 87       	std	Y+14, r25	; 0x0e
    4010:	af 87       	std	Y+15, r26	; 0x0f
    4012:	b8 8b       	std	Y+16, r27	; 0x10
    4014:	c9 80       	ldd	r12, Y+1	; 0x01
    4016:	da 80       	ldd	r13, Y+2	; 0x02
    4018:	eb 80       	ldd	r14, Y+3	; 0x03
    401a:	fc 80       	ldd	r15, Y+4	; 0x04
    401c:	c1 14       	cp	r12, r1
    401e:	d1 04       	cpc	r13, r1
    4020:	e1 04       	cpc	r14, r1
    4022:	f1 04       	cpc	r15, r1
    4024:	09 f0       	breq	.+2      	; 0x4028 <find_volume+0x508>
    4026:	41 c0       	rjmp	.+130    	; 0x40aa <find_volume+0x58a>
    4028:	cd 80       	ldd	r12, Y+5	; 0x05
    402a:	de 80       	ldd	r13, Y+6	; 0x06
    402c:	ef 80       	ldd	r14, Y+7	; 0x07
    402e:	f8 84       	ldd	r15, Y+8	; 0x08
    4030:	c1 14       	cp	r12, r1
    4032:	d1 04       	cpc	r13, r1
    4034:	e1 04       	cpc	r14, r1
    4036:	f1 04       	cpc	r15, r1
    4038:	09 f0       	breq	.+2      	; 0x403c <find_volume+0x51c>
    403a:	7d c0       	rjmp	.+250    	; 0x4136 <find_volume+0x616>
    403c:	c9 84       	ldd	r12, Y+9	; 0x09
    403e:	da 84       	ldd	r13, Y+10	; 0x0a
    4040:	eb 84       	ldd	r14, Y+11	; 0x0b
    4042:	fc 84       	ldd	r15, Y+12	; 0x0c
    4044:	c1 14       	cp	r12, r1
    4046:	d1 04       	cpc	r13, r1
    4048:	e1 04       	cpc	r14, r1
    404a:	f1 04       	cpc	r15, r1
    404c:	09 f0       	breq	.+2      	; 0x4050 <find_volume+0x530>
    404e:	53 c0       	rjmp	.+166    	; 0x40f6 <find_volume+0x5d6>
    4050:	cd 84       	ldd	r12, Y+13	; 0x0d
    4052:	de 84       	ldd	r13, Y+14	; 0x0e
    4054:	ef 84       	ldd	r14, Y+15	; 0x0f
    4056:	f8 88       	ldd	r15, Y+16	; 0x10
    4058:	c1 14       	cp	r12, r1
    405a:	d1 04       	cpc	r13, r1
    405c:	e1 04       	cpc	r14, r1
    405e:	f1 04       	cpc	r15, r1
    4060:	09 f4       	brne	.+2      	; 0x4064 <find_volume+0x544>
    4062:	12 ce       	rjmp	.-988    	; 0x3c88 <find_volume+0x168>
    4064:	f5 01       	movw	r30, r10
    4066:	14 82       	std	Z+4, r1	; 0x04
    4068:	66 24       	eor	r6, r6
    406a:	6a 94       	dec	r6
    406c:	76 2c       	mov	r7, r6
    406e:	43 01       	movw	r8, r6
    4070:	66 a6       	std	Z+46, r6	; 0x2e
    4072:	77 a6       	std	Z+47, r7	; 0x2f
    4074:	80 aa       	std	Z+48, r8	; 0x30
    4076:	91 aa       	std	Z+49, r9	; 0x31
    4078:	bf ef       	ldi	r27, 0xFF	; 255
    407a:	cb 16       	cp	r12, r27
    407c:	db 06       	cpc	r13, r27
    407e:	eb 06       	cpc	r14, r27
    4080:	fb 06       	cpc	r15, r27
    4082:	09 f4       	brne	.+2      	; 0x4086 <find_volume+0x566>
    4084:	aa c0       	rjmp	.+340    	; 0x41da <find_volume+0x6ba>
    4086:	01 e0       	ldi	r16, 0x01	; 1
    4088:	10 e0       	ldi	r17, 0x00	; 0
    408a:	a7 01       	movw	r20, r14
    408c:	96 01       	movw	r18, r12
    408e:	b1 01       	movw	r22, r2
    4090:	81 81       	ldd	r24, Z+1	; 0x01
    4092:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4096:	88 23       	and	r24, r24
    4098:	09 f4       	brne	.+2      	; 0x409c <find_volume+0x57c>
    409a:	98 c0       	rjmp	.+304    	; 0x41cc <find_volume+0x6ac>
    409c:	f5 01       	movw	r30, r10
    409e:	66 a6       	std	Z+46, r6	; 0x2e
    40a0:	77 a6       	std	Z+47, r7	; 0x2f
    40a2:	80 aa       	std	Z+48, r8	; 0x30
    40a4:	91 aa       	std	Z+49, r9	; 0x31
    40a6:	81 e0       	ldi	r24, 0x01	; 1
    40a8:	8f cd       	rjmp	.-1250   	; 0x3bc8 <find_volume+0xa8>
    40aa:	d5 01       	movw	r26, r10
    40ac:	14 96       	adiw	r26, 0x04	; 4
    40ae:	1c 92       	st	X, r1
    40b0:	66 24       	eor	r6, r6
    40b2:	6a 94       	dec	r6
    40b4:	76 2c       	mov	r7, r6
    40b6:	43 01       	movw	r8, r6
    40b8:	f5 01       	movw	r30, r10
    40ba:	66 a6       	std	Z+46, r6	; 0x2e
    40bc:	77 a6       	std	Z+47, r7	; 0x2f
    40be:	80 aa       	std	Z+48, r8	; 0x30
    40c0:	91 aa       	std	Z+49, r9	; 0x31
    40c2:	ff ef       	ldi	r31, 0xFF	; 255
    40c4:	cf 16       	cp	r12, r31
    40c6:	df 06       	cpc	r13, r31
    40c8:	ef 06       	cpc	r14, r31
    40ca:	ff 06       	cpc	r15, r31
    40cc:	09 f4       	brne	.+2      	; 0x40d0 <find_volume+0x5b0>
    40ce:	af c0       	rjmp	.+350    	; 0x422e <find_volume+0x70e>
    40d0:	01 e0       	ldi	r16, 0x01	; 1
    40d2:	10 e0       	ldi	r17, 0x00	; 0
    40d4:	a7 01       	movw	r20, r14
    40d6:	96 01       	movw	r18, r12
    40d8:	b1 01       	movw	r22, r2
    40da:	d5 01       	movw	r26, r10
    40dc:	11 96       	adiw	r26, 0x01	; 1
    40de:	8c 91       	ld	r24, X
    40e0:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    40e4:	88 23       	and	r24, r24
    40e6:	09 f4       	brne	.+2      	; 0x40ea <find_volume+0x5ca>
    40e8:	9b c0       	rjmp	.+310    	; 0x4220 <find_volume+0x700>
    40ea:	f5 01       	movw	r30, r10
    40ec:	66 a6       	std	Z+46, r6	; 0x2e
    40ee:	77 a6       	std	Z+47, r7	; 0x2f
    40f0:	80 aa       	std	Z+48, r8	; 0x30
    40f2:	91 aa       	std	Z+49, r9	; 0x31
    40f4:	99 cf       	rjmp	.-206    	; 0x4028 <find_volume+0x508>
    40f6:	f5 01       	movw	r30, r10
    40f8:	14 82       	std	Z+4, r1	; 0x04
    40fa:	66 24       	eor	r6, r6
    40fc:	6a 94       	dec	r6
    40fe:	76 2c       	mov	r7, r6
    4100:	43 01       	movw	r8, r6
    4102:	66 a6       	std	Z+46, r6	; 0x2e
    4104:	77 a6       	std	Z+47, r7	; 0x2f
    4106:	80 aa       	std	Z+48, r8	; 0x30
    4108:	91 aa       	std	Z+49, r9	; 0x31
    410a:	bf ef       	ldi	r27, 0xFF	; 255
    410c:	cb 16       	cp	r12, r27
    410e:	db 06       	cpc	r13, r27
    4110:	eb 06       	cpc	r14, r27
    4112:	fb 06       	cpc	r15, r27
    4114:	c9 f1       	breq	.+114    	; 0x4188 <find_volume+0x668>
    4116:	01 e0       	ldi	r16, 0x01	; 1
    4118:	10 e0       	ldi	r17, 0x00	; 0
    411a:	a7 01       	movw	r20, r14
    411c:	96 01       	movw	r18, r12
    411e:	b1 01       	movw	r22, r2
    4120:	81 81       	ldd	r24, Z+1	; 0x01
    4122:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4126:	88 23       	and	r24, r24
    4128:	41 f1       	breq	.+80     	; 0x417a <find_volume+0x65a>
    412a:	f5 01       	movw	r30, r10
    412c:	66 a6       	std	Z+46, r6	; 0x2e
    412e:	77 a6       	std	Z+47, r7	; 0x2f
    4130:	80 aa       	std	Z+48, r8	; 0x30
    4132:	91 aa       	std	Z+49, r9	; 0x31
    4134:	8d cf       	rjmp	.-230    	; 0x4050 <find_volume+0x530>
    4136:	f5 01       	movw	r30, r10
    4138:	14 82       	std	Z+4, r1	; 0x04
    413a:	66 24       	eor	r6, r6
    413c:	6a 94       	dec	r6
    413e:	76 2c       	mov	r7, r6
    4140:	43 01       	movw	r8, r6
    4142:	66 a6       	std	Z+46, r6	; 0x2e
    4144:	77 a6       	std	Z+47, r7	; 0x2f
    4146:	80 aa       	std	Z+48, r8	; 0x30
    4148:	91 aa       	std	Z+49, r9	; 0x31
    414a:	bf ef       	ldi	r27, 0xFF	; 255
    414c:	cb 16       	cp	r12, r27
    414e:	db 06       	cpc	r13, r27
    4150:	eb 06       	cpc	r14, r27
    4152:	fb 06       	cpc	r15, r27
    4154:	09 f4       	brne	.+2      	; 0x4158 <find_volume+0x638>
    4156:	94 c0       	rjmp	.+296    	; 0x4280 <find_volume+0x760>
    4158:	01 e0       	ldi	r16, 0x01	; 1
    415a:	10 e0       	ldi	r17, 0x00	; 0
    415c:	a7 01       	movw	r20, r14
    415e:	96 01       	movw	r18, r12
    4160:	b1 01       	movw	r22, r2
    4162:	81 81       	ldd	r24, Z+1	; 0x01
    4164:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4168:	88 23       	and	r24, r24
    416a:	09 f4       	brne	.+2      	; 0x416e <find_volume+0x64e>
    416c:	82 c0       	rjmp	.+260    	; 0x4272 <find_volume+0x752>
    416e:	f5 01       	movw	r30, r10
    4170:	66 a6       	std	Z+46, r6	; 0x2e
    4172:	77 a6       	std	Z+47, r7	; 0x2f
    4174:	80 aa       	std	Z+48, r8	; 0x30
    4176:	91 aa       	std	Z+49, r9	; 0x31
    4178:	61 cf       	rjmp	.-318    	; 0x403c <find_volume+0x51c>
    417a:	d5 01       	movw	r26, r10
    417c:	9e 96       	adiw	r26, 0x2e	; 46
    417e:	cd 92       	st	X+, r12
    4180:	dd 92       	st	X+, r13
    4182:	ed 92       	st	X+, r14
    4184:	fc 92       	st	X, r15
    4186:	d1 97       	sbiw	r26, 0x31	; 49
    4188:	f2 01       	movw	r30, r4
    418a:	80 81       	ld	r24, Z
    418c:	91 81       	ldd	r25, Z+1	; 0x01
    418e:	85 35       	cpi	r24, 0x55	; 85
    4190:	9a 4a       	sbci	r25, 0xAA	; 170
    4192:	09 f0       	breq	.+2      	; 0x4196 <find_volume+0x676>
    4194:	5d cf       	rjmp	.-326    	; 0x4050 <find_volume+0x530>
    4196:	e9 89       	ldd	r30, Y+17	; 0x11
    4198:	fa 89       	ldd	r31, Y+18	; 0x12
    419a:	80 81       	ld	r24, Z
    419c:	91 81       	ldd	r25, Z+1	; 0x01
    419e:	a2 81       	ldd	r26, Z+2	; 0x02
    41a0:	b3 81       	ldd	r27, Z+3	; 0x03
    41a2:	bb 27       	eor	r27, r27
    41a4:	86 34       	cpi	r24, 0x46	; 70
    41a6:	91 44       	sbci	r25, 0x41	; 65
    41a8:	a4 45       	sbci	r26, 0x54	; 84
    41aa:	b1 05       	cpc	r27, r1
    41ac:	09 f4       	brne	.+2      	; 0x41b0 <find_volume+0x690>
    41ae:	87 cd       	rjmp	.-1266   	; 0x3cbe <find_volume+0x19e>
    41b0:	ed 89       	ldd	r30, Y+21	; 0x15
    41b2:	fe 89       	ldd	r31, Y+22	; 0x16
    41b4:	80 81       	ld	r24, Z
    41b6:	91 81       	ldd	r25, Z+1	; 0x01
    41b8:	a2 81       	ldd	r26, Z+2	; 0x02
    41ba:	b3 81       	ldd	r27, Z+3	; 0x03
    41bc:	bb 27       	eor	r27, r27
    41be:	86 34       	cpi	r24, 0x46	; 70
    41c0:	91 44       	sbci	r25, 0x41	; 65
    41c2:	a4 45       	sbci	r26, 0x54	; 84
    41c4:	b1 05       	cpc	r27, r1
    41c6:	09 f0       	breq	.+2      	; 0x41ca <find_volume+0x6aa>
    41c8:	43 cf       	rjmp	.-378    	; 0x4050 <find_volume+0x530>
    41ca:	79 cd       	rjmp	.-1294   	; 0x3cbe <find_volume+0x19e>
    41cc:	d5 01       	movw	r26, r10
    41ce:	9e 96       	adiw	r26, 0x2e	; 46
    41d0:	cd 92       	st	X+, r12
    41d2:	dd 92       	st	X+, r13
    41d4:	ed 92       	st	X+, r14
    41d6:	fc 92       	st	X, r15
    41d8:	d1 97       	sbiw	r26, 0x31	; 49
    41da:	d2 01       	movw	r26, r4
    41dc:	8d 91       	ld	r24, X+
    41de:	9c 91       	ld	r25, X
    41e0:	85 35       	cpi	r24, 0x55	; 85
    41e2:	9a 4a       	sbci	r25, 0xAA	; 170
    41e4:	09 f0       	breq	.+2      	; 0x41e8 <find_volume+0x6c8>
    41e6:	50 cd       	rjmp	.-1376   	; 0x3c88 <find_volume+0x168>
    41e8:	e9 89       	ldd	r30, Y+17	; 0x11
    41ea:	fa 89       	ldd	r31, Y+18	; 0x12
    41ec:	80 81       	ld	r24, Z
    41ee:	91 81       	ldd	r25, Z+1	; 0x01
    41f0:	a2 81       	ldd	r26, Z+2	; 0x02
    41f2:	b3 81       	ldd	r27, Z+3	; 0x03
    41f4:	bb 27       	eor	r27, r27
    41f6:	86 34       	cpi	r24, 0x46	; 70
    41f8:	91 44       	sbci	r25, 0x41	; 65
    41fa:	a4 45       	sbci	r26, 0x54	; 84
    41fc:	b1 05       	cpc	r27, r1
    41fe:	09 f4       	brne	.+2      	; 0x4202 <find_volume+0x6e2>
    4200:	5e cd       	rjmp	.-1348   	; 0x3cbe <find_volume+0x19e>
    4202:	ed 89       	ldd	r30, Y+21	; 0x15
    4204:	fe 89       	ldd	r31, Y+22	; 0x16
    4206:	80 81       	ld	r24, Z
    4208:	91 81       	ldd	r25, Z+1	; 0x01
    420a:	a2 81       	ldd	r26, Z+2	; 0x02
    420c:	b3 81       	ldd	r27, Z+3	; 0x03
    420e:	bb 27       	eor	r27, r27
    4210:	86 34       	cpi	r24, 0x46	; 70
    4212:	91 44       	sbci	r25, 0x41	; 65
    4214:	a4 45       	sbci	r26, 0x54	; 84
    4216:	b1 05       	cpc	r27, r1
    4218:	09 f4       	brne	.+2      	; 0x421c <find_volume+0x6fc>
    421a:	51 cd       	rjmp	.-1374   	; 0x3cbe <find_volume+0x19e>
    421c:	8d e0       	ldi	r24, 0x0D	; 13
    421e:	d4 cc       	rjmp	.-1624   	; 0x3bc8 <find_volume+0xa8>
    4220:	d5 01       	movw	r26, r10
    4222:	9e 96       	adiw	r26, 0x2e	; 46
    4224:	cd 92       	st	X+, r12
    4226:	dd 92       	st	X+, r13
    4228:	ed 92       	st	X+, r14
    422a:	fc 92       	st	X, r15
    422c:	d1 97       	sbiw	r26, 0x31	; 49
    422e:	d2 01       	movw	r26, r4
    4230:	8d 91       	ld	r24, X+
    4232:	9c 91       	ld	r25, X
    4234:	85 35       	cpi	r24, 0x55	; 85
    4236:	9a 4a       	sbci	r25, 0xAA	; 170
    4238:	09 f0       	breq	.+2      	; 0x423c <find_volume+0x71c>
    423a:	f6 ce       	rjmp	.-532    	; 0x4028 <find_volume+0x508>
    423c:	e9 89       	ldd	r30, Y+17	; 0x11
    423e:	fa 89       	ldd	r31, Y+18	; 0x12
    4240:	80 81       	ld	r24, Z
    4242:	91 81       	ldd	r25, Z+1	; 0x01
    4244:	a2 81       	ldd	r26, Z+2	; 0x02
    4246:	b3 81       	ldd	r27, Z+3	; 0x03
    4248:	bb 27       	eor	r27, r27
    424a:	86 34       	cpi	r24, 0x46	; 70
    424c:	91 44       	sbci	r25, 0x41	; 65
    424e:	a4 45       	sbci	r26, 0x54	; 84
    4250:	b1 05       	cpc	r27, r1
    4252:	09 f4       	brne	.+2      	; 0x4256 <find_volume+0x736>
    4254:	34 cd       	rjmp	.-1432   	; 0x3cbe <find_volume+0x19e>
    4256:	ed 89       	ldd	r30, Y+21	; 0x15
    4258:	fe 89       	ldd	r31, Y+22	; 0x16
    425a:	80 81       	ld	r24, Z
    425c:	91 81       	ldd	r25, Z+1	; 0x01
    425e:	a2 81       	ldd	r26, Z+2	; 0x02
    4260:	b3 81       	ldd	r27, Z+3	; 0x03
    4262:	bb 27       	eor	r27, r27
    4264:	86 34       	cpi	r24, 0x46	; 70
    4266:	91 44       	sbci	r25, 0x41	; 65
    4268:	a4 45       	sbci	r26, 0x54	; 84
    426a:	b1 05       	cpc	r27, r1
    426c:	09 f0       	breq	.+2      	; 0x4270 <find_volume+0x750>
    426e:	dc ce       	rjmp	.-584    	; 0x4028 <find_volume+0x508>
    4270:	26 cd       	rjmp	.-1460   	; 0x3cbe <find_volume+0x19e>
    4272:	d5 01       	movw	r26, r10
    4274:	9e 96       	adiw	r26, 0x2e	; 46
    4276:	cd 92       	st	X+, r12
    4278:	dd 92       	st	X+, r13
    427a:	ed 92       	st	X+, r14
    427c:	fc 92       	st	X, r15
    427e:	d1 97       	sbiw	r26, 0x31	; 49
    4280:	f2 01       	movw	r30, r4
    4282:	80 81       	ld	r24, Z
    4284:	91 81       	ldd	r25, Z+1	; 0x01
    4286:	85 35       	cpi	r24, 0x55	; 85
    4288:	9a 4a       	sbci	r25, 0xAA	; 170
    428a:	09 f0       	breq	.+2      	; 0x428e <find_volume+0x76e>
    428c:	d7 ce       	rjmp	.-594    	; 0x403c <find_volume+0x51c>
    428e:	e9 89       	ldd	r30, Y+17	; 0x11
    4290:	fa 89       	ldd	r31, Y+18	; 0x12
    4292:	80 81       	ld	r24, Z
    4294:	91 81       	ldd	r25, Z+1	; 0x01
    4296:	a2 81       	ldd	r26, Z+2	; 0x02
    4298:	b3 81       	ldd	r27, Z+3	; 0x03
    429a:	bb 27       	eor	r27, r27
    429c:	86 34       	cpi	r24, 0x46	; 70
    429e:	91 44       	sbci	r25, 0x41	; 65
    42a0:	a4 45       	sbci	r26, 0x54	; 84
    42a2:	b1 05       	cpc	r27, r1
    42a4:	09 f4       	brne	.+2      	; 0x42a8 <find_volume+0x788>
    42a6:	0b cd       	rjmp	.-1514   	; 0x3cbe <find_volume+0x19e>
    42a8:	ed 89       	ldd	r30, Y+21	; 0x15
    42aa:	fe 89       	ldd	r31, Y+22	; 0x16
    42ac:	80 81       	ld	r24, Z
    42ae:	91 81       	ldd	r25, Z+1	; 0x01
    42b0:	a2 81       	ldd	r26, Z+2	; 0x02
    42b2:	b3 81       	ldd	r27, Z+3	; 0x03
    42b4:	bb 27       	eor	r27, r27
    42b6:	86 34       	cpi	r24, 0x46	; 70
    42b8:	91 44       	sbci	r25, 0x41	; 65
    42ba:	a4 45       	sbci	r26, 0x54	; 84
    42bc:	b1 05       	cpc	r27, r1
    42be:	09 f0       	breq	.+2      	; 0x42c2 <find_volume+0x7a2>
    42c0:	bd ce       	rjmp	.-646    	; 0x403c <find_volume+0x51c>
    42c2:	fd cc       	rjmp	.-1542   	; 0x3cbe <find_volume+0x19e>
    42c4:	80 e0       	ldi	r24, 0x00	; 0
    42c6:	90 e0       	ldi	r25, 0x00	; 0
    42c8:	dc 01       	movw	r26, r24
    42ca:	a0 ce       	rjmp	.-704    	; 0x400c <find_volume+0x4ec>
    42cc:	80 e0       	ldi	r24, 0x00	; 0
    42ce:	90 e0       	ldi	r25, 0x00	; 0
    42d0:	dc 01       	movw	r26, r24
    42d2:	8c ce       	rjmp	.-744    	; 0x3fec <find_volume+0x4cc>
    42d4:	80 e0       	ldi	r24, 0x00	; 0
    42d6:	90 e0       	ldi	r25, 0x00	; 0
    42d8:	dc 01       	movw	r26, r24
    42da:	78 ce       	rjmp	.-784    	; 0x3fcc <find_volume+0x4ac>
    42dc:	80 e0       	ldi	r24, 0x00	; 0
    42de:	90 e0       	ldi	r25, 0x00	; 0
    42e0:	dc 01       	movw	r26, r24
    42e2:	64 ce       	rjmp	.-824    	; 0x3fac <find_volume+0x48c>
    42e4:	80 e0       	ldi	r24, 0x00	; 0
    42e6:	c8 cc       	rjmp	.-1648   	; 0x3c78 <find_volume+0x158>
    42e8:	f5 01       	movw	r30, r10
    42ea:	ee 59       	subi	r30, 0x9E	; 158
    42ec:	ff 4f       	sbci	r31, 0xFF	; 255
    42ee:	80 81       	ld	r24, Z
    42f0:	91 81       	ldd	r25, Z+1	; 0x01
    42f2:	01 97       	sbiw	r24, 0x01	; 1
    42f4:	09 f0       	breq	.+2      	; 0x42f8 <find_volume+0x7d8>
    42f6:	17 ce       	rjmp	.-978    	; 0x3f26 <find_volume+0x406>
    42f8:	b7 01       	movw	r22, r14
    42fa:	a6 01       	movw	r20, r12
    42fc:	4f 5f       	subi	r20, 0xFF	; 255
    42fe:	5f 4f       	sbci	r21, 0xFF	; 255
    4300:	6f 4f       	sbci	r22, 0xFF	; 255
    4302:	7f 4f       	sbci	r23, 0xFF	; 255
    4304:	c5 01       	movw	r24, r10
    4306:	0e 94 41 0a 	call	0x1482	; 0x1482 <move_window>
    430a:	81 11       	cpse	r24, r1
    430c:	0c ce       	rjmp	.-1000   	; 0x3f26 <find_volume+0x406>
    430e:	d5 01       	movw	r26, r10
    4310:	15 96       	adiw	r26, 0x05	; 5
    4312:	1c 92       	st	X, r1
    4314:	f5 01       	movw	r30, r10
    4316:	e0 5d       	subi	r30, 0xD0	; 208
    4318:	fd 4f       	sbci	r31, 0xFD	; 253
    431a:	80 81       	ld	r24, Z
    431c:	91 81       	ldd	r25, Z+1	; 0x01
    431e:	85 35       	cpi	r24, 0x55	; 85
    4320:	9a 4a       	sbci	r25, 0xAA	; 170
    4322:	09 f0       	breq	.+2      	; 0x4326 <find_volume+0x806>
    4324:	00 ce       	rjmp	.-1024   	; 0x3f26 <find_volume+0x406>
    4326:	f5 01       	movw	r30, r10
    4328:	82 a9       	ldd	r24, Z+50	; 0x32
    432a:	93 a9       	ldd	r25, Z+51	; 0x33
    432c:	a4 a9       	ldd	r26, Z+52	; 0x34
    432e:	b5 a9       	ldd	r27, Z+53	; 0x35
    4330:	82 35       	cpi	r24, 0x52	; 82
    4332:	92 45       	sbci	r25, 0x52	; 82
    4334:	a1 46       	sbci	r26, 0x61	; 97
    4336:	b1 44       	sbci	r27, 0x41	; 65
    4338:	09 f0       	breq	.+2      	; 0x433c <find_volume+0x81c>
    433a:	f5 cd       	rjmp	.-1046   	; 0x3f26 <find_volume+0x406>
    433c:	f5 01       	movw	r30, r10
    433e:	ea 5e       	subi	r30, 0xEA	; 234
    4340:	fd 4f       	sbci	r31, 0xFD	; 253
    4342:	80 81       	ld	r24, Z
    4344:	91 81       	ldd	r25, Z+1	; 0x01
    4346:	a2 81       	ldd	r26, Z+2	; 0x02
    4348:	b3 81       	ldd	r27, Z+3	; 0x03
    434a:	82 37       	cpi	r24, 0x72	; 114
    434c:	92 47       	sbci	r25, 0x72	; 114
    434e:	a1 44       	sbci	r26, 0x41	; 65
    4350:	b1 46       	sbci	r27, 0x61	; 97
    4352:	09 f0       	breq	.+2      	; 0x4356 <find_volume+0x836>
    4354:	e8 cd       	rjmp	.-1072   	; 0x3f26 <find_volume+0x406>
    4356:	34 96       	adiw	r30, 0x04	; 4
    4358:	80 81       	ld	r24, Z
    435a:	91 81       	ldd	r25, Z+1	; 0x01
    435c:	a2 81       	ldd	r26, Z+2	; 0x02
    435e:	b3 81       	ldd	r27, Z+3	; 0x03
    4360:	f5 01       	movw	r30, r10
    4362:	86 87       	std	Z+14, r24	; 0x0e
    4364:	97 87       	std	Z+15, r25	; 0x0f
    4366:	a0 8b       	std	Z+16, r26	; 0x10
    4368:	b1 8b       	std	Z+17, r27	; 0x11
    436a:	e2 5e       	subi	r30, 0xE2	; 226
    436c:	fd 4f       	sbci	r31, 0xFD	; 253
    436e:	80 81       	ld	r24, Z
    4370:	91 81       	ldd	r25, Z+1	; 0x01
    4372:	a2 81       	ldd	r26, Z+2	; 0x02
    4374:	b3 81       	ldd	r27, Z+3	; 0x03
    4376:	f5 01       	movw	r30, r10
    4378:	82 87       	std	Z+10, r24	; 0x0a
    437a:	93 87       	std	Z+11, r25	; 0x0b
    437c:	a4 87       	std	Z+12, r26	; 0x0c
    437e:	b5 87       	std	Z+13, r27	; 0x0d
    4380:	d2 cd       	rjmp	.-1116   	; 0x3f26 <find_volume+0x406>
    4382:	c3 01       	movw	r24, r6
    4384:	b2 01       	movw	r22, r4
    4386:	66 0f       	add	r22, r22
    4388:	77 1f       	adc	r23, r23
    438a:	88 1f       	adc	r24, r24
    438c:	99 1f       	adc	r25, r25
    438e:	a2 cd       	rjmp	.-1212   	; 0x3ed4 <find_volume+0x3b4>
    4390:	29 01       	movw	r4, r18
    4392:	3a 01       	movw	r6, r20
    4394:	b2 e0       	ldi	r27, 0x02	; 2
    4396:	4b 0e       	add	r4, r27
    4398:	51 1c       	adc	r5, r1
    439a:	61 1c       	adc	r6, r1
    439c:	71 1c       	adc	r7, r1
    439e:	f5 01       	movw	r30, r10
    43a0:	46 8a       	std	Z+22, r4	; 0x16
    43a2:	57 8a       	std	Z+23, r5	; 0x17
    43a4:	60 8e       	std	Z+24, r6	; 0x18
    43a6:	71 8e       	std	Z+25, r7	; 0x19
    43a8:	c6 8e       	std	Z+30, r12	; 0x1e
    43aa:	d7 8e       	std	Z+31, r13	; 0x1f
    43ac:	e0 a2       	std	Z+32, r14	; 0x20
    43ae:	f1 a2       	std	Z+33, r15	; 0x21
    43b0:	89 8d       	ldd	r24, Y+25	; 0x19
    43b2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    43b4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    43b6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    43b8:	8c 0d       	add	r24, r12
    43ba:	9d 1d       	adc	r25, r13
    43bc:	ae 1d       	adc	r26, r14
    43be:	bf 1d       	adc	r27, r15
    43c0:	82 a3       	std	Z+34, r24	; 0x22
    43c2:	93 a3       	std	Z+35, r25	; 0x23
    43c4:	a4 a3       	std	Z+36, r26	; 0x24
    43c6:	b5 a3       	std	Z+37, r27	; 0x25
    43c8:	89 89       	ldd	r24, Y+17	; 0x11
    43ca:	9a 89       	ldd	r25, Y+18	; 0x12
    43cc:	ab 89       	ldd	r26, Y+19	; 0x13
    43ce:	bc 89       	ldd	r27, Y+20	; 0x14
    43d0:	8c 0d       	add	r24, r12
    43d2:	9d 1d       	adc	r25, r13
    43d4:	ae 1d       	adc	r26, r14
    43d6:	bf 1d       	adc	r27, r15
    43d8:	82 a7       	std	Z+42, r24	; 0x2a
    43da:	93 a7       	std	Z+43, r25	; 0x2b
    43dc:	a4 a7       	std	Z+44, r26	; 0x2c
    43de:	b5 a7       	std	Z+45, r27	; 0x2d
    43e0:	01 2b       	or	r16, r17
    43e2:	09 f0       	breq	.+2      	; 0x43e6 <find_volume+0x8c6>
    43e4:	51 cc       	rjmp	.-1886   	; 0x3c88 <find_volume+0x168>
    43e6:	f5 01       	movw	r30, r10
    43e8:	e2 5a       	subi	r30, 0xA2	; 162
    43ea:	ff 4f       	sbci	r31, 0xFF	; 255
    43ec:	80 81       	ld	r24, Z
    43ee:	91 81       	ldd	r25, Z+1	; 0x01
    43f0:	a2 81       	ldd	r26, Z+2	; 0x02
    43f2:	b3 81       	ldd	r27, Z+3	; 0x03
    43f4:	f5 01       	movw	r30, r10
    43f6:	86 a3       	std	Z+38, r24	; 0x26
    43f8:	97 a3       	std	Z+39, r25	; 0x27
    43fa:	a0 a7       	std	Z+40, r26	; 0x28
    43fc:	b1 a7       	std	Z+41, r27	; 0x29
    43fe:	c3 01       	movw	r24, r6
    4400:	b2 01       	movw	r22, r4
    4402:	66 0f       	add	r22, r22
    4404:	77 1f       	adc	r23, r23
    4406:	88 1f       	adc	r24, r24
    4408:	99 1f       	adc	r25, r25
    440a:	66 0f       	add	r22, r22
    440c:	77 1f       	adc	r23, r23
    440e:	88 1f       	adc	r24, r24
    4410:	99 1f       	adc	r25, r25
    4412:	43 e0       	ldi	r20, 0x03	; 3
    4414:	34 2e       	mov	r3, r20
    4416:	5e cd       	rjmp	.-1348   	; 0x3ed4 <find_volume+0x3b4>
    4418:	33 24       	eor	r3, r3
    441a:	33 94       	inc	r3
    441c:	07 cd       	rjmp	.-1522   	; 0x3e2c <find_volume+0x30c>

0000441e <f_mount>:
    441e:	cf 93       	push	r28
    4420:	df 93       	push	r29
    4422:	00 d0       	rcall	.+0      	; 0x4424 <f_mount+0x6>
    4424:	00 d0       	rcall	.+0      	; 0x4426 <f_mount+0x8>
    4426:	cd b7       	in	r28, 0x3d	; 61
    4428:	de b7       	in	r29, 0x3e	; 62
    442a:	89 83       	std	Y+1, r24	; 0x01
    442c:	9a 83       	std	Y+2, r25	; 0x02
    442e:	6b 83       	std	Y+3, r22	; 0x03
    4430:	7c 83       	std	Y+4, r23	; 0x04
    4432:	e6 2f       	mov	r30, r22
    4434:	f7 2f       	mov	r31, r23
    4436:	30 97       	sbiw	r30, 0x00	; 0
    4438:	a1 f1       	breq	.+104    	; 0x44a2 <f_mount+0x84>
    443a:	60 81       	ld	r22, Z
    443c:	61 32       	cpi	r22, 0x21	; 33
    443e:	68 f0       	brcs	.+26     	; 0x445a <f_mount+0x3c>
    4440:	6a 33       	cpi	r22, 0x3A	; 58
    4442:	79 f1       	breq	.+94     	; 0x44a2 <f_mount+0x84>
    4444:	9f 01       	movw	r18, r30
    4446:	2f 5f       	subi	r18, 0xFF	; 255
    4448:	3f 4f       	sbci	r19, 0xFF	; 255
    444a:	f9 01       	movw	r30, r18
    444c:	02 c0       	rjmp	.+4      	; 0x4452 <f_mount+0x34>
    444e:	5a 33       	cpi	r21, 0x3A	; 58
    4450:	29 f1       	breq	.+74     	; 0x449c <f_mount+0x7e>
    4452:	cf 01       	movw	r24, r30
    4454:	51 91       	ld	r21, Z+
    4456:	51 32       	cpi	r21, 0x21	; 33
    4458:	d0 f7       	brcc	.-12     	; 0x444e <f_mount+0x30>
    445a:	80 91 d1 22 	lds	r24, 0x22D1
    445e:	90 e0       	ldi	r25, 0x00	; 0
    4460:	88 0f       	add	r24, r24
    4462:	99 1f       	adc	r25, r25
    4464:	fc 01       	movw	r30, r24
    4466:	ec 52       	subi	r30, 0x2C	; 44
    4468:	fd 4d       	sbci	r31, 0xDD	; 221
    446a:	01 90       	ld	r0, Z+
    446c:	f0 81       	ld	r31, Z
    446e:	e0 2d       	mov	r30, r0
    4470:	30 97       	sbiw	r30, 0x00	; 0
    4472:	09 f0       	breq	.+2      	; 0x4476 <f_mount+0x58>
    4474:	10 82       	st	Z, r1
    4476:	e9 81       	ldd	r30, Y+1	; 0x01
    4478:	fa 81       	ldd	r31, Y+2	; 0x02
    447a:	30 97       	sbiw	r30, 0x00	; 0
    447c:	31 f1       	breq	.+76     	; 0x44ca <f_mount+0xac>
    447e:	10 82       	st	Z, r1
    4480:	dc 01       	movw	r26, r24
    4482:	ac 52       	subi	r26, 0x2C	; 44
    4484:	bd 4d       	sbci	r27, 0xDD	; 221
    4486:	ed 93       	st	X+, r30
    4488:	fc 93       	st	X, r31
    448a:	41 30       	cpi	r20, 0x01	; 1
    448c:	89 f0       	breq	.+34     	; 0x44b0 <f_mount+0x92>
    448e:	80 e0       	ldi	r24, 0x00	; 0
    4490:	24 96       	adiw	r28, 0x04	; 4
    4492:	cd bf       	out	0x3d, r28	; 61
    4494:	de bf       	out	0x3e, r29	; 62
    4496:	df 91       	pop	r29
    4498:	cf 91       	pop	r28
    449a:	08 95       	ret
    449c:	82 17       	cp	r24, r18
    449e:	93 07       	cpc	r25, r19
    44a0:	d9 f0       	breq	.+54     	; 0x44d8 <f_mount+0xba>
    44a2:	8b e0       	ldi	r24, 0x0B	; 11
    44a4:	24 96       	adiw	r28, 0x04	; 4
    44a6:	cd bf       	out	0x3d, r28	; 61
    44a8:	de bf       	out	0x3e, r29	; 62
    44aa:	df 91       	pop	r29
    44ac:	cf 91       	pop	r28
    44ae:	08 95       	ret
    44b0:	40 e0       	ldi	r20, 0x00	; 0
    44b2:	be 01       	movw	r22, r28
    44b4:	6d 5f       	subi	r22, 0xFD	; 253
    44b6:	7f 4f       	sbci	r23, 0xFF	; 255
    44b8:	ce 01       	movw	r24, r28
    44ba:	01 96       	adiw	r24, 0x01	; 1
    44bc:	31 db       	rcall	.-2462   	; 0x3b20 <find_volume>
    44be:	24 96       	adiw	r28, 0x04	; 4
    44c0:	cd bf       	out	0x3d, r28	; 61
    44c2:	de bf       	out	0x3e, r29	; 62
    44c4:	df 91       	pop	r29
    44c6:	cf 91       	pop	r28
    44c8:	08 95       	ret
    44ca:	fc 01       	movw	r30, r24
    44cc:	ec 52       	subi	r30, 0x2C	; 44
    44ce:	fd 4d       	sbci	r31, 0xDD	; 221
    44d0:	10 82       	st	Z, r1
    44d2:	11 82       	std	Z+1, r1	; 0x01
    44d4:	80 e0       	ldi	r24, 0x00	; 0
    44d6:	dc cf       	rjmp	.-72     	; 0x4490 <f_mount+0x72>
    44d8:	80 ed       	ldi	r24, 0xD0	; 208
    44da:	86 0f       	add	r24, r22
    44dc:	82 30       	cpi	r24, 0x02	; 2
    44de:	08 f7       	brcc	.-62     	; 0x44a2 <f_mount+0x84>
    44e0:	86 2f       	mov	r24, r22
    44e2:	90 e0       	ldi	r25, 0x00	; 0
    44e4:	c0 97       	sbiw	r24, 0x30	; 48
    44e6:	bc cf       	rjmp	.-136    	; 0x4460 <f_mount+0x42>

000044e8 <f_open>:
    44e8:	2f 92       	push	r2
    44ea:	3f 92       	push	r3
    44ec:	4f 92       	push	r4
    44ee:	5f 92       	push	r5
    44f0:	6f 92       	push	r6
    44f2:	7f 92       	push	r7
    44f4:	8f 92       	push	r8
    44f6:	9f 92       	push	r9
    44f8:	af 92       	push	r10
    44fa:	bf 92       	push	r11
    44fc:	cf 92       	push	r12
    44fe:	df 92       	push	r13
    4500:	ef 92       	push	r14
    4502:	ff 92       	push	r15
    4504:	0f 93       	push	r16
    4506:	1f 93       	push	r17
    4508:	cf 93       	push	r28
    450a:	df 93       	push	r29
    450c:	cd b7       	in	r28, 0x3d	; 61
    450e:	de b7       	in	r29, 0x3e	; 62
    4510:	c4 54       	subi	r28, 0x44	; 68
    4512:	d1 09       	sbc	r29, r1
    4514:	cd bf       	out	0x3d, r28	; 61
    4516:	de bf       	out	0x3e, r29	; 62
    4518:	6c 01       	movw	r12, r24
    451a:	5b 01       	movw	r10, r22
    451c:	94 2e       	mov	r9, r20
    451e:	00 97       	sbiw	r24, 0x00	; 0
    4520:	09 f4       	brne	.+2      	; 0x4524 <f_open+0x3c>
    4522:	56 c0       	rjmp	.+172    	; 0x45d0 <f_open+0xe8>
    4524:	dc 01       	movw	r26, r24
    4526:	1d 92       	st	X+, r1
    4528:	1c 92       	st	X, r1
    452a:	61 15       	cp	r22, r1
    452c:	71 05       	cpc	r23, r1
    452e:	c1 f1       	breq	.+112    	; 0x45a0 <f_open+0xb8>
    4530:	fb 01       	movw	r30, r22
    4532:	00 81       	ld	r16, Z
    4534:	01 32       	cpi	r16, 0x21	; 33
    4536:	68 f0       	brcs	.+26     	; 0x4552 <f_open+0x6a>
    4538:	0a 33       	cpi	r16, 0x3A	; 58
    453a:	91 f1       	breq	.+100    	; 0x45a0 <f_open+0xb8>
    453c:	9b 01       	movw	r18, r22
    453e:	2f 5f       	subi	r18, 0xFF	; 255
    4540:	3f 4f       	sbci	r19, 0xFF	; 255
    4542:	f9 01       	movw	r30, r18
    4544:	02 c0       	rjmp	.+4      	; 0x454a <f_open+0x62>
    4546:	4a 33       	cpi	r20, 0x3A	; 58
    4548:	39 f1       	breq	.+78     	; 0x4598 <f_open+0xb0>
    454a:	cf 01       	movw	r24, r30
    454c:	41 91       	ld	r20, Z+
    454e:	41 32       	cpi	r20, 0x21	; 33
    4550:	d0 f7       	brcc	.-12     	; 0x4546 <f_open+0x5e>
    4552:	00 91 d1 22 	lds	r16, 0x22D1
    4556:	10 e0       	ldi	r17, 0x00	; 0
    4558:	f8 01       	movw	r30, r16
    455a:	ee 0f       	add	r30, r30
    455c:	ff 1f       	adc	r31, r31
    455e:	ec 52       	subi	r30, 0x2C	; 44
    4560:	fd 4d       	sbci	r31, 0xDD	; 221
    4562:	20 80       	ld	r2, Z
    4564:	31 80       	ldd	r3, Z+1	; 0x01
    4566:	21 14       	cp	r2, r1
    4568:	31 04       	cpc	r3, r1
    456a:	f1 f1       	breq	.+124    	; 0x45e8 <f_open+0x100>
    456c:	29 2d       	mov	r18, r9
    456e:	2e 71       	andi	r18, 0x1E	; 30
    4570:	f2 2e       	mov	r15, r18
    4572:	29 82       	std	Y+1, r2	; 0x01
    4574:	3a 82       	std	Y+2, r3	; 0x02
    4576:	d1 01       	movw	r26, r2
    4578:	8c 91       	ld	r24, X
    457a:	88 23       	and	r24, r24
    457c:	59 f1       	breq	.+86     	; 0x45d4 <f_open+0xec>
    457e:	11 96       	adiw	r26, 0x01	; 1
    4580:	8c 91       	ld	r24, X
    4582:	0e 94 a0 32 	call	0x6540	; 0x6540 <disk_status>
    4586:	80 fd       	sbrc	r24, 0
    4588:	25 c0       	rjmp	.+74     	; 0x45d4 <f_open+0xec>
    458a:	ff 20       	and	r15, r15
    458c:	09 f4       	brne	.+2      	; 0x4590 <f_open+0xa8>
    458e:	be c1       	rjmp	.+892    	; 0x490c <f_open+0x424>
    4590:	82 ff       	sbrs	r24, 2
    4592:	bc c1       	rjmp	.+888    	; 0x490c <f_open+0x424>
    4594:	8a e0       	ldi	r24, 0x0A	; 10
    4596:	05 c0       	rjmp	.+10     	; 0x45a2 <f_open+0xba>
    4598:	28 17       	cp	r18, r24
    459a:	39 07       	cpc	r19, r25
    459c:	09 f4       	brne	.+2      	; 0x45a0 <f_open+0xb8>
    459e:	58 c0       	rjmp	.+176    	; 0x4650 <f_open+0x168>
    45a0:	8b e0       	ldi	r24, 0x0B	; 11
    45a2:	cc 5b       	subi	r28, 0xBC	; 188
    45a4:	df 4f       	sbci	r29, 0xFF	; 255
    45a6:	cd bf       	out	0x3d, r28	; 61
    45a8:	de bf       	out	0x3e, r29	; 62
    45aa:	df 91       	pop	r29
    45ac:	cf 91       	pop	r28
    45ae:	1f 91       	pop	r17
    45b0:	0f 91       	pop	r16
    45b2:	ff 90       	pop	r15
    45b4:	ef 90       	pop	r14
    45b6:	df 90       	pop	r13
    45b8:	cf 90       	pop	r12
    45ba:	bf 90       	pop	r11
    45bc:	af 90       	pop	r10
    45be:	9f 90       	pop	r9
    45c0:	8f 90       	pop	r8
    45c2:	7f 90       	pop	r7
    45c4:	6f 90       	pop	r6
    45c6:	5f 90       	pop	r5
    45c8:	4f 90       	pop	r4
    45ca:	3f 90       	pop	r3
    45cc:	2f 90       	pop	r2
    45ce:	08 95       	ret
    45d0:	89 e0       	ldi	r24, 0x09	; 9
    45d2:	e7 cf       	rjmp	.-50     	; 0x45a2 <f_open+0xba>
    45d4:	f1 01       	movw	r30, r2
    45d6:	10 82       	st	Z, r1
    45d8:	01 83       	std	Z+1, r16	; 0x01
    45da:	80 2f       	mov	r24, r16
    45dc:	0e 94 df 31 	call	0x63be	; 0x63be <disk_initialize>
    45e0:	80 ff       	sbrs	r24, 0
    45e2:	04 c0       	rjmp	.+8      	; 0x45ec <f_open+0x104>
    45e4:	83 e0       	ldi	r24, 0x03	; 3
    45e6:	dd cf       	rjmp	.-70     	; 0x45a2 <f_open+0xba>
    45e8:	8c e0       	ldi	r24, 0x0C	; 12
    45ea:	db cf       	rjmp	.-74     	; 0x45a2 <f_open+0xba>
    45ec:	ff 20       	and	r15, r15
    45ee:	11 f0       	breq	.+4      	; 0x45f4 <f_open+0x10c>
    45f0:	82 fd       	sbrc	r24, 2
    45f2:	d0 cf       	rjmp	.-96     	; 0x4594 <f_open+0xac>
    45f4:	d1 01       	movw	r26, r2
    45f6:	14 96       	adiw	r26, 0x04	; 4
    45f8:	1c 92       	st	X, r1
    45fa:	14 97       	sbiw	r26, 0x04	; 4
    45fc:	44 24       	eor	r4, r4
    45fe:	4a 94       	dec	r4
    4600:	54 2c       	mov	r5, r4
    4602:	32 01       	movw	r6, r4
    4604:	f1 01       	movw	r30, r2
    4606:	46 a6       	std	Z+46, r4	; 0x2e
    4608:	57 a6       	std	Z+47, r5	; 0x2f
    460a:	60 aa       	std	Z+48, r6	; 0x30
    460c:	71 aa       	std	Z+49, r7	; 0x31
    460e:	71 01       	movw	r14, r2
    4610:	f2 e3       	ldi	r31, 0x32	; 50
    4612:	ef 0e       	add	r14, r31
    4614:	f1 1c       	adc	r15, r1
    4616:	01 e0       	ldi	r16, 0x01	; 1
    4618:	10 e0       	ldi	r17, 0x00	; 0
    461a:	20 e0       	ldi	r18, 0x00	; 0
    461c:	30 e0       	ldi	r19, 0x00	; 0
    461e:	a9 01       	movw	r20, r18
    4620:	b7 01       	movw	r22, r14
    4622:	11 96       	adiw	r26, 0x01	; 1
    4624:	8c 91       	ld	r24, X
    4626:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    462a:	88 23       	and	r24, r24
    462c:	09 f4       	brne	.+2      	; 0x4630 <f_open+0x148>
    462e:	70 c3       	rjmp	.+1760   	; 0x4d10 <f_open+0x828>
    4630:	f1 01       	movw	r30, r2
    4632:	46 a6       	std	Z+46, r4	; 0x2e
    4634:	57 a6       	std	Z+47, r5	; 0x2f
    4636:	60 aa       	std	Z+48, r6	; 0x30
    4638:	71 aa       	std	Z+49, r7	; 0x31
    463a:	83 e0       	ldi	r24, 0x03	; 3
    463c:	41 2c       	mov	r4, r1
    463e:	51 2c       	mov	r5, r1
    4640:	32 01       	movw	r6, r4
    4642:	83 30       	cpi	r24, 0x03	; 3
    4644:	09 f4       	brne	.+2      	; 0x4648 <f_open+0x160>
    4646:	2c c4       	rjmp	.+2136   	; 0x4ea0 <f_open+0x9b8>
    4648:	88 23       	and	r24, r24
    464a:	89 f0       	breq	.+34     	; 0x466e <f_open+0x186>
    464c:	8d e0       	ldi	r24, 0x0D	; 13
    464e:	a9 cf       	rjmp	.-174    	; 0x45a2 <f_open+0xba>
    4650:	80 ed       	ldi	r24, 0xD0	; 208
    4652:	80 0f       	add	r24, r16
    4654:	82 30       	cpi	r24, 0x02	; 2
    4656:	08 f0       	brcs	.+2      	; 0x465a <f_open+0x172>
    4658:	a3 cf       	rjmp	.-186    	; 0x45a0 <f_open+0xb8>
    465a:	10 e0       	ldi	r17, 0x00	; 0
    465c:	00 53       	subi	r16, 0x30	; 48
    465e:	11 09       	sbc	r17, r1
    4660:	f2 e0       	ldi	r31, 0x02	; 2
    4662:	af 0e       	add	r10, r31
    4664:	b1 1c       	adc	r11, r1
    4666:	78 cf       	rjmp	.-272    	; 0x4558 <f_open+0x70>
    4668:	41 2c       	mov	r4, r1
    466a:	51 2c       	mov	r5, r1
    466c:	32 01       	movw	r6, r4
    466e:	d1 01       	movw	r26, r2
    4670:	dd 96       	adiw	r26, 0x3d	; 61
    4672:	8d 91       	ld	r24, X+
    4674:	9c 91       	ld	r25, X
    4676:	de 97       	sbiw	r26, 0x3e	; 62
    4678:	81 15       	cp	r24, r1
    467a:	92 40       	sbci	r25, 0x02	; 2
    467c:	39 f7       	brne	.-50     	; 0x464c <f_open+0x164>
    467e:	f1 01       	movw	r30, r2
    4680:	e8 5b       	subi	r30, 0xB8	; 184
    4682:	ff 4f       	sbci	r31, 0xFF	; 255
    4684:	80 81       	ld	r24, Z
    4686:	91 81       	ldd	r25, Z+1	; 0x01
    4688:	7c 01       	movw	r14, r24
    468a:	00 e0       	ldi	r16, 0x00	; 0
    468c:	10 e0       	ldi	r17, 0x00	; 0
    468e:	ef a2       	std	Y+39, r14	; 0x27
    4690:	f8 a6       	std	Y+40, r15	; 0x28
    4692:	09 a7       	std	Y+41, r16	; 0x29
    4694:	1a a7       	std	Y+42, r17	; 0x2a
    4696:	e1 14       	cp	r14, r1
    4698:	f1 04       	cpc	r15, r1
    469a:	01 05       	cpc	r16, r1
    469c:	11 05       	cpc	r17, r1
    469e:	59 f4       	brne	.+22     	; 0x46b6 <f_open+0x1ce>
    46a0:	3e 96       	adiw	r30, 0x0e	; 14
    46a2:	00 81       	ld	r16, Z
    46a4:	11 81       	ldd	r17, Z+1	; 0x01
    46a6:	22 81       	ldd	r18, Z+2	; 0x02
    46a8:	33 81       	ldd	r19, Z+3	; 0x03
    46aa:	0f a3       	std	Y+39, r16	; 0x27
    46ac:	18 a7       	std	Y+40, r17	; 0x28
    46ae:	29 a7       	std	Y+41, r18	; 0x29
    46b0:	3a a7       	std	Y+42, r19	; 0x2a
    46b2:	78 01       	movw	r14, r16
    46b4:	89 01       	movw	r16, r18
    46b6:	d1 01       	movw	r26, r2
    46b8:	5a 96       	adiw	r26, 0x1a	; 26
    46ba:	ed 92       	st	X+, r14
    46bc:	fd 92       	st	X+, r15
    46be:	0d 93       	st	X+, r16
    46c0:	1c 93       	st	X, r17
    46c2:	5d 97       	sbiw	r26, 0x1d	; 29
    46c4:	f1 01       	movw	r30, r2
    46c6:	ee 5b       	subi	r30, 0xBE	; 190
    46c8:	ff 4f       	sbci	r31, 0xFF	; 255
    46ca:	a0 81       	ld	r26, Z
    46cc:	f1 01       	movw	r30, r2
    46ce:	a3 83       	std	Z+3, r26	; 0x03
    46d0:	8f ef       	ldi	r24, 0xFF	; 255
    46d2:	8a 0f       	add	r24, r26
    46d4:	82 30       	cpi	r24, 0x02	; 2
    46d6:	08 f0       	brcs	.+2      	; 0x46da <f_open+0x1f2>
    46d8:	b9 cf       	rjmp	.-142    	; 0x464c <f_open+0x164>
    46da:	b0 e0       	ldi	r27, 0x00	; 0
    46dc:	a8 01       	movw	r20, r16
    46de:	97 01       	movw	r18, r14
    46e0:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    46e4:	6f ab       	std	Y+55, r22	; 0x37
    46e6:	78 af       	std	Y+56, r23	; 0x38
    46e8:	89 af       	std	Y+57, r24	; 0x39
    46ea:	9a af       	std	Y+58, r25	; 0x3a
    46ec:	27 ad       	ldd	r18, Z+63	; 0x3f
    46ee:	22 83       	std	Z+2, r18	; 0x02
    46f0:	22 23       	and	r18, r18
    46f2:	09 f4       	brne	.+2      	; 0x46f6 <f_open+0x20e>
    46f4:	ab cf       	rjmp	.-170    	; 0x464c <f_open+0x164>
    46f6:	42 2f       	mov	r20, r18
    46f8:	50 e0       	ldi	r21, 0x00	; 0
    46fa:	ca 01       	movw	r24, r20
    46fc:	01 97       	sbiw	r24, 0x01	; 1
    46fe:	84 23       	and	r24, r20
    4700:	95 23       	and	r25, r21
    4702:	89 2b       	or	r24, r25
    4704:	09 f0       	breq	.+2      	; 0x4708 <f_open+0x220>
    4706:	a2 cf       	rjmp	.-188    	; 0x464c <f_open+0x164>
    4708:	ed 5b       	subi	r30, 0xBD	; 189
    470a:	ff 4f       	sbci	r31, 0xFF	; 255
    470c:	e0 80       	ld	r14, Z
    470e:	f1 80       	ldd	r15, Z+1	; 0x01
    4710:	ef a6       	std	Y+47, r14	; 0x2f
    4712:	f8 aa       	std	Y+48, r15	; 0x30
    4714:	d1 01       	movw	r26, r2
    4716:	18 96       	adiw	r26, 0x08	; 8
    4718:	ed 92       	st	X+, r14
    471a:	fc 92       	st	X, r15
    471c:	19 97       	sbiw	r26, 0x09	; 9
    471e:	c7 01       	movw	r24, r14
    4720:	8f 70       	andi	r24, 0x0F	; 15
    4722:	99 27       	eor	r25, r25
    4724:	89 2b       	or	r24, r25
    4726:	09 f0       	breq	.+2      	; 0x472a <f_open+0x242>
    4728:	91 cf       	rjmp	.-222    	; 0x464c <f_open+0x164>
    472a:	32 96       	adiw	r30, 0x02	; 2
    472c:	60 81       	ld	r22, Z
    472e:	71 81       	ldd	r23, Z+1	; 0x01
    4730:	cb 01       	movw	r24, r22
    4732:	a0 e0       	ldi	r26, 0x00	; 0
    4734:	b0 e0       	ldi	r27, 0x00	; 0
    4736:	00 97       	sbiw	r24, 0x00	; 0
    4738:	a1 05       	cpc	r26, r1
    473a:	b1 05       	cpc	r27, r1
    473c:	29 f4       	brne	.+10     	; 0x4748 <f_open+0x260>
    473e:	3d 96       	adiw	r30, 0x0d	; 13
    4740:	80 81       	ld	r24, Z
    4742:	91 81       	ldd	r25, Z+1	; 0x01
    4744:	a2 81       	ldd	r26, Z+2	; 0x02
    4746:	b3 81       	ldd	r27, Z+3	; 0x03
    4748:	f1 01       	movw	r30, r2
    474a:	e0 5c       	subi	r30, 0xC0	; 192
    474c:	ff 4f       	sbci	r31, 0xFF	; 255
    474e:	40 81       	ld	r20, Z
    4750:	51 81       	ldd	r21, Z+1	; 0x01
    4752:	41 15       	cp	r20, r1
    4754:	51 05       	cpc	r21, r1
    4756:	09 f4       	brne	.+2      	; 0x475a <f_open+0x272>
    4758:	79 cf       	rjmp	.-270    	; 0x464c <f_open+0x164>
    475a:	7a 01       	movw	r14, r20
    475c:	00 e0       	ldi	r16, 0x00	; 0
    475e:	10 e0       	ldi	r17, 0x00	; 0
    4760:	eb aa       	std	Y+51, r14	; 0x33
    4762:	fc aa       	std	Y+52, r15	; 0x34
    4764:	0d ab       	std	Y+53, r16	; 0x35
    4766:	1e ab       	std	Y+54, r17	; 0x36
    4768:	4f a5       	ldd	r20, Y+47	; 0x2f
    476a:	58 a9       	ldd	r21, Y+48	; 0x30
    476c:	52 95       	swap	r21
    476e:	42 95       	swap	r20
    4770:	4f 70       	andi	r20, 0x0F	; 15
    4772:	45 27       	eor	r20, r21
    4774:	5f 70       	andi	r21, 0x0F	; 15
    4776:	45 27       	eor	r20, r21
    4778:	e4 0e       	add	r14, r20
    477a:	f5 1e       	adc	r15, r21
    477c:	01 1d       	adc	r16, r1
    477e:	11 1d       	adc	r17, r1
    4780:	4f a9       	ldd	r20, Y+55	; 0x37
    4782:	58 ad       	ldd	r21, Y+56	; 0x38
    4784:	69 ad       	ldd	r22, Y+57	; 0x39
    4786:	7a ad       	ldd	r23, Y+58	; 0x3a
    4788:	e4 0e       	add	r14, r20
    478a:	f5 1e       	adc	r15, r21
    478c:	06 1f       	adc	r16, r22
    478e:	17 1f       	adc	r17, r23
    4790:	8e 15       	cp	r24, r14
    4792:	9f 05       	cpc	r25, r15
    4794:	a0 07       	cpc	r26, r16
    4796:	b1 07       	cpc	r27, r17
    4798:	08 f4       	brcc	.+2      	; 0x479c <f_open+0x2b4>
    479a:	58 cf       	rjmp	.-336    	; 0x464c <f_open+0x164>
    479c:	bc 01       	movw	r22, r24
    479e:	cd 01       	movw	r24, r26
    47a0:	6e 19       	sub	r22, r14
    47a2:	7f 09       	sbc	r23, r15
    47a4:	80 0b       	sbc	r24, r16
    47a6:	91 0b       	sbc	r25, r17
    47a8:	30 e0       	ldi	r19, 0x00	; 0
    47aa:	40 e0       	ldi	r20, 0x00	; 0
    47ac:	50 e0       	ldi	r21, 0x00	; 0
    47ae:	0e 94 53 3c 	call	0x78a6	; 0x78a6 <__udivmodsi4>
    47b2:	21 15       	cp	r18, r1
    47b4:	31 05       	cpc	r19, r1
    47b6:	41 05       	cpc	r20, r1
    47b8:	51 05       	cpc	r21, r1
    47ba:	09 f4       	brne	.+2      	; 0x47be <f_open+0x2d6>
    47bc:	47 cf       	rjmp	.-370    	; 0x464c <f_open+0x164>
    47be:	26 3f       	cpi	r18, 0xF6	; 246
    47c0:	6f e0       	ldi	r22, 0x0F	; 15
    47c2:	36 07       	cpc	r19, r22
    47c4:	41 05       	cpc	r20, r1
    47c6:	51 05       	cpc	r21, r1
    47c8:	08 f4       	brcc	.+2      	; 0x47cc <f_open+0x2e4>
    47ca:	b3 c7       	rjmp	.+3942   	; 0x5732 <f_open+0x124a>
    47cc:	26 3f       	cpi	r18, 0xF6	; 246
    47ce:	7f ef       	ldi	r23, 0xFF	; 255
    47d0:	37 07       	cpc	r19, r23
    47d2:	41 05       	cpc	r20, r1
    47d4:	51 05       	cpc	r21, r1
    47d6:	08 f0       	brcs	.+2      	; 0x47da <f_open+0x2f2>
    47d8:	65 c7       	rjmp	.+3786   	; 0x56a4 <f_open+0x11bc>
    47da:	82 e0       	ldi	r24, 0x02	; 2
    47dc:	88 2e       	mov	r8, r24
    47de:	ca 01       	movw	r24, r20
    47e0:	b9 01       	movw	r22, r18
    47e2:	6e 5f       	subi	r22, 0xFE	; 254
    47e4:	7f 4f       	sbci	r23, 0xFF	; 255
    47e6:	8f 4f       	sbci	r24, 0xFF	; 255
    47e8:	9f 4f       	sbci	r25, 0xFF	; 255
    47ea:	6b a7       	std	Y+43, r22	; 0x2b
    47ec:	7c a7       	std	Y+44, r23	; 0x2c
    47ee:	8d a7       	std	Y+45, r24	; 0x2d
    47f0:	9e a7       	std	Y+46, r25	; 0x2e
    47f2:	d1 01       	movw	r26, r2
    47f4:	56 96       	adiw	r26, 0x16	; 22
    47f6:	6d 93       	st	X+, r22
    47f8:	7d 93       	st	X+, r23
    47fa:	8d 93       	st	X+, r24
    47fc:	9c 93       	st	X, r25
    47fe:	59 97       	sbiw	r26, 0x19	; 25
    4800:	f1 01       	movw	r30, r2
    4802:	46 8e       	std	Z+30, r4	; 0x1e
    4804:	57 8e       	std	Z+31, r5	; 0x1f
    4806:	60 a2       	std	Z+32, r6	; 0x20
    4808:	71 a2       	std	Z+33, r7	; 0x21
    480a:	8b a9       	ldd	r24, Y+51	; 0x33
    480c:	9c a9       	ldd	r25, Y+52	; 0x34
    480e:	ad a9       	ldd	r26, Y+53	; 0x35
    4810:	be a9       	ldd	r27, Y+54	; 0x36
    4812:	84 0d       	add	r24, r4
    4814:	95 1d       	adc	r25, r5
    4816:	a6 1d       	adc	r26, r6
    4818:	b7 1d       	adc	r27, r7
    481a:	82 a3       	std	Z+34, r24	; 0x22
    481c:	93 a3       	std	Z+35, r25	; 0x23
    481e:	a4 a3       	std	Z+36, r26	; 0x24
    4820:	b5 a3       	std	Z+37, r27	; 0x25
    4822:	b8 01       	movw	r22, r16
    4824:	a7 01       	movw	r20, r14
    4826:	44 0d       	add	r20, r4
    4828:	55 1d       	adc	r21, r5
    482a:	66 1d       	adc	r22, r6
    482c:	77 1d       	adc	r23, r7
    482e:	42 a7       	std	Z+42, r20	; 0x2a
    4830:	53 a7       	std	Z+43, r21	; 0x2b
    4832:	64 a7       	std	Z+44, r22	; 0x2c
    4834:	75 a7       	std	Z+45, r23	; 0x2d
    4836:	ef a4       	ldd	r14, Y+47	; 0x2f
    4838:	f8 a8       	ldd	r15, Y+48	; 0x30
    483a:	ef 28       	or	r14, r15
    483c:	09 f4       	brne	.+2      	; 0x4840 <f_open+0x358>
    483e:	06 cf       	rjmp	.-500    	; 0x464c <f_open+0x164>
    4840:	ef a8       	ldd	r14, Y+55	; 0x37
    4842:	f8 ac       	ldd	r15, Y+56	; 0x38
    4844:	09 ad       	ldd	r16, Y+57	; 0x39
    4846:	1a ad       	ldd	r17, Y+58	; 0x3a
    4848:	8e 0d       	add	r24, r14
    484a:	9f 1d       	adc	r25, r15
    484c:	a0 1f       	adc	r26, r16
    484e:	b1 1f       	adc	r27, r17
    4850:	f1 01       	movw	r30, r2
    4852:	86 a3       	std	Z+38, r24	; 0x26
    4854:	97 a3       	std	Z+39, r25	; 0x27
    4856:	a0 a7       	std	Z+40, r26	; 0x28
    4858:	b1 a7       	std	Z+41, r27	; 0x29
    485a:	f2 e0       	ldi	r31, 0x02	; 2
    485c:	8f 16       	cp	r8, r31
    485e:	09 f4       	brne	.+2      	; 0x4862 <f_open+0x37a>
    4860:	18 c7       	rjmp	.+3632   	; 0x5692 <f_open+0x11aa>
    4862:	a3 e0       	ldi	r26, 0x03	; 3
    4864:	b0 e0       	ldi	r27, 0x00	; 0
    4866:	2b a5       	ldd	r18, Y+43	; 0x2b
    4868:	3c a5       	ldd	r19, Y+44	; 0x2c
    486a:	4d a5       	ldd	r20, Y+45	; 0x2d
    486c:	5e a5       	ldd	r21, Y+46	; 0x2e
    486e:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    4872:	96 95       	lsr	r25
    4874:	87 95       	ror	r24
    4876:	77 95       	ror	r23
    4878:	67 95       	ror	r22
    487a:	89 01       	movw	r16, r18
    487c:	9a 01       	movw	r18, r20
    487e:	01 70       	andi	r16, 0x01	; 1
    4880:	11 27       	eor	r17, r17
    4882:	22 27       	eor	r18, r18
    4884:	33 27       	eor	r19, r19
    4886:	60 0f       	add	r22, r16
    4888:	71 1f       	adc	r23, r17
    488a:	82 1f       	adc	r24, r18
    488c:	93 1f       	adc	r25, r19
    488e:	88 24       	eor	r8, r8
    4890:	83 94       	inc	r8
    4892:	dc 01       	movw	r26, r24
    4894:	cb 01       	movw	r24, r22
    4896:	81 50       	subi	r24, 0x01	; 1
    4898:	9e 4f       	sbci	r25, 0xFE	; 254
    489a:	af 4f       	sbci	r26, 0xFF	; 255
    489c:	bf 4f       	sbci	r27, 0xFF	; 255
    489e:	e9 e0       	ldi	r30, 0x09	; 9
    48a0:	b6 95       	lsr	r27
    48a2:	a7 95       	ror	r26
    48a4:	97 95       	ror	r25
    48a6:	87 95       	ror	r24
    48a8:	ea 95       	dec	r30
    48aa:	d1 f7       	brne	.-12     	; 0x48a0 <f_open+0x3b8>
    48ac:	ef a0       	ldd	r14, Y+39	; 0x27
    48ae:	f8 a4       	ldd	r15, Y+40	; 0x28
    48b0:	09 a5       	ldd	r16, Y+41	; 0x29
    48b2:	1a a5       	ldd	r17, Y+42	; 0x2a
    48b4:	e8 16       	cp	r14, r24
    48b6:	f9 06       	cpc	r15, r25
    48b8:	0a 07       	cpc	r16, r26
    48ba:	1b 07       	cpc	r17, r27
    48bc:	08 f4       	brcc	.+2      	; 0x48c0 <f_open+0x3d8>
    48be:	c6 ce       	rjmp	.-628    	; 0x464c <f_open+0x164>
    48c0:	8f ef       	ldi	r24, 0xFF	; 255
    48c2:	9f ef       	ldi	r25, 0xFF	; 255
    48c4:	dc 01       	movw	r26, r24
    48c6:	f1 01       	movw	r30, r2
    48c8:	86 87       	std	Z+14, r24	; 0x0e
    48ca:	97 87       	std	Z+15, r25	; 0x0f
    48cc:	a0 8b       	std	Z+16, r26	; 0x10
    48ce:	b1 8b       	std	Z+17, r27	; 0x11
    48d0:	82 87       	std	Z+10, r24	; 0x0a
    48d2:	93 87       	std	Z+11, r25	; 0x0b
    48d4:	a4 87       	std	Z+12, r26	; 0x0c
    48d6:	b5 87       	std	Z+13, r27	; 0x0d
    48d8:	80 e8       	ldi	r24, 0x80	; 128
    48da:	85 83       	std	Z+5, r24	; 0x05
    48dc:	f3 e0       	ldi	r31, 0x03	; 3
    48de:	8f 16       	cp	r8, r31
    48e0:	09 f4       	brne	.+2      	; 0x48e4 <f_open+0x3fc>
    48e2:	8a c6       	rjmp	.+3348   	; 0x55f8 <f_open+0x1110>
    48e4:	d1 01       	movw	r26, r2
    48e6:	8c 92       	st	X, r8
    48e8:	80 91 d2 22 	lds	r24, 0x22D2
    48ec:	90 91 d3 22 	lds	r25, 0x22D3
    48f0:	01 96       	adiw	r24, 0x01	; 1
    48f2:	80 93 d2 22 	sts	0x22D2, r24
    48f6:	90 93 d3 22 	sts	0x22D3, r25
    48fa:	16 96       	adiw	r26, 0x06	; 6
    48fc:	8d 93       	st	X+, r24
    48fe:	9c 93       	st	X, r25
    4900:	17 97       	sbiw	r26, 0x07	; 7
    4902:	f1 01       	movw	r30, r2
    4904:	12 8a       	std	Z+18, r1	; 0x12
    4906:	13 8a       	std	Z+19, r1	; 0x13
    4908:	14 8a       	std	Z+20, r1	; 0x14
    490a:	15 8a       	std	Z+21, r1	; 0x15
    490c:	09 2d       	mov	r16, r9
    490e:	0f 71       	andi	r16, 0x1F	; 31
    4910:	0f a3       	std	Y+39, r16	; 0x27
    4912:	ce 01       	movw	r24, r28
    4914:	47 96       	adiw	r24, 0x17	; 23
    4916:	8d 8b       	std	Y+21, r24	; 0x15
    4918:	9e 8b       	std	Y+22, r25	; 0x16
    491a:	b5 01       	movw	r22, r10
    491c:	46 97       	sbiw	r24, 0x16	; 22
    491e:	0e 94 31 1a 	call	0x3462	; 0x3462 <follow_path>
    4922:	2b 88       	ldd	r2, Y+19	; 0x13
    4924:	3c 88       	ldd	r3, Y+20	; 0x14
    4926:	88 23       	and	r24, r24
    4928:	09 f4       	brne	.+2      	; 0x492c <f_open+0x444>
    492a:	6f c1       	rjmp	.+734    	; 0x4c0a <f_open+0x722>
    492c:	99 2d       	mov	r25, r9
    492e:	9c 71       	andi	r25, 0x1C	; 28
    4930:	09 f4       	brne	.+2      	; 0x4934 <f_open+0x44c>
    4932:	37 ce       	rjmp	.-914    	; 0x45a2 <f_open+0xba>
    4934:	84 30       	cpi	r24, 0x04	; 4
    4936:	09 f0       	breq	.+2      	; 0x493a <f_open+0x452>
    4938:	34 ce       	rjmp	.-920    	; 0x45a2 <f_open+0xba>
    493a:	ce 01       	movw	r24, r28
    493c:	01 96       	adiw	r24, 0x01	; 1
    493e:	0e 94 2c 19 	call	0x3258	; 0x3258 <dir_register>
    4942:	ff a1       	ldd	r31, Y+39	; 0x27
    4944:	f8 60       	ori	r31, 0x08	; 8
    4946:	ff a3       	std	Y+39, r31	; 0x27
    4948:	2b 88       	ldd	r2, Y+19	; 0x13
    494a:	3c 88       	ldd	r3, Y+20	; 0x14
    494c:	81 11       	cpse	r24, r1
    494e:	29 ce       	rjmp	.-942    	; 0x45a2 <f_open+0xba>
    4950:	ef a0       	ldd	r14, Y+39	; 0x27
    4952:	e3 fe       	sbrs	r14, 3
    4954:	d9 c1       	rjmp	.+946    	; 0x4d08 <f_open+0x820>
    4956:	80 e0       	ldi	r24, 0x00	; 0
    4958:	90 e0       	ldi	r25, 0x00	; 0
    495a:	af e4       	ldi	r26, 0x4F	; 79
    495c:	b5 e4       	ldi	r27, 0x45	; 69
    495e:	f1 01       	movw	r30, r2
    4960:	86 87       	std	Z+14, r24	; 0x0e
    4962:	97 87       	std	Z+15, r25	; 0x0f
    4964:	a0 8b       	std	Z+16, r26	; 0x10
    4966:	b1 8b       	std	Z+17, r27	; 0x11
    4968:	13 86       	std	Z+11, r1	; 0x0b
    496a:	14 8e       	std	Z+28, r1	; 0x1c
    496c:	15 8e       	std	Z+29, r1	; 0x1d
    496e:	16 8e       	std	Z+30, r1	; 0x1e
    4970:	17 8e       	std	Z+31, r1	; 0x1f
    4972:	e9 80       	ldd	r14, Y+1	; 0x01
    4974:	fa 80       	ldd	r15, Y+2	; 0x02
    4976:	82 8d       	ldd	r24, Z+26	; 0x1a
    4978:	93 8d       	ldd	r25, Z+27	; 0x1b
    497a:	8c 01       	movw	r16, r24
    497c:	20 e0       	ldi	r18, 0x00	; 0
    497e:	30 e0       	ldi	r19, 0x00	; 0
    4980:	0f a7       	std	Y+47, r16	; 0x2f
    4982:	18 ab       	std	Y+48, r17	; 0x30
    4984:	29 ab       	std	Y+49, r18	; 0x31
    4986:	3a ab       	std	Y+50, r19	; 0x32
    4988:	d7 01       	movw	r26, r14
    498a:	8c 91       	ld	r24, X
    498c:	83 30       	cpi	r24, 0x03	; 3
    498e:	09 f4       	brne	.+2      	; 0x4992 <f_open+0x4aa>
    4990:	89 c2       	rjmp	.+1298   	; 0x4ea4 <f_open+0x9bc>
    4992:	d1 01       	movw	r26, r2
    4994:	5a 96       	adiw	r26, 0x1a	; 26
    4996:	1d 92       	st	X+, r1
    4998:	1c 92       	st	X, r1
    499a:	5b 97       	sbiw	r26, 0x1b	; 27
    499c:	54 96       	adiw	r26, 0x14	; 20
    499e:	1d 92       	st	X+, r1
    49a0:	1c 92       	st	X, r1
    49a2:	55 97       	sbiw	r26, 0x15	; 21
    49a4:	81 e0       	ldi	r24, 0x01	; 1
    49a6:	f7 01       	movw	r30, r14
    49a8:	84 83       	std	Z+4, r24	; 0x04
    49aa:	01 2b       	or	r16, r17
    49ac:	02 2b       	or	r16, r18
    49ae:	03 2b       	or	r16, r19
    49b0:	09 f4       	brne	.+2      	; 0x49b4 <f_open+0x4cc>
    49b2:	4a c1       	rjmp	.+660    	; 0x4c48 <f_open+0x760>
    49b4:	26 a5       	ldd	r18, Z+46	; 0x2e
    49b6:	37 a5       	ldd	r19, Z+47	; 0x2f
    49b8:	40 a9       	ldd	r20, Z+48	; 0x30
    49ba:	51 a9       	ldd	r21, Z+49	; 0x31
    49bc:	2f ab       	std	Y+55, r18	; 0x37
    49be:	38 af       	std	Y+56, r19	; 0x38
    49c0:	49 af       	std	Y+57, r20	; 0x39
    49c2:	5a af       	std	Y+58, r21	; 0x3a
    49c4:	0f a5       	ldd	r16, Y+47	; 0x2f
    49c6:	18 a9       	ldd	r17, Y+48	; 0x30
    49c8:	29 a9       	ldd	r18, Y+49	; 0x31
    49ca:	3a a9       	ldd	r19, Y+50	; 0x32
    49cc:	02 30       	cpi	r16, 0x02	; 2
    49ce:	11 05       	cpc	r17, r1
    49d0:	21 05       	cpc	r18, r1
    49d2:	31 05       	cpc	r19, r1
    49d4:	48 f0       	brcs	.+18     	; 0x49e8 <f_open+0x500>
    49d6:	86 89       	ldd	r24, Z+22	; 0x16
    49d8:	97 89       	ldd	r25, Z+23	; 0x17
    49da:	a0 8d       	ldd	r26, Z+24	; 0x18
    49dc:	b1 8d       	ldd	r27, Z+25	; 0x19
    49de:	08 17       	cp	r16, r24
    49e0:	19 07       	cpc	r17, r25
    49e2:	2a 07       	cpc	r18, r26
    49e4:	3b 07       	cpc	r19, r27
    49e6:	10 f0       	brcs	.+4      	; 0x49ec <f_open+0x504>
    49e8:	82 e0       	ldi	r24, 0x02	; 2
    49ea:	db cd       	rjmp	.-1098   	; 0x45a2 <f_open+0xba>
    49ec:	0b a7       	std	Y+43, r16	; 0x2b
    49ee:	1c a7       	std	Y+44, r17	; 0x2c
    49f0:	2d a7       	std	Y+45, r18	; 0x2d
    49f2:	3e a7       	std	Y+46, r19	; 0x2e
    49f4:	87 01       	movw	r16, r14
    49f6:	0e 5c       	subi	r16, 0xCE	; 206
    49f8:	1f 4f       	sbci	r17, 0xFF	; 255
    49fa:	23 96       	adiw	r28, 0x03	; 3
    49fc:	2e ae       	std	Y+62, r2	; 0x3e
    49fe:	3f ae       	std	Y+63, r3	; 0x3f
    4a00:	23 97       	sbiw	r28, 0x03	; 3
    4a02:	57 01       	movw	r10, r14
    4a04:	25 96       	adiw	r28, 0x05	; 5
    4a06:	ce ae       	std	Y+62, r12	; 0x3e
    4a08:	df ae       	std	Y+63, r13	; 0x3f
    4a0a:	25 97       	sbiw	r28, 0x05	; 5
    4a0c:	cb a4       	ldd	r12, Y+43	; 0x2b
    4a0e:	dc a4       	ldd	r13, Y+44	; 0x2c
    4a10:	ed a4       	ldd	r14, Y+45	; 0x2d
    4a12:	fe a4       	ldd	r15, Y+46	; 0x2e
    4a14:	18 01       	movw	r2, r16
    4a16:	27 c0       	rjmp	.+78     	; 0x4a66 <f_open+0x57e>
    4a18:	00 e0       	ldi	r16, 0x00	; 0
    4a1a:	10 e0       	ldi	r17, 0x00	; 0
    4a1c:	98 01       	movw	r18, r16
    4a1e:	b7 01       	movw	r22, r14
    4a20:	a6 01       	movw	r20, r12
    4a22:	c5 01       	movw	r24, r10
    4a24:	0e 94 90 0b 	call	0x1720	; 0x1720 <put_fat.part.6>
    4a28:	81 11       	cpse	r24, r1
    4a2a:	bb cd       	rjmp	.-1162   	; 0x45a2 <f_open+0xba>
    4a2c:	f5 01       	movw	r30, r10
    4a2e:	86 85       	ldd	r24, Z+14	; 0x0e
    4a30:	97 85       	ldd	r25, Z+15	; 0x0f
    4a32:	a0 89       	ldd	r26, Z+16	; 0x10
    4a34:	b1 89       	ldd	r27, Z+17	; 0x11
    4a36:	8f 3f       	cpi	r24, 0xFF	; 255
    4a38:	ff ef       	ldi	r31, 0xFF	; 255
    4a3a:	9f 07       	cpc	r25, r31
    4a3c:	af 07       	cpc	r26, r31
    4a3e:	bf 07       	cpc	r27, r31
    4a40:	59 f0       	breq	.+22     	; 0x4a58 <f_open+0x570>
    4a42:	01 96       	adiw	r24, 0x01	; 1
    4a44:	a1 1d       	adc	r26, r1
    4a46:	b1 1d       	adc	r27, r1
    4a48:	f5 01       	movw	r30, r10
    4a4a:	86 87       	std	Z+14, r24	; 0x0e
    4a4c:	97 87       	std	Z+15, r25	; 0x0f
    4a4e:	a0 8b       	std	Z+16, r26	; 0x10
    4a50:	b1 8b       	std	Z+17, r27	; 0x11
    4a52:	85 81       	ldd	r24, Z+5	; 0x05
    4a54:	81 60       	ori	r24, 0x01	; 1
    4a56:	85 83       	std	Z+5, r24	; 0x05
    4a58:	f5 01       	movw	r30, r10
    4a5a:	86 89       	ldd	r24, Z+22	; 0x16
    4a5c:	97 89       	ldd	r25, Z+23	; 0x17
    4a5e:	a0 8d       	ldd	r26, Z+24	; 0x18
    4a60:	b1 8d       	ldd	r27, Z+25	; 0x19
    4a62:	73 01       	movw	r14, r6
    4a64:	62 01       	movw	r12, r4
    4a66:	c8 16       	cp	r12, r24
    4a68:	d9 06       	cpc	r13, r25
    4a6a:	ea 06       	cpc	r14, r26
    4a6c:	fb 06       	cpc	r15, r27
    4a6e:	08 f0       	brcs	.+2      	; 0x4a72 <f_open+0x58a>
    4a70:	b1 c4       	rjmp	.+2402   	; 0x53d4 <f_open+0xeec>
    4a72:	12 e0       	ldi	r17, 0x02	; 2
    4a74:	c1 16       	cp	r12, r17
    4a76:	d1 04       	cpc	r13, r1
    4a78:	e1 04       	cpc	r14, r1
    4a7a:	f1 04       	cpc	r15, r1
    4a7c:	08 f4       	brcc	.+2      	; 0x4a80 <f_open+0x598>
    4a7e:	b4 cf       	rjmp	.-152    	; 0x49e8 <f_open+0x500>
    4a80:	d5 01       	movw	r26, r10
    4a82:	8c 91       	ld	r24, X
    4a84:	82 30       	cpi	r24, 0x02	; 2
    4a86:	09 f4       	brne	.+2      	; 0x4a8a <f_open+0x5a2>
    4a88:	70 c2       	rjmp	.+1248   	; 0x4f6a <f_open+0xa82>
    4a8a:	83 30       	cpi	r24, 0x03	; 3
    4a8c:	09 f4       	brne	.+2      	; 0x4a90 <f_open+0x5a8>
    4a8e:	1a c2       	rjmp	.+1076   	; 0x4ec4 <f_open+0x9dc>
    4a90:	81 30       	cpi	r24, 0x01	; 1
    4a92:	09 f0       	breq	.+2      	; 0x4a96 <f_open+0x5ae>
    4a94:	a9 cf       	rjmp	.-174    	; 0x49e8 <f_open+0x500>
    4a96:	f6 01       	movw	r30, r12
    4a98:	f6 95       	lsr	r31
    4a9a:	e7 95       	ror	r30
    4a9c:	ec 0d       	add	r30, r12
    4a9e:	fd 1d       	adc	r31, r13
    4aa0:	eb ab       	std	Y+51, r30	; 0x33
    4aa2:	fc ab       	std	Y+52, r31	; 0x34
    4aa4:	92 96       	adiw	r26, 0x22	; 34
    4aa6:	8d 91       	ld	r24, X+
    4aa8:	9d 91       	ld	r25, X+
    4aaa:	0d 90       	ld	r0, X+
    4aac:	bc 91       	ld	r27, X
    4aae:	a0 2d       	mov	r26, r0
    4ab0:	9f 01       	movw	r18, r30
    4ab2:	23 2f       	mov	r18, r19
    4ab4:	33 27       	eor	r19, r19
    4ab6:	26 95       	lsr	r18
    4ab8:	2c 01       	movw	r4, r24
    4aba:	3d 01       	movw	r6, r26
    4abc:	42 0e       	add	r4, r18
    4abe:	53 1e       	adc	r5, r19
    4ac0:	61 1c       	adc	r6, r1
    4ac2:	71 1c       	adc	r7, r1
    4ac4:	f5 01       	movw	r30, r10
    4ac6:	06 a5       	ldd	r16, Z+46	; 0x2e
    4ac8:	17 a5       	ldd	r17, Z+47	; 0x2f
    4aca:	20 a9       	ldd	r18, Z+48	; 0x30
    4acc:	31 a9       	ldd	r19, Z+49	; 0x31
    4ace:	0b a7       	std	Y+43, r16	; 0x2b
    4ad0:	1c a7       	std	Y+44, r17	; 0x2c
    4ad2:	2d a7       	std	Y+45, r18	; 0x2d
    4ad4:	3e a7       	std	Y+46, r19	; 0x2e
    4ad6:	40 16       	cp	r4, r16
    4ad8:	51 06       	cpc	r5, r17
    4ada:	62 06       	cpc	r6, r18
    4adc:	73 06       	cpc	r7, r19
    4ade:	09 f4       	brne	.+2      	; 0x4ae2 <f_open+0x5fa>
    4ae0:	21 c4       	rjmp	.+2114   	; 0x5324 <f_open+0xe3c>
    4ae2:	84 81       	ldd	r24, Z+4	; 0x04
    4ae4:	81 11       	cpse	r24, r1
    4ae6:	cd c3       	rjmp	.+1946   	; 0x5282 <f_open+0xd9a>
    4ae8:	01 e0       	ldi	r16, 0x01	; 1
    4aea:	10 e0       	ldi	r17, 0x00	; 0
    4aec:	a3 01       	movw	r20, r6
    4aee:	92 01       	movw	r18, r4
    4af0:	b1 01       	movw	r22, r2
    4af2:	d5 01       	movw	r26, r10
    4af4:	11 96       	adiw	r26, 0x01	; 1
    4af6:	8c 91       	ld	r24, X
    4af8:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4afc:	81 11       	cpse	r24, r1
    4afe:	01 c3       	rjmp	.+1538   	; 0x5102 <f_open+0xc1a>
    4b00:	d5 01       	movw	r26, r10
    4b02:	9e 96       	adiw	r26, 0x2e	; 46
    4b04:	4d 92       	st	X+, r4
    4b06:	5d 92       	st	X+, r5
    4b08:	6d 92       	st	X+, r6
    4b0a:	7c 92       	st	X, r7
    4b0c:	d1 97       	sbiw	r26, 0x31	; 49
    4b0e:	92 96       	adiw	r26, 0x22	; 34
    4b10:	8d 91       	ld	r24, X+
    4b12:	9d 91       	ld	r25, X+
    4b14:	0d 90       	ld	r0, X+
    4b16:	bc 91       	ld	r27, X
    4b18:	a0 2d       	mov	r26, r0
    4b1a:	4b ae       	std	Y+59, r4	; 0x3b
    4b1c:	5c ae       	std	Y+60, r5	; 0x3c
    4b1e:	6d ae       	std	Y+61, r6	; 0x3d
    4b20:	7e ae       	std	Y+62, r7	; 0x3e
    4b22:	eb a9       	ldd	r30, Y+51	; 0x33
    4b24:	fc a9       	ldd	r31, Y+52	; 0x34
    4b26:	31 96       	adiw	r30, 0x01	; 1
    4b28:	21 96       	adiw	r28, 0x01	; 1
    4b2a:	ee af       	std	Y+62, r30	; 0x3e
    4b2c:	ff af       	std	Y+63, r31	; 0x3f
    4b2e:	21 97       	sbiw	r28, 0x01	; 1
    4b30:	eb a9       	ldd	r30, Y+51	; 0x33
    4b32:	fc a9       	ldd	r31, Y+52	; 0x34
    4b34:	f1 70       	andi	r31, 0x01	; 1
    4b36:	ea 0d       	add	r30, r10
    4b38:	fb 1d       	adc	r31, r11
    4b3a:	02 a9       	ldd	r16, Z+50	; 0x32
    4b3c:	0b ab       	std	Y+51, r16	; 0x33
    4b3e:	21 96       	adiw	r28, 0x01	; 1
    4b40:	2e ad       	ldd	r18, Y+62	; 0x3e
    4b42:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b44:	21 97       	sbiw	r28, 0x01	; 1
    4b46:	23 2f       	mov	r18, r19
    4b48:	33 27       	eor	r19, r19
    4b4a:	26 95       	lsr	r18
    4b4c:	ac 01       	movw	r20, r24
    4b4e:	bd 01       	movw	r22, r26
    4b50:	42 0f       	add	r20, r18
    4b52:	53 1f       	adc	r21, r19
    4b54:	61 1d       	adc	r22, r1
    4b56:	71 1d       	adc	r23, r1
    4b58:	4b a7       	std	Y+43, r20	; 0x2b
    4b5a:	5c a7       	std	Y+44, r21	; 0x2c
    4b5c:	6d a7       	std	Y+45, r22	; 0x2d
    4b5e:	7e a7       	std	Y+46, r23	; 0x2e
    4b60:	44 16       	cp	r4, r20
    4b62:	55 06       	cpc	r5, r21
    4b64:	66 06       	cpc	r6, r22
    4b66:	77 06       	cpc	r7, r23
    4b68:	f9 f0       	breq	.+62     	; 0x4ba8 <f_open+0x6c0>
    4b6a:	d5 01       	movw	r26, r10
    4b6c:	14 96       	adiw	r26, 0x04	; 4
    4b6e:	8c 91       	ld	r24, X
    4b70:	14 97       	sbiw	r26, 0x04	; 4
    4b72:	81 11       	cpse	r24, r1
    4b74:	fb c4       	rjmp	.+2550   	; 0x556c <f_open+0x1084>
    4b76:	01 e0       	ldi	r16, 0x01	; 1
    4b78:	10 e0       	ldi	r17, 0x00	; 0
    4b7a:	2b a5       	ldd	r18, Y+43	; 0x2b
    4b7c:	3c a5       	ldd	r19, Y+44	; 0x2c
    4b7e:	4d a5       	ldd	r20, Y+45	; 0x2d
    4b80:	5e a5       	ldd	r21, Y+46	; 0x2e
    4b82:	b1 01       	movw	r22, r2
    4b84:	d5 01       	movw	r26, r10
    4b86:	11 96       	adiw	r26, 0x01	; 1
    4b88:	8c 91       	ld	r24, X
    4b8a:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4b8e:	81 11       	cpse	r24, r1
    4b90:	b8 c2       	rjmp	.+1392   	; 0x5102 <f_open+0xc1a>
    4b92:	0b a5       	ldd	r16, Y+43	; 0x2b
    4b94:	1c a5       	ldd	r17, Y+44	; 0x2c
    4b96:	2d a5       	ldd	r18, Y+45	; 0x2d
    4b98:	3e a5       	ldd	r19, Y+46	; 0x2e
    4b9a:	d5 01       	movw	r26, r10
    4b9c:	9e 96       	adiw	r26, 0x2e	; 46
    4b9e:	0d 93       	st	X+, r16
    4ba0:	1d 93       	st	X+, r17
    4ba2:	2d 93       	st	X+, r18
    4ba4:	3c 93       	st	X, r19
    4ba6:	d1 97       	sbiw	r26, 0x31	; 49
    4ba8:	21 96       	adiw	r28, 0x01	; 1
    4baa:	ee ad       	ldd	r30, Y+62	; 0x3e
    4bac:	ff ad       	ldd	r31, Y+63	; 0x3f
    4bae:	21 97       	sbiw	r28, 0x01	; 1
    4bb0:	f1 70       	andi	r31, 0x01	; 1
    4bb2:	ea 0d       	add	r30, r10
    4bb4:	fb 1d       	adc	r31, r11
    4bb6:	82 a9       	ldd	r24, Z+50	; 0x32
    4bb8:	9b a9       	ldd	r25, Y+51	; 0x33
    4bba:	49 2e       	mov	r4, r25
    4bbc:	51 2c       	mov	r5, r1
    4bbe:	58 2a       	or	r5, r24
    4bc0:	c0 fe       	sbrs	r12, 0
    4bc2:	cf c4       	rjmp	.+2462   	; 0x5562 <f_open+0x107a>
    4bc4:	52 94       	swap	r5
    4bc6:	42 94       	swap	r4
    4bc8:	8f e0       	ldi	r24, 0x0F	; 15
    4bca:	48 22       	and	r4, r24
    4bcc:	45 24       	eor	r4, r5
    4bce:	58 22       	and	r5, r24
    4bd0:	45 24       	eor	r4, r5
    4bd2:	61 2c       	mov	r6, r1
    4bd4:	71 2c       	mov	r7, r1
    4bd6:	41 14       	cp	r4, r1
    4bd8:	51 04       	cpc	r5, r1
    4bda:	61 04       	cpc	r6, r1
    4bdc:	71 04       	cpc	r7, r1
    4bde:	09 f4       	brne	.+2      	; 0x4be2 <f_open+0x6fa>
    4be0:	f9 c3       	rjmp	.+2034   	; 0x53d4 <f_open+0xeec>
    4be2:	e1 e0       	ldi	r30, 0x01	; 1
    4be4:	4e 16       	cp	r4, r30
    4be6:	51 04       	cpc	r5, r1
    4be8:	61 04       	cpc	r6, r1
    4bea:	71 04       	cpc	r7, r1
    4bec:	09 f4       	brne	.+2      	; 0x4bf0 <f_open+0x708>
    4bee:	fc ce       	rjmp	.-520    	; 0x49e8 <f_open+0x500>
    4bf0:	f5 01       	movw	r30, r10
    4bf2:	86 89       	ldd	r24, Z+22	; 0x16
    4bf4:	97 89       	ldd	r25, Z+23	; 0x17
    4bf6:	a0 8d       	ldd	r26, Z+24	; 0x18
    4bf8:	b1 8d       	ldd	r27, Z+25	; 0x19
    4bfa:	c8 16       	cp	r12, r24
    4bfc:	d9 06       	cpc	r13, r25
    4bfe:	ea 06       	cpc	r14, r26
    4c00:	fb 06       	cpc	r15, r27
    4c02:	08 f4       	brcc	.+2      	; 0x4c06 <f_open+0x71e>
    4c04:	09 cf       	rjmp	.-494    	; 0x4a18 <f_open+0x530>
    4c06:	82 e0       	ldi	r24, 0x02	; 2
    4c08:	cc cc       	rjmp	.-1640   	; 0x45a2 <f_open+0xba>
    4c0a:	21 14       	cp	r2, r1
    4c0c:	31 04       	cpc	r3, r1
    4c0e:	09 f4       	brne	.+2      	; 0x4c12 <f_open+0x72a>
    4c10:	91 c0       	rjmp	.+290    	; 0x4d34 <f_open+0x84c>
    4c12:	89 2d       	mov	r24, r9
    4c14:	8c 71       	andi	r24, 0x1C	; 28
    4c16:	09 f4       	brne	.+2      	; 0x4c1a <f_open+0x732>
    4c18:	56 c0       	rjmp	.+172    	; 0x4cc6 <f_open+0x7de>
    4c1a:	d1 01       	movw	r26, r2
    4c1c:	1b 96       	adiw	r26, 0x0b	; 11
    4c1e:	8c 91       	ld	r24, X
    4c20:	81 71       	andi	r24, 0x11	; 17
    4c22:	09 f0       	breq	.+2      	; 0x4c26 <f_open+0x73e>
    4c24:	60 c0       	rjmp	.+192    	; 0x4ce6 <f_open+0x7fe>
    4c26:	92 fe       	sbrs	r9, 2
    4c28:	93 ce       	rjmp	.-730    	; 0x4950 <f_open+0x468>
    4c2a:	88 e0       	ldi	r24, 0x08	; 8
    4c2c:	ba cc       	rjmp	.-1676   	; 0x45a2 <f_open+0xba>
    4c2e:	0f a9       	ldd	r16, Y+55	; 0x37
    4c30:	18 ad       	ldd	r17, Y+56	; 0x38
    4c32:	29 ad       	ldd	r18, Y+57	; 0x39
    4c34:	3a ad       	ldd	r19, Y+58	; 0x3a
    4c36:	d7 01       	movw	r26, r14
    4c38:	9e 96       	adiw	r26, 0x2e	; 46
    4c3a:	0d 93       	st	X+, r16
    4c3c:	1d 93       	st	X+, r17
    4c3e:	2d 93       	st	X+, r18
    4c40:	3c 93       	st	X, r19
    4c42:	d1 97       	sbiw	r26, 0x31	; 49
    4c44:	e9 80       	ldd	r14, Y+1	; 0x01
    4c46:	fa 80       	ldd	r15, Y+2	; 0x02
    4c48:	ff a1       	ldd	r31, Y+39	; 0x27
    4c4a:	f0 62       	ori	r31, 0x20	; 32
    4c4c:	ff a3       	std	Y+39, r31	; 0x27
    4c4e:	0f 2f       	mov	r16, r31
    4c50:	f7 01       	movw	r30, r14
    4c52:	86 a5       	ldd	r24, Z+46	; 0x2e
    4c54:	97 a5       	ldd	r25, Z+47	; 0x2f
    4c56:	a0 a9       	ldd	r26, Z+48	; 0x30
    4c58:	b1 a9       	ldd	r27, Z+49	; 0x31
    4c5a:	f6 01       	movw	r30, r12
    4c5c:	82 8f       	std	Z+26, r24	; 0x1a
    4c5e:	93 8f       	std	Z+27, r25	; 0x1b
    4c60:	a4 8f       	std	Z+28, r26	; 0x1c
    4c62:	b5 8f       	std	Z+29, r27	; 0x1d
    4c64:	26 8e       	std	Z+30, r2	; 0x1e
    4c66:	37 8e       	std	Z+31, r3	; 0x1f
    4c68:	04 83       	std	Z+4, r16	; 0x04
    4c6a:	15 82       	std	Z+5, r1	; 0x05
    4c6c:	d1 01       	movw	r26, r2
    4c6e:	5a 96       	adiw	r26, 0x1a	; 26
    4c70:	8d 91       	ld	r24, X+
    4c72:	9c 91       	ld	r25, X
    4c74:	5b 97       	sbiw	r26, 0x1b	; 27
    4c76:	a0 e0       	ldi	r26, 0x00	; 0
    4c78:	b0 e0       	ldi	r27, 0x00	; 0
    4c7a:	f7 01       	movw	r30, r14
    4c7c:	20 81       	ld	r18, Z
    4c7e:	23 30       	cpi	r18, 0x03	; 3
    4c80:	a1 f1       	breq	.+104    	; 0x4cea <f_open+0x802>
    4c82:	f6 01       	movw	r30, r12
    4c84:	86 87       	std	Z+14, r24	; 0x0e
    4c86:	97 87       	std	Z+15, r25	; 0x0f
    4c88:	a0 8b       	std	Z+16, r26	; 0x10
    4c8a:	b1 8b       	std	Z+17, r27	; 0x11
    4c8c:	f1 01       	movw	r30, r2
    4c8e:	84 8d       	ldd	r24, Z+28	; 0x1c
    4c90:	95 8d       	ldd	r25, Z+29	; 0x1d
    4c92:	a6 8d       	ldd	r26, Z+30	; 0x1e
    4c94:	b7 8d       	ldd	r27, Z+31	; 0x1f
    4c96:	f6 01       	movw	r30, r12
    4c98:	82 87       	std	Z+10, r24	; 0x0a
    4c9a:	93 87       	std	Z+11, r25	; 0x0b
    4c9c:	a4 87       	std	Z+12, r26	; 0x0c
    4c9e:	b5 87       	std	Z+13, r27	; 0x0d
    4ca0:	16 82       	std	Z+6, r1	; 0x06
    4ca2:	17 82       	std	Z+7, r1	; 0x07
    4ca4:	10 86       	std	Z+8, r1	; 0x08
    4ca6:	11 86       	std	Z+9, r1	; 0x09
    4ca8:	16 8a       	std	Z+22, r1	; 0x16
    4caa:	17 8a       	std	Z+23, r1	; 0x17
    4cac:	10 8e       	std	Z+24, r1	; 0x18
    4cae:	11 8e       	std	Z+25, r1	; 0x19
    4cb0:	e0 82       	st	Z, r14
    4cb2:	f1 82       	std	Z+1, r15	; 0x01
    4cb4:	d7 01       	movw	r26, r14
    4cb6:	16 96       	adiw	r26, 0x06	; 6
    4cb8:	8d 91       	ld	r24, X+
    4cba:	9c 91       	ld	r25, X
    4cbc:	17 97       	sbiw	r26, 0x07	; 7
    4cbe:	82 83       	std	Z+2, r24	; 0x02
    4cc0:	93 83       	std	Z+3, r25	; 0x03
    4cc2:	80 e0       	ldi	r24, 0x00	; 0
    4cc4:	6e cc       	rjmp	.-1828   	; 0x45a2 <f_open+0xba>
    4cc6:	f1 01       	movw	r30, r2
    4cc8:	83 85       	ldd	r24, Z+11	; 0x0b
    4cca:	84 fd       	sbrc	r24, 4
    4ccc:	1b c0       	rjmp	.+54     	; 0x4d04 <f_open+0x81c>
    4cce:	91 fe       	sbrs	r9, 1
    4cd0:	02 c0       	rjmp	.+4      	; 0x4cd6 <f_open+0x7ee>
    4cd2:	80 fd       	sbrc	r24, 0
    4cd4:	08 c0       	rjmp	.+16     	; 0x4ce6 <f_open+0x7fe>
    4cd6:	89 2d       	mov	r24, r9
    4cd8:	88 70       	andi	r24, 0x08	; 8
    4cda:	e9 80       	ldd	r14, Y+1	; 0x01
    4cdc:	fa 80       	ldd	r15, Y+2	; 0x02
    4cde:	81 11       	cpse	r24, r1
    4ce0:	b3 cf       	rjmp	.-154    	; 0x4c48 <f_open+0x760>
    4ce2:	0f a1       	ldd	r16, Y+39	; 0x27
    4ce4:	b5 cf       	rjmp	.-150    	; 0x4c50 <f_open+0x768>
    4ce6:	87 e0       	ldi	r24, 0x07	; 7
    4ce8:	5c cc       	rjmp	.-1864   	; 0x45a2 <f_open+0xba>
    4cea:	f1 01       	movw	r30, r2
    4cec:	44 89       	ldd	r20, Z+20	; 0x14
    4cee:	55 89       	ldd	r21, Z+21	; 0x15
    4cf0:	60 e0       	ldi	r22, 0x00	; 0
    4cf2:	70 e0       	ldi	r23, 0x00	; 0
    4cf4:	ba 01       	movw	r22, r20
    4cf6:	55 27       	eor	r21, r21
    4cf8:	44 27       	eor	r20, r20
    4cfa:	84 2b       	or	r24, r20
    4cfc:	95 2b       	or	r25, r21
    4cfe:	a6 2b       	or	r26, r22
    4d00:	b7 2b       	or	r27, r23
    4d02:	bf cf       	rjmp	.-130    	; 0x4c82 <f_open+0x79a>
    4d04:	84 e0       	ldi	r24, 0x04	; 4
    4d06:	4d cc       	rjmp	.-1894   	; 0x45a2 <f_open+0xba>
    4d08:	e9 80       	ldd	r14, Y+1	; 0x01
    4d0a:	fa 80       	ldd	r15, Y+2	; 0x02
    4d0c:	0f a1       	ldd	r16, Y+39	; 0x27
    4d0e:	a0 cf       	rjmp	.-192    	; 0x4c50 <f_open+0x768>
    4d10:	f1 01       	movw	r30, r2
    4d12:	16 a6       	std	Z+46, r1	; 0x2e
    4d14:	17 a6       	std	Z+47, r1	; 0x2f
    4d16:	10 aa       	std	Z+48, r1	; 0x30
    4d18:	11 aa       	std	Z+49, r1	; 0x31
    4d1a:	81 01       	movw	r16, r2
    4d1c:	00 5d       	subi	r16, 0xD0	; 208
    4d1e:	1d 4f       	sbci	r17, 0xFD	; 253
    4d20:	0f a3       	std	Y+39, r16	; 0x27
    4d22:	18 a7       	std	Y+40, r17	; 0x28
    4d24:	d8 01       	movw	r26, r16
    4d26:	8d 91       	ld	r24, X+
    4d28:	9c 91       	ld	r25, X
    4d2a:	85 35       	cpi	r24, 0x55	; 85
    4d2c:	9a 4a       	sbci	r25, 0xAA	; 170
    4d2e:	21 f0       	breq	.+8      	; 0x4d38 <f_open+0x850>
    4d30:	82 e0       	ldi	r24, 0x02	; 2
    4d32:	84 cc       	rjmp	.-1784   	; 0x463c <f_open+0x154>
    4d34:	86 e0       	ldi	r24, 0x06	; 6
    4d36:	fa cd       	rjmp	.-1036   	; 0x492c <f_open+0x444>
    4d38:	f1 01       	movw	r30, r2
    4d3a:	e8 59       	subi	r30, 0x98	; 152
    4d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d3e:	ef a7       	std	Y+47, r30	; 0x2f
    4d40:	f8 ab       	std	Y+48, r31	; 0x30
    4d42:	80 81       	ld	r24, Z
    4d44:	91 81       	ldd	r25, Z+1	; 0x01
    4d46:	a2 81       	ldd	r26, Z+2	; 0x02
    4d48:	b3 81       	ldd	r27, Z+3	; 0x03
    4d4a:	bb 27       	eor	r27, r27
    4d4c:	86 34       	cpi	r24, 0x46	; 70
    4d4e:	91 44       	sbci	r25, 0x41	; 65
    4d50:	a4 45       	sbci	r26, 0x54	; 84
    4d52:	b1 05       	cpc	r27, r1
    4d54:	09 f4       	brne	.+2      	; 0x4d58 <f_open+0x870>
    4d56:	03 c4       	rjmp	.+2054   	; 0x555e <f_open+0x1076>
    4d58:	81 01       	movw	r16, r2
    4d5a:	0c 57       	subi	r16, 0x7C	; 124
    4d5c:	1f 4f       	sbci	r17, 0xFF	; 255
    4d5e:	0b a7       	std	Y+43, r16	; 0x2b
    4d60:	1c a7       	std	Y+44, r17	; 0x2c
    4d62:	f8 01       	movw	r30, r16
    4d64:	80 81       	ld	r24, Z
    4d66:	91 81       	ldd	r25, Z+1	; 0x01
    4d68:	a2 81       	ldd	r26, Z+2	; 0x02
    4d6a:	b3 81       	ldd	r27, Z+3	; 0x03
    4d6c:	bb 27       	eor	r27, r27
    4d6e:	86 34       	cpi	r24, 0x46	; 70
    4d70:	91 44       	sbci	r25, 0x41	; 65
    4d72:	a4 45       	sbci	r26, 0x54	; 84
    4d74:	b1 05       	cpc	r27, r1
    4d76:	09 f4       	brne	.+2      	; 0x4d7a <f_open+0x892>
    4d78:	77 cc       	rjmp	.-1810   	; 0x4668 <f_open+0x180>
    4d7a:	f1 01       	movw	r30, r2
    4d7c:	ec 50       	subi	r30, 0x0C	; 12
    4d7e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d80:	80 81       	ld	r24, Z
    4d82:	88 23       	and	r24, r24
    4d84:	09 f4       	brne	.+2      	; 0x4d88 <f_open+0x8a0>
    4d86:	e7 c3       	rjmp	.+1998   	; 0x5556 <f_open+0x106e>
    4d88:	34 96       	adiw	r30, 0x04	; 4
    4d8a:	80 81       	ld	r24, Z
    4d8c:	91 81       	ldd	r25, Z+1	; 0x01
    4d8e:	a2 81       	ldd	r26, Z+2	; 0x02
    4d90:	b3 81       	ldd	r27, Z+3	; 0x03
    4d92:	8f 8b       	std	Y+23, r24	; 0x17
    4d94:	98 8f       	std	Y+24, r25	; 0x18
    4d96:	a9 8f       	std	Y+25, r26	; 0x19
    4d98:	ba 8f       	std	Y+26, r27	; 0x1a
    4d9a:	f1 01       	movw	r30, r2
    4d9c:	ec 5f       	subi	r30, 0xFC	; 252
    4d9e:	fd 4f       	sbci	r31, 0xFD	; 253
    4da0:	80 81       	ld	r24, Z
    4da2:	88 23       	and	r24, r24
    4da4:	09 f4       	brne	.+2      	; 0x4da8 <f_open+0x8c0>
    4da6:	d3 c3       	rjmp	.+1958   	; 0x554e <f_open+0x1066>
    4da8:	34 96       	adiw	r30, 0x04	; 4
    4daa:	80 81       	ld	r24, Z
    4dac:	91 81       	ldd	r25, Z+1	; 0x01
    4dae:	a2 81       	ldd	r26, Z+2	; 0x02
    4db0:	b3 81       	ldd	r27, Z+3	; 0x03
    4db2:	8b 8f       	std	Y+27, r24	; 0x1b
    4db4:	9c 8f       	std	Y+28, r25	; 0x1c
    4db6:	ad 8f       	std	Y+29, r26	; 0x1d
    4db8:	be 8f       	std	Y+30, r27	; 0x1e
    4dba:	f1 01       	movw	r30, r2
    4dbc:	ec 5e       	subi	r30, 0xEC	; 236
    4dbe:	fd 4f       	sbci	r31, 0xFD	; 253
    4dc0:	80 81       	ld	r24, Z
    4dc2:	88 23       	and	r24, r24
    4dc4:	09 f4       	brne	.+2      	; 0x4dc8 <f_open+0x8e0>
    4dc6:	bf c3       	rjmp	.+1918   	; 0x5546 <f_open+0x105e>
    4dc8:	34 96       	adiw	r30, 0x04	; 4
    4dca:	80 81       	ld	r24, Z
    4dcc:	91 81       	ldd	r25, Z+1	; 0x01
    4dce:	a2 81       	ldd	r26, Z+2	; 0x02
    4dd0:	b3 81       	ldd	r27, Z+3	; 0x03
    4dd2:	8f 8f       	std	Y+31, r24	; 0x1f
    4dd4:	98 a3       	std	Y+32, r25	; 0x20
    4dd6:	a9 a3       	std	Y+33, r26	; 0x21
    4dd8:	ba a3       	std	Y+34, r27	; 0x22
    4dda:	f1 01       	movw	r30, r2
    4ddc:	ec 5d       	subi	r30, 0xDC	; 220
    4dde:	fd 4f       	sbci	r31, 0xFD	; 253
    4de0:	80 81       	ld	r24, Z
    4de2:	88 23       	and	r24, r24
    4de4:	09 f4       	brne	.+2      	; 0x4de8 <f_open+0x900>
    4de6:	ab c3       	rjmp	.+1878   	; 0x553e <f_open+0x1056>
    4de8:	34 96       	adiw	r30, 0x04	; 4
    4dea:	80 81       	ld	r24, Z
    4dec:	91 81       	ldd	r25, Z+1	; 0x01
    4dee:	a2 81       	ldd	r26, Z+2	; 0x02
    4df0:	b3 81       	ldd	r27, Z+3	; 0x03
    4df2:	8b a3       	std	Y+35, r24	; 0x23
    4df4:	9c a3       	std	Y+36, r25	; 0x24
    4df6:	ad a3       	std	Y+37, r26	; 0x25
    4df8:	be a3       	std	Y+38, r27	; 0x26
    4dfa:	4f 88       	ldd	r4, Y+23	; 0x17
    4dfc:	58 8c       	ldd	r5, Y+24	; 0x18
    4dfe:	69 8c       	ldd	r6, Y+25	; 0x19
    4e00:	7a 8c       	ldd	r7, Y+26	; 0x1a
    4e02:	41 14       	cp	r4, r1
    4e04:	51 04       	cpc	r5, r1
    4e06:	61 04       	cpc	r6, r1
    4e08:	71 04       	cpc	r7, r1
    4e0a:	09 f0       	breq	.+2      	; 0x4e0e <f_open+0x926>
    4e0c:	f6 c0       	rjmp	.+492    	; 0x4ffa <f_open+0xb12>
    4e0e:	4b 8c       	ldd	r4, Y+27	; 0x1b
    4e10:	5c 8c       	ldd	r5, Y+28	; 0x1c
    4e12:	6d 8c       	ldd	r6, Y+29	; 0x1d
    4e14:	7e 8c       	ldd	r7, Y+30	; 0x1e
    4e16:	41 14       	cp	r4, r1
    4e18:	51 04       	cpc	r5, r1
    4e1a:	61 04       	cpc	r6, r1
    4e1c:	71 04       	cpc	r7, r1
    4e1e:	09 f0       	breq	.+2      	; 0x4e22 <f_open+0x93a>
    4e20:	44 c1       	rjmp	.+648    	; 0x50aa <f_open+0xbc2>
    4e22:	4f 8c       	ldd	r4, Y+31	; 0x1f
    4e24:	58 a0       	ldd	r5, Y+32	; 0x20
    4e26:	69 a0       	ldd	r6, Y+33	; 0x21
    4e28:	7a a0       	ldd	r7, Y+34	; 0x22
    4e2a:	41 14       	cp	r4, r1
    4e2c:	51 04       	cpc	r5, r1
    4e2e:	61 04       	cpc	r6, r1
    4e30:	71 04       	cpc	r7, r1
    4e32:	09 f0       	breq	.+2      	; 0x4e36 <f_open+0x94e>
    4e34:	0e c1       	rjmp	.+540    	; 0x5052 <f_open+0xb6a>
    4e36:	4b a0       	ldd	r4, Y+35	; 0x23
    4e38:	5c a0       	ldd	r5, Y+36	; 0x24
    4e3a:	6d a0       	ldd	r6, Y+37	; 0x25
    4e3c:	7e a0       	ldd	r7, Y+38	; 0x26
    4e3e:	41 14       	cp	r4, r1
    4e40:	51 04       	cpc	r5, r1
    4e42:	61 04       	cpc	r6, r1
    4e44:	71 04       	cpc	r7, r1
    4e46:	09 f4       	brne	.+2      	; 0x4e4a <f_open+0x962>
    4e48:	01 cc       	rjmp	.-2046   	; 0x464c <f_open+0x164>
    4e4a:	d1 01       	movw	r26, r2
    4e4c:	14 96       	adiw	r26, 0x04	; 4
    4e4e:	1c 92       	st	X, r1
    4e50:	14 97       	sbiw	r26, 0x04	; 4
    4e52:	0f ef       	ldi	r16, 0xFF	; 255
    4e54:	1f ef       	ldi	r17, 0xFF	; 255
    4e56:	98 01       	movw	r18, r16
    4e58:	9e 96       	adiw	r26, 0x2e	; 46
    4e5a:	0d 93       	st	X+, r16
    4e5c:	1d 93       	st	X+, r17
    4e5e:	2d 93       	st	X+, r18
    4e60:	3c 93       	st	X, r19
    4e62:	d1 97       	sbiw	r26, 0x31	; 49
    4e64:	bf ef       	ldi	r27, 0xFF	; 255
    4e66:	4b 16       	cp	r4, r27
    4e68:	5b 06       	cpc	r5, r27
    4e6a:	6b 06       	cpc	r6, r27
    4e6c:	7b 06       	cpc	r7, r27
    4e6e:	09 f4       	brne	.+2      	; 0x4e72 <f_open+0x98a>
    4e70:	65 c2       	rjmp	.+1226   	; 0x533c <f_open+0xe54>
    4e72:	01 e0       	ldi	r16, 0x01	; 1
    4e74:	10 e0       	ldi	r17, 0x00	; 0
    4e76:	a3 01       	movw	r20, r6
    4e78:	92 01       	movw	r18, r4
    4e7a:	b7 01       	movw	r22, r14
    4e7c:	f1 01       	movw	r30, r2
    4e7e:	81 81       	ldd	r24, Z+1	; 0x01
    4e80:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4e84:	88 23       	and	r24, r24
    4e86:	09 f4       	brne	.+2      	; 0x4e8a <f_open+0x9a2>
    4e88:	52 c2       	rjmp	.+1188   	; 0x532e <f_open+0xe46>
    4e8a:	ee 24       	eor	r14, r14
    4e8c:	ea 94       	dec	r14
    4e8e:	fe 2c       	mov	r15, r14
    4e90:	87 01       	movw	r16, r14
    4e92:	d1 01       	movw	r26, r2
    4e94:	9e 96       	adiw	r26, 0x2e	; 46
    4e96:	ed 92       	st	X+, r14
    4e98:	fd 92       	st	X+, r15
    4e9a:	0d 93       	st	X+, r16
    4e9c:	1c 93       	st	X, r17
    4e9e:	d1 97       	sbiw	r26, 0x31	; 49
    4ea0:	81 e0       	ldi	r24, 0x01	; 1
    4ea2:	7f cb       	rjmp	.-2306   	; 0x45a2 <f_open+0xba>
    4ea4:	84 89       	ldd	r24, Z+20	; 0x14
    4ea6:	95 89       	ldd	r25, Z+21	; 0x15
    4ea8:	a0 e0       	ldi	r26, 0x00	; 0
    4eaa:	b0 e0       	ldi	r27, 0x00	; 0
    4eac:	dc 01       	movw	r26, r24
    4eae:	99 27       	eor	r25, r25
    4eb0:	88 27       	eor	r24, r24
    4eb2:	08 2b       	or	r16, r24
    4eb4:	19 2b       	or	r17, r25
    4eb6:	2a 2b       	or	r18, r26
    4eb8:	3b 2b       	or	r19, r27
    4eba:	0f a7       	std	Y+47, r16	; 0x2f
    4ebc:	18 ab       	std	Y+48, r17	; 0x30
    4ebe:	29 ab       	std	Y+49, r18	; 0x31
    4ec0:	3a ab       	std	Y+50, r19	; 0x32
    4ec2:	67 cd       	rjmp	.-1330   	; 0x4992 <f_open+0x4aa>
    4ec4:	97 01       	movw	r18, r14
    4ec6:	86 01       	movw	r16, r12
    4ec8:	a7 e0       	ldi	r26, 0x07	; 7
    4eca:	36 95       	lsr	r19
    4ecc:	27 95       	ror	r18
    4ece:	17 95       	ror	r17
    4ed0:	07 95       	ror	r16
    4ed2:	aa 95       	dec	r26
    4ed4:	d1 f7       	brne	.-12     	; 0x4eca <f_open+0x9e2>
    4ed6:	f5 01       	movw	r30, r10
    4ed8:	82 a1       	ldd	r24, Z+34	; 0x22
    4eda:	93 a1       	ldd	r25, Z+35	; 0x23
    4edc:	a4 a1       	ldd	r26, Z+36	; 0x24
    4ede:	b5 a1       	ldd	r27, Z+37	; 0x25
    4ee0:	08 0f       	add	r16, r24
    4ee2:	19 1f       	adc	r17, r25
    4ee4:	2a 1f       	adc	r18, r26
    4ee6:	3b 1f       	adc	r19, r27
    4ee8:	0b a7       	std	Y+43, r16	; 0x2b
    4eea:	1c a7       	std	Y+44, r17	; 0x2c
    4eec:	2d a7       	std	Y+45, r18	; 0x2d
    4eee:	3e a7       	std	Y+46, r19	; 0x2e
    4ef0:	46 a4       	ldd	r4, Z+46	; 0x2e
    4ef2:	57 a4       	ldd	r5, Z+47	; 0x2f
    4ef4:	60 a8       	ldd	r6, Z+48	; 0x30
    4ef6:	71 a8       	ldd	r7, Z+49	; 0x31
    4ef8:	04 15       	cp	r16, r4
    4efa:	15 05       	cpc	r17, r5
    4efc:	26 05       	cpc	r18, r6
    4efe:	37 05       	cpc	r19, r7
    4f00:	e1 f0       	breq	.+56     	; 0x4f3a <f_open+0xa52>
    4f02:	84 81       	ldd	r24, Z+4	; 0x04
    4f04:	81 11       	cpse	r24, r1
    4f06:	76 c1       	rjmp	.+748    	; 0x51f4 <f_open+0xd0c>
    4f08:	01 e0       	ldi	r16, 0x01	; 1
    4f0a:	10 e0       	ldi	r17, 0x00	; 0
    4f0c:	2b a5       	ldd	r18, Y+43	; 0x2b
    4f0e:	3c a5       	ldd	r19, Y+44	; 0x2c
    4f10:	4d a5       	ldd	r20, Y+45	; 0x2d
    4f12:	5e a5       	ldd	r21, Y+46	; 0x2e
    4f14:	b1 01       	movw	r22, r2
    4f16:	d5 01       	movw	r26, r10
    4f18:	11 96       	adiw	r26, 0x01	; 1
    4f1a:	8c 91       	ld	r24, X
    4f1c:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4f20:	81 11       	cpse	r24, r1
    4f22:	ef c0       	rjmp	.+478    	; 0x5102 <f_open+0xc1a>
    4f24:	0b a5       	ldd	r16, Y+43	; 0x2b
    4f26:	1c a5       	ldd	r17, Y+44	; 0x2c
    4f28:	2d a5       	ldd	r18, Y+45	; 0x2d
    4f2a:	3e a5       	ldd	r19, Y+46	; 0x2e
    4f2c:	d5 01       	movw	r26, r10
    4f2e:	9e 96       	adiw	r26, 0x2e	; 46
    4f30:	0d 93       	st	X+, r16
    4f32:	1d 93       	st	X+, r17
    4f34:	2d 93       	st	X+, r18
    4f36:	3c 93       	st	X, r19
    4f38:	d1 97       	sbiw	r26, 0x31	; 49
    4f3a:	d7 01       	movw	r26, r14
    4f3c:	c6 01       	movw	r24, r12
    4f3e:	88 0f       	add	r24, r24
    4f40:	99 1f       	adc	r25, r25
    4f42:	aa 1f       	adc	r26, r26
    4f44:	bb 1f       	adc	r27, r27
    4f46:	88 0f       	add	r24, r24
    4f48:	99 1f       	adc	r25, r25
    4f4a:	aa 1f       	adc	r26, r26
    4f4c:	bb 1f       	adc	r27, r27
    4f4e:	8c 7f       	andi	r24, 0xFC	; 252
    4f50:	91 70       	andi	r25, 0x01	; 1
    4f52:	aa 27       	eor	r26, r26
    4f54:	bb 27       	eor	r27, r27
    4f56:	f5 01       	movw	r30, r10
    4f58:	e8 0f       	add	r30, r24
    4f5a:	f9 1f       	adc	r31, r25
    4f5c:	42 a8       	ldd	r4, Z+50	; 0x32
    4f5e:	53 a8       	ldd	r5, Z+51	; 0x33
    4f60:	64 a8       	ldd	r6, Z+52	; 0x34
    4f62:	75 a8       	ldd	r7, Z+53	; 0x35
    4f64:	bf e0       	ldi	r27, 0x0F	; 15
    4f66:	7b 22       	and	r7, r27
    4f68:	36 ce       	rjmp	.-916    	; 0x4bd6 <f_open+0x6ee>
    4f6a:	33 27       	eor	r19, r19
    4f6c:	2f 2d       	mov	r18, r15
    4f6e:	1e 2d       	mov	r17, r14
    4f70:	0d 2d       	mov	r16, r13
    4f72:	f5 01       	movw	r30, r10
    4f74:	82 a1       	ldd	r24, Z+34	; 0x22
    4f76:	93 a1       	ldd	r25, Z+35	; 0x23
    4f78:	a4 a1       	ldd	r26, Z+36	; 0x24
    4f7a:	b5 a1       	ldd	r27, Z+37	; 0x25
    4f7c:	08 0f       	add	r16, r24
    4f7e:	19 1f       	adc	r17, r25
    4f80:	2a 1f       	adc	r18, r26
    4f82:	3b 1f       	adc	r19, r27
    4f84:	0b a7       	std	Y+43, r16	; 0x2b
    4f86:	1c a7       	std	Y+44, r17	; 0x2c
    4f88:	2d a7       	std	Y+45, r18	; 0x2d
    4f8a:	3e a7       	std	Y+46, r19	; 0x2e
    4f8c:	46 a4       	ldd	r4, Z+46	; 0x2e
    4f8e:	57 a4       	ldd	r5, Z+47	; 0x2f
    4f90:	60 a8       	ldd	r6, Z+48	; 0x30
    4f92:	71 a8       	ldd	r7, Z+49	; 0x31
    4f94:	04 15       	cp	r16, r4
    4f96:	15 05       	cpc	r17, r5
    4f98:	26 05       	cpc	r18, r6
    4f9a:	37 05       	cpc	r19, r7
    4f9c:	e1 f0       	breq	.+56     	; 0x4fd6 <f_open+0xaee>
    4f9e:	84 81       	ldd	r24, Z+4	; 0x04
    4fa0:	81 11       	cpse	r24, r1
    4fa2:	e1 c0       	rjmp	.+450    	; 0x5166 <f_open+0xc7e>
    4fa4:	01 e0       	ldi	r16, 0x01	; 1
    4fa6:	10 e0       	ldi	r17, 0x00	; 0
    4fa8:	2b a5       	ldd	r18, Y+43	; 0x2b
    4faa:	3c a5       	ldd	r19, Y+44	; 0x2c
    4fac:	4d a5       	ldd	r20, Y+45	; 0x2d
    4fae:	5e a5       	ldd	r21, Y+46	; 0x2e
    4fb0:	b1 01       	movw	r22, r2
    4fb2:	d5 01       	movw	r26, r10
    4fb4:	11 96       	adiw	r26, 0x01	; 1
    4fb6:	8c 91       	ld	r24, X
    4fb8:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    4fbc:	81 11       	cpse	r24, r1
    4fbe:	a1 c0       	rjmp	.+322    	; 0x5102 <f_open+0xc1a>
    4fc0:	0b a5       	ldd	r16, Y+43	; 0x2b
    4fc2:	1c a5       	ldd	r17, Y+44	; 0x2c
    4fc4:	2d a5       	ldd	r18, Y+45	; 0x2d
    4fc6:	3e a5       	ldd	r19, Y+46	; 0x2e
    4fc8:	d5 01       	movw	r26, r10
    4fca:	9e 96       	adiw	r26, 0x2e	; 46
    4fcc:	0d 93       	st	X+, r16
    4fce:	1d 93       	st	X+, r17
    4fd0:	2d 93       	st	X+, r18
    4fd2:	3c 93       	st	X, r19
    4fd4:	d1 97       	sbiw	r26, 0x31	; 49
    4fd6:	d7 01       	movw	r26, r14
    4fd8:	c6 01       	movw	r24, r12
    4fda:	88 0f       	add	r24, r24
    4fdc:	99 1f       	adc	r25, r25
    4fde:	aa 1f       	adc	r26, r26
    4fe0:	bb 1f       	adc	r27, r27
    4fe2:	8e 7f       	andi	r24, 0xFE	; 254
    4fe4:	91 70       	andi	r25, 0x01	; 1
    4fe6:	aa 27       	eor	r26, r26
    4fe8:	bb 27       	eor	r27, r27
    4fea:	f5 01       	movw	r30, r10
    4fec:	e8 0f       	add	r30, r24
    4fee:	f9 1f       	adc	r31, r25
    4ff0:	42 a8       	ldd	r4, Z+50	; 0x32
    4ff2:	53 a8       	ldd	r5, Z+51	; 0x33
    4ff4:	61 2c       	mov	r6, r1
    4ff6:	71 2c       	mov	r7, r1
    4ff8:	ee cd       	rjmp	.-1060   	; 0x4bd6 <f_open+0x6ee>
    4ffa:	d1 01       	movw	r26, r2
    4ffc:	14 96       	adiw	r26, 0x04	; 4
    4ffe:	1c 92       	st	X, r1
    5000:	14 97       	sbiw	r26, 0x04	; 4
    5002:	0f ef       	ldi	r16, 0xFF	; 255
    5004:	1f ef       	ldi	r17, 0xFF	; 255
    5006:	98 01       	movw	r18, r16
    5008:	9e 96       	adiw	r26, 0x2e	; 46
    500a:	0d 93       	st	X+, r16
    500c:	1d 93       	st	X+, r17
    500e:	2d 93       	st	X+, r18
    5010:	3c 93       	st	X, r19
    5012:	d1 97       	sbiw	r26, 0x31	; 49
    5014:	bf ef       	ldi	r27, 0xFF	; 255
    5016:	4b 16       	cp	r4, r27
    5018:	5b 06       	cpc	r5, r27
    501a:	6b 06       	cpc	r6, r27
    501c:	7b 06       	cpc	r7, r27
    501e:	09 f4       	brne	.+2      	; 0x5022 <f_open+0xb3a>
    5020:	b6 c1       	rjmp	.+876    	; 0x538e <f_open+0xea6>
    5022:	01 e0       	ldi	r16, 0x01	; 1
    5024:	10 e0       	ldi	r17, 0x00	; 0
    5026:	a3 01       	movw	r20, r6
    5028:	92 01       	movw	r18, r4
    502a:	b7 01       	movw	r22, r14
    502c:	d1 01       	movw	r26, r2
    502e:	11 96       	adiw	r26, 0x01	; 1
    5030:	8c 91       	ld	r24, X
    5032:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    5036:	88 23       	and	r24, r24
    5038:	09 f4       	brne	.+2      	; 0x503c <f_open+0xb54>
    503a:	a4 c1       	rjmp	.+840    	; 0x5384 <f_open+0xe9c>
    503c:	0f ef       	ldi	r16, 0xFF	; 255
    503e:	1f ef       	ldi	r17, 0xFF	; 255
    5040:	98 01       	movw	r18, r16
    5042:	d1 01       	movw	r26, r2
    5044:	9e 96       	adiw	r26, 0x2e	; 46
    5046:	0d 93       	st	X+, r16
    5048:	1d 93       	st	X+, r17
    504a:	2d 93       	st	X+, r18
    504c:	3c 93       	st	X, r19
    504e:	d1 97       	sbiw	r26, 0x31	; 49
    5050:	de ce       	rjmp	.-580    	; 0x4e0e <f_open+0x926>
    5052:	d1 01       	movw	r26, r2
    5054:	14 96       	adiw	r26, 0x04	; 4
    5056:	1c 92       	st	X, r1
    5058:	14 97       	sbiw	r26, 0x04	; 4
    505a:	0f ef       	ldi	r16, 0xFF	; 255
    505c:	1f ef       	ldi	r17, 0xFF	; 255
    505e:	98 01       	movw	r18, r16
    5060:	9e 96       	adiw	r26, 0x2e	; 46
    5062:	0d 93       	st	X+, r16
    5064:	1d 93       	st	X+, r17
    5066:	2d 93       	st	X+, r18
    5068:	3c 93       	st	X, r19
    506a:	d1 97       	sbiw	r26, 0x31	; 49
    506c:	bf ef       	ldi	r27, 0xFF	; 255
    506e:	4b 16       	cp	r4, r27
    5070:	5b 06       	cpc	r5, r27
    5072:	6b 06       	cpc	r6, r27
    5074:	7b 06       	cpc	r7, r27
    5076:	09 f4       	brne	.+2      	; 0x507a <f_open+0xb92>
    5078:	53 c0       	rjmp	.+166    	; 0x5120 <f_open+0xc38>
    507a:	01 e0       	ldi	r16, 0x01	; 1
    507c:	10 e0       	ldi	r17, 0x00	; 0
    507e:	a3 01       	movw	r20, r6
    5080:	92 01       	movw	r18, r4
    5082:	b7 01       	movw	r22, r14
    5084:	d1 01       	movw	r26, r2
    5086:	11 96       	adiw	r26, 0x01	; 1
    5088:	8c 91       	ld	r24, X
    508a:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    508e:	88 23       	and	r24, r24
    5090:	09 f4       	brne	.+2      	; 0x5094 <f_open+0xbac>
    5092:	41 c0       	rjmp	.+130    	; 0x5116 <f_open+0xc2e>
    5094:	0f ef       	ldi	r16, 0xFF	; 255
    5096:	1f ef       	ldi	r17, 0xFF	; 255
    5098:	98 01       	movw	r18, r16
    509a:	d1 01       	movw	r26, r2
    509c:	9e 96       	adiw	r26, 0x2e	; 46
    509e:	0d 93       	st	X+, r16
    50a0:	1d 93       	st	X+, r17
    50a2:	2d 93       	st	X+, r18
    50a4:	3c 93       	st	X, r19
    50a6:	d1 97       	sbiw	r26, 0x31	; 49
    50a8:	c6 ce       	rjmp	.-628    	; 0x4e36 <f_open+0x94e>
    50aa:	d1 01       	movw	r26, r2
    50ac:	14 96       	adiw	r26, 0x04	; 4
    50ae:	1c 92       	st	X, r1
    50b0:	14 97       	sbiw	r26, 0x04	; 4
    50b2:	0f ef       	ldi	r16, 0xFF	; 255
    50b4:	1f ef       	ldi	r17, 0xFF	; 255
    50b6:	98 01       	movw	r18, r16
    50b8:	9e 96       	adiw	r26, 0x2e	; 46
    50ba:	0d 93       	st	X+, r16
    50bc:	1d 93       	st	X+, r17
    50be:	2d 93       	st	X+, r18
    50c0:	3c 93       	st	X, r19
    50c2:	d1 97       	sbiw	r26, 0x31	; 49
    50c4:	bf ef       	ldi	r27, 0xFF	; 255
    50c6:	4b 16       	cp	r4, r27
    50c8:	5b 06       	cpc	r5, r27
    50ca:	6b 06       	cpc	r6, r27
    50cc:	7b 06       	cpc	r7, r27
    50ce:	09 f4       	brne	.+2      	; 0x50d2 <f_open+0xbea>
    50d0:	cb c1       	rjmp	.+918    	; 0x5468 <f_open+0xf80>
    50d2:	01 e0       	ldi	r16, 0x01	; 1
    50d4:	10 e0       	ldi	r17, 0x00	; 0
    50d6:	a3 01       	movw	r20, r6
    50d8:	92 01       	movw	r18, r4
    50da:	b7 01       	movw	r22, r14
    50dc:	d1 01       	movw	r26, r2
    50de:	11 96       	adiw	r26, 0x01	; 1
    50e0:	8c 91       	ld	r24, X
    50e2:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    50e6:	88 23       	and	r24, r24
    50e8:	09 f4       	brne	.+2      	; 0x50ec <f_open+0xc04>
    50ea:	b9 c1       	rjmp	.+882    	; 0x545e <f_open+0xf76>
    50ec:	0f ef       	ldi	r16, 0xFF	; 255
    50ee:	1f ef       	ldi	r17, 0xFF	; 255
    50f0:	98 01       	movw	r18, r16
    50f2:	d1 01       	movw	r26, r2
    50f4:	9e 96       	adiw	r26, 0x2e	; 46
    50f6:	0d 93       	st	X+, r16
    50f8:	1d 93       	st	X+, r17
    50fa:	2d 93       	st	X+, r18
    50fc:	3c 93       	st	X, r19
    50fe:	d1 97       	sbiw	r26, 0x31	; 49
    5100:	90 ce       	rjmp	.-736    	; 0x4e22 <f_open+0x93a>
    5102:	8f ef       	ldi	r24, 0xFF	; 255
    5104:	9f ef       	ldi	r25, 0xFF	; 255
    5106:	dc 01       	movw	r26, r24
    5108:	f5 01       	movw	r30, r10
    510a:	86 a7       	std	Z+46, r24	; 0x2e
    510c:	97 a7       	std	Z+47, r25	; 0x2f
    510e:	a0 ab       	std	Z+48, r26	; 0x30
    5110:	b1 ab       	std	Z+49, r27	; 0x31
    5112:	81 e0       	ldi	r24, 0x01	; 1
    5114:	46 ca       	rjmp	.-2932   	; 0x45a2 <f_open+0xba>
    5116:	f1 01       	movw	r30, r2
    5118:	46 a6       	std	Z+46, r4	; 0x2e
    511a:	57 a6       	std	Z+47, r5	; 0x2f
    511c:	60 aa       	std	Z+48, r6	; 0x30
    511e:	71 aa       	std	Z+49, r7	; 0x31
    5120:	ef a1       	ldd	r30, Y+39	; 0x27
    5122:	f8 a5       	ldd	r31, Y+40	; 0x28
    5124:	80 81       	ld	r24, Z
    5126:	91 81       	ldd	r25, Z+1	; 0x01
    5128:	85 35       	cpi	r24, 0x55	; 85
    512a:	9a 4a       	sbci	r25, 0xAA	; 170
    512c:	09 f0       	breq	.+2      	; 0x5130 <f_open+0xc48>
    512e:	83 ce       	rjmp	.-762    	; 0x4e36 <f_open+0x94e>
    5130:	ef a5       	ldd	r30, Y+47	; 0x2f
    5132:	f8 a9       	ldd	r31, Y+48	; 0x30
    5134:	80 81       	ld	r24, Z
    5136:	91 81       	ldd	r25, Z+1	; 0x01
    5138:	a2 81       	ldd	r26, Z+2	; 0x02
    513a:	b3 81       	ldd	r27, Z+3	; 0x03
    513c:	bb 27       	eor	r27, r27
    513e:	86 34       	cpi	r24, 0x46	; 70
    5140:	91 44       	sbci	r25, 0x41	; 65
    5142:	a4 45       	sbci	r26, 0x54	; 84
    5144:	b1 05       	cpc	r27, r1
    5146:	09 f4       	brne	.+2      	; 0x514a <f_open+0xc62>
    5148:	92 ca       	rjmp	.-2780   	; 0x466e <f_open+0x186>
    514a:	eb a5       	ldd	r30, Y+43	; 0x2b
    514c:	fc a5       	ldd	r31, Y+44	; 0x2c
    514e:	80 81       	ld	r24, Z
    5150:	91 81       	ldd	r25, Z+1	; 0x01
    5152:	a2 81       	ldd	r26, Z+2	; 0x02
    5154:	b3 81       	ldd	r27, Z+3	; 0x03
    5156:	bb 27       	eor	r27, r27
    5158:	86 34       	cpi	r24, 0x46	; 70
    515a:	91 44       	sbci	r25, 0x41	; 65
    515c:	a4 45       	sbci	r26, 0x54	; 84
    515e:	b1 05       	cpc	r27, r1
    5160:	09 f0       	breq	.+2      	; 0x5164 <f_open+0xc7c>
    5162:	69 ce       	rjmp	.-814    	; 0x4e36 <f_open+0x94e>
    5164:	84 ca       	rjmp	.-2808   	; 0x466e <f_open+0x186>
    5166:	01 e0       	ldi	r16, 0x01	; 1
    5168:	10 e0       	ldi	r17, 0x00	; 0
    516a:	a3 01       	movw	r20, r6
    516c:	92 01       	movw	r18, r4
    516e:	b1 01       	movw	r22, r2
    5170:	81 81       	ldd	r24, Z+1	; 0x01
    5172:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    5176:	81 11       	cpse	r24, r1
    5178:	93 ce       	rjmp	.-730    	; 0x4ea0 <f_open+0x9b8>
    517a:	d5 01       	movw	r26, r10
    517c:	14 96       	adiw	r26, 0x04	; 4
    517e:	1c 92       	st	X, r1
    5180:	14 97       	sbiw	r26, 0x04	; 4
    5182:	5a 96       	adiw	r26, 0x1a	; 26
    5184:	8d 91       	ld	r24, X+
    5186:	9d 91       	ld	r25, X+
    5188:	0d 90       	ld	r0, X+
    518a:	bc 91       	ld	r27, X
    518c:	a0 2d       	mov	r26, r0
    518e:	f5 01       	movw	r30, r10
    5190:	42 a1       	ldd	r20, Z+34	; 0x22
    5192:	53 a1       	ldd	r21, Z+35	; 0x23
    5194:	64 a1       	ldd	r22, Z+36	; 0x24
    5196:	75 a1       	ldd	r23, Z+37	; 0x25
    5198:	93 01       	movw	r18, r6
    519a:	82 01       	movw	r16, r4
    519c:	04 1b       	sub	r16, r20
    519e:	15 0b       	sbc	r17, r21
    51a0:	26 0b       	sbc	r18, r22
    51a2:	37 0b       	sbc	r19, r23
    51a4:	08 17       	cp	r16, r24
    51a6:	19 07       	cpc	r17, r25
    51a8:	2a 07       	cpc	r18, r26
    51aa:	3b 07       	cpc	r19, r27
    51ac:	08 f0       	brcs	.+2      	; 0x51b0 <f_open+0xcc8>
    51ae:	fa ce       	rjmp	.-524    	; 0x4fa4 <f_open+0xabc>
    51b0:	83 80       	ldd	r8, Z+3	; 0x03
    51b2:	91 2c       	mov	r9, r1
    51b4:	12 e0       	ldi	r17, 0x02	; 2
    51b6:	81 16       	cp	r8, r17
    51b8:	91 04       	cpc	r9, r1
    51ba:	30 f4       	brcc	.+12     	; 0x51c8 <f_open+0xce0>
    51bc:	f3 ce       	rjmp	.-538    	; 0x4fa4 <f_open+0xabc>
    51be:	f5 01       	movw	r30, r10
    51c0:	82 8d       	ldd	r24, Z+26	; 0x1a
    51c2:	93 8d       	ldd	r25, Z+27	; 0x1b
    51c4:	a4 8d       	ldd	r26, Z+28	; 0x1c
    51c6:	b5 8d       	ldd	r27, Z+29	; 0x1d
    51c8:	48 0e       	add	r4, r24
    51ca:	59 1e       	adc	r5, r25
    51cc:	6a 1e       	adc	r6, r26
    51ce:	7b 1e       	adc	r7, r27
    51d0:	01 e0       	ldi	r16, 0x01	; 1
    51d2:	10 e0       	ldi	r17, 0x00	; 0
    51d4:	a3 01       	movw	r20, r6
    51d6:	92 01       	movw	r18, r4
    51d8:	b1 01       	movw	r22, r2
    51da:	d5 01       	movw	r26, r10
    51dc:	11 96       	adiw	r26, 0x01	; 1
    51de:	8c 91       	ld	r24, X
    51e0:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    51e4:	b1 e0       	ldi	r27, 0x01	; 1
    51e6:	8b 1a       	sub	r8, r27
    51e8:	91 08       	sbc	r9, r1
    51ea:	e1 e0       	ldi	r30, 0x01	; 1
    51ec:	8e 16       	cp	r8, r30
    51ee:	91 04       	cpc	r9, r1
    51f0:	31 f7       	brne	.-52     	; 0x51be <f_open+0xcd6>
    51f2:	d8 ce       	rjmp	.-592    	; 0x4fa4 <f_open+0xabc>
    51f4:	01 e0       	ldi	r16, 0x01	; 1
    51f6:	10 e0       	ldi	r17, 0x00	; 0
    51f8:	a3 01       	movw	r20, r6
    51fa:	92 01       	movw	r18, r4
    51fc:	b1 01       	movw	r22, r2
    51fe:	81 81       	ldd	r24, Z+1	; 0x01
    5200:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    5204:	81 11       	cpse	r24, r1
    5206:	4c ce       	rjmp	.-872    	; 0x4ea0 <f_open+0x9b8>
    5208:	d5 01       	movw	r26, r10
    520a:	14 96       	adiw	r26, 0x04	; 4
    520c:	1c 92       	st	X, r1
    520e:	14 97       	sbiw	r26, 0x04	; 4
    5210:	5a 96       	adiw	r26, 0x1a	; 26
    5212:	8d 91       	ld	r24, X+
    5214:	9d 91       	ld	r25, X+
    5216:	0d 90       	ld	r0, X+
    5218:	bc 91       	ld	r27, X
    521a:	a0 2d       	mov	r26, r0
    521c:	f5 01       	movw	r30, r10
    521e:	42 a1       	ldd	r20, Z+34	; 0x22
    5220:	53 a1       	ldd	r21, Z+35	; 0x23
    5222:	64 a1       	ldd	r22, Z+36	; 0x24
    5224:	75 a1       	ldd	r23, Z+37	; 0x25
    5226:	93 01       	movw	r18, r6
    5228:	82 01       	movw	r16, r4
    522a:	04 1b       	sub	r16, r20
    522c:	15 0b       	sbc	r17, r21
    522e:	26 0b       	sbc	r18, r22
    5230:	37 0b       	sbc	r19, r23
    5232:	08 17       	cp	r16, r24
    5234:	19 07       	cpc	r17, r25
    5236:	2a 07       	cpc	r18, r26
    5238:	3b 07       	cpc	r19, r27
    523a:	08 f0       	brcs	.+2      	; 0x523e <f_open+0xd56>
    523c:	65 ce       	rjmp	.-822    	; 0x4f08 <f_open+0xa20>
    523e:	83 80       	ldd	r8, Z+3	; 0x03
    5240:	91 2c       	mov	r9, r1
    5242:	12 e0       	ldi	r17, 0x02	; 2
    5244:	81 16       	cp	r8, r17
    5246:	91 04       	cpc	r9, r1
    5248:	30 f4       	brcc	.+12     	; 0x5256 <f_open+0xd6e>
    524a:	5e ce       	rjmp	.-836    	; 0x4f08 <f_open+0xa20>
    524c:	f5 01       	movw	r30, r10
    524e:	82 8d       	ldd	r24, Z+26	; 0x1a
    5250:	93 8d       	ldd	r25, Z+27	; 0x1b
    5252:	a4 8d       	ldd	r26, Z+28	; 0x1c
    5254:	b5 8d       	ldd	r27, Z+29	; 0x1d
    5256:	48 0e       	add	r4, r24
    5258:	59 1e       	adc	r5, r25
    525a:	6a 1e       	adc	r6, r26
    525c:	7b 1e       	adc	r7, r27
    525e:	01 e0       	ldi	r16, 0x01	; 1
    5260:	10 e0       	ldi	r17, 0x00	; 0
    5262:	a3 01       	movw	r20, r6
    5264:	92 01       	movw	r18, r4
    5266:	b1 01       	movw	r22, r2
    5268:	d5 01       	movw	r26, r10
    526a:	11 96       	adiw	r26, 0x01	; 1
    526c:	8c 91       	ld	r24, X
    526e:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    5272:	b1 e0       	ldi	r27, 0x01	; 1
    5274:	8b 1a       	sub	r8, r27
    5276:	91 08       	sbc	r9, r1
    5278:	e1 e0       	ldi	r30, 0x01	; 1
    527a:	8e 16       	cp	r8, r30
    527c:	91 04       	cpc	r9, r1
    527e:	31 f7       	brne	.-52     	; 0x524c <f_open+0xd64>
    5280:	43 ce       	rjmp	.-890    	; 0x4f08 <f_open+0xa20>
    5282:	01 e0       	ldi	r16, 0x01	; 1
    5284:	10 e0       	ldi	r17, 0x00	; 0
    5286:	2b a5       	ldd	r18, Y+43	; 0x2b
    5288:	3c a5       	ldd	r19, Y+44	; 0x2c
    528a:	4d a5       	ldd	r20, Y+45	; 0x2d
    528c:	5e a5       	ldd	r21, Y+46	; 0x2e
    528e:	b1 01       	movw	r22, r2
    5290:	81 81       	ldd	r24, Z+1	; 0x01
    5292:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    5296:	81 11       	cpse	r24, r1
    5298:	03 ce       	rjmp	.-1018   	; 0x4ea0 <f_open+0x9b8>
    529a:	d5 01       	movw	r26, r10
    529c:	14 96       	adiw	r26, 0x04	; 4
    529e:	1c 92       	st	X, r1
    52a0:	14 97       	sbiw	r26, 0x04	; 4
    52a2:	5a 96       	adiw	r26, 0x1a	; 26
    52a4:	8d 91       	ld	r24, X+
    52a6:	9d 91       	ld	r25, X+
    52a8:	0d 90       	ld	r0, X+
    52aa:	bc 91       	ld	r27, X
    52ac:	a0 2d       	mov	r26, r0
    52ae:	f5 01       	movw	r30, r10
    52b0:	42 a1       	ldd	r20, Z+34	; 0x22
    52b2:	53 a1       	ldd	r21, Z+35	; 0x23
    52b4:	64 a1       	ldd	r22, Z+36	; 0x24
    52b6:	75 a1       	ldd	r23, Z+37	; 0x25
    52b8:	0b a5       	ldd	r16, Y+43	; 0x2b
    52ba:	1c a5       	ldd	r17, Y+44	; 0x2c
    52bc:	2d a5       	ldd	r18, Y+45	; 0x2d
    52be:	3e a5       	ldd	r19, Y+46	; 0x2e
    52c0:	04 1b       	sub	r16, r20
    52c2:	15 0b       	sbc	r17, r21
    52c4:	26 0b       	sbc	r18, r22
    52c6:	37 0b       	sbc	r19, r23
    52c8:	08 17       	cp	r16, r24
    52ca:	19 07       	cpc	r17, r25
    52cc:	2a 07       	cpc	r18, r26
    52ce:	3b 07       	cpc	r19, r27
    52d0:	08 f0       	brcs	.+2      	; 0x52d4 <f_open+0xdec>
    52d2:	0a cc       	rjmp	.-2028   	; 0x4ae8 <f_open+0x600>
    52d4:	83 80       	ldd	r8, Z+3	; 0x03
    52d6:	91 2c       	mov	r9, r1
    52d8:	12 e0       	ldi	r17, 0x02	; 2
    52da:	81 16       	cp	r8, r17
    52dc:	91 04       	cpc	r9, r1
    52de:	30 f4       	brcc	.+12     	; 0x52ec <f_open+0xe04>
    52e0:	03 cc       	rjmp	.-2042   	; 0x4ae8 <f_open+0x600>
    52e2:	f5 01       	movw	r30, r10
    52e4:	82 8d       	ldd	r24, Z+26	; 0x1a
    52e6:	93 8d       	ldd	r25, Z+27	; 0x1b
    52e8:	a4 8d       	ldd	r26, Z+28	; 0x1c
    52ea:	b5 8d       	ldd	r27, Z+29	; 0x1d
    52ec:	2b a5       	ldd	r18, Y+43	; 0x2b
    52ee:	3c a5       	ldd	r19, Y+44	; 0x2c
    52f0:	4d a5       	ldd	r20, Y+45	; 0x2d
    52f2:	5e a5       	ldd	r21, Y+46	; 0x2e
    52f4:	28 0f       	add	r18, r24
    52f6:	39 1f       	adc	r19, r25
    52f8:	4a 1f       	adc	r20, r26
    52fa:	5b 1f       	adc	r21, r27
    52fc:	2b a7       	std	Y+43, r18	; 0x2b
    52fe:	3c a7       	std	Y+44, r19	; 0x2c
    5300:	4d a7       	std	Y+45, r20	; 0x2d
    5302:	5e a7       	std	Y+46, r21	; 0x2e
    5304:	01 e0       	ldi	r16, 0x01	; 1
    5306:	10 e0       	ldi	r17, 0x00	; 0
    5308:	b1 01       	movw	r22, r2
    530a:	d5 01       	movw	r26, r10
    530c:	11 96       	adiw	r26, 0x01	; 1
    530e:	8c 91       	ld	r24, X
    5310:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    5314:	b1 e0       	ldi	r27, 0x01	; 1
    5316:	8b 1a       	sub	r8, r27
    5318:	91 08       	sbc	r9, r1
    531a:	e1 e0       	ldi	r30, 0x01	; 1
    531c:	8e 16       	cp	r8, r30
    531e:	91 04       	cpc	r9, r1
    5320:	01 f7       	brne	.-64     	; 0x52e2 <f_open+0xdfa>
    5322:	e2 cb       	rjmp	.-2108   	; 0x4ae8 <f_open+0x600>
    5324:	4b ae       	std	Y+59, r4	; 0x3b
    5326:	5c ae       	std	Y+60, r5	; 0x3c
    5328:	6d ae       	std	Y+61, r6	; 0x3d
    532a:	7e ae       	std	Y+62, r7	; 0x3e
    532c:	fa cb       	rjmp	.-2060   	; 0x4b22 <f_open+0x63a>
    532e:	d1 01       	movw	r26, r2
    5330:	9e 96       	adiw	r26, 0x2e	; 46
    5332:	4d 92       	st	X+, r4
    5334:	5d 92       	st	X+, r5
    5336:	6d 92       	st	X+, r6
    5338:	7c 92       	st	X, r7
    533a:	d1 97       	sbiw	r26, 0x31	; 49
    533c:	af a1       	ldd	r26, Y+39	; 0x27
    533e:	b8 a5       	ldd	r27, Y+40	; 0x28
    5340:	8d 91       	ld	r24, X+
    5342:	9c 91       	ld	r25, X
    5344:	85 35       	cpi	r24, 0x55	; 85
    5346:	9a 4a       	sbci	r25, 0xAA	; 170
    5348:	09 f0       	breq	.+2      	; 0x534c <f_open+0xe64>
    534a:	80 c9       	rjmp	.-3328   	; 0x464c <f_open+0x164>
    534c:	ef a5       	ldd	r30, Y+47	; 0x2f
    534e:	f8 a9       	ldd	r31, Y+48	; 0x30
    5350:	80 81       	ld	r24, Z
    5352:	91 81       	ldd	r25, Z+1	; 0x01
    5354:	a2 81       	ldd	r26, Z+2	; 0x02
    5356:	b3 81       	ldd	r27, Z+3	; 0x03
    5358:	bb 27       	eor	r27, r27
    535a:	86 34       	cpi	r24, 0x46	; 70
    535c:	91 44       	sbci	r25, 0x41	; 65
    535e:	a4 45       	sbci	r26, 0x54	; 84
    5360:	b1 05       	cpc	r27, r1
    5362:	09 f4       	brne	.+2      	; 0x5366 <f_open+0xe7e>
    5364:	84 c9       	rjmp	.-3320   	; 0x466e <f_open+0x186>
    5366:	eb a5       	ldd	r30, Y+43	; 0x2b
    5368:	fc a5       	ldd	r31, Y+44	; 0x2c
    536a:	80 81       	ld	r24, Z
    536c:	91 81       	ldd	r25, Z+1	; 0x01
    536e:	a2 81       	ldd	r26, Z+2	; 0x02
    5370:	b3 81       	ldd	r27, Z+3	; 0x03
    5372:	bb 27       	eor	r27, r27
    5374:	86 34       	cpi	r24, 0x46	; 70
    5376:	91 44       	sbci	r25, 0x41	; 65
    5378:	a4 45       	sbci	r26, 0x54	; 84
    537a:	b1 05       	cpc	r27, r1
    537c:	09 f4       	brne	.+2      	; 0x5380 <f_open+0xe98>
    537e:	77 c9       	rjmp	.-3346   	; 0x466e <f_open+0x186>
    5380:	8d e0       	ldi	r24, 0x0D	; 13
    5382:	0f c9       	rjmp	.-3554   	; 0x45a2 <f_open+0xba>
    5384:	f1 01       	movw	r30, r2
    5386:	46 a6       	std	Z+46, r4	; 0x2e
    5388:	57 a6       	std	Z+47, r5	; 0x2f
    538a:	60 aa       	std	Z+48, r6	; 0x30
    538c:	71 aa       	std	Z+49, r7	; 0x31
    538e:	ef a1       	ldd	r30, Y+39	; 0x27
    5390:	f8 a5       	ldd	r31, Y+40	; 0x28
    5392:	80 81       	ld	r24, Z
    5394:	91 81       	ldd	r25, Z+1	; 0x01
    5396:	85 35       	cpi	r24, 0x55	; 85
    5398:	9a 4a       	sbci	r25, 0xAA	; 170
    539a:	09 f0       	breq	.+2      	; 0x539e <f_open+0xeb6>
    539c:	38 cd       	rjmp	.-1424   	; 0x4e0e <f_open+0x926>
    539e:	ef a5       	ldd	r30, Y+47	; 0x2f
    53a0:	f8 a9       	ldd	r31, Y+48	; 0x30
    53a2:	80 81       	ld	r24, Z
    53a4:	91 81       	ldd	r25, Z+1	; 0x01
    53a6:	a2 81       	ldd	r26, Z+2	; 0x02
    53a8:	b3 81       	ldd	r27, Z+3	; 0x03
    53aa:	bb 27       	eor	r27, r27
    53ac:	86 34       	cpi	r24, 0x46	; 70
    53ae:	91 44       	sbci	r25, 0x41	; 65
    53b0:	a4 45       	sbci	r26, 0x54	; 84
    53b2:	b1 05       	cpc	r27, r1
    53b4:	09 f4       	brne	.+2      	; 0x53b8 <f_open+0xed0>
    53b6:	5b c9       	rjmp	.-3402   	; 0x466e <f_open+0x186>
    53b8:	eb a5       	ldd	r30, Y+43	; 0x2b
    53ba:	fc a5       	ldd	r31, Y+44	; 0x2c
    53bc:	80 81       	ld	r24, Z
    53be:	91 81       	ldd	r25, Z+1	; 0x01
    53c0:	a2 81       	ldd	r26, Z+2	; 0x02
    53c2:	b3 81       	ldd	r27, Z+3	; 0x03
    53c4:	bb 27       	eor	r27, r27
    53c6:	86 34       	cpi	r24, 0x46	; 70
    53c8:	91 44       	sbci	r25, 0x41	; 65
    53ca:	a4 45       	sbci	r26, 0x54	; 84
    53cc:	b1 05       	cpc	r27, r1
    53ce:	09 f0       	breq	.+2      	; 0x53d2 <f_open+0xeea>
    53d0:	1e cd       	rjmp	.-1476   	; 0x4e0e <f_open+0x926>
    53d2:	4d c9       	rjmp	.-3430   	; 0x466e <f_open+0x186>
    53d4:	23 96       	adiw	r28, 0x03	; 3
    53d6:	2e ac       	ldd	r2, Y+62	; 0x3e
    53d8:	3f ac       	ldd	r3, Y+63	; 0x3f
    53da:	23 97       	sbiw	r28, 0x03	; 3
    53dc:	25 96       	adiw	r28, 0x05	; 5
    53de:	ce ac       	ldd	r12, Y+62	; 0x3e
    53e0:	df ac       	ldd	r13, Y+63	; 0x3f
    53e2:	25 97       	sbiw	r28, 0x05	; 5
    53e4:	e9 80       	ldd	r14, Y+1	; 0x01
    53e6:	fa 80       	ldd	r15, Y+2	; 0x02
    53e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    53ea:	98 a9       	ldd	r25, Y+48	; 0x30
    53ec:	a9 a9       	ldd	r26, Y+49	; 0x31
    53ee:	ba a9       	ldd	r27, Y+50	; 0x32
    53f0:	01 97       	sbiw	r24, 0x01	; 1
    53f2:	a1 09       	sbc	r26, r1
    53f4:	b1 09       	sbc	r27, r1
    53f6:	f7 01       	movw	r30, r14
    53f8:	82 87       	std	Z+10, r24	; 0x0a
    53fa:	93 87       	std	Z+11, r25	; 0x0b
    53fc:	a4 87       	std	Z+12, r26	; 0x0c
    53fe:	b5 87       	std	Z+13, r27	; 0x0d
    5400:	46 a4       	ldd	r4, Z+46	; 0x2e
    5402:	57 a4       	ldd	r5, Z+47	; 0x2f
    5404:	60 a8       	ldd	r6, Z+48	; 0x30
    5406:	71 a8       	ldd	r7, Z+49	; 0x31
    5408:	0f a9       	ldd	r16, Y+55	; 0x37
    540a:	18 ad       	ldd	r17, Y+56	; 0x38
    540c:	29 ad       	ldd	r18, Y+57	; 0x39
    540e:	3a ad       	ldd	r19, Y+58	; 0x3a
    5410:	04 15       	cp	r16, r4
    5412:	15 05       	cpc	r17, r5
    5414:	26 05       	cpc	r18, r6
    5416:	37 05       	cpc	r19, r7
    5418:	09 f4       	brne	.+2      	; 0x541c <f_open+0xf34>
    541a:	16 cc       	rjmp	.-2004   	; 0x4c48 <f_open+0x760>
    541c:	d7 01       	movw	r26, r14
    541e:	14 96       	adiw	r26, 0x04	; 4
    5420:	8c 91       	ld	r24, X
    5422:	81 11       	cpse	r24, r1
    5424:	44 c0       	rjmp	.+136    	; 0x54ae <f_open+0xfc6>
    5426:	f7 01       	movw	r30, r14
    5428:	f2 96       	adiw	r30, 0x32	; 50
    542a:	4f 01       	movw	r8, r30
    542c:	01 e0       	ldi	r16, 0x01	; 1
    542e:	10 e0       	ldi	r17, 0x00	; 0
    5430:	2f a9       	ldd	r18, Y+55	; 0x37
    5432:	38 ad       	ldd	r19, Y+56	; 0x38
    5434:	49 ad       	ldd	r20, Y+57	; 0x39
    5436:	5a ad       	ldd	r21, Y+58	; 0x3a
    5438:	b4 01       	movw	r22, r8
    543a:	d7 01       	movw	r26, r14
    543c:	11 96       	adiw	r26, 0x01	; 1
    543e:	8c 91       	ld	r24, X
    5440:	0e 94 a7 32 	call	0x654e	; 0x654e <disk_read>
    5444:	88 23       	and	r24, r24
    5446:	09 f4       	brne	.+2      	; 0x544a <f_open+0xf62>
    5448:	f2 cb       	rjmp	.-2076   	; 0x4c2e <f_open+0x746>
    544a:	8f ef       	ldi	r24, 0xFF	; 255
    544c:	9f ef       	ldi	r25, 0xFF	; 255
    544e:	dc 01       	movw	r26, r24
    5450:	f7 01       	movw	r30, r14
    5452:	86 a7       	std	Z+46, r24	; 0x2e
    5454:	97 a7       	std	Z+47, r25	; 0x2f
    5456:	a0 ab       	std	Z+48, r26	; 0x30
    5458:	b1 ab       	std	Z+49, r27	; 0x31
    545a:	81 e0       	ldi	r24, 0x01	; 1
    545c:	a2 c8       	rjmp	.-3772   	; 0x45a2 <f_open+0xba>
    545e:	f1 01       	movw	r30, r2
    5460:	46 a6       	std	Z+46, r4	; 0x2e
    5462:	57 a6       	std	Z+47, r5	; 0x2f
    5464:	60 aa       	std	Z+48, r6	; 0x30
    5466:	71 aa       	std	Z+49, r7	; 0x31
    5468:	ef a1       	ldd	r30, Y+39	; 0x27
    546a:	f8 a5       	ldd	r31, Y+40	; 0x28
    546c:	80 81       	ld	r24, Z
    546e:	91 81       	ldd	r25, Z+1	; 0x01
    5470:	85 35       	cpi	r24, 0x55	; 85
    5472:	9a 4a       	sbci	r25, 0xAA	; 170
    5474:	09 f0       	breq	.+2      	; 0x5478 <f_open+0xf90>
    5476:	d5 cc       	rjmp	.-1622   	; 0x4e22 <f_open+0x93a>
    5478:	ef a5       	ldd	r30, Y+47	; 0x2f
    547a:	f8 a9       	ldd	r31, Y+48	; 0x30
    547c:	80 81       	ld	r24, Z
    547e:	91 81       	ldd	r25, Z+1	; 0x01
    5480:	a2 81       	ldd	r26, Z+2	; 0x02
    5482:	b3 81       	ldd	r27, Z+3	; 0x03
    5484:	bb 27       	eor	r27, r27
    5486:	86 34       	cpi	r24, 0x46	; 70
    5488:	91 44       	sbci	r25, 0x41	; 65
    548a:	a4 45       	sbci	r26, 0x54	; 84
    548c:	b1 05       	cpc	r27, r1
    548e:	09 f4       	brne	.+2      	; 0x5492 <f_open+0xfaa>
    5490:	ee c8       	rjmp	.-3620   	; 0x466e <f_open+0x186>
    5492:	eb a5       	ldd	r30, Y+43	; 0x2b
    5494:	fc a5       	ldd	r31, Y+44	; 0x2c
    5496:	80 81       	ld	r24, Z
    5498:	91 81       	ldd	r25, Z+1	; 0x01
    549a:	a2 81       	ldd	r26, Z+2	; 0x02
    549c:	b3 81       	ldd	r27, Z+3	; 0x03
    549e:	bb 27       	eor	r27, r27
    54a0:	86 34       	cpi	r24, 0x46	; 70
    54a2:	91 44       	sbci	r25, 0x41	; 65
    54a4:	a4 45       	sbci	r26, 0x54	; 84
    54a6:	b1 05       	cpc	r27, r1
    54a8:	09 f0       	breq	.+2      	; 0x54ac <f_open+0xfc4>
    54aa:	bb cc       	rjmp	.-1674   	; 0x4e22 <f_open+0x93a>
    54ac:	e0 c8       	rjmp	.-3648   	; 0x466e <f_open+0x186>
    54ae:	47 01       	movw	r8, r14
    54b0:	f2 e3       	ldi	r31, 0x32	; 50
    54b2:	8f 0e       	add	r8, r31
    54b4:	91 1c       	adc	r9, r1
    54b6:	01 e0       	ldi	r16, 0x01	; 1
    54b8:	10 e0       	ldi	r17, 0x00	; 0
    54ba:	a3 01       	movw	r20, r6
    54bc:	92 01       	movw	r18, r4
    54be:	b4 01       	movw	r22, r8
    54c0:	d7 01       	movw	r26, r14
    54c2:	11 96       	adiw	r26, 0x01	; 1
    54c4:	8c 91       	ld	r24, X
    54c6:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    54ca:	81 11       	cpse	r24, r1
    54cc:	e9 cc       	rjmp	.-1582   	; 0x4ea0 <f_open+0x9b8>
    54ce:	f7 01       	movw	r30, r14
    54d0:	14 82       	std	Z+4, r1	; 0x04
    54d2:	82 a1       	ldd	r24, Z+34	; 0x22
    54d4:	93 a1       	ldd	r25, Z+35	; 0x23
    54d6:	a4 a1       	ldd	r26, Z+36	; 0x24
    54d8:	b5 a1       	ldd	r27, Z+37	; 0x25
    54da:	b3 01       	movw	r22, r6
    54dc:	a2 01       	movw	r20, r4
    54de:	48 1b       	sub	r20, r24
    54e0:	59 0b       	sbc	r21, r25
    54e2:	6a 0b       	sbc	r22, r26
    54e4:	7b 0b       	sbc	r23, r27
    54e6:	82 8d       	ldd	r24, Z+26	; 0x1a
    54e8:	93 8d       	ldd	r25, Z+27	; 0x1b
    54ea:	a4 8d       	ldd	r26, Z+28	; 0x1c
    54ec:	b5 8d       	ldd	r27, Z+29	; 0x1d
    54ee:	48 17       	cp	r20, r24
    54f0:	59 07       	cpc	r21, r25
    54f2:	6a 07       	cpc	r22, r26
    54f4:	7b 07       	cpc	r23, r27
    54f6:	08 f0       	brcs	.+2      	; 0x54fa <f_open+0x1012>
    54f8:	99 cf       	rjmp	.-206    	; 0x542c <f_open+0xf44>
    54fa:	a3 80       	ldd	r10, Z+3	; 0x03
    54fc:	b1 2c       	mov	r11, r1
    54fe:	f2 e0       	ldi	r31, 0x02	; 2
    5500:	af 16       	cp	r10, r31
    5502:	b1 04       	cpc	r11, r1
    5504:	30 f4       	brcc	.+12     	; 0x5512 <f_open+0x102a>
    5506:	92 cf       	rjmp	.-220    	; 0x542c <f_open+0xf44>
    5508:	f7 01       	movw	r30, r14
    550a:	82 8d       	ldd	r24, Z+26	; 0x1a
    550c:	93 8d       	ldd	r25, Z+27	; 0x1b
    550e:	a4 8d       	ldd	r26, Z+28	; 0x1c
    5510:	b5 8d       	ldd	r27, Z+29	; 0x1d
    5512:	48 0e       	add	r4, r24
    5514:	59 1e       	adc	r5, r25
    5516:	6a 1e       	adc	r6, r26
    5518:	7b 1e       	adc	r7, r27
    551a:	01 e0       	ldi	r16, 0x01	; 1
    551c:	10 e0       	ldi	r17, 0x00	; 0
    551e:	a3 01       	movw	r20, r6
    5520:	92 01       	movw	r18, r4
    5522:	b4 01       	movw	r22, r8
    5524:	d7 01       	movw	r26, r14
    5526:	11 96       	adiw	r26, 0x01	; 1
    5528:	8c 91       	ld	r24, X
    552a:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    552e:	b1 e0       	ldi	r27, 0x01	; 1
    5530:	ab 1a       	sub	r10, r27
    5532:	b1 08       	sbc	r11, r1
    5534:	e1 e0       	ldi	r30, 0x01	; 1
    5536:	ae 16       	cp	r10, r30
    5538:	b1 04       	cpc	r11, r1
    553a:	31 f7       	brne	.-52     	; 0x5508 <f_open+0x1020>
    553c:	77 cf       	rjmp	.-274    	; 0x542c <f_open+0xf44>
    553e:	80 e0       	ldi	r24, 0x00	; 0
    5540:	90 e0       	ldi	r25, 0x00	; 0
    5542:	dc 01       	movw	r26, r24
    5544:	56 cc       	rjmp	.-1876   	; 0x4df2 <f_open+0x90a>
    5546:	80 e0       	ldi	r24, 0x00	; 0
    5548:	90 e0       	ldi	r25, 0x00	; 0
    554a:	dc 01       	movw	r26, r24
    554c:	42 cc       	rjmp	.-1916   	; 0x4dd2 <f_open+0x8ea>
    554e:	80 e0       	ldi	r24, 0x00	; 0
    5550:	90 e0       	ldi	r25, 0x00	; 0
    5552:	dc 01       	movw	r26, r24
    5554:	2e cc       	rjmp	.-1956   	; 0x4db2 <f_open+0x8ca>
    5556:	80 e0       	ldi	r24, 0x00	; 0
    5558:	90 e0       	ldi	r25, 0x00	; 0
    555a:	dc 01       	movw	r26, r24
    555c:	1a cc       	rjmp	.-1996   	; 0x4d92 <f_open+0x8aa>
    555e:	80 e0       	ldi	r24, 0x00	; 0
    5560:	6d c8       	rjmp	.-3878   	; 0x463c <f_open+0x154>
    5562:	af e0       	ldi	r26, 0x0F	; 15
    5564:	5a 22       	and	r5, r26
    5566:	61 2c       	mov	r6, r1
    5568:	71 2c       	mov	r7, r1
    556a:	35 cb       	rjmp	.-2454   	; 0x4bd6 <f_open+0x6ee>
    556c:	01 e0       	ldi	r16, 0x01	; 1
    556e:	10 e0       	ldi	r17, 0x00	; 0
    5570:	a3 01       	movw	r20, r6
    5572:	92 01       	movw	r18, r4
    5574:	b1 01       	movw	r22, r2
    5576:	11 96       	adiw	r26, 0x01	; 1
    5578:	8c 91       	ld	r24, X
    557a:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    557e:	81 11       	cpse	r24, r1
    5580:	8f cc       	rjmp	.-1762   	; 0x4ea0 <f_open+0x9b8>
    5582:	f5 01       	movw	r30, r10
    5584:	14 82       	std	Z+4, r1	; 0x04
    5586:	82 a1       	ldd	r24, Z+34	; 0x22
    5588:	93 a1       	ldd	r25, Z+35	; 0x23
    558a:	a4 a1       	ldd	r26, Z+36	; 0x24
    558c:	b5 a1       	ldd	r27, Z+37	; 0x25
    558e:	48 1a       	sub	r4, r24
    5590:	59 0a       	sbc	r5, r25
    5592:	6a 0a       	sbc	r6, r26
    5594:	7b 0a       	sbc	r7, r27
    5596:	82 8d       	ldd	r24, Z+26	; 0x1a
    5598:	93 8d       	ldd	r25, Z+27	; 0x1b
    559a:	a4 8d       	ldd	r26, Z+28	; 0x1c
    559c:	b5 8d       	ldd	r27, Z+29	; 0x1d
    559e:	48 16       	cp	r4, r24
    55a0:	59 06       	cpc	r5, r25
    55a2:	6a 06       	cpc	r6, r26
    55a4:	7b 06       	cpc	r7, r27
    55a6:	08 f0       	brcs	.+2      	; 0x55aa <f_open+0x10c2>
    55a8:	e6 ca       	rjmp	.-2612   	; 0x4b76 <f_open+0x68e>
    55aa:	83 80       	ldd	r8, Z+3	; 0x03
    55ac:	91 2c       	mov	r9, r1
    55ae:	f2 e0       	ldi	r31, 0x02	; 2
    55b0:	8f 16       	cp	r8, r31
    55b2:	91 04       	cpc	r9, r1
    55b4:	08 f4       	brcc	.+2      	; 0x55b8 <f_open+0x10d0>
    55b6:	df ca       	rjmp	.-2626   	; 0x4b76 <f_open+0x68e>
    55b8:	4b ac       	ldd	r4, Y+59	; 0x3b
    55ba:	5c ac       	ldd	r5, Y+60	; 0x3c
    55bc:	6d ac       	ldd	r6, Y+61	; 0x3d
    55be:	7e ac       	ldd	r7, Y+62	; 0x3e
    55c0:	05 c0       	rjmp	.+10     	; 0x55cc <f_open+0x10e4>
    55c2:	f5 01       	movw	r30, r10
    55c4:	82 8d       	ldd	r24, Z+26	; 0x1a
    55c6:	93 8d       	ldd	r25, Z+27	; 0x1b
    55c8:	a4 8d       	ldd	r26, Z+28	; 0x1c
    55ca:	b5 8d       	ldd	r27, Z+29	; 0x1d
    55cc:	48 0e       	add	r4, r24
    55ce:	59 1e       	adc	r5, r25
    55d0:	6a 1e       	adc	r6, r26
    55d2:	7b 1e       	adc	r7, r27
    55d4:	01 e0       	ldi	r16, 0x01	; 1
    55d6:	10 e0       	ldi	r17, 0x00	; 0
    55d8:	a3 01       	movw	r20, r6
    55da:	92 01       	movw	r18, r4
    55dc:	b1 01       	movw	r22, r2
    55de:	d5 01       	movw	r26, r10
    55e0:	11 96       	adiw	r26, 0x01	; 1
    55e2:	8c 91       	ld	r24, X
    55e4:	0e 94 26 33 	call	0x664c	; 0x664c <disk_write>
    55e8:	b1 e0       	ldi	r27, 0x01	; 1
    55ea:	8b 1a       	sub	r8, r27
    55ec:	91 08       	sbc	r9, r1
    55ee:	e1 e0       	ldi	r30, 0x01	; 1
    55f0:	8e 16       	cp	r8, r30
    55f2:	91 04       	cpc	r9, r1
    55f4:	31 f7       	brne	.-52     	; 0x55c2 <f_open+0x10da>
    55f6:	bf ca       	rjmp	.-2690   	; 0x4b76 <f_open+0x68e>
    55f8:	f1 01       	movw	r30, r2
    55fa:	ee 59       	subi	r30, 0x9E	; 158
    55fc:	ff 4f       	sbci	r31, 0xFF	; 255
    55fe:	80 81       	ld	r24, Z
    5600:	91 81       	ldd	r25, Z+1	; 0x01
    5602:	01 97       	sbiw	r24, 0x01	; 1
    5604:	09 f0       	breq	.+2      	; 0x5608 <f_open+0x1120>
    5606:	6e c9       	rjmp	.-3364   	; 0x48e4 <f_open+0x3fc>
    5608:	b3 01       	movw	r22, r6
    560a:	a2 01       	movw	r20, r4
    560c:	4f 5f       	subi	r20, 0xFF	; 255
    560e:	5f 4f       	sbci	r21, 0xFF	; 255
    5610:	6f 4f       	sbci	r22, 0xFF	; 255
    5612:	7f 4f       	sbci	r23, 0xFF	; 255
    5614:	c1 01       	movw	r24, r2
    5616:	0e 94 41 0a 	call	0x1482	; 0x1482 <move_window>
    561a:	81 11       	cpse	r24, r1
    561c:	63 c9       	rjmp	.-3386   	; 0x48e4 <f_open+0x3fc>
    561e:	d1 01       	movw	r26, r2
    5620:	15 96       	adiw	r26, 0x05	; 5
    5622:	1c 92       	st	X, r1
    5624:	f1 01       	movw	r30, r2
    5626:	e0 5d       	subi	r30, 0xD0	; 208
    5628:	fd 4f       	sbci	r31, 0xFD	; 253
    562a:	80 81       	ld	r24, Z
    562c:	91 81       	ldd	r25, Z+1	; 0x01
    562e:	85 35       	cpi	r24, 0x55	; 85
    5630:	9a 4a       	sbci	r25, 0xAA	; 170
    5632:	09 f0       	breq	.+2      	; 0x5636 <f_open+0x114e>
    5634:	57 c9       	rjmp	.-3410   	; 0x48e4 <f_open+0x3fc>
    5636:	f1 01       	movw	r30, r2
    5638:	82 a9       	ldd	r24, Z+50	; 0x32
    563a:	93 a9       	ldd	r25, Z+51	; 0x33
    563c:	a4 a9       	ldd	r26, Z+52	; 0x34
    563e:	b5 a9       	ldd	r27, Z+53	; 0x35
    5640:	82 35       	cpi	r24, 0x52	; 82
    5642:	92 45       	sbci	r25, 0x52	; 82
    5644:	a1 46       	sbci	r26, 0x61	; 97
    5646:	b1 44       	sbci	r27, 0x41	; 65
    5648:	09 f0       	breq	.+2      	; 0x564c <f_open+0x1164>
    564a:	4c c9       	rjmp	.-3432   	; 0x48e4 <f_open+0x3fc>
    564c:	f1 01       	movw	r30, r2
    564e:	ea 5e       	subi	r30, 0xEA	; 234
    5650:	fd 4f       	sbci	r31, 0xFD	; 253
    5652:	80 81       	ld	r24, Z
    5654:	91 81       	ldd	r25, Z+1	; 0x01
    5656:	a2 81       	ldd	r26, Z+2	; 0x02
    5658:	b3 81       	ldd	r27, Z+3	; 0x03
    565a:	82 37       	cpi	r24, 0x72	; 114
    565c:	92 47       	sbci	r25, 0x72	; 114
    565e:	a1 44       	sbci	r26, 0x41	; 65
    5660:	b1 46       	sbci	r27, 0x61	; 97
    5662:	09 f0       	breq	.+2      	; 0x5666 <f_open+0x117e>
    5664:	3f c9       	rjmp	.-3458   	; 0x48e4 <f_open+0x3fc>
    5666:	34 96       	adiw	r30, 0x04	; 4
    5668:	80 81       	ld	r24, Z
    566a:	91 81       	ldd	r25, Z+1	; 0x01
    566c:	a2 81       	ldd	r26, Z+2	; 0x02
    566e:	b3 81       	ldd	r27, Z+3	; 0x03
    5670:	f1 01       	movw	r30, r2
    5672:	86 87       	std	Z+14, r24	; 0x0e
    5674:	97 87       	std	Z+15, r25	; 0x0f
    5676:	a0 8b       	std	Z+16, r26	; 0x10
    5678:	b1 8b       	std	Z+17, r27	; 0x11
    567a:	e2 5e       	subi	r30, 0xE2	; 226
    567c:	fd 4f       	sbci	r31, 0xFD	; 253
    567e:	80 81       	ld	r24, Z
    5680:	91 81       	ldd	r25, Z+1	; 0x01
    5682:	a2 81       	ldd	r26, Z+2	; 0x02
    5684:	b3 81       	ldd	r27, Z+3	; 0x03
    5686:	f1 01       	movw	r30, r2
    5688:	82 87       	std	Z+10, r24	; 0x0a
    568a:	93 87       	std	Z+11, r25	; 0x0b
    568c:	a4 87       	std	Z+12, r26	; 0x0c
    568e:	b5 87       	std	Z+13, r27	; 0x0d
    5690:	29 c9       	rjmp	.-3502   	; 0x48e4 <f_open+0x3fc>
    5692:	6b a5       	ldd	r22, Y+43	; 0x2b
    5694:	7c a5       	ldd	r23, Y+44	; 0x2c
    5696:	8d a5       	ldd	r24, Y+45	; 0x2d
    5698:	9e a5       	ldd	r25, Y+46	; 0x2e
    569a:	66 0f       	add	r22, r22
    569c:	77 1f       	adc	r23, r23
    569e:	88 1f       	adc	r24, r24
    56a0:	99 1f       	adc	r25, r25
    56a2:	f7 c8       	rjmp	.-3602   	; 0x4892 <f_open+0x3aa>
    56a4:	ba 01       	movw	r22, r20
    56a6:	a9 01       	movw	r20, r18
    56a8:	4e 5f       	subi	r20, 0xFE	; 254
    56aa:	5f 4f       	sbci	r21, 0xFF	; 255
    56ac:	6f 4f       	sbci	r22, 0xFF	; 255
    56ae:	7f 4f       	sbci	r23, 0xFF	; 255
    56b0:	d1 01       	movw	r26, r2
    56b2:	56 96       	adiw	r26, 0x16	; 22
    56b4:	4d 93       	st	X+, r20
    56b6:	5d 93       	st	X+, r21
    56b8:	6d 93       	st	X+, r22
    56ba:	7c 93       	st	X, r23
    56bc:	59 97       	sbiw	r26, 0x19	; 25
    56be:	f1 01       	movw	r30, r2
    56c0:	46 8e       	std	Z+30, r4	; 0x1e
    56c2:	57 8e       	std	Z+31, r5	; 0x1f
    56c4:	60 a2       	std	Z+32, r6	; 0x20
    56c6:	71 a2       	std	Z+33, r7	; 0x21
    56c8:	8b a9       	ldd	r24, Y+51	; 0x33
    56ca:	9c a9       	ldd	r25, Y+52	; 0x34
    56cc:	ad a9       	ldd	r26, Y+53	; 0x35
    56ce:	be a9       	ldd	r27, Y+54	; 0x36
    56d0:	84 0d       	add	r24, r4
    56d2:	95 1d       	adc	r25, r5
    56d4:	a6 1d       	adc	r26, r6
    56d6:	b7 1d       	adc	r27, r7
    56d8:	82 a3       	std	Z+34, r24	; 0x22
    56da:	93 a3       	std	Z+35, r25	; 0x23
    56dc:	a4 a3       	std	Z+36, r26	; 0x24
    56de:	b5 a3       	std	Z+37, r27	; 0x25
    56e0:	d8 01       	movw	r26, r16
    56e2:	c7 01       	movw	r24, r14
    56e4:	84 0d       	add	r24, r4
    56e6:	95 1d       	adc	r25, r5
    56e8:	a6 1d       	adc	r26, r6
    56ea:	b7 1d       	adc	r27, r7
    56ec:	82 a7       	std	Z+42, r24	; 0x2a
    56ee:	93 a7       	std	Z+43, r25	; 0x2b
    56f0:	a4 a7       	std	Z+44, r26	; 0x2c
    56f2:	b5 a7       	std	Z+45, r27	; 0x2d
    56f4:	ef a4       	ldd	r14, Y+47	; 0x2f
    56f6:	f8 a8       	ldd	r15, Y+48	; 0x30
    56f8:	ef 28       	or	r14, r15
    56fa:	11 f0       	breq	.+4      	; 0x5700 <f_open+0x1218>
    56fc:	0c 94 26 23 	jmp	0x464c	; 0x464c <f_open+0x164>
    5700:	f1 01       	movw	r30, r2
    5702:	e2 5a       	subi	r30, 0xA2	; 162
    5704:	ff 4f       	sbci	r31, 0xFF	; 255
    5706:	80 81       	ld	r24, Z
    5708:	91 81       	ldd	r25, Z+1	; 0x01
    570a:	a2 81       	ldd	r26, Z+2	; 0x02
    570c:	b3 81       	ldd	r27, Z+3	; 0x03
    570e:	f1 01       	movw	r30, r2
    5710:	86 a3       	std	Z+38, r24	; 0x26
    5712:	97 a3       	std	Z+39, r25	; 0x27
    5714:	a0 a7       	std	Z+40, r26	; 0x28
    5716:	b1 a7       	std	Z+41, r27	; 0x29
    5718:	cb 01       	movw	r24, r22
    571a:	ba 01       	movw	r22, r20
    571c:	66 0f       	add	r22, r22
    571e:	77 1f       	adc	r23, r23
    5720:	88 1f       	adc	r24, r24
    5722:	99 1f       	adc	r25, r25
    5724:	66 0f       	add	r22, r22
    5726:	77 1f       	adc	r23, r23
    5728:	88 1f       	adc	r24, r24
    572a:	99 1f       	adc	r25, r25
    572c:	13 e0       	ldi	r17, 0x03	; 3
    572e:	81 2e       	mov	r8, r17
    5730:	b0 c8       	rjmp	.-3744   	; 0x4892 <f_open+0x3aa>
    5732:	88 24       	eor	r8, r8
    5734:	83 94       	inc	r8
    5736:	53 c8       	rjmp	.-3930   	; 0x47de <f_open+0x2f6>

00005738 <f_read>:
    5738:	2f 92       	push	r2
    573a:	3f 92       	push	r3
    573c:	4f 92       	push	r4
    573e:	5f 92       	push	r5
    5740:	6f 92       	push	r6
    5742:	7f 92       	push	r7
    5744:	8f 92       	push	r8
    5746:	9f 92       	push	r9
    5748:	af 92       	push	r10
    574a:	bf 92       	push	r11
    574c:	cf 92       	push	r12
    574e:	df 92       	push	r13
    5750:	ef 92       	push	r14
    5752:	ff 92       	push	r15
    5754:	0f 93       	push	r16
    5756:	1f 93       	push	r17
    5758:	cf 93       	push	r28
    575a:	df 93       	push	r29
    575c:	cd b7       	in	r28, 0x3d	; 61
    575e:	de b7       	in	r29, 0x3e	; 62
    5760:	2c 97       	sbiw	r28, 0x0c	; 12
    5762:	cd bf       	out	0x3d, r28	; 61
    5764:	de bf       	out	0x3e, r29	; 62
    5766:	1c 01       	movw	r2, r24
    5768:	2b 01       	movw	r4, r22
    576a:	4a 01       	movw	r8, r20
    576c:	29 83       	std	Y+1, r18	; 0x01
    576e:	3a 83       	std	Y+2, r19	; 0x02
    5770:	d9 01       	movw	r26, r18
    5772:	1d 92       	st	X+, r1
    5774:	1c 92       	st	X, r1
    5776:	00 97       	sbiw	r24, 0x00	; 0
    5778:	49 f0       	breq	.+18     	; 0x578c <f_read+0x54>
    577a:	dc 01       	movw	r26, r24
    577c:	ed 91       	ld	r30, X+
    577e:	fc 91       	ld	r31, X
    5780:	11 97       	sbiw	r26, 0x01	; 1
    5782:	30 97       	sbiw	r30, 0x00	; 0
    5784:	19 f0       	breq	.+6      	; 0x578c <f_read+0x54>
    5786:	80 81       	ld	r24, Z
    5788:	81 11       	cpse	r24, r1
    578a:	17 c0       	rjmp	.+46     	; 0x57ba <f_read+0x82>
    578c:	89 e0       	ldi	r24, 0x09	; 9
    578e:	2c 96       	adiw	r28, 0x0c	; 12
    5790:	cd bf       	out	0x3d, r28	; 61
    5792:	de bf       	out	0x3e, r29	; 62
    5794:	df 91       	pop	r29
    5796:	cf 91       	pop	r28
    5798:	1f 91       	pop	r17
    579a:	0f 91       	pop	r16
    579c:	ff 90       	pop	r15
    579e:	ef 90       	pop	r14
    57a0:	df 90       	pop	r13
    57a2:	cf 90       	pop	r12
    57a4:	bf 90       	pop	r11
    57a6:	af 90       	pop	r10
    57a8:	9f 90       	pop	r9
    57aa:	8f 90       	pop	r8
    57ac:	7f 90       	pop	r7
    57ae:	6f 90       	pop	r6
    57b0:	5f 90       	pop	r5
    57b2:	4f 90       	pop	r4
    57b4:	3f 90       	pop	r3
    57b6:	2f 90       	pop	r2
    57b8:	08 95       	ret
    57ba:	26 81       	ldd	r18, Z+6	; 0x06
    57bc:	37 81       	ldd	r19, Z+7	; 0x07
    57be:	12 96       	adiw	r26, 0x02	; 2
    57c0:	8d 91       	ld	r24, X+
    57c2:	9c 91       	ld	r25, X
    57c4:	13 97       	sbiw	r26, 0x03	; 3
    57c6:	28 17       	cp	r18, r24
    57c8:	39 07       	cpc	r19, r25
    57ca:	01 f7       	brne	.-64     	; 0x578c <f_read+0x54>
    57cc:	81 81       	ldd	r24, Z+1	; 0x01
    57ce:	b8 d6       	rcall	.+3440   	; 0x6540 <disk_status>
    57d0:	80 ff       	sbrs	r24, 0
    57d2:	02 c0       	rjmp	.+4      	; 0x57d8 <f_read+0xa0>
    57d4:	83 e0       	ldi	r24, 0x03	; 3
    57d6:	db cf       	rjmp	.-74     	; 0x578e <f_read+0x56>
    57d8:	d1 01       	movw	r26, r2
    57da:	15 96       	adiw	r26, 0x05	; 5
    57dc:	8c 91       	ld	r24, X
    57de:	81 11       	cpse	r24, r1
    57e0:	d6 cf       	rjmp	.-84     	; 0x578e <f_read+0x56>
    57e2:	f1 01       	movw	r30, r2
    57e4:	84 81       	ldd	r24, Z+4	; 0x04
    57e6:	80 fd       	sbrc	r24, 0
    57e8:	02 c0       	rjmp	.+4      	; 0x57ee <f_read+0xb6>
    57ea:	87 e0       	ldi	r24, 0x07	; 7
    57ec:	d0 cf       	rjmp	.-96     	; 0x578e <f_read+0x56>
    57ee:	86 81       	ldd	r24, Z+6	; 0x06
    57f0:	97 81       	ldd	r25, Z+7	; 0x07
    57f2:	a0 85       	ldd	r26, Z+8	; 0x08
    57f4:	b1 85       	ldd	r27, Z+9	; 0x09
    57f6:	42 85       	ldd	r20, Z+10	; 0x0a
    57f8:	53 85       	ldd	r21, Z+11	; 0x0b
    57fa:	64 85       	ldd	r22, Z+12	; 0x0c
    57fc:	75 85       	ldd	r23, Z+13	; 0x0d
    57fe:	48 1b       	sub	r20, r24
    5800:	59 0b       	sbc	r21, r25
    5802:	6a 0b       	sbc	r22, r26
    5804:	7b 0b       	sbc	r23, r27
    5806:	64 01       	movw	r12, r8
    5808:	e1 2c       	mov	r14, r1
    580a:	f1 2c       	mov	r15, r1
    580c:	4c 15       	cp	r20, r12
    580e:	5d 05       	cpc	r21, r13
    5810:	6e 05       	cpc	r22, r14
    5812:	7f 05       	cpc	r23, r15
    5814:	08 f4       	brcc	.+2      	; 0x5818 <f_read+0xe0>
    5816:	4a 01       	movw	r8, r20
    5818:	81 14       	cp	r8, r1
    581a:	91 04       	cpc	r9, r1
    581c:	09 f4       	brne	.+2      	; 0x5820 <f_read+0xe8>
    581e:	bf c0       	rjmp	.+382    	; 0x599e <f_read+0x266>
    5820:	34 01       	movw	r6, r8
    5822:	ac 01       	movw	r20, r24
    5824:	bd 01       	movw	r22, r26
    5826:	51 70       	andi	r21, 0x01	; 1
    5828:	66 27       	eor	r22, r22
    582a:	77 27       	eor	r23, r23
    582c:	f1 01       	movw	r30, r2
    582e:	45 2b       	or	r20, r21
    5830:	46 2b       	or	r20, r22
    5832:	47 2b       	or	r20, r23
    5834:	09 f4       	brne	.+2      	; 0x5838 <f_read+0x100>
    5836:	b5 c0       	rjmp	.+362    	; 0x59a2 <f_read+0x26a>
    5838:	06 89       	ldd	r16, Z+22	; 0x16
    583a:	17 89       	ldd	r17, Z+23	; 0x17
    583c:	20 8d       	ldd	r18, Z+24	; 0x18
    583e:	31 8d       	ldd	r19, Z+25	; 0x19
    5840:	0b 83       	std	Y+3, r16	; 0x03
    5842:	1c 83       	std	Y+4, r17	; 0x04
    5844:	2d 83       	std	Y+5, r18	; 0x05
    5846:	3e 83       	std	Y+6, r19	; 0x06
    5848:	00 81       	ld	r16, Z
    584a:	11 81       	ldd	r17, Z+1	; 0x01
    584c:	0b 87       	std	Y+11, r16	; 0x0b
    584e:	1c 87       	std	Y+12, r17	; 0x0c
    5850:	9c 01       	movw	r18, r24
    5852:	31 70       	andi	r19, 0x01	; 1
    5854:	e1 2c       	mov	r14, r1
    5856:	52 e0       	ldi	r21, 0x02	; 2
    5858:	f5 2e       	mov	r15, r21
    585a:	e2 1a       	sub	r14, r18
    585c:	f3 0a       	sbc	r15, r19
    585e:	6e 14       	cp	r6, r14
    5860:	7f 04       	cpc	r7, r15
    5862:	08 f4       	brcc	.+2      	; 0x5866 <f_read+0x12e>
    5864:	73 01       	movw	r14, r6
    5866:	eb 85       	ldd	r30, Y+11	; 0x0b
    5868:	fc 85       	ldd	r31, Y+12	; 0x0c
    586a:	86 a4       	ldd	r8, Z+46	; 0x2e
    586c:	97 a4       	ldd	r9, Z+47	; 0x2f
    586e:	a0 a8       	ldd	r10, Z+48	; 0x30
    5870:	b1 a8       	ldd	r11, Z+49	; 0x31
    5872:	0b 81       	ldd	r16, Y+3	; 0x03
    5874:	1c 81       	ldd	r17, Y+4	; 0x04
    5876:	2d 81       	ldd	r18, Y+5	; 0x05
    5878:	3e 81       	ldd	r19, Y+6	; 0x06
    587a:	80 16       	cp	r8, r16
    587c:	91 06       	cpc	r9, r17
    587e:	a2 06       	cpc	r10, r18
    5880:	b3 06       	cpc	r11, r19
    5882:	e1 f1       	breq	.+120    	; 0x58fc <f_read+0x1c4>
    5884:	84 81       	ldd	r24, Z+4	; 0x04
    5886:	81 11       	cpse	r24, r1
    5888:	5e c1       	rjmp	.+700    	; 0x5b46 <f_read+0x40e>
    588a:	eb 85       	ldd	r30, Y+11	; 0x0b
    588c:	fc 85       	ldd	r31, Y+12	; 0x0c
    588e:	f2 96       	adiw	r30, 0x32	; 50
    5890:	ef 83       	std	Y+7, r30	; 0x07
    5892:	f8 87       	std	Y+8, r31	; 0x08
    5894:	01 e0       	ldi	r16, 0x01	; 1
    5896:	10 e0       	ldi	r17, 0x00	; 0
    5898:	2b 81       	ldd	r18, Y+3	; 0x03
    589a:	3c 81       	ldd	r19, Y+4	; 0x04
    589c:	4d 81       	ldd	r20, Y+5	; 0x05
    589e:	5e 81       	ldd	r21, Y+6	; 0x06
    58a0:	6f 81       	ldd	r22, Y+7	; 0x07
    58a2:	78 85       	ldd	r23, Y+8	; 0x08
    58a4:	ab 85       	ldd	r26, Y+11	; 0x0b
    58a6:	bc 85       	ldd	r27, Y+12	; 0x0c
    58a8:	11 96       	adiw	r26, 0x01	; 1
    58aa:	8c 91       	ld	r24, X
    58ac:	50 d6       	rcall	.+3232   	; 0x654e <disk_read>
    58ae:	88 23       	and	r24, r24
    58b0:	71 f0       	breq	.+28     	; 0x58ce <f_read+0x196>
    58b2:	ab 84       	ldd	r10, Y+11	; 0x0b
    58b4:	bc 84       	ldd	r11, Y+12	; 0x0c
    58b6:	8f ef       	ldi	r24, 0xFF	; 255
    58b8:	9f ef       	ldi	r25, 0xFF	; 255
    58ba:	dc 01       	movw	r26, r24
    58bc:	f5 01       	movw	r30, r10
    58be:	86 a7       	std	Z+46, r24	; 0x2e
    58c0:	97 a7       	std	Z+47, r25	; 0x2f
    58c2:	a0 ab       	std	Z+48, r26	; 0x30
    58c4:	b1 ab       	std	Z+49, r27	; 0x31
    58c6:	81 e0       	ldi	r24, 0x01	; 1
    58c8:	f1 01       	movw	r30, r2
    58ca:	85 83       	std	Z+5, r24	; 0x05
    58cc:	60 cf       	rjmp	.-320    	; 0x578e <f_read+0x56>
    58ce:	0b 81       	ldd	r16, Y+3	; 0x03
    58d0:	1c 81       	ldd	r17, Y+4	; 0x04
    58d2:	2d 81       	ldd	r18, Y+5	; 0x05
    58d4:	3e 81       	ldd	r19, Y+6	; 0x06
    58d6:	ab 85       	ldd	r26, Y+11	; 0x0b
    58d8:	bc 85       	ldd	r27, Y+12	; 0x0c
    58da:	9e 96       	adiw	r26, 0x2e	; 46
    58dc:	0d 93       	st	X+, r16
    58de:	1d 93       	st	X+, r17
    58e0:	2d 93       	st	X+, r18
    58e2:	3c 93       	st	X, r19
    58e4:	d1 97       	sbiw	r26, 0x31	; 49
    58e6:	f1 01       	movw	r30, r2
    58e8:	01 90       	ld	r0, Z+
    58ea:	f0 81       	ld	r31, Z
    58ec:	e0 2d       	mov	r30, r0
    58ee:	eb 87       	std	Y+11, r30	; 0x0b
    58f0:	fc 87       	std	Y+12, r31	; 0x0c
    58f2:	f1 01       	movw	r30, r2
    58f4:	86 81       	ldd	r24, Z+6	; 0x06
    58f6:	97 81       	ldd	r25, Z+7	; 0x07
    58f8:	a0 85       	ldd	r26, Z+8	; 0x08
    58fa:	b1 85       	ldd	r27, Z+9	; 0x09
    58fc:	ac 01       	movw	r20, r24
    58fe:	bd 01       	movw	r22, r26
    5900:	51 70       	andi	r21, 0x01	; 1
    5902:	66 27       	eor	r22, r22
    5904:	77 27       	eor	r23, r23
    5906:	4e 5c       	subi	r20, 0xCE	; 206
    5908:	5f 4f       	sbci	r21, 0xFF	; 255
    590a:	0b 85       	ldd	r16, Y+11	; 0x0b
    590c:	1c 85       	ldd	r17, Y+12	; 0x0c
    590e:	40 0f       	add	r20, r16
    5910:	51 1f       	adc	r21, r17
    5912:	12 e0       	ldi	r17, 0x02	; 2
    5914:	e1 16       	cp	r14, r17
    5916:	f1 04       	cpc	r15, r1
    5918:	08 f4       	brcc	.+2      	; 0x591c <f_read+0x1e4>
    591a:	81 c1       	rjmp	.+770    	; 0x5c1e <f_read+0x4e6>
    591c:	6a 01       	movw	r12, r20
    591e:	97 01       	movw	r18, r14
    5920:	f2 01       	movw	r30, r4
    5922:	4c 01       	movw	r8, r24
    5924:	5d 01       	movw	r10, r26
    5926:	d6 01       	movw	r26, r12
    5928:	6d 91       	ld	r22, X+
    592a:	7d 91       	ld	r23, X+
    592c:	6d 01       	movw	r12, r26
    592e:	61 93       	st	Z+, r22
    5930:	71 93       	st	Z+, r23
    5932:	22 50       	subi	r18, 0x02	; 2
    5934:	31 09       	sbc	r19, r1
    5936:	22 30       	cpi	r18, 0x02	; 2
    5938:	31 05       	cpc	r19, r1
    593a:	a8 f7       	brcc	.-22     	; 0x5926 <f_read+0x1ee>
    593c:	d5 01       	movw	r26, r10
    593e:	c4 01       	movw	r24, r8
    5940:	97 01       	movw	r18, r14
    5942:	22 50       	subi	r18, 0x02	; 2
    5944:	31 09       	sbc	r19, r1
    5946:	2e 7f       	andi	r18, 0xFE	; 254
    5948:	2e 5f       	subi	r18, 0xFE	; 254
    594a:	3f 4f       	sbci	r19, 0xFF	; 255
    594c:	f2 01       	movw	r30, r4
    594e:	e2 0f       	add	r30, r18
    5950:	f3 1f       	adc	r31, r19
    5952:	42 0f       	add	r20, r18
    5954:	53 1f       	adc	r21, r19
    5956:	97 01       	movw	r18, r14
    5958:	21 70       	andi	r18, 0x01	; 1
    595a:	33 27       	eor	r19, r19
    595c:	23 2b       	or	r18, r19
    595e:	41 f0       	breq	.+16     	; 0x5970 <f_read+0x238>
    5960:	da 01       	movw	r26, r20
    5962:	8c 91       	ld	r24, X
    5964:	80 83       	st	Z, r24
    5966:	f1 01       	movw	r30, r2
    5968:	86 81       	ldd	r24, Z+6	; 0x06
    596a:	97 81       	ldd	r25, Z+7	; 0x07
    596c:	a0 85       	ldd	r26, Z+8	; 0x08
    596e:	b1 85       	ldd	r27, Z+9	; 0x09
    5970:	4e 0c       	add	r4, r14
    5972:	5f 1c       	adc	r5, r15
    5974:	8e 0d       	add	r24, r14
    5976:	9f 1d       	adc	r25, r15
    5978:	a1 1d       	adc	r26, r1
    597a:	b1 1d       	adc	r27, r1
    597c:	f1 01       	movw	r30, r2
    597e:	86 83       	std	Z+6, r24	; 0x06
    5980:	97 83       	std	Z+7, r25	; 0x07
    5982:	a0 87       	std	Z+8, r26	; 0x08
    5984:	b1 87       	std	Z+9, r27	; 0x09
    5986:	e9 81       	ldd	r30, Y+1	; 0x01
    5988:	fa 81       	ldd	r31, Y+2	; 0x02
    598a:	20 81       	ld	r18, Z
    598c:	31 81       	ldd	r19, Z+1	; 0x01
    598e:	2e 0d       	add	r18, r14
    5990:	3f 1d       	adc	r19, r15
    5992:	20 83       	st	Z, r18
    5994:	31 83       	std	Z+1, r19	; 0x01
    5996:	6e 18       	sub	r6, r14
    5998:	7f 08       	sbc	r7, r15
    599a:	09 f0       	breq	.+2      	; 0x599e <f_read+0x266>
    599c:	42 cf       	rjmp	.-380    	; 0x5822 <f_read+0xea>
    599e:	80 e0       	ldi	r24, 0x00	; 0
    59a0:	f6 ce       	rjmp	.-532    	; 0x578e <f_read+0x56>
    59a2:	01 90       	ld	r0, Z+
    59a4:	f0 81       	ld	r31, Z
    59a6:	e0 2d       	mov	r30, r0
    59a8:	eb 87       	std	Y+11, r30	; 0x0b
    59aa:	fc 87       	std	Y+12, r31	; 0x0c
    59ac:	92 80       	ldd	r9, Z+2	; 0x02
    59ae:	9a 94       	dec	r9
    59b0:	ac 01       	movw	r20, r24
    59b2:	bd 01       	movw	r22, r26
    59b4:	19 e0       	ldi	r17, 0x09	; 9
    59b6:	76 95       	lsr	r23
    59b8:	67 95       	ror	r22
    59ba:	57 95       	ror	r21
    59bc:	47 95       	ror	r20
    59be:	1a 95       	dec	r17
    59c0:	d1 f7       	brne	.-12     	; 0x59b6 <f_read+0x27e>
    59c2:	94 22       	and	r9, r20
    59c4:	09 f4       	brne	.+2      	; 0x59c8 <f_read+0x290>
    59c6:	87 c0       	rjmp	.+270    	; 0x5ad6 <f_read+0x39e>
    59c8:	f1 01       	movw	r30, r2
    59ca:	82 89       	ldd	r24, Z+18	; 0x12
    59cc:	93 89       	ldd	r25, Z+19	; 0x13
    59ce:	a4 89       	ldd	r26, Z+20	; 0x14
    59d0:	b5 89       	ldd	r27, Z+21	; 0x15
    59d2:	eb 85       	ldd	r30, Y+11	; 0x0b
    59d4:	fc 85       	ldd	r31, Y+12	; 0x0c
    59d6:	9c 01       	movw	r18, r24
    59d8:	ad 01       	movw	r20, r26
    59da:	22 50       	subi	r18, 0x02	; 2
    59dc:	31 09       	sbc	r19, r1
    59de:	41 09       	sbc	r20, r1
    59e0:	51 09       	sbc	r21, r1
    59e2:	86 89       	ldd	r24, Z+22	; 0x16
    59e4:	97 89       	ldd	r25, Z+23	; 0x17
    59e6:	a0 8d       	ldd	r26, Z+24	; 0x18
    59e8:	b1 8d       	ldd	r27, Z+25	; 0x19
    59ea:	02 97       	sbiw	r24, 0x02	; 2
    59ec:	a1 09       	sbc	r26, r1
    59ee:	b1 09       	sbc	r27, r1
    59f0:	28 17       	cp	r18, r24
    59f2:	39 07       	cpc	r19, r25
    59f4:	4a 07       	cpc	r20, r26
    59f6:	5b 07       	cpc	r21, r27
    59f8:	08 f0       	brcs	.+2      	; 0x59fc <f_read+0x2c4>
    59fa:	18 c1       	rjmp	.+560    	; 0x5c2c <f_read+0x4f4>
    59fc:	e2 81       	ldd	r30, Z+2	; 0x02
    59fe:	ae 2f       	mov	r26, r30
    5a00:	b0 e0       	ldi	r27, 0x00	; 0
    5a02:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    5a06:	ab 85       	ldd	r26, Y+11	; 0x0b
    5a08:	bc 85       	ldd	r27, Y+12	; 0x0c
    5a0a:	9a 96       	adiw	r26, 0x2a	; 42
    5a0c:	cd 90       	ld	r12, X+
    5a0e:	dd 90       	ld	r13, X+
    5a10:	ed 90       	ld	r14, X+
    5a12:	fc 90       	ld	r15, X
    5a14:	9d 97       	sbiw	r26, 0x2d	; 45
    5a16:	6c 0d       	add	r22, r12
    5a18:	7d 1d       	adc	r23, r13
    5a1a:	8e 1d       	adc	r24, r14
    5a1c:	9f 1d       	adc	r25, r15
    5a1e:	61 15       	cp	r22, r1
    5a20:	71 05       	cpc	r23, r1
    5a22:	81 05       	cpc	r24, r1
    5a24:	91 05       	cpc	r25, r1
    5a26:	09 f4       	brne	.+2      	; 0x5a2a <f_read+0x2f2>
    5a28:	01 c1       	rjmp	.+514    	; 0x5c2c <f_read+0x4f4>
    5a2a:	6b 01       	movw	r12, r22
    5a2c:	7c 01       	movw	r14, r24
    5a2e:	c9 0c       	add	r12, r9
    5a30:	d1 1c       	adc	r13, r1
    5a32:	e1 1c       	adc	r14, r1
    5a34:	f1 1c       	adc	r15, r1
    5a36:	53 01       	movw	r10, r6
    5a38:	ab 2c       	mov	r10, r11
    5a3a:	bb 24       	eor	r11, r11
    5a3c:	a6 94       	lsr	r10
    5a3e:	a1 14       	cp	r10, r1
    5a40:	b1 04       	cpc	r11, r1
    5a42:	09 f4       	brne	.+2      	; 0x5a46 <f_read+0x30e>
    5a44:	6e c0       	rjmp	.+220    	; 0x5b22 <f_read+0x3ea>
    5a46:	89 2d       	mov	r24, r9
    5a48:	90 e0       	ldi	r25, 0x00	; 0
    5a4a:	ac 01       	movw	r20, r24
    5a4c:	4a 0d       	add	r20, r10
    5a4e:	5b 1d       	adc	r21, r11
    5a50:	2e 2f       	mov	r18, r30
    5a52:	30 e0       	ldi	r19, 0x00	; 0
    5a54:	24 17       	cp	r18, r20
    5a56:	35 07       	cpc	r19, r21
    5a58:	18 f4       	brcc	.+6      	; 0x5a60 <f_read+0x328>
    5a5a:	59 01       	movw	r10, r18
    5a5c:	a8 1a       	sub	r10, r24
    5a5e:	b9 0a       	sbc	r11, r25
    5a60:	85 01       	movw	r16, r10
    5a62:	a7 01       	movw	r20, r14
    5a64:	96 01       	movw	r18, r12
    5a66:	b2 01       	movw	r22, r4
    5a68:	ab 85       	ldd	r26, Y+11	; 0x0b
    5a6a:	bc 85       	ldd	r27, Y+12	; 0x0c
    5a6c:	11 96       	adiw	r26, 0x01	; 1
    5a6e:	8c 91       	ld	r24, X
    5a70:	6e d5       	rcall	.+2780   	; 0x654e <disk_read>
    5a72:	81 11       	cpse	r24, r1
    5a74:	28 cf       	rjmp	.-432    	; 0x58c6 <f_read+0x18e>
    5a76:	d1 01       	movw	r26, r2
    5a78:	ed 91       	ld	r30, X+
    5a7a:	fc 91       	ld	r31, X
    5a7c:	84 81       	ldd	r24, Z+4	; 0x04
    5a7e:	88 23       	and	r24, r24
    5a80:	01 f1       	breq	.+64     	; 0x5ac2 <f_read+0x38a>
    5a82:	86 a5       	ldd	r24, Z+46	; 0x2e
    5a84:	97 a5       	ldd	r25, Z+47	; 0x2f
    5a86:	a0 a9       	ldd	r26, Z+48	; 0x30
    5a88:	b1 a9       	ldd	r27, Z+49	; 0x31
    5a8a:	8c 19       	sub	r24, r12
    5a8c:	9d 09       	sbc	r25, r13
    5a8e:	ae 09       	sbc	r26, r14
    5a90:	bf 09       	sbc	r27, r15
    5a92:	a5 01       	movw	r20, r10
    5a94:	60 e0       	ldi	r22, 0x00	; 0
    5a96:	70 e0       	ldi	r23, 0x00	; 0
    5a98:	84 17       	cp	r24, r20
    5a9a:	95 07       	cpc	r25, r21
    5a9c:	a6 07       	cpc	r26, r22
    5a9e:	b7 07       	cpc	r27, r23
    5aa0:	80 f4       	brcc	.+32     	; 0x5ac2 <f_read+0x38a>
    5aa2:	dc 01       	movw	r26, r24
    5aa4:	ba 2f       	mov	r27, r26
    5aa6:	aa 27       	eor	r26, r26
    5aa8:	bb 0f       	add	r27, r27
    5aaa:	a4 0d       	add	r26, r4
    5aac:	b5 1d       	adc	r27, r5
    5aae:	f2 96       	adiw	r30, 0x32	; 50
    5ab0:	ad 01       	movw	r20, r26
    5ab2:	5e 5f       	subi	r21, 0xFE	; 254
    5ab4:	81 91       	ld	r24, Z+
    5ab6:	91 91       	ld	r25, Z+
    5ab8:	8d 93       	st	X+, r24
    5aba:	9d 93       	st	X+, r25
    5abc:	a4 17       	cp	r26, r20
    5abe:	b5 07       	cpc	r27, r21
    5ac0:	c9 f7       	brne	.-14     	; 0x5ab4 <f_read+0x37c>
    5ac2:	75 01       	movw	r14, r10
    5ac4:	fe 2c       	mov	r15, r14
    5ac6:	ee 24       	eor	r14, r14
    5ac8:	ff 0c       	add	r15, r15
    5aca:	f1 01       	movw	r30, r2
    5acc:	86 81       	ldd	r24, Z+6	; 0x06
    5ace:	97 81       	ldd	r25, Z+7	; 0x07
    5ad0:	a0 85       	ldd	r26, Z+8	; 0x08
    5ad2:	b1 85       	ldd	r27, Z+9	; 0x09
    5ad4:	4d cf       	rjmp	.-358    	; 0x5970 <f_read+0x238>
    5ad6:	89 2b       	or	r24, r25
    5ad8:	8a 2b       	or	r24, r26
    5ada:	8b 2b       	or	r24, r27
    5adc:	09 f0       	breq	.+2      	; 0x5ae0 <f_read+0x3a8>
    5ade:	85 c0       	rjmp	.+266    	; 0x5bea <f_read+0x4b2>
    5ae0:	d1 01       	movw	r26, r2
    5ae2:	1e 96       	adiw	r26, 0x0e	; 14
    5ae4:	6d 91       	ld	r22, X+
    5ae6:	7d 91       	ld	r23, X+
    5ae8:	8d 91       	ld	r24, X+
    5aea:	9c 91       	ld	r25, X
    5aec:	51 97       	sbiw	r26, 0x11	; 17
    5aee:	62 30       	cpi	r22, 0x02	; 2
    5af0:	71 05       	cpc	r23, r1
    5af2:	81 05       	cpc	r24, r1
    5af4:	91 05       	cpc	r25, r1
    5af6:	08 f4       	brcc	.+2      	; 0x5afa <f_read+0x3c2>
    5af8:	8d c0       	rjmp	.+282    	; 0x5c14 <f_read+0x4dc>
    5afa:	6f 3f       	cpi	r22, 0xFF	; 255
    5afc:	ff ef       	ldi	r31, 0xFF	; 255
    5afe:	7f 07       	cpc	r23, r31
    5b00:	8f 07       	cpc	r24, r31
    5b02:	9f 07       	cpc	r25, r31
    5b04:	09 f4       	brne	.+2      	; 0x5b08 <f_read+0x3d0>
    5b06:	96 c0       	rjmp	.+300    	; 0x5c34 <f_read+0x4fc>
    5b08:	f1 01       	movw	r30, r2
    5b0a:	62 8b       	std	Z+18, r22	; 0x12
    5b0c:	73 8b       	std	Z+19, r23	; 0x13
    5b0e:	84 8b       	std	Z+20, r24	; 0x14
    5b10:	95 8b       	std	Z+21, r25	; 0x15
    5b12:	00 81       	ld	r16, Z
    5b14:	11 81       	ldd	r17, Z+1	; 0x01
    5b16:	0b 87       	std	Y+11, r16	; 0x0b
    5b18:	1c 87       	std	Y+12, r17	; 0x0c
    5b1a:	dc 01       	movw	r26, r24
    5b1c:	cb 01       	movw	r24, r22
    5b1e:	f8 01       	movw	r30, r16
    5b20:	5a cf       	rjmp	.-332    	; 0x59d6 <f_read+0x29e>
    5b22:	d1 01       	movw	r26, r2
    5b24:	56 96       	adiw	r26, 0x16	; 22
    5b26:	cd 92       	st	X+, r12
    5b28:	dd 92       	st	X+, r13
    5b2a:	ed 92       	st	X+, r14
    5b2c:	fc 92       	st	X, r15
    5b2e:	59 97       	sbiw	r26, 0x19	; 25
    5b30:	16 96       	adiw	r26, 0x06	; 6
    5b32:	8d 91       	ld	r24, X+
    5b34:	9d 91       	ld	r25, X+
    5b36:	0d 90       	ld	r0, X+
    5b38:	bc 91       	ld	r27, X
    5b3a:	a0 2d       	mov	r26, r0
    5b3c:	cb 82       	std	Y+3, r12	; 0x03
    5b3e:	dc 82       	std	Y+4, r13	; 0x04
    5b40:	ed 82       	std	Y+5, r14	; 0x05
    5b42:	fe 82       	std	Y+6, r15	; 0x06
    5b44:	85 ce       	rjmp	.-758    	; 0x5850 <f_read+0x118>
    5b46:	f2 96       	adiw	r30, 0x32	; 50
    5b48:	ef 83       	std	Y+7, r30	; 0x07
    5b4a:	f8 87       	std	Y+8, r31	; 0x08
    5b4c:	01 e0       	ldi	r16, 0x01	; 1
    5b4e:	10 e0       	ldi	r17, 0x00	; 0
    5b50:	a5 01       	movw	r20, r10
    5b52:	94 01       	movw	r18, r8
    5b54:	bf 01       	movw	r22, r30
    5b56:	ab 85       	ldd	r26, Y+11	; 0x0b
    5b58:	bc 85       	ldd	r27, Y+12	; 0x0c
    5b5a:	11 96       	adiw	r26, 0x01	; 1
    5b5c:	8c 91       	ld	r24, X
    5b5e:	76 d5       	rcall	.+2796   	; 0x664c <disk_write>
    5b60:	81 11       	cpse	r24, r1
    5b62:	b1 ce       	rjmp	.-670    	; 0x58c6 <f_read+0x18e>
    5b64:	eb 85       	ldd	r30, Y+11	; 0x0b
    5b66:	fc 85       	ldd	r31, Y+12	; 0x0c
    5b68:	14 82       	std	Z+4, r1	; 0x04
    5b6a:	42 8d       	ldd	r20, Z+26	; 0x1a
    5b6c:	53 8d       	ldd	r21, Z+27	; 0x1b
    5b6e:	64 8d       	ldd	r22, Z+28	; 0x1c
    5b70:	75 8d       	ldd	r23, Z+29	; 0x1d
    5b72:	82 a1       	ldd	r24, Z+34	; 0x22
    5b74:	93 a1       	ldd	r25, Z+35	; 0x23
    5b76:	a4 a1       	ldd	r26, Z+36	; 0x24
    5b78:	b5 a1       	ldd	r27, Z+37	; 0x25
    5b7a:	95 01       	movw	r18, r10
    5b7c:	84 01       	movw	r16, r8
    5b7e:	08 1b       	sub	r16, r24
    5b80:	19 0b       	sbc	r17, r25
    5b82:	2a 0b       	sbc	r18, r26
    5b84:	3b 0b       	sbc	r19, r27
    5b86:	04 17       	cp	r16, r20
    5b88:	15 07       	cpc	r17, r21
    5b8a:	26 07       	cpc	r18, r22
    5b8c:	37 07       	cpc	r19, r23
    5b8e:	08 f0       	brcs	.+2      	; 0x5b92 <f_read+0x45a>
    5b90:	81 ce       	rjmp	.-766    	; 0x5894 <f_read+0x15c>
    5b92:	c3 80       	ldd	r12, Z+3	; 0x03
    5b94:	d1 2c       	mov	r13, r1
    5b96:	12 e0       	ldi	r17, 0x02	; 2
    5b98:	c1 16       	cp	r12, r17
    5b9a:	d1 04       	cpc	r13, r1
    5b9c:	08 f4       	brcc	.+2      	; 0x5ba0 <f_read+0x468>
    5b9e:	7a ce       	rjmp	.-780    	; 0x5894 <f_read+0x15c>
    5ba0:	e9 86       	std	Y+9, r14	; 0x09
    5ba2:	fa 86       	std	Y+10, r15	; 0x0a
    5ba4:	ef 80       	ldd	r14, Y+7	; 0x07
    5ba6:	f8 84       	ldd	r15, Y+8	; 0x08
    5ba8:	ab 85       	ldd	r26, Y+11	; 0x0b
    5baa:	bc 85       	ldd	r27, Y+12	; 0x0c
    5bac:	08 c0       	rjmp	.+16     	; 0x5bbe <f_read+0x486>
    5bae:	ab 85       	ldd	r26, Y+11	; 0x0b
    5bb0:	bc 85       	ldd	r27, Y+12	; 0x0c
    5bb2:	5a 96       	adiw	r26, 0x1a	; 26
    5bb4:	4d 91       	ld	r20, X+
    5bb6:	5d 91       	ld	r21, X+
    5bb8:	6d 91       	ld	r22, X+
    5bba:	7c 91       	ld	r23, X
    5bbc:	5d 97       	sbiw	r26, 0x1d	; 29
    5bbe:	84 0e       	add	r8, r20
    5bc0:	95 1e       	adc	r9, r21
    5bc2:	a6 1e       	adc	r10, r22
    5bc4:	b7 1e       	adc	r11, r23
    5bc6:	01 e0       	ldi	r16, 0x01	; 1
    5bc8:	10 e0       	ldi	r17, 0x00	; 0
    5bca:	a5 01       	movw	r20, r10
    5bcc:	94 01       	movw	r18, r8
    5bce:	b7 01       	movw	r22, r14
    5bd0:	11 96       	adiw	r26, 0x01	; 1
    5bd2:	8c 91       	ld	r24, X
    5bd4:	3b d5       	rcall	.+2678   	; 0x664c <disk_write>
    5bd6:	b1 e0       	ldi	r27, 0x01	; 1
    5bd8:	cb 1a       	sub	r12, r27
    5bda:	d1 08       	sbc	r13, r1
    5bdc:	e1 e0       	ldi	r30, 0x01	; 1
    5bde:	ce 16       	cp	r12, r30
    5be0:	d1 04       	cpc	r13, r1
    5be2:	29 f7       	brne	.-54     	; 0x5bae <f_read+0x476>
    5be4:	e9 84       	ldd	r14, Y+9	; 0x09
    5be6:	fa 84       	ldd	r15, Y+10	; 0x0a
    5be8:	55 ce       	rjmp	.-854    	; 0x5894 <f_read+0x15c>
    5bea:	f1 01       	movw	r30, r2
    5bec:	42 89       	ldd	r20, Z+18	; 0x12
    5bee:	53 89       	ldd	r21, Z+19	; 0x13
    5bf0:	64 89       	ldd	r22, Z+20	; 0x14
    5bf2:	75 89       	ldd	r23, Z+21	; 0x15
    5bf4:	42 30       	cpi	r20, 0x02	; 2
    5bf6:	51 05       	cpc	r21, r1
    5bf8:	61 05       	cpc	r22, r1
    5bfa:	71 05       	cpc	r23, r1
    5bfc:	58 f0       	brcs	.+22     	; 0x5c14 <f_read+0x4dc>
    5bfe:	eb 85       	ldd	r30, Y+11	; 0x0b
    5c00:	fc 85       	ldd	r31, Y+12	; 0x0c
    5c02:	86 89       	ldd	r24, Z+22	; 0x16
    5c04:	97 89       	ldd	r25, Z+23	; 0x17
    5c06:	a0 8d       	ldd	r26, Z+24	; 0x18
    5c08:	b1 8d       	ldd	r27, Z+25	; 0x19
    5c0a:	48 17       	cp	r20, r24
    5c0c:	59 07       	cpc	r21, r25
    5c0e:	6a 07       	cpc	r22, r26
    5c10:	7b 07       	cpc	r23, r27
    5c12:	40 f0       	brcs	.+16     	; 0x5c24 <f_read+0x4ec>
    5c14:	82 e0       	ldi	r24, 0x02	; 2
    5c16:	d1 01       	movw	r26, r2
    5c18:	15 96       	adiw	r26, 0x05	; 5
    5c1a:	8c 93       	st	X, r24
    5c1c:	b8 cd       	rjmp	.-1168   	; 0x578e <f_read+0x56>
    5c1e:	97 01       	movw	r18, r14
    5c20:	f2 01       	movw	r30, r4
    5c22:	9c ce       	rjmp	.-712    	; 0x595c <f_read+0x224>
    5c24:	cf 01       	movw	r24, r30
    5c26:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <get_fat.part.4>
    5c2a:	61 cf       	rjmp	.-318    	; 0x5aee <f_read+0x3b6>
    5c2c:	82 e0       	ldi	r24, 0x02	; 2
    5c2e:	f1 01       	movw	r30, r2
    5c30:	85 83       	std	Z+5, r24	; 0x05
    5c32:	ad cd       	rjmp	.-1190   	; 0x578e <f_read+0x56>
    5c34:	81 e0       	ldi	r24, 0x01	; 1
    5c36:	d1 01       	movw	r26, r2
    5c38:	15 96       	adiw	r26, 0x05	; 5
    5c3a:	8c 93       	st	X, r24
    5c3c:	a8 cd       	rjmp	.-1200   	; 0x578e <f_read+0x56>

00005c3e <f_close>:
    5c3e:	2f 92       	push	r2
    5c40:	3f 92       	push	r3
    5c42:	4f 92       	push	r4
    5c44:	5f 92       	push	r5
    5c46:	6f 92       	push	r6
    5c48:	7f 92       	push	r7
    5c4a:	8f 92       	push	r8
    5c4c:	9f 92       	push	r9
    5c4e:	af 92       	push	r10
    5c50:	bf 92       	push	r11
    5c52:	cf 92       	push	r12
    5c54:	df 92       	push	r13
    5c56:	ef 92       	push	r14
    5c58:	ff 92       	push	r15
    5c5a:	0f 93       	push	r16
    5c5c:	1f 93       	push	r17
    5c5e:	cf 93       	push	r28
    5c60:	df 93       	push	r29
    5c62:	ec 01       	movw	r28, r24
    5c64:	00 97       	sbiw	r24, 0x00	; 0
    5c66:	39 f0       	breq	.+14     	; 0x5c76 <f_close+0x38>
    5c68:	e8 81       	ld	r30, Y
    5c6a:	f9 81       	ldd	r31, Y+1	; 0x01
    5c6c:	30 97       	sbiw	r30, 0x00	; 0
    5c6e:	19 f0       	breq	.+6      	; 0x5c76 <f_close+0x38>
    5c70:	80 81       	ld	r24, Z
    5c72:	81 11       	cpse	r24, r1
    5c74:	14 c0       	rjmp	.+40     	; 0x5c9e <f_close+0x60>
    5c76:	89 e0       	ldi	r24, 0x09	; 9
    5c78:	df 91       	pop	r29
    5c7a:	cf 91       	pop	r28
    5c7c:	1f 91       	pop	r17
    5c7e:	0f 91       	pop	r16
    5c80:	ff 90       	pop	r15
    5c82:	ef 90       	pop	r14
    5c84:	df 90       	pop	r13
    5c86:	cf 90       	pop	r12
    5c88:	bf 90       	pop	r11
    5c8a:	af 90       	pop	r10
    5c8c:	9f 90       	pop	r9
    5c8e:	8f 90       	pop	r8
    5c90:	7f 90       	pop	r7
    5c92:	6f 90       	pop	r6
    5c94:	5f 90       	pop	r5
    5c96:	4f 90       	pop	r4
    5c98:	3f 90       	pop	r3
    5c9a:	2f 90       	pop	r2
    5c9c:	08 95       	ret
    5c9e:	26 81       	ldd	r18, Z+6	; 0x06
    5ca0:	37 81       	ldd	r19, Z+7	; 0x07
    5ca2:	8a 81       	ldd	r24, Y+2	; 0x02
    5ca4:	9b 81       	ldd	r25, Y+3	; 0x03
    5ca6:	28 17       	cp	r18, r24
    5ca8:	39 07       	cpc	r19, r25
    5caa:	29 f7       	brne	.-54     	; 0x5c76 <f_close+0x38>
    5cac:	81 81       	ldd	r24, Z+1	; 0x01
    5cae:	48 d4       	rcall	.+2192   	; 0x6540 <disk_status>
    5cb0:	80 ff       	sbrs	r24, 0
    5cb2:	02 c0       	rjmp	.+4      	; 0x5cb8 <f_close+0x7a>
    5cb4:	83 e0       	ldi	r24, 0x03	; 3
    5cb6:	e0 cf       	rjmp	.-64     	; 0x5c78 <f_close+0x3a>
    5cb8:	8c 81       	ldd	r24, Y+4	; 0x04
    5cba:	85 fd       	sbrc	r24, 5
    5cbc:	16 c0       	rjmp	.+44     	; 0x5cea <f_close+0xac>
    5cbe:	e8 81       	ld	r30, Y
    5cc0:	f9 81       	ldd	r31, Y+1	; 0x01
    5cc2:	30 97       	sbiw	r30, 0x00	; 0
    5cc4:	c1 f2       	breq	.-80     	; 0x5c76 <f_close+0x38>
    5cc6:	80 81       	ld	r24, Z
    5cc8:	88 23       	and	r24, r24
    5cca:	a9 f2       	breq	.-86     	; 0x5c76 <f_close+0x38>
    5ccc:	26 81       	ldd	r18, Z+6	; 0x06
    5cce:	37 81       	ldd	r19, Z+7	; 0x07
    5cd0:	8a 81       	ldd	r24, Y+2	; 0x02
    5cd2:	9b 81       	ldd	r25, Y+3	; 0x03
    5cd4:	28 17       	cp	r18, r24
    5cd6:	39 07       	cpc	r19, r25
    5cd8:	71 f6       	brne	.-100    	; 0x5c76 <f_close+0x38>
    5cda:	81 81       	ldd	r24, Z+1	; 0x01
    5cdc:	31 d4       	rcall	.+2146   	; 0x6540 <disk_status>
    5cde:	80 fd       	sbrc	r24, 0
    5ce0:	e9 cf       	rjmp	.-46     	; 0x5cb4 <f_close+0x76>
    5ce2:	18 82       	st	Y, r1
    5ce4:	19 82       	std	Y+1, r1	; 0x01
    5ce6:	80 e0       	ldi	r24, 0x00	; 0
    5ce8:	c7 cf       	rjmp	.-114    	; 0x5c78 <f_close+0x3a>
    5cea:	4a 8c       	ldd	r4, Y+26	; 0x1a
    5cec:	5b 8c       	ldd	r5, Y+27	; 0x1b
    5cee:	6c 8c       	ldd	r6, Y+28	; 0x1c
    5cf0:	7d 8c       	ldd	r7, Y+29	; 0x1d
    5cf2:	a8 80       	ld	r10, Y
    5cf4:	b9 80       	ldd	r11, Y+1	; 0x01
    5cf6:	f5 01       	movw	r30, r10
    5cf8:	c6 a4       	ldd	r12, Z+46	; 0x2e
    5cfa:	d7 a4       	ldd	r13, Z+47	; 0x2f
    5cfc:	e0 a8       	ldd	r14, Z+48	; 0x30
    5cfe:	f1 a8       	ldd	r15, Z+49	; 0x31
    5d00:	4c 14       	cp	r4, r12
    5d02:	5d 04       	cpc	r5, r13
    5d04:	6e 04       	cpc	r6, r14
    5d06:	7f 04       	cpc	r7, r15
    5d08:	01 f1       	breq	.+64     	; 0x5d4a <f_close+0x10c>
    5d0a:	84 81       	ldd	r24, Z+4	; 0x04
    5d0c:	15 01       	movw	r2, r10
    5d0e:	f2 e3       	ldi	r31, 0x32	; 50
    5d10:	2f 0e       	add	r2, r31
    5d12:	31 1c       	adc	r3, r1
    5d14:	81 11       	cpse	r24, r1
    5d16:	46 c0       	rjmp	.+140    	; 0x5da4 <f_close+0x166>
    5d18:	01 e0       	ldi	r16, 0x01	; 1
    5d1a:	10 e0       	ldi	r17, 0x00	; 0
    5d1c:	a3 01       	movw	r20, r6
    5d1e:	92 01       	movw	r18, r4
    5d20:	b1 01       	movw	r22, r2
    5d22:	f5 01       	movw	r30, r10
    5d24:	81 81       	ldd	r24, Z+1	; 0x01
    5d26:	13 d4       	rcall	.+2086   	; 0x654e <disk_read>
    5d28:	88 23       	and	r24, r24
    5d2a:	51 f0       	breq	.+20     	; 0x5d40 <f_close+0x102>
    5d2c:	8f ef       	ldi	r24, 0xFF	; 255
    5d2e:	9f ef       	ldi	r25, 0xFF	; 255
    5d30:	dc 01       	movw	r26, r24
    5d32:	f5 01       	movw	r30, r10
    5d34:	86 a7       	std	Z+46, r24	; 0x2e
    5d36:	97 a7       	std	Z+47, r25	; 0x2f
    5d38:	a0 ab       	std	Z+48, r26	; 0x30
    5d3a:	b1 ab       	std	Z+49, r27	; 0x31
    5d3c:	81 e0       	ldi	r24, 0x01	; 1
    5d3e:	9c cf       	rjmp	.-200    	; 0x5c78 <f_close+0x3a>
    5d40:	f5 01       	movw	r30, r10
    5d42:	46 a6       	std	Z+46, r4	; 0x2e
    5d44:	57 a6       	std	Z+47, r5	; 0x2f
    5d46:	60 aa       	std	Z+48, r6	; 0x30
    5d48:	71 aa       	std	Z+49, r7	; 0x31
    5d4a:	ee 8d       	ldd	r30, Y+30	; 0x1e
    5d4c:	ff 8d       	ldd	r31, Y+31	; 0x1f
    5d4e:	83 85       	ldd	r24, Z+11	; 0x0b
    5d50:	80 62       	ori	r24, 0x20	; 32
    5d52:	83 87       	std	Z+11, r24	; 0x0b
    5d54:	8a 85       	ldd	r24, Y+10	; 0x0a
    5d56:	9b 85       	ldd	r25, Y+11	; 0x0b
    5d58:	ac 85       	ldd	r26, Y+12	; 0x0c
    5d5a:	bd 85       	ldd	r27, Y+13	; 0x0d
    5d5c:	84 8f       	std	Z+28, r24	; 0x1c
    5d5e:	95 8f       	std	Z+29, r25	; 0x1d
    5d60:	a6 8f       	std	Z+30, r26	; 0x1e
    5d62:	b7 8f       	std	Z+31, r27	; 0x1f
    5d64:	8e 85       	ldd	r24, Y+14	; 0x0e
    5d66:	9f 85       	ldd	r25, Y+15	; 0x0f
    5d68:	a8 89       	ldd	r26, Y+16	; 0x10
    5d6a:	b9 89       	ldd	r27, Y+17	; 0x11
    5d6c:	82 8f       	std	Z+26, r24	; 0x1a
    5d6e:	93 8f       	std	Z+27, r25	; 0x1b
    5d70:	a4 8b       	std	Z+20, r26	; 0x14
    5d72:	b5 8b       	std	Z+21, r27	; 0x15
    5d74:	80 e0       	ldi	r24, 0x00	; 0
    5d76:	90 e0       	ldi	r25, 0x00	; 0
    5d78:	af e4       	ldi	r26, 0x4F	; 79
    5d7a:	b5 e4       	ldi	r27, 0x45	; 69
    5d7c:	86 8b       	std	Z+22, r24	; 0x16
    5d7e:	97 8b       	std	Z+23, r25	; 0x17
    5d80:	a0 8f       	std	Z+24, r26	; 0x18
    5d82:	b1 8f       	std	Z+25, r27	; 0x19
    5d84:	12 8a       	std	Z+18, r1	; 0x12
    5d86:	13 8a       	std	Z+19, r1	; 0x13
    5d88:	8c 81       	ldd	r24, Y+4	; 0x04
    5d8a:	8f 7d       	andi	r24, 0xDF	; 223
    5d8c:	8c 83       	std	Y+4, r24	; 0x04
    5d8e:	e8 81       	ld	r30, Y
    5d90:	f9 81       	ldd	r31, Y+1	; 0x01
    5d92:	81 e0       	ldi	r24, 0x01	; 1
    5d94:	84 83       	std	Z+4, r24	; 0x04
    5d96:	88 81       	ld	r24, Y
    5d98:	99 81       	ldd	r25, Y+1	; 0x01
    5d9a:	0e 94 cf 0a 	call	0x159e	; 0x159e <sync_fs>
    5d9e:	81 11       	cpse	r24, r1
    5da0:	6b cf       	rjmp	.-298    	; 0x5c78 <f_close+0x3a>
    5da2:	8d cf       	rjmp	.-230    	; 0x5cbe <f_close+0x80>
    5da4:	01 e0       	ldi	r16, 0x01	; 1
    5da6:	10 e0       	ldi	r17, 0x00	; 0
    5da8:	a7 01       	movw	r20, r14
    5daa:	96 01       	movw	r18, r12
    5dac:	b1 01       	movw	r22, r2
    5dae:	f5 01       	movw	r30, r10
    5db0:	81 81       	ldd	r24, Z+1	; 0x01
    5db2:	4c d4       	rcall	.+2200   	; 0x664c <disk_write>
    5db4:	81 11       	cpse	r24, r1
    5db6:	c2 cf       	rjmp	.-124    	; 0x5d3c <f_close+0xfe>
    5db8:	f5 01       	movw	r30, r10
    5dba:	14 82       	std	Z+4, r1	; 0x04
    5dbc:	82 8d       	ldd	r24, Z+26	; 0x1a
    5dbe:	93 8d       	ldd	r25, Z+27	; 0x1b
    5dc0:	a4 8d       	ldd	r26, Z+28	; 0x1c
    5dc2:	b5 8d       	ldd	r27, Z+29	; 0x1d
    5dc4:	42 a1       	ldd	r20, Z+34	; 0x22
    5dc6:	53 a1       	ldd	r21, Z+35	; 0x23
    5dc8:	64 a1       	ldd	r22, Z+36	; 0x24
    5dca:	75 a1       	ldd	r23, Z+37	; 0x25
    5dcc:	97 01       	movw	r18, r14
    5dce:	86 01       	movw	r16, r12
    5dd0:	04 1b       	sub	r16, r20
    5dd2:	15 0b       	sbc	r17, r21
    5dd4:	26 0b       	sbc	r18, r22
    5dd6:	37 0b       	sbc	r19, r23
    5dd8:	08 17       	cp	r16, r24
    5dda:	19 07       	cpc	r17, r25
    5ddc:	2a 07       	cpc	r18, r26
    5dde:	3b 07       	cpc	r19, r27
    5de0:	08 f0       	brcs	.+2      	; 0x5de4 <f_close+0x1a6>
    5de2:	9a cf       	rjmp	.-204    	; 0x5d18 <f_close+0xda>
    5de4:	83 80       	ldd	r8, Z+3	; 0x03
    5de6:	91 2c       	mov	r9, r1
    5de8:	12 e0       	ldi	r17, 0x02	; 2
    5dea:	81 16       	cp	r8, r17
    5dec:	91 04       	cpc	r9, r1
    5dee:	30 f4       	brcc	.+12     	; 0x5dfc <f_close+0x1be>
    5df0:	93 cf       	rjmp	.-218    	; 0x5d18 <f_close+0xda>
    5df2:	f5 01       	movw	r30, r10
    5df4:	82 8d       	ldd	r24, Z+26	; 0x1a
    5df6:	93 8d       	ldd	r25, Z+27	; 0x1b
    5df8:	a4 8d       	ldd	r26, Z+28	; 0x1c
    5dfa:	b5 8d       	ldd	r27, Z+29	; 0x1d
    5dfc:	c8 0e       	add	r12, r24
    5dfe:	d9 1e       	adc	r13, r25
    5e00:	ea 1e       	adc	r14, r26
    5e02:	fb 1e       	adc	r15, r27
    5e04:	01 e0       	ldi	r16, 0x01	; 1
    5e06:	10 e0       	ldi	r17, 0x00	; 0
    5e08:	a7 01       	movw	r20, r14
    5e0a:	96 01       	movw	r18, r12
    5e0c:	b1 01       	movw	r22, r2
    5e0e:	f5 01       	movw	r30, r10
    5e10:	81 81       	ldd	r24, Z+1	; 0x01
    5e12:	1c d4       	rcall	.+2104   	; 0x664c <disk_write>
    5e14:	f1 e0       	ldi	r31, 0x01	; 1
    5e16:	8f 1a       	sub	r8, r31
    5e18:	91 08       	sbc	r9, r1
    5e1a:	01 e0       	ldi	r16, 0x01	; 1
    5e1c:	80 16       	cp	r8, r16
    5e1e:	91 04       	cpc	r9, r1
    5e20:	41 f7       	brne	.-48     	; 0x5df2 <f_close+0x1b4>
    5e22:	7a cf       	rjmp	.-268    	; 0x5d18 <f_close+0xda>

00005e24 <f_lseek>:

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
    5e24:	2f 92       	push	r2
    5e26:	3f 92       	push	r3
    5e28:	4f 92       	push	r4
    5e2a:	5f 92       	push	r5
    5e2c:	6f 92       	push	r6
    5e2e:	7f 92       	push	r7
    5e30:	8f 92       	push	r8
    5e32:	9f 92       	push	r9
    5e34:	af 92       	push	r10
    5e36:	bf 92       	push	r11
    5e38:	cf 92       	push	r12
    5e3a:	df 92       	push	r13
    5e3c:	ef 92       	push	r14
    5e3e:	ff 92       	push	r15
    5e40:	0f 93       	push	r16
    5e42:	1f 93       	push	r17
    5e44:	cf 93       	push	r28
    5e46:	df 93       	push	r29
    5e48:	00 d0       	rcall	.+0      	; 0x5e4a <f_lseek+0x26>
    5e4a:	00 d0       	rcall	.+0      	; 0x5e4c <f_lseek+0x28>
    5e4c:	cd b7       	in	r28, 0x3d	; 61
    5e4e:	de b7       	in	r29, 0x3e	; 62
    5e50:	1c 01       	movw	r2, r24
    5e52:	6a 01       	movw	r12, r20
    5e54:	7b 01       	movw	r14, r22
)
{
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
    5e56:	00 97       	sbiw	r24, 0x00	; 0
    5e58:	49 f0       	breq	.+18     	; 0x5e6c <f_lseek+0x48>
    5e5a:	dc 01       	movw	r26, r24
    5e5c:	ed 91       	ld	r30, X+
    5e5e:	fc 91       	ld	r31, X
    5e60:	11 97       	sbiw	r26, 0x01	; 1
    5e62:	30 97       	sbiw	r30, 0x00	; 0
    5e64:	19 f0       	breq	.+6      	; 0x5e6c <f_lseek+0x48>
    5e66:	80 81       	ld	r24, Z
    5e68:	81 11       	cpse	r24, r1
    5e6a:	17 c0       	rjmp	.+46     	; 0x5e9a <f_lseek+0x76>
		return FR_INVALID_OBJECT;
    5e6c:	89 e0       	ldi	r24, 0x09	; 9
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
}
    5e6e:	24 96       	adiw	r28, 0x04	; 4
    5e70:	cd bf       	out	0x3d, r28	; 61
    5e72:	de bf       	out	0x3e, r29	; 62
    5e74:	df 91       	pop	r29
    5e76:	cf 91       	pop	r28
    5e78:	1f 91       	pop	r17
    5e7a:	0f 91       	pop	r16
    5e7c:	ff 90       	pop	r15
    5e7e:	ef 90       	pop	r14
    5e80:	df 90       	pop	r13
    5e82:	cf 90       	pop	r12
    5e84:	bf 90       	pop	r11
    5e86:	af 90       	pop	r10
    5e88:	9f 90       	pop	r9
    5e8a:	8f 90       	pop	r8
    5e8c:	7f 90       	pop	r7
    5e8e:	6f 90       	pop	r6
    5e90:	5f 90       	pop	r5
    5e92:	4f 90       	pop	r4
    5e94:	3f 90       	pop	r3
    5e96:	2f 90       	pop	r2
    5e98:	08 95       	ret
)
{
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
    5e9a:	26 81       	ldd	r18, Z+6	; 0x06
    5e9c:	37 81       	ldd	r19, Z+7	; 0x07
    5e9e:	12 96       	adiw	r26, 0x02	; 2
    5ea0:	8d 91       	ld	r24, X+
    5ea2:	9c 91       	ld	r25, X
    5ea4:	13 97       	sbiw	r26, 0x03	; 3
    5ea6:	28 17       	cp	r18, r24
    5ea8:	39 07       	cpc	r19, r25
    5eaa:	01 f7       	brne	.-64     	; 0x5e6c <f_lseek+0x48>
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */

	if (disk_status(fil->fs->drv) & STA_NOINIT)
    5eac:	81 81       	ldd	r24, Z+1	; 0x01
    5eae:	48 d3       	rcall	.+1680   	; 0x6540 <disk_status>
    5eb0:	80 ff       	sbrs	r24, 0
    5eb2:	02 c0       	rjmp	.+4      	; 0x5eb8 <f_lseek+0x94>
		return FR_NOT_READY;
    5eb4:	83 e0       	ldi	r24, 0x03	; 3
    5eb6:	db cf       	rjmp	.-74     	; 0x5e6e <f_lseek+0x4a>
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->err)						/* Check error */
    5eb8:	d1 01       	movw	r26, r2
    5eba:	15 96       	adiw	r26, 0x05	; 5
    5ebc:	8c 91       	ld	r24, X
    5ebe:	81 11       	cpse	r24, r1
    5ec0:	d6 cf       	rjmp	.-84     	; 0x5e6e <f_lseek+0x4a>

	/* Normal Seek */
	{
		DWORD clst, bcs, nsect, ifptr;

		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
    5ec2:	f1 01       	movw	r30, r2
    5ec4:	82 85       	ldd	r24, Z+10	; 0x0a
    5ec6:	93 85       	ldd	r25, Z+11	; 0x0b
    5ec8:	a4 85       	ldd	r26, Z+12	; 0x0c
    5eca:	b5 85       	ldd	r27, Z+13	; 0x0d
    5ecc:	8c 15       	cp	r24, r12
    5ece:	9d 05       	cpc	r25, r13
    5ed0:	ae 05       	cpc	r26, r14
    5ed2:	bf 05       	cpc	r27, r15
    5ed4:	28 f4       	brcc	.+10     	; 0x5ee0 <f_lseek+0xbc>
#if !_FS_READONLY
			 && !(fp->flag & FA_WRITE)
    5ed6:	24 81       	ldd	r18, Z+4	; 0x04
    5ed8:	21 fd       	sbrc	r18, 1
    5eda:	02 c0       	rjmp	.+4      	; 0x5ee0 <f_lseek+0xbc>
    5edc:	6c 01       	movw	r12, r24
    5ede:	7d 01       	movw	r14, r26
#endif
			) ofs = fp->fsize;

		ifptr = fp->fptr;
    5ee0:	d1 01       	movw	r26, r2
    5ee2:	16 96       	adiw	r26, 0x06	; 6
    5ee4:	4d 90       	ld	r4, X+
    5ee6:	5d 90       	ld	r5, X+
    5ee8:	6d 90       	ld	r6, X+
    5eea:	7c 90       	ld	r7, X
    5eec:	19 97       	sbiw	r26, 0x09	; 9
		fp->fptr = nsect = 0;
    5eee:	f1 01       	movw	r30, r2
    5ef0:	16 82       	std	Z+6, r1	; 0x06
    5ef2:	17 82       	std	Z+7, r1	; 0x07
    5ef4:	10 86       	std	Z+8, r1	; 0x08
    5ef6:	11 86       	std	Z+9, r1	; 0x09
		if (ofs) {
    5ef8:	c1 14       	cp	r12, r1
    5efa:	d1 04       	cpc	r13, r1
    5efc:	e1 04       	cpc	r14, r1
    5efe:	f1 04       	cpc	r15, r1
    5f00:	09 f4       	brne	.+2      	; 0x5f04 <f_lseek+0xe0>
    5f02:	8a c0       	rjmp	.+276    	; 0x6018 <f_lseek+0x1f4>
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
    5f04:	00 81       	ld	r16, Z
    5f06:	11 81       	ldd	r17, Z+1	; 0x01
    5f08:	d8 01       	movw	r26, r16
    5f0a:	12 96       	adiw	r26, 0x02	; 2
    5f0c:	8c 90       	ld	r8, X
    5f0e:	91 2c       	mov	r9, r1
    5f10:	a1 2c       	mov	r10, r1
    5f12:	b1 2c       	mov	r11, r1
    5f14:	69 e0       	ldi	r22, 0x09	; 9
    5f16:	88 0c       	add	r8, r8
    5f18:	99 1c       	adc	r9, r9
    5f1a:	aa 1c       	adc	r10, r10
    5f1c:	bb 1c       	adc	r11, r11
    5f1e:	6a 95       	dec	r22
    5f20:	d1 f7       	brne	.-12     	; 0x5f16 <f_lseek+0xf2>
			if (ifptr > 0 &&
    5f22:	41 14       	cp	r4, r1
    5f24:	51 04       	cpc	r5, r1
    5f26:	61 04       	cpc	r6, r1
    5f28:	71 04       	cpc	r7, r1
    5f2a:	09 f4       	brne	.+2      	; 0x5f2e <f_lseek+0x10a>
    5f2c:	77 c0       	rjmp	.+238    	; 0x601c <f_lseek+0x1f8>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    5f2e:	b1 e0       	ldi	r27, 0x01	; 1
    5f30:	4b 1a       	sub	r4, r27
    5f32:	51 08       	sbc	r5, r1
    5f34:	61 08       	sbc	r6, r1
    5f36:	71 08       	sbc	r7, r1
    5f38:	c7 01       	movw	r24, r14
    5f3a:	b6 01       	movw	r22, r12
    5f3c:	61 50       	subi	r22, 0x01	; 1
    5f3e:	71 09       	sbc	r23, r1
    5f40:	81 09       	sbc	r24, r1
    5f42:	91 09       	sbc	r25, r1
    5f44:	a5 01       	movw	r20, r10
    5f46:	94 01       	movw	r18, r8
    5f48:	0e 94 53 3c 	call	0x78a6	; 0x78a6 <__udivmodsi4>
    5f4c:	29 83       	std	Y+1, r18	; 0x01
    5f4e:	3a 83       	std	Y+2, r19	; 0x02
    5f50:	4b 83       	std	Y+3, r20	; 0x03
    5f52:	5c 83       	std	Y+4, r21	; 0x04
    5f54:	c3 01       	movw	r24, r6
    5f56:	b2 01       	movw	r22, r4
    5f58:	a5 01       	movw	r20, r10
    5f5a:	94 01       	movw	r18, r8
    5f5c:	0e 94 53 3c 	call	0x78a6	; 0x78a6 <__udivmodsi4>

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
		if (ofs) {
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
			if (ifptr > 0 &&
    5f60:	89 81       	ldd	r24, Y+1	; 0x01
    5f62:	9a 81       	ldd	r25, Y+2	; 0x02
    5f64:	ab 81       	ldd	r26, Y+3	; 0x03
    5f66:	bc 81       	ldd	r27, Y+4	; 0x04
    5f68:	82 17       	cp	r24, r18
    5f6a:	93 07       	cpc	r25, r19
    5f6c:	a4 07       	cpc	r26, r20
    5f6e:	b5 07       	cpc	r27, r21
    5f70:	08 f4       	brcc	.+2      	; 0x5f74 <f_lseek+0x150>
    5f72:	54 c0       	rjmp	.+168    	; 0x601c <f_lseek+0x1f8>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    5f74:	88 27       	eor	r24, r24
    5f76:	99 27       	eor	r25, r25
    5f78:	dc 01       	movw	r26, r24
    5f7a:	88 19       	sub	r24, r8
    5f7c:	99 09       	sbc	r25, r9
    5f7e:	aa 09       	sbc	r26, r10
    5f80:	bb 09       	sbc	r27, r11
    5f82:	84 21       	and	r24, r4
    5f84:	95 21       	and	r25, r5
    5f86:	a6 21       	and	r26, r6
    5f88:	b7 21       	and	r27, r7
    5f8a:	f1 01       	movw	r30, r2
    5f8c:	86 83       	std	Z+6, r24	; 0x06
    5f8e:	97 83       	std	Z+7, r25	; 0x07
    5f90:	a0 87       	std	Z+8, r26	; 0x08
    5f92:	b1 87       	std	Z+9, r27	; 0x09
				ofs -= fp->fptr;
    5f94:	c8 1a       	sub	r12, r24
    5f96:	d9 0a       	sbc	r13, r25
    5f98:	ea 0a       	sbc	r14, r26
    5f9a:	fb 0a       	sbc	r15, r27
				clst = fp->clust;
    5f9c:	62 89       	ldd	r22, Z+18	; 0x12
    5f9e:	73 89       	ldd	r23, Z+19	; 0x13
    5fa0:	84 89       	ldd	r24, Z+20	; 0x14
    5fa2:	95 89       	ldd	r25, Z+21	; 0x15
					fp->sclust = clst;
				}
#endif
				fp->clust = clst;
			}
			if (clst != 0) {
    5fa4:	61 15       	cp	r22, r1
    5fa6:	71 05       	cpc	r23, r1
    5fa8:	81 05       	cpc	r24, r1
    5faa:	91 05       	cpc	r25, r1
    5fac:	09 f0       	breq	.+2      	; 0x5fb0 <f_lseek+0x18c>
    5fae:	4b c0       	rjmp	.+150    	; 0x6046 <f_lseek+0x222>
    5fb0:	f1 01       	movw	r30, r2
    5fb2:	06 81       	ldd	r16, Z+6	; 0x06
    5fb4:	17 81       	ldd	r17, Z+7	; 0x07
    5fb6:	20 85       	ldd	r18, Z+8	; 0x08
    5fb8:	31 85       	ldd	r19, Z+9	; 0x09
			 && !(fp->flag & FA_WRITE)
#endif
			) ofs = fp->fsize;

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
    5fba:	c1 2c       	mov	r12, r1
    5fbc:	d1 2c       	mov	r13, r1
    5fbe:	76 01       	movw	r14, r12
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
					nsect += ofs / SS(fp->fs);
				}
			}
		}
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
    5fc0:	d9 01       	movw	r26, r18
    5fc2:	c8 01       	movw	r24, r16
    5fc4:	91 70       	andi	r25, 0x01	; 1
    5fc6:	aa 27       	eor	r26, r26
    5fc8:	bb 27       	eor	r27, r27
    5fca:	f1 01       	movw	r30, r2
    5fcc:	89 2b       	or	r24, r25
    5fce:	8a 2b       	or	r24, r26
    5fd0:	8b 2b       	or	r24, r27
    5fd2:	09 f4       	brne	.+2      	; 0x5fd6 <f_lseek+0x1b2>
    5fd4:	0a c1       	rjmp	.+532    	; 0x61ea <f_lseek+0x3c6>
    5fd6:	86 89       	ldd	r24, Z+22	; 0x16
    5fd8:	97 89       	ldd	r25, Z+23	; 0x17
    5fda:	a0 8d       	ldd	r26, Z+24	; 0x18
    5fdc:	b1 8d       	ldd	r27, Z+25	; 0x19
    5fde:	8c 15       	cp	r24, r12
    5fe0:	9d 05       	cpc	r25, r13
    5fe2:	ae 05       	cpc	r26, r14
    5fe4:	bf 05       	cpc	r27, r15
    5fe6:	09 f4       	brne	.+2      	; 0x5fea <f_lseek+0x1c6>
    5fe8:	00 c1       	rjmp	.+512    	; 0x61ea <f_lseek+0x3c6>
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
#endif
			fp->dsect = nsect;
    5fea:	c6 8a       	std	Z+22, r12	; 0x16
    5fec:	d7 8a       	std	Z+23, r13	; 0x17
    5fee:	e0 8e       	std	Z+24, r14	; 0x18
    5ff0:	f1 8e       	std	Z+25, r15	; 0x19
    5ff2:	82 85       	ldd	r24, Z+10	; 0x0a
    5ff4:	93 85       	ldd	r25, Z+11	; 0x0b
    5ff6:	a4 85       	ldd	r26, Z+12	; 0x0c
    5ff8:	b5 85       	ldd	r27, Z+13	; 0x0d
		}
#if !_FS_READONLY
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
    5ffa:	80 17       	cp	r24, r16
    5ffc:	91 07       	cpc	r25, r17
    5ffe:	a2 07       	cpc	r26, r18
    6000:	b3 07       	cpc	r27, r19
    6002:	50 f4       	brcc	.+20     	; 0x6018 <f_lseek+0x1f4>
			fp->fsize = fp->fptr;
    6004:	f1 01       	movw	r30, r2
    6006:	02 87       	std	Z+10, r16	; 0x0a
    6008:	13 87       	std	Z+11, r17	; 0x0b
    600a:	24 87       	std	Z+12, r18	; 0x0c
    600c:	35 87       	std	Z+13, r19	; 0x0d
			fp->flag |= FA__WRITTEN;
    600e:	84 81       	ldd	r24, Z+4	; 0x04
    6010:	80 62       	ori	r24, 0x20	; 32
    6012:	84 83       	std	Z+4, r24	; 0x04
    6014:	80 e0       	ldi	r24, 0x00	; 0
    6016:	2b cf       	rjmp	.-426    	; 0x5e6e <f_lseek+0x4a>
    6018:	80 e0       	ldi	r24, 0x00	; 0
    601a:	29 cf       	rjmp	.-430    	; 0x5e6e <f_lseek+0x4a>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
				ofs -= fp->fptr;
				clst = fp->clust;
			} else {									/* When seek to back cluster, */
				clst = fp->sclust;						/* start from the first cluster */
    601c:	d1 01       	movw	r26, r2
    601e:	1e 96       	adiw	r26, 0x0e	; 14
    6020:	6d 91       	ld	r22, X+
    6022:	7d 91       	ld	r23, X+
    6024:	8d 91       	ld	r24, X+
    6026:	9c 91       	ld	r25, X
    6028:	51 97       	sbiw	r26, 0x11	; 17
#if !_FS_READONLY
				if (clst == 0) {						/* If no cluster chain, create a new chain */
    602a:	61 15       	cp	r22, r1
    602c:	71 05       	cpc	r23, r1
    602e:	81 05       	cpc	r24, r1
    6030:	91 05       	cpc	r25, r1
    6032:	09 f4       	brne	.+2      	; 0x6036 <f_lseek+0x212>
    6034:	c3 c0       	rjmp	.+390    	; 0x61bc <f_lseek+0x398>
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
					fp->sclust = clst;
				}
#endif
				fp->clust = clst;
    6036:	d1 01       	movw	r26, r2
    6038:	52 96       	adiw	r26, 0x12	; 18
    603a:	6d 93       	st	X+, r22
    603c:	7d 93       	st	X+, r23
    603e:	8d 93       	st	X+, r24
    6040:	9c 93       	st	X, r25
    6042:	55 97       	sbiw	r26, 0x15	; 21
    6044:	af cf       	rjmp	.-162    	; 0x5fa4 <f_lseek+0x180>
    6046:	d1 01       	movw	r26, r2
			}
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
    6048:	8c 14       	cp	r8, r12
    604a:	9d 04       	cpc	r9, r13
    604c:	ae 04       	cpc	r10, r14
    604e:	bf 04       	cpc	r11, r15
    6050:	08 f0       	brcs	.+2      	; 0x6054 <f_lseek+0x230>
    6052:	ed c0       	rjmp	.+474    	; 0x622e <f_lseek+0x40a>
    6054:	ed 91       	ld	r30, X+
    6056:	fc 91       	ld	r31, X
    6058:	ab 01       	movw	r20, r22
    605a:	bc 01       	movw	r22, r24
#if !_FS_READONLY
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
    605c:	d1 01       	movw	r26, r2
    605e:	14 96       	adiw	r26, 0x04	; 4
    6060:	2c 91       	ld	r18, X
    6062:	21 fd       	sbrc	r18, 1
    6064:	14 c0       	rjmp	.+40     	; 0x608e <f_lseek+0x26a>
	UINT wc, bc;
	BYTE *p;
	DWORD val;


	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
    6066:	42 30       	cpi	r20, 0x02	; 2
    6068:	51 05       	cpc	r21, r1
    606a:	61 05       	cpc	r22, r1
    606c:	71 05       	cpc	r23, r1
    606e:	50 f0       	brcs	.+20     	; 0x6084 <f_lseek+0x260>
    6070:	06 89       	ldd	r16, Z+22	; 0x16
    6072:	17 89       	ldd	r17, Z+23	; 0x17
    6074:	20 8d       	ldd	r18, Z+24	; 0x18
    6076:	31 8d       	ldd	r19, Z+25	; 0x19
    6078:	40 17       	cp	r20, r16
    607a:	51 07       	cpc	r21, r17
    607c:	62 07       	cpc	r22, r18
    607e:	73 07       	cpc	r23, r19
    6080:	08 f4       	brcc	.+2      	; 0x6084 <f_lseek+0x260>
    6082:	96 c0       	rjmp	.+300    	; 0x61b0 <f_lseek+0x38c>
					ofs -= bcs;
				}
				fp->fptr += ofs;
				if (ofs % SS(fp->fs)) {
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
    6084:	82 e0       	ldi	r24, 0x02	; 2
    6086:	d1 01       	movw	r26, r2
    6088:	15 96       	adiw	r26, 0x05	; 5
    608a:	8c 93       	st	X, r24
    608c:	f0 ce       	rjmp	.-544    	; 0x5e6e <f_lseek+0x4a>
			}
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
#if !_FS_READONLY
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
    608e:	cf 01       	movw	r24, r30
    6090:	0e 94 a2 12 	call	0x2544	; 0x2544 <create_chain>
    6094:	ab 01       	movw	r20, r22
    6096:	bc 01       	movw	r22, r24
						if (clst == 0) {				/* When disk gets full, clip file size */
    6098:	41 15       	cp	r20, r1
    609a:	51 05       	cpc	r21, r1
    609c:	61 05       	cpc	r22, r1
    609e:	71 05       	cpc	r23, r1
    60a0:	09 f4       	brne	.+2      	; 0x60a4 <f_lseek+0x280>
    60a2:	b6 c0       	rjmp	.+364    	; 0x6210 <f_lseek+0x3ec>
							ofs = bcs; break;
						}
					} else
#endif
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    60a4:	4f 3f       	cpi	r20, 0xFF	; 255
    60a6:	bf ef       	ldi	r27, 0xFF	; 255
    60a8:	5b 07       	cpc	r21, r27
    60aa:	6b 07       	cpc	r22, r27
    60ac:	7b 07       	cpc	r23, r27
    60ae:	09 f4       	brne	.+2      	; 0x60b2 <f_lseek+0x28e>
    60b0:	a1 c0       	rjmp	.+322    	; 0x61f4 <f_lseek+0x3d0>
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
    60b2:	42 30       	cpi	r20, 0x02	; 2
    60b4:	51 05       	cpc	r21, r1
    60b6:	61 05       	cpc	r22, r1
    60b8:	71 05       	cpc	r23, r1
    60ba:	20 f3       	brcs	.-56     	; 0x6084 <f_lseek+0x260>
    60bc:	d1 01       	movw	r26, r2
    60be:	ed 91       	ld	r30, X+
    60c0:	fc 91       	ld	r31, X
    60c2:	11 97       	sbiw	r26, 0x01	; 1
    60c4:	06 89       	ldd	r16, Z+22	; 0x16
    60c6:	17 89       	ldd	r17, Z+23	; 0x17
    60c8:	20 8d       	ldd	r18, Z+24	; 0x18
    60ca:	31 8d       	ldd	r19, Z+25	; 0x19
    60cc:	40 17       	cp	r20, r16
    60ce:	51 07       	cpc	r21, r17
    60d0:	62 07       	cpc	r22, r18
    60d2:	73 07       	cpc	r23, r19
    60d4:	b8 f6       	brcc	.-82     	; 0x6084 <f_lseek+0x260>
					fp->clust = clst;
    60d6:	52 96       	adiw	r26, 0x12	; 18
    60d8:	4d 93       	st	X+, r20
    60da:	5d 93       	st	X+, r21
    60dc:	6d 93       	st	X+, r22
    60de:	7c 93       	st	X, r23
    60e0:	55 97       	sbiw	r26, 0x15	; 21
					fp->fptr += bcs;
    60e2:	16 96       	adiw	r26, 0x06	; 6
    60e4:	0d 91       	ld	r16, X+
    60e6:	1d 91       	ld	r17, X+
    60e8:	2d 91       	ld	r18, X+
    60ea:	3c 91       	ld	r19, X
    60ec:	19 97       	sbiw	r26, 0x09	; 9
    60ee:	08 0d       	add	r16, r8
    60f0:	19 1d       	adc	r17, r9
    60f2:	2a 1d       	adc	r18, r10
    60f4:	3b 1d       	adc	r19, r11
    60f6:	16 96       	adiw	r26, 0x06	; 6
    60f8:	0d 93       	st	X+, r16
    60fa:	1d 93       	st	X+, r17
    60fc:	2d 93       	st	X+, r18
    60fe:	3c 93       	st	X, r19
    6100:	19 97       	sbiw	r26, 0x09	; 9
					ofs -= bcs;
    6102:	c8 18       	sub	r12, r8
    6104:	d9 08       	sbc	r13, r9
    6106:	ea 08       	sbc	r14, r10
    6108:	fb 08       	sbc	r15, r11
				}
#endif
				fp->clust = clst;
			}
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
    610a:	8c 14       	cp	r8, r12
    610c:	9d 04       	cpc	r9, r13
    610e:	ae 04       	cpc	r10, r14
    6110:	bf 04       	cpc	r11, r15
    6112:	08 f4       	brcc	.+2      	; 0x6116 <f_lseek+0x2f2>
    6114:	a3 cf       	rjmp	.-186    	; 0x605c <f_lseek+0x238>
    6116:	cb 01       	movw	r24, r22
    6118:	ba 01       	movw	r22, r20
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
					fp->clust = clst;
					fp->fptr += bcs;
					ofs -= bcs;
				}
				fp->fptr += ofs;
    611a:	48 01       	movw	r8, r16
    611c:	59 01       	movw	r10, r18
    611e:	8c 0c       	add	r8, r12
    6120:	9d 1c       	adc	r9, r13
    6122:	ae 1c       	adc	r10, r14
    6124:	bf 1c       	adc	r11, r15
    6126:	f1 01       	movw	r30, r2
    6128:	86 82       	std	Z+6, r8	; 0x06
    612a:	97 82       	std	Z+7, r9	; 0x07
    612c:	a0 86       	std	Z+8, r10	; 0x08
    612e:	b1 86       	std	Z+9, r11	; 0x09
				if (ofs % SS(fp->fs)) {
    6130:	97 01       	movw	r18, r14
    6132:	86 01       	movw	r16, r12
    6134:	11 70       	andi	r17, 0x01	; 1
    6136:	22 27       	eor	r18, r18
    6138:	33 27       	eor	r19, r19
    613a:	01 2b       	or	r16, r17
    613c:	02 2b       	or	r16, r18
    613e:	03 2b       	or	r16, r19
    6140:	09 f4       	brne	.+2      	; 0x6144 <f_lseek+0x320>
    6142:	60 c0       	rjmp	.+192    	; 0x6204 <f_lseek+0x3e0>
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
    6144:	01 90       	ld	r0, Z+
    6146:	f0 81       	ld	r31, Z
    6148:	e0 2d       	mov	r30, r0
DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
	FATFS* fs,		/* File system object */
	DWORD clst		/* Cluster# to be converted */
)
{
	clst -= 2;
    614a:	9b 01       	movw	r18, r22
    614c:	ac 01       	movw	r20, r24
    614e:	22 50       	subi	r18, 0x02	; 2
    6150:	31 09       	sbc	r19, r1
    6152:	41 09       	sbc	r20, r1
    6154:	51 09       	sbc	r21, r1
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
    6156:	86 89       	ldd	r24, Z+22	; 0x16
    6158:	97 89       	ldd	r25, Z+23	; 0x17
    615a:	a0 8d       	ldd	r26, Z+24	; 0x18
    615c:	b1 8d       	ldd	r27, Z+25	; 0x19
    615e:	02 97       	sbiw	r24, 0x02	; 2
    6160:	a1 09       	sbc	r26, r1
    6162:	b1 09       	sbc	r27, r1
    6164:	28 17       	cp	r18, r24
    6166:	39 07       	cpc	r19, r25
    6168:	4a 07       	cpc	r20, r26
    616a:	5b 07       	cpc	r21, r27
    616c:	08 f0       	brcs	.+2      	; 0x6170 <f_lseek+0x34c>
    616e:	8a cf       	rjmp	.-236    	; 0x6084 <f_lseek+0x260>
	return clst * fs->csize + fs->database;
    6170:	a2 81       	ldd	r26, Z+2	; 0x02
    6172:	b0 e0       	ldi	r27, 0x00	; 0
    6174:	0e 94 8a 3c 	call	0x7914	; 0x7914 <__muluhisi3>
    6178:	02 a5       	ldd	r16, Z+42	; 0x2a
    617a:	13 a5       	ldd	r17, Z+43	; 0x2b
    617c:	24 a5       	ldd	r18, Z+44	; 0x2c
    617e:	35 a5       	ldd	r19, Z+45	; 0x2d
    6180:	60 0f       	add	r22, r16
    6182:	71 1f       	adc	r23, r17
    6184:	82 1f       	adc	r24, r18
    6186:	93 1f       	adc	r25, r19
					ofs -= bcs;
				}
				fp->fptr += ofs;
				if (ofs % SS(fp->fs)) {
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
    6188:	61 15       	cp	r22, r1
    618a:	71 05       	cpc	r23, r1
    618c:	81 05       	cpc	r24, r1
    618e:	91 05       	cpc	r25, r1
    6190:	09 f4       	brne	.+2      	; 0x6194 <f_lseek+0x370>
    6192:	78 cf       	rjmp	.-272    	; 0x6084 <f_lseek+0x260>
					nsect += ofs / SS(fp->fs);
    6194:	59 e0       	ldi	r21, 0x09	; 9
    6196:	f6 94       	lsr	r15
    6198:	e7 94       	ror	r14
    619a:	d7 94       	ror	r13
    619c:	c7 94       	ror	r12
    619e:	5a 95       	dec	r21
    61a0:	d1 f7       	brne	.-12     	; 0x6196 <f_lseek+0x372>
    61a2:	c6 0e       	add	r12, r22
    61a4:	d7 1e       	adc	r13, r23
    61a6:	e8 1e       	adc	r14, r24
    61a8:	f9 1e       	adc	r15, r25
    61aa:	95 01       	movw	r18, r10
    61ac:	84 01       	movw	r16, r8
    61ae:	08 cf       	rjmp	.-496    	; 0x5fc0 <f_lseek+0x19c>
    61b0:	cf 01       	movw	r24, r30
    61b2:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <get_fat.part.4>
    61b6:	ab 01       	movw	r20, r22
    61b8:	bc 01       	movw	r22, r24
    61ba:	74 cf       	rjmp	.-280    	; 0x60a4 <f_lseek+0x280>
				clst = fp->clust;
			} else {									/* When seek to back cluster, */
				clst = fp->sclust;						/* start from the first cluster */
#if !_FS_READONLY
				if (clst == 0) {						/* If no cluster chain, create a new chain */
					clst = create_chain(fp->fs, 0);
    61bc:	40 e0       	ldi	r20, 0x00	; 0
    61be:	50 e0       	ldi	r21, 0x00	; 0
    61c0:	ba 01       	movw	r22, r20
    61c2:	c8 01       	movw	r24, r16
    61c4:	0e 94 a2 12 	call	0x2544	; 0x2544 <create_chain>
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    61c8:	61 30       	cpi	r22, 0x01	; 1
    61ca:	71 05       	cpc	r23, r1
    61cc:	81 05       	cpc	r24, r1
    61ce:	91 05       	cpc	r25, r1
    61d0:	a9 f0       	breq	.+42     	; 0x61fc <f_lseek+0x3d8>
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    61d2:	6f 3f       	cpi	r22, 0xFF	; 255
    61d4:	ff ef       	ldi	r31, 0xFF	; 255
    61d6:	7f 07       	cpc	r23, r31
    61d8:	8f 07       	cpc	r24, r31
    61da:	9f 07       	cpc	r25, r31
    61dc:	19 f1       	breq	.+70     	; 0x6224 <f_lseek+0x400>
					fp->sclust = clst;
    61de:	f1 01       	movw	r30, r2
    61e0:	66 87       	std	Z+14, r22	; 0x0e
    61e2:	77 87       	std	Z+15, r23	; 0x0f
    61e4:	80 8b       	std	Z+16, r24	; 0x10
    61e6:	91 8b       	std	Z+17, r25	; 0x11
    61e8:	26 cf       	rjmp	.-436    	; 0x6036 <f_lseek+0x212>
    61ea:	82 85       	ldd	r24, Z+10	; 0x0a
    61ec:	93 85       	ldd	r25, Z+11	; 0x0b
    61ee:	a4 85       	ldd	r26, Z+12	; 0x0c
    61f0:	b5 85       	ldd	r27, Z+13	; 0x0d
    61f2:	03 cf       	rjmp	.-506    	; 0x5ffa <f_lseek+0x1d6>
							ofs = bcs; break;
						}
					} else
#endif
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    61f4:	81 e0       	ldi	r24, 0x01	; 1
    61f6:	f1 01       	movw	r30, r2
    61f8:	85 83       	std	Z+5, r24	; 0x05
    61fa:	39 ce       	rjmp	.-910    	; 0x5e6e <f_lseek+0x4a>
			} else {									/* When seek to back cluster, */
				clst = fp->sclust;						/* start from the first cluster */
#if !_FS_READONLY
				if (clst == 0) {						/* If no cluster chain, create a new chain */
					clst = create_chain(fp->fs, 0);
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    61fc:	82 e0       	ldi	r24, 0x02	; 2
    61fe:	f1 01       	movw	r30, r2
    6200:	85 83       	std	Z+5, r24	; 0x05
    6202:	35 ce       	rjmp	.-918    	; 0x5e6e <f_lseek+0x4a>
    6204:	95 01       	movw	r18, r10
    6206:	84 01       	movw	r16, r8
			 && !(fp->flag & FA_WRITE)
#endif
			) ofs = fp->fsize;

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
    6208:	c1 2c       	mov	r12, r1
    620a:	d1 2c       	mov	r13, r1
    620c:	76 01       	movw	r14, r12
    620e:	d8 ce       	rjmp	.-592    	; 0x5fc0 <f_lseek+0x19c>
    6210:	cb 01       	movw	r24, r22
    6212:	ba 01       	movw	r22, r20
    6214:	f1 01       	movw	r30, r2
    6216:	06 81       	ldd	r16, Z+6	; 0x06
    6218:	17 81       	ldd	r17, Z+7	; 0x07
    621a:	20 85       	ldd	r18, Z+8	; 0x08
    621c:	31 85       	ldd	r19, Z+9	; 0x09
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
#if !_FS_READONLY
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
						if (clst == 0) {				/* When disk gets full, clip file size */
    621e:	75 01       	movw	r14, r10
    6220:	64 01       	movw	r12, r8
    6222:	7b cf       	rjmp	.-266    	; 0x611a <f_lseek+0x2f6>
				clst = fp->sclust;						/* start from the first cluster */
#if !_FS_READONLY
				if (clst == 0) {						/* If no cluster chain, create a new chain */
					clst = create_chain(fp->fs, 0);
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    6224:	81 e0       	ldi	r24, 0x01	; 1
    6226:	d1 01       	movw	r26, r2
    6228:	15 96       	adiw	r26, 0x05	; 5
    622a:	8c 93       	st	X, r24
    622c:	20 ce       	rjmp	.-960    	; 0x5e6e <f_lseek+0x4a>
    622e:	16 96       	adiw	r26, 0x06	; 6
    6230:	0d 91       	ld	r16, X+
    6232:	1d 91       	ld	r17, X+
    6234:	2d 91       	ld	r18, X+
    6236:	3c 91       	ld	r19, X
    6238:	19 97       	sbiw	r26, 0x09	; 9
    623a:	6f cf       	rjmp	.-290    	; 0x611a <f_lseek+0x2f6>

0000623c <rcvr_datablock>:
static
int rcvr_datablock (
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count (must be multiple of 4) */
)
{
    623c:	ef 92       	push	r14
    623e:	ff 92       	push	r15
    6240:	0f 93       	push	r16
    6242:	1f 93       	push	r17
    6244:	cf 93       	push	r28
    6246:	df 93       	push	r29
    6248:	7c 01       	movw	r14, r24
    624a:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
    624c:	24 e1       	ldi	r18, 0x14	; 20
    624e:	20 93 da 22 	sts	0x22DA, r18
    6252:	04 c0       	rjmp	.+8      	; 0x625c <rcvr_datablock+0x20>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    6254:	20 91 da 22 	lds	r18, 0x22DA
    6258:	22 23       	and	r18, r18
    625a:	39 f0       	breq	.+14     	; 0x626a <rcvr_datablock+0x2e>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    625c:	8f ef       	ldi	r24, 0xFF	; 255
    625e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    6262:	8f 3f       	cpi	r24, 0xFF	; 255
    6264:	b9 f3       	breq	.-18     	; 0x6254 <rcvr_datablock+0x18>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    6266:	8e 3f       	cpi	r24, 0xFE	; 254
    6268:	49 f0       	breq	.+18     	; 0x627c <rcvr_datablock+0x40>
    626a:	80 e0       	ldi	r24, 0x00	; 0
    626c:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
    626e:	df 91       	pop	r29
    6270:	cf 91       	pop	r28
    6272:	1f 91       	pop	r17
    6274:	0f 91       	pop	r16
    6276:	ff 90       	pop	r15
    6278:	ef 90       	pop	r14
    627a:	08 95       	ret
    627c:	e7 01       	movw	r28, r14
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    627e:	8f ef       	ldi	r24, 0xFF	; 255
    6280:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6284:	88 83       	st	Y, r24
		*p++ = spi_wr_rd(0xff);
    6286:	8f ef       	ldi	r24, 0xFF	; 255
    6288:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    628c:	89 83       	std	Y+1, r24	; 0x01
		
	} while (cnt -= 2);
    628e:	02 50       	subi	r16, 0x02	; 2
    6290:	11 09       	sbc	r17, r1
    6292:	22 96       	adiw	r28, 0x02	; 2
    6294:	01 15       	cp	r16, r1
    6296:	11 05       	cpc	r17, r1
    6298:	91 f7       	brne	.-28     	; 0x627e <rcvr_datablock+0x42>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    629a:	8f ef       	ldi	r24, 0xFF	; 255
    629c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    62a0:	8f ef       	ldi	r24, 0xFF	; 255
    62a2:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    62a6:	81 e0       	ldi	r24, 0x01	; 1
    62a8:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
    62aa:	df 91       	pop	r29
    62ac:	cf 91       	pop	r28
    62ae:	1f 91       	pop	r17
    62b0:	0f 91       	pop	r16
    62b2:	ff 90       	pop	r15
    62b4:	ef 90       	pop	r14
    62b6:	08 95       	ret

000062b8 <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
    62b8:	ef 92       	push	r14
    62ba:	ff 92       	push	r15
    62bc:	0f 93       	push	r16
    62be:	1f 93       	push	r17
    62c0:	cf 93       	push	r28
    62c2:	df 93       	push	r29
    62c4:	c8 2f       	mov	r28, r24
    62c6:	14 2f       	mov	r17, r20
    62c8:	05 2f       	mov	r16, r21
    62ca:	f6 2e       	mov	r15, r22
    62cc:	e7 2e       	mov	r14, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
    62ce:	87 fd       	sbrc	r24, 7
    62d0:	63 c0       	rjmp	.+198    	; 0x6398 <send_cmd+0xe0>
		res = send_cmd(CMD55, 0);
		if (res > 1) return res;
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
    62d2:	cc 30       	cpi	r28, 0x0C	; 12
    62d4:	09 f4       	brne	.+2      	; 0x62d8 <send_cmd+0x20>
    62d6:	4a c0       	rjmp	.+148    	; 0x636c <send_cmd+0xb4>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    62d8:	d0 e1       	ldi	r29, 0x10	; 16
    62da:	d0 93 45 06 	sts	0x0645, r29
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    62de:	8f ef       	ldi	r24, 0xFF	; 255
    62e0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();
    62e4:	d0 93 46 06 	sts	0x0646, r29
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    62e8:	8f ef       	ldi	r24, 0xFF	; 255
    62ea:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    62ee:	82 e3       	ldi	r24, 0x32	; 50
    62f0:	80 93 d9 22 	sts	0x22D9, r24
    62f4:	04 c0       	rjmp	.+8      	; 0x62fe <send_cmd+0x46>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    62f6:	90 91 d9 22 	lds	r25, 0x22D9
    62fa:	99 23       	and	r25, r25
    62fc:	49 f1       	breq	.+82     	; 0x6350 <send_cmd+0x98>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    62fe:	8f ef       	ldi	r24, 0xFF	; 255
    6300:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    6304:	8f 3f       	cpi	r24, 0xFF	; 255
    6306:	b9 f7       	brne	.-18     	; 0x62f6 <send_cmd+0x3e>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6308:	8c 2f       	mov	r24, r28
    630a:	80 64       	ori	r24, 0x40	; 64
    630c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6310:	8e 2d       	mov	r24, r14
    6312:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6316:	8f 2d       	mov	r24, r15
    6318:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    631c:	80 2f       	mov	r24, r16
    631e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6322:	81 2f       	mov	r24, r17
    6324:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
    6328:	c1 11       	cpse	r28, r1
    632a:	3f c0       	rjmp	.+126    	; 0x63aa <send_cmd+0xf2>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    632c:	85 e9       	ldi	r24, 0x95	; 149
    632e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
    6332:	ca e0       	ldi	r28, 0x0A	; 10
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6334:	8f ef       	ldi	r24, 0xFF	; 255
    6336:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);
    633a:	87 ff       	sbrs	r24, 7
    633c:	02 c0       	rjmp	.+4      	; 0x6342 <send_cmd+0x8a>
    633e:	c1 50       	subi	r28, 0x01	; 1
    6340:	c9 f7       	brne	.-14     	; 0x6334 <send_cmd+0x7c>

	return res;			/* Return with the response value */
}
    6342:	df 91       	pop	r29
    6344:	cf 91       	pop	r28
    6346:	1f 91       	pop	r17
    6348:	0f 91       	pop	r16
    634a:	ff 90       	pop	r15
    634c:	ef 90       	pop	r14
    634e:	08 95       	ret
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    6350:	80 e1       	ldi	r24, 0x10	; 16
    6352:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6356:	8f ef       	ldi	r24, 0xFF	; 255
    6358:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
    635c:	8f ef       	ldi	r24, 0xFF	; 255
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
    635e:	df 91       	pop	r29
    6360:	cf 91       	pop	r28
    6362:	1f 91       	pop	r17
    6364:	0f 91       	pop	r16
    6366:	ff 90       	pop	r15
    6368:	ef 90       	pop	r14
    636a:	08 95       	ret
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    636c:	8c e4       	ldi	r24, 0x4C	; 76
    636e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6372:	8e 2d       	mov	r24, r14
    6374:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6378:	8f 2d       	mov	r24, r15
    637a:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    637e:	80 2f       	mov	r24, r16
    6380:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6384:	81 2f       	mov	r24, r17
    6386:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    638a:	81 e0       	ldi	r24, 0x01	; 1
    638c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6390:	8f ef       	ldi	r24, 0xFF	; 255
    6392:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6396:	cd cf       	rjmp	.-102    	; 0x6332 <send_cmd+0x7a>
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
		res = send_cmd(CMD55, 0);
    6398:	40 e0       	ldi	r20, 0x00	; 0
    639a:	50 e0       	ldi	r21, 0x00	; 0
    639c:	ba 01       	movw	r22, r20
    639e:	87 e3       	ldi	r24, 0x37	; 55
    63a0:	8b df       	rcall	.-234    	; 0x62b8 <send_cmd>
		if (res > 1) return res;
    63a2:	82 30       	cpi	r24, 0x02	; 2
    63a4:	70 f6       	brcc	.-100    	; 0x6342 <send_cmd+0x8a>
{
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
    63a6:	cf 77       	andi	r28, 0x7F	; 127
    63a8:	94 cf       	rjmp	.-216    	; 0x62d2 <send_cmd+0x1a>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
    63aa:	c8 30       	cpi	r28, 0x08	; 8
    63ac:	21 f4       	brne	.+8      	; 0x63b6 <send_cmd+0xfe>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    63ae:	87 e8       	ldi	r24, 0x87	; 135
    63b0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    63b4:	be cf       	rjmp	.-132    	; 0x6332 <send_cmd+0x7a>
    63b6:	81 e0       	ldi	r24, 0x01	; 1
    63b8:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    63bc:	ba cf       	rjmp	.-140    	; 0x6332 <send_cmd+0x7a>

000063be <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
    63be:	ef 92       	push	r14
    63c0:	ff 92       	push	r15
    63c2:	0f 93       	push	r16
    63c4:	1f 93       	push	r17
    63c6:	cf 93       	push	r28
    63c8:	df 93       	push	r29
    63ca:	00 d0       	rcall	.+0      	; 0x63cc <disk_initialize+0xe>
    63cc:	00 d0       	rcall	.+0      	; 0x63ce <disk_initialize+0x10>
    63ce:	cd b7       	in	r28, 0x3d	; 61
    63d0:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
    63d2:	88 23       	and	r24, r24
    63d4:	59 f0       	breq	.+22     	; 0x63ec <disk_initialize+0x2e>
    63d6:	81 e0       	ldi	r24, 0x01	; 1
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
    63d8:	24 96       	adiw	r28, 0x04	; 4
    63da:	cd bf       	out	0x3d, r28	; 61
    63dc:	de bf       	out	0x3e, r29	; 62
    63de:	df 91       	pop	r29
    63e0:	cf 91       	pop	r28
    63e2:	1f 91       	pop	r17
    63e4:	0f 91       	pop	r16
    63e6:	ff 90       	pop	r15
    63e8:	ef 90       	pop	r14
    63ea:	08 95       	ret

static
void power_off (void)
{
	//TCC1.CTRLA = TC_CLKSEL_OFF_gc;
	spi_off();
    63ec:	0e 94 c6 08 	call	0x118c	; 0x118c <spi_off>
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
    63f0:	80 91 04 20 	lds	r24, 0x2004
    63f4:	81 ff       	sbrs	r24, 1
    63f6:	03 c0       	rjmp	.+6      	; 0x63fe <disk_initialize+0x40>
		FCLK_FAST();
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
    63f8:	80 91 04 20 	lds	r24, 0x2004
    63fc:	ed cf       	rjmp	.-38     	; 0x63d8 <disk_initialize+0x1a>
	//Used to check for a timeout, not needed
	//TCC1.CTRLA = TC_CLKSEL_DIV1_gc;
	//TCC1.PER = F_CPU/DIVIDER;
	//TCC1.INTCTRLA = TC_OVFINTLVL_LO_gc;
	
	spi_on();
    63fe:	0e 94 bc 08 	call	0x1178	; 0x1178 <spi_on>

	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	FCLK_SLOW();
    6402:	82 ed       	ldi	r24, 0xD2	; 210
    6404:	80 93 c0 08 	sts	0x08C0, r24
    6408:	1a e0       	ldi	r17, 0x0A	; 10
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    640a:	8f ef       	ldi	r24, 0xFF	; 255
    640c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6410:	11 50       	subi	r17, 0x01	; 1
	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
    6412:	d9 f7       	brne	.-10     	; 0x640a <disk_initialize+0x4c>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
    6414:	40 e0       	ldi	r20, 0x00	; 0
    6416:	50 e0       	ldi	r21, 0x00	; 0
    6418:	ba 01       	movw	r22, r20
    641a:	80 e0       	ldi	r24, 0x00	; 0
    641c:	4d df       	rcall	.-358    	; 0x62b8 <send_cmd>
    641e:	81 30       	cpi	r24, 0x01	; 1
    6420:	59 f0       	breq	.+22     	; 0x6438 <disk_initialize+0x7a>
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
    6422:	10 92 d8 22 	sts	0x22D8, r1
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    6426:	80 e1       	ldi	r24, 0x10	; 16
    6428:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    642c:	8f ef       	ldi	r24, 0xFF	; 255
    642e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>

static
void power_off (void)
{
	//TCC1.CTRLA = TC_CLKSEL_OFF_gc;
	spi_off();
    6432:	0e 94 c6 08 	call	0x118c	; 0x118c <spi_off>
    6436:	e0 cf       	rjmp	.-64     	; 0x63f8 <disk_initialize+0x3a>
	FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
    6438:	84 e6       	ldi	r24, 0x64	; 100
    643a:	80 93 da 22 	sts	0x22DA, r24
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
    643e:	4a ea       	ldi	r20, 0xAA	; 170
    6440:	51 e0       	ldi	r21, 0x01	; 1
    6442:	60 e0       	ldi	r22, 0x00	; 0
    6444:	70 e0       	ldi	r23, 0x00	; 0
    6446:	88 e0       	ldi	r24, 0x08	; 8
    6448:	37 df       	rcall	.-402    	; 0x62b8 <send_cmd>
    644a:	81 30       	cpi	r24, 0x01	; 1
    644c:	09 f0       	breq	.+2      	; 0x6450 <disk_initialize+0x92>
    644e:	50 c0       	rjmp	.+160    	; 0x64f0 <disk_initialize+0x132>
    6450:	7e 01       	movw	r14, r28
    6452:	85 e0       	ldi	r24, 0x05	; 5
    6454:	e8 0e       	add	r14, r24
    6456:	f1 1c       	adc	r15, r1
    6458:	8e 01       	movw	r16, r28
    645a:	0f 5f       	subi	r16, 0xFF	; 255
    645c:	1f 4f       	sbci	r17, 0xFF	; 255
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    645e:	8f ef       	ldi	r24, 0xFF	; 255
    6460:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
    6464:	f8 01       	movw	r30, r16
    6466:	81 93       	st	Z+, r24
    6468:	8f 01       	movw	r16, r30
    646a:	ee 15       	cp	r30, r14
    646c:	ff 05       	cpc	r31, r15
    646e:	b9 f7       	brne	.-18     	; 0x645e <disk_initialize+0xa0>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
    6470:	8b 81       	ldd	r24, Y+3	; 0x03
    6472:	81 30       	cpi	r24, 0x01	; 1
    6474:	b1 f6       	brne	.-84     	; 0x6422 <disk_initialize+0x64>
    6476:	8c 81       	ldd	r24, Y+4	; 0x04
    6478:	8a 3a       	cpi	r24, 0xAA	; 170
    647a:	99 f6       	brne	.-90     	; 0x6422 <disk_initialize+0x64>
    647c:	08 c0       	rjmp	.+16     	; 0x648e <disk_initialize+0xd0>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
    647e:	40 e0       	ldi	r20, 0x00	; 0
    6480:	50 e0       	ldi	r21, 0x00	; 0
    6482:	60 e0       	ldi	r22, 0x00	; 0
    6484:	70 e4       	ldi	r23, 0x40	; 64
    6486:	89 ea       	ldi	r24, 0xA9	; 169
    6488:	17 df       	rcall	.-466    	; 0x62b8 <send_cmd>
    648a:	88 23       	and	r24, r24
    648c:	21 f0       	breq	.+8      	; 0x6496 <disk_initialize+0xd8>
    648e:	80 91 da 22 	lds	r24, 0x22DA
    6492:	81 11       	cpse	r24, r1
    6494:	f4 cf       	rjmp	.-24     	; 0x647e <disk_initialize+0xc0>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
    6496:	80 91 da 22 	lds	r24, 0x22DA
    649a:	88 23       	and	r24, r24
    649c:	09 f4       	brne	.+2      	; 0x64a0 <disk_initialize+0xe2>
    649e:	c1 cf       	rjmp	.-126    	; 0x6422 <disk_initialize+0x64>
    64a0:	40 e0       	ldi	r20, 0x00	; 0
    64a2:	50 e0       	ldi	r21, 0x00	; 0
    64a4:	ba 01       	movw	r22, r20
    64a6:	8a e3       	ldi	r24, 0x3A	; 58
    64a8:	07 df       	rcall	.-498    	; 0x62b8 <send_cmd>
    64aa:	81 11       	cpse	r24, r1
    64ac:	ba cf       	rjmp	.-140    	; 0x6422 <disk_initialize+0x64>
    64ae:	8e 01       	movw	r16, r28
    64b0:	0f 5f       	subi	r16, 0xFF	; 255
    64b2:	1f 4f       	sbci	r17, 0xFF	; 255
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    64b4:	8f ef       	ldi	r24, 0xFF	; 255
    64b6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
    64ba:	f8 01       	movw	r30, r16
    64bc:	81 93       	st	Z+, r24
    64be:	8f 01       	movw	r16, r30
    64c0:	ee 16       	cp	r14, r30
    64c2:	ff 06       	cpc	r15, r31
    64c4:	b9 f7       	brne	.-18     	; 0x64b4 <disk_initialize+0xf6>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    64c6:	89 81       	ldd	r24, Y+1	; 0x01
    64c8:	86 fd       	sbrc	r24, 6
    64ca:	38 c0       	rjmp	.+112    	; 0x653c <disk_initialize+0x17e>
    64cc:	04 e0       	ldi	r16, 0x04	; 4
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
    64ce:	00 93 d8 22 	sts	0x22D8, r16
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    64d2:	80 e1       	ldi	r24, 0x10	; 16
    64d4:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    64d8:	8f ef       	ldi	r24, 0xFF	; 255
    64da:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	}
	CardType = ty;
	deselect();

	if (ty) {			/* Initialization succeded */
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
    64de:	80 91 04 20 	lds	r24, 0x2004
    64e2:	8e 7f       	andi	r24, 0xFE	; 254
    64e4:	80 93 04 20 	sts	0x2004, r24
		FCLK_FAST();
    64e8:	80 ed       	ldi	r24, 0xD0	; 208
    64ea:	80 93 c0 08 	sts	0x08C0, r24
    64ee:	84 cf       	rjmp	.-248    	; 0x63f8 <disk_initialize+0x3a>
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
    64f0:	40 e0       	ldi	r20, 0x00	; 0
    64f2:	50 e0       	ldi	r21, 0x00	; 0
    64f4:	ba 01       	movw	r22, r20
    64f6:	89 ea       	ldi	r24, 0xA9	; 169
    64f8:	df de       	rcall	.-578    	; 0x62b8 <send_cmd>
    64fa:	82 30       	cpi	r24, 0x02	; 2
    64fc:	e0 f0       	brcs	.+56     	; 0x6536 <disk_initialize+0x178>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
    64fe:	01 e0       	ldi	r16, 0x01	; 1
    6500:	11 e0       	ldi	r17, 0x01	; 1
    6502:	07 c0       	rjmp	.+14     	; 0x6512 <disk_initialize+0x154>
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
    6504:	40 e0       	ldi	r20, 0x00	; 0
    6506:	50 e0       	ldi	r21, 0x00	; 0
    6508:	ba 01       	movw	r22, r20
    650a:	81 2f       	mov	r24, r17
    650c:	d5 de       	rcall	.-598    	; 0x62b8 <send_cmd>
    650e:	88 23       	and	r24, r24
    6510:	21 f0       	breq	.+8      	; 0x651a <disk_initialize+0x15c>
    6512:	90 91 da 22 	lds	r25, 0x22DA
    6516:	91 11       	cpse	r25, r1
    6518:	f5 cf       	rjmp	.-22     	; 0x6504 <disk_initialize+0x146>
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
    651a:	80 91 da 22 	lds	r24, 0x22DA
    651e:	88 23       	and	r24, r24
    6520:	09 f4       	brne	.+2      	; 0x6524 <disk_initialize+0x166>
    6522:	7f cf       	rjmp	.-258    	; 0x6422 <disk_initialize+0x64>
    6524:	40 e0       	ldi	r20, 0x00	; 0
    6526:	52 e0       	ldi	r21, 0x02	; 2
    6528:	60 e0       	ldi	r22, 0x00	; 0
    652a:	70 e0       	ldi	r23, 0x00	; 0
    652c:	80 e1       	ldi	r24, 0x10	; 16
    652e:	c4 de       	rcall	.-632    	; 0x62b8 <send_cmd>
    6530:	81 11       	cpse	r24, r1
    6532:	77 cf       	rjmp	.-274    	; 0x6422 <disk_initialize+0x64>
    6534:	cc cf       	rjmp	.-104    	; 0x64ce <disk_initialize+0x110>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
    6536:	02 e0       	ldi	r16, 0x02	; 2
    6538:	19 ea       	ldi	r17, 0xA9	; 169
    653a:	eb cf       	rjmp	.-42     	; 0x6512 <disk_initialize+0x154>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    653c:	0c e0       	ldi	r16, 0x0C	; 12
    653e:	c7 cf       	rjmp	.-114    	; 0x64ce <disk_initialize+0x110>

00006540 <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    6540:	81 11       	cpse	r24, r1
    6542:	03 c0       	rjmp	.+6      	; 0x654a <disk_status+0xa>
	return Stat;
    6544:	80 91 04 20 	lds	r24, 0x2004
    6548:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
    654a:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
    654c:	08 95       	ret

0000654e <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
    654e:	cf 92       	push	r12
    6550:	df 92       	push	r13
    6552:	ef 92       	push	r14
    6554:	ff 92       	push	r15
    6556:	0f 93       	push	r16
    6558:	1f 93       	push	r17
    655a:	cf 93       	push	r28
    655c:	df 93       	push	r29
    655e:	f6 2e       	mov	r15, r22
    6560:	e7 2e       	mov	r14, r23
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
    6562:	88 23       	and	r24, r24
    6564:	59 f0       	breq	.+22     	; 0x657c <disk_read+0x2e>
    6566:	c4 e0       	ldi	r28, 0x04	; 4
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    6568:	8c 2f       	mov	r24, r28
    656a:	df 91       	pop	r29
    656c:	cf 91       	pop	r28
    656e:	1f 91       	pop	r17
    6570:	0f 91       	pop	r16
    6572:	ff 90       	pop	r15
    6574:	ef 90       	pop	r14
    6576:	df 90       	pop	r13
    6578:	cf 90       	pop	r12
    657a:	08 95       	ret
)
{
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
    657c:	01 15       	cp	r16, r1
    657e:	11 05       	cpc	r17, r1
    6580:	91 f3       	breq	.-28     	; 0x6566 <disk_read+0x18>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    6582:	80 91 04 20 	lds	r24, 0x2004
    6586:	80 ff       	sbrs	r24, 0
    6588:	02 c0       	rjmp	.+4      	; 0x658e <disk_read+0x40>
    658a:	c3 e0       	ldi	r28, 0x03	; 3
    658c:	ed cf       	rjmp	.-38     	; 0x6568 <disk_read+0x1a>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    658e:	80 91 d8 22 	lds	r24, 0x22D8
    6592:	83 fd       	sbrc	r24, 3
    6594:	07 c0       	rjmp	.+14     	; 0x65a4 <disk_read+0x56>
    6596:	79 e0       	ldi	r23, 0x09	; 9
    6598:	22 0f       	add	r18, r18
    659a:	33 1f       	adc	r19, r19
    659c:	44 1f       	adc	r20, r20
    659e:	55 1f       	adc	r21, r21
    65a0:	7a 95       	dec	r23
    65a2:	d1 f7       	brne	.-12     	; 0x6598 <disk_read+0x4a>

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
    65a4:	02 30       	cpi	r16, 0x02	; 2
    65a6:	11 05       	cpc	r17, r1
    65a8:	08 f4       	brcc	.+2      	; 0x65ac <disk_read+0x5e>
    65aa:	47 c0       	rjmp	.+142    	; 0x663a <disk_read+0xec>
    65ac:	62 e1       	ldi	r22, 0x12	; 18
    65ae:	c6 2e       	mov	r12, r22
	if (send_cmd(cmd, sector) == 0) {
    65b0:	ba 01       	movw	r22, r20
    65b2:	a9 01       	movw	r20, r18
    65b4:	8c 2d       	mov	r24, r12
    65b6:	80 de       	rcall	.-768    	; 0x62b8 <send_cmd>
    65b8:	81 11       	cpse	r24, r1
    65ba:	3d c0       	rjmp	.+122    	; 0x6636 <disk_read+0xe8>
)
{
	BYTE token;


	Timer1 = 20;
    65bc:	84 e1       	ldi	r24, 0x14	; 20
    65be:	d8 2e       	mov	r13, r24
    65c0:	d0 92 da 22 	sts	0x22DA, r13
    65c4:	04 c0       	rjmp	.+8      	; 0x65ce <disk_read+0x80>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    65c6:	90 91 da 22 	lds	r25, 0x22DA
    65ca:	99 23       	and	r25, r25
    65cc:	39 f0       	breq	.+14     	; 0x65dc <disk_read+0x8e>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    65ce:	8f ef       	ldi	r24, 0xFF	; 255
    65d0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    65d4:	8f 3f       	cpi	r24, 0xFF	; 255
    65d6:	b9 f3       	breq	.-18     	; 0x65c6 <disk_read+0x78>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    65d8:	8e 3f       	cpi	r24, 0xFE	; 254
    65da:	69 f0       	breq	.+26     	; 0x65f6 <disk_read+0xa8>
    65dc:	c1 e0       	ldi	r28, 0x01	; 1
    65de:	01 2b       	or	r16, r17
    65e0:	41 f1       	breq	.+80     	; 0x6632 <disk_read+0xe4>
	if (send_cmd(cmd, sector) == 0) {
		do {
			if (!rcvr_datablock(buff, 512)) break;
			buff += 512;
		} while (--count);
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
    65e2:	82 e1       	ldi	r24, 0x12	; 18
    65e4:	c8 16       	cp	r12, r24
    65e6:	61 f1       	breq	.+88     	; 0x6640 <disk_read+0xf2>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    65e8:	80 e1       	ldi	r24, 0x10	; 16
    65ea:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    65ee:	8f ef       	ldi	r24, 0xFF	; 255
    65f0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
		} while (--count);
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    65f4:	b9 cf       	rjmp	.-142    	; 0x6568 <disk_read+0x1a>
    65f6:	cf 2d       	mov	r28, r15
    65f8:	de 2d       	mov	r29, r14
    65fa:	7e 01       	movw	r14, r28
    65fc:	8e ef       	ldi	r24, 0xFE	; 254
    65fe:	f8 1a       	sub	r15, r24
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    6600:	8f ef       	ldi	r24, 0xFF	; 255
    6602:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6606:	88 83       	st	Y, r24
		*p++ = spi_wr_rd(0xff);
    6608:	8f ef       	ldi	r24, 0xFF	; 255
    660a:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    660e:	89 83       	std	Y+1, r24	; 0x01
    6610:	22 96       	adiw	r28, 0x02	; 2
		
	} while (cnt -= 2);
    6612:	ce 15       	cp	r28, r14
    6614:	df 05       	cpc	r29, r15
    6616:	a1 f7       	brne	.-24     	; 0x6600 <disk_read+0xb2>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6618:	8f ef       	ldi	r24, 0xFF	; 255
    661a:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    661e:	8f ef       	ldi	r24, 0xFF	; 255
    6620:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
	if (send_cmd(cmd, sector) == 0) {
		do {
			if (!rcvr_datablock(buff, 512)) break;
			buff += 512;
    6624:	fc 2e       	mov	r15, r28
    6626:	ed 2e       	mov	r14, r29
		} while (--count);
    6628:	01 50       	subi	r16, 0x01	; 1
    662a:	11 09       	sbc	r17, r1
    662c:	01 15       	cp	r16, r1
    662e:	11 05       	cpc	r17, r1
    6630:	39 f6       	brne	.-114    	; 0x65c0 <disk_read+0x72>
    6632:	c0 e0       	ldi	r28, 0x00	; 0
    6634:	d6 cf       	rjmp	.-84     	; 0x65e2 <disk_read+0x94>
    6636:	c1 e0       	ldi	r28, 0x01	; 1
    6638:	d7 cf       	rjmp	.-82     	; 0x65e8 <disk_read+0x9a>
	if (pdrv || !count) return RES_PARERR;
	if (Stat & STA_NOINIT) return RES_NOTRDY;

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
    663a:	91 e1       	ldi	r25, 0x11	; 17
    663c:	c9 2e       	mov	r12, r25
    663e:	b8 cf       	rjmp	.-144    	; 0x65b0 <disk_read+0x62>
	if (send_cmd(cmd, sector) == 0) {
		do {
			if (!rcvr_datablock(buff, 512)) break;
			buff += 512;
		} while (--count);
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
    6640:	40 e0       	ldi	r20, 0x00	; 0
    6642:	50 e0       	ldi	r21, 0x00	; 0
    6644:	ba 01       	movw	r22, r20
    6646:	8c e0       	ldi	r24, 0x0C	; 12
    6648:	37 de       	rcall	.-914    	; 0x62b8 <send_cmd>
    664a:	ce cf       	rjmp	.-100    	; 0x65e8 <disk_read+0x9a>

0000664c <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
    664c:	af 92       	push	r10
    664e:	bf 92       	push	r11
    6650:	cf 92       	push	r12
    6652:	df 92       	push	r13
    6654:	ef 92       	push	r14
    6656:	ff 92       	push	r15
    6658:	0f 93       	push	r16
    665a:	1f 93       	push	r17
    665c:	cf 93       	push	r28
    665e:	df 93       	push	r29
    6660:	b6 2e       	mov	r11, r22
    6662:	a7 2e       	mov	r10, r23
    6664:	69 01       	movw	r12, r18
    6666:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
    6668:	88 23       	and	r24, r24
    666a:	69 f0       	breq	.+26     	; 0x6686 <disk_write+0x3a>
    666c:	c4 e0       	ldi	r28, 0x04	; 4
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
    666e:	8c 2f       	mov	r24, r28
    6670:	df 91       	pop	r29
    6672:	cf 91       	pop	r28
    6674:	1f 91       	pop	r17
    6676:	0f 91       	pop	r16
    6678:	ff 90       	pop	r15
    667a:	ef 90       	pop	r14
    667c:	df 90       	pop	r13
    667e:	cf 90       	pop	r12
    6680:	bf 90       	pop	r11
    6682:	af 90       	pop	r10
    6684:	08 95       	ret
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
	if (pdrv || !count) return RES_PARERR;
    6686:	01 15       	cp	r16, r1
    6688:	11 05       	cpc	r17, r1
    668a:	81 f3       	breq	.-32     	; 0x666c <disk_write+0x20>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    668c:	80 91 04 20 	lds	r24, 0x2004
    6690:	80 ff       	sbrs	r24, 0
    6692:	02 c0       	rjmp	.+4      	; 0x6698 <disk_write+0x4c>
    6694:	c3 e0       	ldi	r28, 0x03	; 3
    6696:	eb cf       	rjmp	.-42     	; 0x666e <disk_write+0x22>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    6698:	80 91 04 20 	lds	r24, 0x2004
    669c:	82 ff       	sbrs	r24, 2
    669e:	02 c0       	rjmp	.+4      	; 0x66a4 <disk_write+0x58>
    66a0:	c2 e0       	ldi	r28, 0x02	; 2
    66a2:	e5 cf       	rjmp	.-54     	; 0x666e <disk_write+0x22>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
    66a4:	80 91 d8 22 	lds	r24, 0x22D8
    66a8:	83 fd       	sbrc	r24, 3
    66aa:	07 c0       	rjmp	.+14     	; 0x66ba <disk_write+0x6e>
    66ac:	f9 e0       	ldi	r31, 0x09	; 9
    66ae:	cc 0c       	add	r12, r12
    66b0:	dd 1c       	adc	r13, r13
    66b2:	ee 1c       	adc	r14, r14
    66b4:	ff 1c       	adc	r15, r15
    66b6:	fa 95       	dec	r31
    66b8:	d1 f7       	brne	.-12     	; 0x66ae <disk_write+0x62>

	if (count == 1) {	/* Single block write */
    66ba:	01 30       	cpi	r16, 0x01	; 1
    66bc:	11 05       	cpc	r17, r1
    66be:	09 f4       	brne	.+2      	; 0x66c2 <disk_write+0x76>
    66c0:	57 c0       	rjmp	.+174    	; 0x6770 <disk_write+0x124>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    66c2:	86 70       	andi	r24, 0x06	; 6
    66c4:	09 f0       	breq	.+2      	; 0x66c8 <disk_write+0x7c>
    66c6:	89 c0       	rjmp	.+274    	; 0x67da <disk_write+0x18e>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
    66c8:	b7 01       	movw	r22, r14
    66ca:	a6 01       	movw	r20, r12
    66cc:	89 e1       	ldi	r24, 0x19	; 25
    66ce:	f4 dd       	rcall	.-1048   	; 0x62b8 <send_cmd>
    66d0:	81 11       	cpse	r24, r1
    66d2:	81 c0       	rjmp	.+258    	; 0x67d6 <disk_write+0x18a>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    66d4:	e2 e3       	ldi	r30, 0x32	; 50
    66d6:	de 2e       	mov	r13, r30
    66d8:	d0 92 d9 22 	sts	0x22D9, r13
    66dc:	04 c0       	rjmp	.+8      	; 0x66e6 <disk_write+0x9a>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    66de:	80 91 d9 22 	lds	r24, 0x22D9
    66e2:	88 23       	and	r24, r24
    66e4:	51 f1       	breq	.+84     	; 0x673a <disk_write+0xee>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    66e6:	8f ef       	ldi	r24, 0xFF	; 255
    66e8:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    66ec:	8f 3f       	cpi	r24, 0xFF	; 255
    66ee:	b9 f7       	brne	.-18     	; 0x66de <disk_write+0x92>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    66f0:	8c ef       	ldi	r24, 0xFC	; 252
    66f2:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    66f6:	cb 2d       	mov	r28, r11
    66f8:	da 2d       	mov	r29, r10
    66fa:	7e 01       	movw	r14, r28
    66fc:	8e ef       	ldi	r24, 0xFE	; 254
    66fe:	f8 1a       	sub	r15, r24
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	do {
		spi_wr_rd(*p++);
    6700:	88 81       	ld	r24, Y
    6702:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
		spi_wr_rd(*p++);
    6706:	89 81       	ldd	r24, Y+1	; 0x01
    6708:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    670c:	22 96       	adiw	r28, 0x02	; 2
		
	} while (cnt -= 2);
    670e:	ec 16       	cp	r14, r28
    6710:	fd 06       	cpc	r15, r29
    6712:	b1 f7       	brne	.-20     	; 0x6700 <disk_write+0xb4>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6714:	8f ef       	ldi	r24, 0xFF	; 255
    6716:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    671a:	8f ef       	ldi	r24, 0xFF	; 255
    671c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6720:	8f ef       	ldi	r24, 0xFF	; 255
    6722:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
		xchg_spi(0xFF);
		resp = xchg_spi(0xFF);			/* Reveive data response */
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
    6726:	8f 71       	andi	r24, 0x1F	; 31
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
    6728:	85 30       	cpi	r24, 0x05	; 5
    672a:	39 f4       	brne	.+14     	; 0x673a <disk_write+0xee>
				buff += 512;
    672c:	be 2c       	mov	r11, r14
    672e:	af 2c       	mov	r10, r15
			} while (--count);
    6730:	01 50       	subi	r16, 0x01	; 1
    6732:	11 09       	sbc	r17, r1
    6734:	01 15       	cp	r16, r1
    6736:	11 05       	cpc	r17, r1
    6738:	79 f6       	brne	.-98     	; 0x66d8 <disk_write+0x8c>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    673a:	82 e3       	ldi	r24, 0x32	; 50
    673c:	80 93 d9 22 	sts	0x22D9, r24
    6740:	05 c0       	rjmp	.+10     	; 0x674c <disk_write+0x100>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    6742:	80 91 d9 22 	lds	r24, 0x22D9
    6746:	88 23       	and	r24, r24
    6748:	09 f4       	brne	.+2      	; 0x674c <disk_write+0x100>
    674a:	45 c0       	rjmp	.+138    	; 0x67d6 <disk_write+0x18a>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    674c:	8f ef       	ldi	r24, 0xFF	; 255
    674e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    6752:	8f 3f       	cpi	r24, 0xFF	; 255
    6754:	b1 f7       	brne	.-20     	; 0x6742 <disk_write+0xf6>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6756:	8d ef       	ldi	r24, 0xFD	; 253
    6758:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    675c:	c1 e0       	ldi	r28, 0x01	; 1
    675e:	01 2b       	or	r16, r17
    6760:	c1 f1       	breq	.+112    	; 0x67d2 <disk_write+0x186>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    6762:	80 e1       	ldi	r24, 0x10	; 16
    6764:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6768:	8f ef       	ldi	r24, 0xFF	; 255
    676a:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
				count = 1;
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    676e:	7f cf       	rjmp	.-258    	; 0x666e <disk_write+0x22>
	if (Stat & STA_PROTECT) return RES_WRPRT;

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    6770:	b7 01       	movw	r22, r14
    6772:	a6 01       	movw	r20, r12
    6774:	88 e1       	ldi	r24, 0x18	; 24
    6776:	a0 dd       	rcall	.-1216   	; 0x62b8 <send_cmd>
    6778:	81 11       	cpse	r24, r1
    677a:	2d c0       	rjmp	.+90     	; 0x67d6 <disk_write+0x18a>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    677c:	82 e3       	ldi	r24, 0x32	; 50
    677e:	80 93 d9 22 	sts	0x22D9, r24
    6782:	04 c0       	rjmp	.+8      	; 0x678c <disk_write+0x140>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    6784:	80 91 d9 22 	lds	r24, 0x22D9
    6788:	88 23       	and	r24, r24
    678a:	29 f1       	breq	.+74     	; 0x67d6 <disk_write+0x18a>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    678c:	8f ef       	ldi	r24, 0xFF	; 255
    678e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    6792:	8f 3f       	cpi	r24, 0xFF	; 255
    6794:	b9 f7       	brne	.-18     	; 0x6784 <disk_write+0x138>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6796:	8e ef       	ldi	r24, 0xFE	; 254
    6798:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    679c:	cb 2d       	mov	r28, r11
    679e:	da 2d       	mov	r29, r10
    67a0:	8e 01       	movw	r16, r28
    67a2:	1e 5f       	subi	r17, 0xFE	; 254
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	do {
		spi_wr_rd(*p++);
    67a4:	88 81       	ld	r24, Y
    67a6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
		spi_wr_rd(*p++);
    67aa:	89 81       	ldd	r24, Y+1	; 0x01
    67ac:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    67b0:	22 96       	adiw	r28, 0x02	; 2
		
	} while (cnt -= 2);
    67b2:	c0 17       	cp	r28, r16
    67b4:	d1 07       	cpc	r29, r17
    67b6:	b1 f7       	brne	.-20     	; 0x67a4 <disk_write+0x158>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    67b8:	8f ef       	ldi	r24, 0xFF	; 255
    67ba:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    67be:	8f ef       	ldi	r24, 0xFF	; 255
    67c0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    67c4:	8f ef       	ldi	r24, 0xFF	; 255
    67c6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
		xchg_spi(0xFF);
		resp = xchg_spi(0xFF);			/* Reveive data response */
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
    67ca:	8f 71       	andi	r24, 0x1F	; 31

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
    67cc:	c1 e0       	ldi	r28, 0x01	; 1
    67ce:	85 30       	cpi	r24, 0x05	; 5
    67d0:	41 f6       	brne	.-112    	; 0x6762 <disk_write+0x116>
    67d2:	c0 e0       	ldi	r28, 0x00	; 0
    67d4:	c6 cf       	rjmp	.-116    	; 0x6762 <disk_write+0x116>
    67d6:	c1 e0       	ldi	r28, 0x01	; 1
    67d8:	c4 cf       	rjmp	.-120    	; 0x6762 <disk_write+0x116>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    67da:	a8 01       	movw	r20, r16
    67dc:	60 e0       	ldi	r22, 0x00	; 0
    67de:	70 e0       	ldi	r23, 0x00	; 0
    67e0:	87 e9       	ldi	r24, 0x97	; 151
    67e2:	6a dd       	rcall	.-1324   	; 0x62b8 <send_cmd>
    67e4:	71 cf       	rjmp	.-286    	; 0x66c8 <disk_write+0x7c>

000067e6 <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
    67e6:	cf 92       	push	r12
    67e8:	df 92       	push	r13
    67ea:	ef 92       	push	r14
    67ec:	ff 92       	push	r15
    67ee:	0f 93       	push	r16
    67f0:	1f 93       	push	r17
    67f2:	cf 93       	push	r28
    67f4:	df 93       	push	r29
    67f6:	cd b7       	in	r28, 0x3d	; 61
    67f8:	de b7       	in	r29, 0x3e	; 62
    67fa:	60 97       	sbiw	r28, 0x10	; 16
    67fc:	cd bf       	out	0x3d, r28	; 61
    67fe:	de bf       	out	0x3e, r29	; 62
    6800:	8a 01       	movw	r16, r20
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
    6802:	88 23       	and	r24, r24
    6804:	69 f0       	breq	.+26     	; 0x6820 <disk_ioctl+0x3a>
    6806:	84 e0       	ldi	r24, 0x04	; 4
	}

	deselect();

	return res;
}
    6808:	60 96       	adiw	r28, 0x10	; 16
    680a:	cd bf       	out	0x3d, r28	; 61
    680c:	de bf       	out	0x3e, r29	; 62
    680e:	df 91       	pop	r29
    6810:	cf 91       	pop	r28
    6812:	1f 91       	pop	r17
    6814:	0f 91       	pop	r16
    6816:	ff 90       	pop	r15
    6818:	ef 90       	pop	r14
    681a:	df 90       	pop	r13
    681c:	cf 90       	pop	r12
    681e:	08 95       	ret

	if (pdrv) return RES_PARERR;

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
    6820:	80 91 04 20 	lds	r24, 0x2004
    6824:	80 ff       	sbrs	r24, 0
    6826:	02 c0       	rjmp	.+4      	; 0x682c <disk_ioctl+0x46>
    6828:	83 e0       	ldi	r24, 0x03	; 3
    682a:	ee cf       	rjmp	.-36     	; 0x6808 <disk_ioctl+0x22>

	switch (cmd) {
    682c:	86 2f       	mov	r24, r22
    682e:	90 e0       	ldi	r25, 0x00	; 0
    6830:	87 33       	cpi	r24, 0x37	; 55
    6832:	91 05       	cpc	r25, r1
    6834:	48 f0       	brcs	.+18     	; 0x6848 <disk_ioctl+0x62>
		Stat |= STA_NOINIT;
		res = RES_OK;
		break;

	default:
		res = RES_PARERR;
    6836:	14 e0       	ldi	r17, 0x04	; 4
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    6838:	90 e1       	ldi	r25, 0x10	; 16
    683a:	90 93 45 06 	sts	0x0645, r25
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    683e:	8f ef       	ldi	r24, 0xFF	; 255
    6840:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
		res = RES_PARERR;
	}

	deselect();

	return res;
    6844:	81 2f       	mov	r24, r17
    6846:	e0 cf       	rjmp	.-64     	; 0x6808 <disk_ioctl+0x22>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;

	switch (cmd) {
    6848:	fc 01       	movw	r30, r24
    684a:	e2 50       	subi	r30, 0x02	; 2
    684c:	ff 4f       	sbci	r31, 0xFF	; 255
    684e:	0c 94 75 3c 	jmp	0x78ea	; 0x78ea <__tablejump2__>
			res = RES_OK;
		}
		break;

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
    6852:	40 e0       	ldi	r20, 0x00	; 0
    6854:	50 e0       	ldi	r21, 0x00	; 0
    6856:	ba 01       	movw	r22, r20
    6858:	8d e8       	ldi	r24, 0x8D	; 141
    685a:	2e dd       	rcall	.-1444   	; 0x62b8 <send_cmd>
    685c:	88 23       	and	r24, r24
    685e:	09 f4       	brne	.+2      	; 0x6862 <disk_ioctl+0x7c>
    6860:	3b c1       	rjmp	.+630    	; 0x6ad8 <disk_ioctl+0x2f2>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    6862:	11 e0       	ldi	r17, 0x01	; 1
    6864:	e9 cf       	rjmp	.-46     	; 0x6838 <disk_ioctl+0x52>
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
    6866:	40 e0       	ldi	r20, 0x00	; 0
    6868:	50 e0       	ldi	r21, 0x00	; 0
    686a:	ba 01       	movw	r22, r20
    686c:	8a e3       	ldi	r24, 0x3A	; 58
    686e:	24 dd       	rcall	.-1464   	; 0x62b8 <send_cmd>
    6870:	81 11       	cpse	r24, r1
    6872:	f7 cf       	rjmp	.-18     	; 0x6862 <disk_ioctl+0x7c>
    6874:	78 01       	movw	r14, r16
    6876:	f4 e0       	ldi	r31, 0x04	; 4
    6878:	ef 0e       	add	r14, r31
    687a:	f1 1c       	adc	r15, r1
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    687c:	8f ef       	ldi	r24, 0xFF	; 255
    687e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
    6882:	f8 01       	movw	r30, r16
    6884:	81 93       	st	Z+, r24
    6886:	8f 01       	movw	r16, r30
    6888:	ee 15       	cp	r30, r14
    688a:	ff 05       	cpc	r31, r15
    688c:	b9 f7       	brne	.-18     	; 0x687c <disk_ioctl+0x96>
			res = RES_OK;
    688e:	10 e0       	ldi	r17, 0x00	; 0
    6890:	d3 cf       	rjmp	.-90     	; 0x6838 <disk_ioctl+0x52>
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
    6892:	40 e0       	ldi	r20, 0x00	; 0
    6894:	50 e0       	ldi	r21, 0x00	; 0
    6896:	ba 01       	movw	r22, r20
    6898:	8a e0       	ldi	r24, 0x0A	; 10
    689a:	0e dd       	rcall	.-1508   	; 0x62b8 <send_cmd>
    689c:	81 11       	cpse	r24, r1
    689e:	e1 cf       	rjmp	.-62     	; 0x6862 <disk_ioctl+0x7c>
)
{
	BYTE token;


	Timer1 = 20;
    68a0:	84 e1       	ldi	r24, 0x14	; 20
    68a2:	80 93 da 22 	sts	0x22DA, r24
    68a6:	04 c0       	rjmp	.+8      	; 0x68b0 <disk_ioctl+0xca>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    68a8:	80 91 da 22 	lds	r24, 0x22DA
    68ac:	88 23       	and	r24, r24
    68ae:	c9 f2       	breq	.-78     	; 0x6862 <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    68b0:	8f ef       	ldi	r24, 0xFF	; 255
    68b2:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    68b6:	8f 3f       	cpi	r24, 0xFF	; 255
    68b8:	b9 f3       	breq	.-18     	; 0x68a8 <disk_ioctl+0xc2>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    68ba:	8e 3f       	cpi	r24, 0xFE	; 254
    68bc:	91 f6       	brne	.-92     	; 0x6862 <disk_ioctl+0x7c>
    68be:	78 01       	movw	r14, r16
    68c0:	f0 e1       	ldi	r31, 0x10	; 16
    68c2:	ef 0e       	add	r14, r31
    68c4:	f1 1c       	adc	r15, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    68c6:	8f ef       	ldi	r24, 0xFF	; 255
    68c8:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    68cc:	f8 01       	movw	r30, r16
    68ce:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    68d0:	8f ef       	ldi	r24, 0xFF	; 255
    68d2:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    68d6:	f8 01       	movw	r30, r16
    68d8:	81 83       	std	Z+1, r24	; 0x01
    68da:	0e 5f       	subi	r16, 0xFE	; 254
    68dc:	1f 4f       	sbci	r17, 0xFF	; 255
		
	} while (cnt -= 2);
    68de:	0e 15       	cp	r16, r14
    68e0:	1f 05       	cpc	r17, r15
    68e2:	89 f7       	brne	.-30     	; 0x68c6 <disk_ioctl+0xe0>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    68e4:	8f ef       	ldi	r24, 0xFF	; 255
    68e6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    68ea:	8f ef       	ldi	r24, 0xFF	; 255
    68ec:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
		break;

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
			&& rcvr_datablock(ptr, 16))
			res = RES_OK;
    68f0:	10 e0       	ldi	r17, 0x00	; 0
    68f2:	a2 cf       	rjmp	.-188    	; 0x6838 <disk_ioctl+0x52>

static
void power_off (void)
{
	//TCC1.CTRLA = TC_CLKSEL_OFF_gc;
	spi_off();
    68f4:	0e 94 c6 08 	call	0x118c	; 0x118c <spi_off>
		}
		break;

	case CTRL_POWER_OFF :	/* Power off */
		power_off();
		Stat |= STA_NOINIT;
    68f8:	80 91 04 20 	lds	r24, 0x2004
    68fc:	81 60       	ori	r24, 0x01	; 1
    68fe:	80 93 04 20 	sts	0x2004, r24
		res = RES_OK;
    6902:	10 e0       	ldi	r17, 0x00	; 0
		break;
    6904:	99 cf       	rjmp	.-206    	; 0x6838 <disk_ioctl+0x52>
		*ptr = CardType;
		res = RES_OK;
		break;

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
    6906:	40 e0       	ldi	r20, 0x00	; 0
    6908:	50 e0       	ldi	r21, 0x00	; 0
    690a:	ba 01       	movw	r22, r20
    690c:	89 e0       	ldi	r24, 0x09	; 9
    690e:	d4 dc       	rcall	.-1624   	; 0x62b8 <send_cmd>
    6910:	81 11       	cpse	r24, r1
    6912:	a7 cf       	rjmp	.-178    	; 0x6862 <disk_ioctl+0x7c>
)
{
	BYTE token;


	Timer1 = 20;
    6914:	84 e1       	ldi	r24, 0x14	; 20
    6916:	80 93 da 22 	sts	0x22DA, r24
    691a:	05 c0       	rjmp	.+10     	; 0x6926 <disk_ioctl+0x140>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    691c:	80 91 da 22 	lds	r24, 0x22DA
    6920:	88 23       	and	r24, r24
    6922:	09 f4       	brne	.+2      	; 0x6926 <disk_ioctl+0x140>
    6924:	9e cf       	rjmp	.-196    	; 0x6862 <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6926:	8f ef       	ldi	r24, 0xFF	; 255
    6928:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    692c:	8f 3f       	cpi	r24, 0xFF	; 255
    692e:	b1 f3       	breq	.-20     	; 0x691c <disk_ioctl+0x136>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    6930:	8e 3f       	cpi	r24, 0xFE	; 254
    6932:	09 f0       	breq	.+2      	; 0x6936 <disk_ioctl+0x150>
    6934:	96 cf       	rjmp	.-212    	; 0x6862 <disk_ioctl+0x7c>
    6936:	78 01       	movw	r14, r16
    6938:	f0 e1       	ldi	r31, 0x10	; 16
    693a:	ef 0e       	add	r14, r31
    693c:	f1 1c       	adc	r15, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    693e:	8f ef       	ldi	r24, 0xFF	; 255
    6940:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6944:	f8 01       	movw	r30, r16
    6946:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    6948:	8f ef       	ldi	r24, 0xFF	; 255
    694a:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    694e:	f8 01       	movw	r30, r16
    6950:	81 83       	std	Z+1, r24	; 0x01
    6952:	0e 5f       	subi	r16, 0xFE	; 254
    6954:	1f 4f       	sbci	r17, 0xFF	; 255
		
	} while (cnt -= 2);
    6956:	0e 15       	cp	r16, r14
    6958:	1f 05       	cpc	r17, r15
    695a:	89 f7       	brne	.-30     	; 0x693e <disk_ioctl+0x158>
    695c:	c3 cf       	rjmp	.-122    	; 0x68e4 <disk_ioctl+0xfe>
		break;

	/* Following commands are never used by FatFs module */

	case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
		*ptr = CardType;
    695e:	80 91 d8 22 	lds	r24, 0x22D8
    6962:	fa 01       	movw	r30, r20
    6964:	80 83       	st	Z, r24
		res = RES_OK;
    6966:	10 e0       	ldi	r17, 0x00	; 0
		break;
    6968:	67 cf       	rjmp	.-306    	; 0x6838 <disk_ioctl+0x52>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
    696a:	40 e0       	ldi	r20, 0x00	; 0
    696c:	50 e0       	ldi	r21, 0x00	; 0
    696e:	ba 01       	movw	r22, r20
    6970:	89 e0       	ldi	r24, 0x09	; 9
    6972:	a2 dc       	rcall	.-1724   	; 0x62b8 <send_cmd>
    6974:	81 11       	cpse	r24, r1
    6976:	75 cf       	rjmp	.-278    	; 0x6862 <disk_ioctl+0x7c>
)
{
	BYTE token;


	Timer1 = 20;
    6978:	84 e1       	ldi	r24, 0x14	; 20
    697a:	80 93 da 22 	sts	0x22DA, r24
    697e:	05 c0       	rjmp	.+10     	; 0x698a <disk_ioctl+0x1a4>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    6980:	80 91 da 22 	lds	r24, 0x22DA
    6984:	88 23       	and	r24, r24
    6986:	09 f4       	brne	.+2      	; 0x698a <disk_ioctl+0x1a4>
    6988:	6c cf       	rjmp	.-296    	; 0x6862 <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    698a:	8f ef       	ldi	r24, 0xFF	; 255
    698c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    6990:	8f 3f       	cpi	r24, 0xFF	; 255
    6992:	b1 f3       	breq	.-20     	; 0x6980 <disk_ioctl+0x19a>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    6994:	8e 3f       	cpi	r24, 0xFE	; 254
    6996:	09 f0       	breq	.+2      	; 0x699a <disk_ioctl+0x1b4>
    6998:	64 cf       	rjmp	.-312    	; 0x6862 <disk_ioctl+0x7c>
    699a:	ce 01       	movw	r24, r28
    699c:	01 96       	adiw	r24, 0x01	; 1
    699e:	7c 01       	movw	r14, r24
    69a0:	6e 01       	movw	r12, r28
    69a2:	91 e1       	ldi	r25, 0x11	; 17
    69a4:	c9 0e       	add	r12, r25
    69a6:	d1 1c       	adc	r13, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    69a8:	8f ef       	ldi	r24, 0xFF	; 255
    69aa:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    69ae:	f7 01       	movw	r30, r14
    69b0:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    69b2:	8f ef       	ldi	r24, 0xFF	; 255
    69b4:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    69b8:	f7 01       	movw	r30, r14
    69ba:	81 83       	std	Z+1, r24	; 0x01
    69bc:	f2 e0       	ldi	r31, 0x02	; 2
    69be:	ef 0e       	add	r14, r31
    69c0:	f1 1c       	adc	r15, r1
		
	} while (cnt -= 2);
    69c2:	ec 14       	cp	r14, r12
    69c4:	fd 04       	cpc	r15, r13
    69c6:	81 f7       	brne	.-32     	; 0x69a8 <disk_ioctl+0x1c2>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    69c8:	8f ef       	ldi	r24, 0xFF	; 255
    69ca:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    69ce:	8f ef       	ldi	r24, 0xFF	; 255
    69d0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
		if (select()) res = RES_OK;
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
    69d4:	89 81       	ldd	r24, Y+1	; 0x01
    69d6:	82 95       	swap	r24
    69d8:	86 95       	lsr	r24
    69da:	86 95       	lsr	r24
    69dc:	83 70       	andi	r24, 0x03	; 3
    69de:	81 30       	cpi	r24, 0x01	; 1
    69e0:	09 f4       	brne	.+2      	; 0x69e4 <disk_ioctl+0x1fe>
    69e2:	da c0       	rjmp	.+436    	; 0x6b98 <disk_ioctl+0x3b2>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    69e4:	89 85       	ldd	r24, Y+9	; 0x09
    69e6:	82 95       	swap	r24
    69e8:	86 95       	lsr	r24
    69ea:	86 95       	lsr	r24
    69ec:	83 70       	andi	r24, 0x03	; 3
    69ee:	28 85       	ldd	r18, Y+8	; 0x08
    69f0:	90 e0       	ldi	r25, 0x00	; 0
    69f2:	f4 e0       	ldi	r31, 0x04	; 4
    69f4:	2f 9f       	mul	r18, r31
    69f6:	80 0d       	add	r24, r0
    69f8:	91 1d       	adc	r25, r1
    69fa:	11 24       	eor	r1, r1
    69fc:	01 96       	adiw	r24, 0x01	; 1
    69fe:	2f 81       	ldd	r18, Y+7	; 0x07
    6a00:	23 70       	andi	r18, 0x03	; 3
    6a02:	30 e0       	ldi	r19, 0x00	; 0
    6a04:	32 2f       	mov	r19, r18
    6a06:	22 27       	eor	r18, r18
    6a08:	33 0f       	add	r19, r19
    6a0a:	33 0f       	add	r19, r19
    6a0c:	82 0f       	add	r24, r18
    6a0e:	93 1f       	adc	r25, r19
    6a10:	a0 e0       	ldi	r26, 0x00	; 0
    6a12:	b0 e0       	ldi	r27, 0x00	; 0
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    6a14:	2e 81       	ldd	r18, Y+6	; 0x06
    6a16:	2f 70       	andi	r18, 0x0F	; 15
    6a18:	3b 85       	ldd	r19, Y+11	; 0x0b
    6a1a:	33 1f       	adc	r19, r19
    6a1c:	33 27       	eor	r19, r19
    6a1e:	33 1f       	adc	r19, r19
    6a20:	23 0f       	add	r18, r19
    6a22:	3a 85       	ldd	r19, Y+10	; 0x0a
    6a24:	33 70       	andi	r19, 0x03	; 3
    6a26:	33 0f       	add	r19, r19
    6a28:	23 0f       	add	r18, r19
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
    6a2a:	27 50       	subi	r18, 0x07	; 7
    6a2c:	04 c0       	rjmp	.+8      	; 0x6a36 <disk_ioctl+0x250>
    6a2e:	88 0f       	add	r24, r24
    6a30:	99 1f       	adc	r25, r25
    6a32:	aa 1f       	adc	r26, r26
    6a34:	bb 1f       	adc	r27, r27
    6a36:	2a 95       	dec	r18
    6a38:	d2 f7       	brpl	.-12     	; 0x6a2e <disk_ioctl+0x248>
    6a3a:	f8 01       	movw	r30, r16
    6a3c:	80 83       	st	Z, r24
    6a3e:	91 83       	std	Z+1, r25	; 0x01
    6a40:	a2 83       	std	Z+2, r26	; 0x02
    6a42:	b3 83       	std	Z+3, r27	; 0x03
			}
			res = RES_OK;
    6a44:	10 e0       	ldi	r17, 0x00	; 0
    6a46:	f8 ce       	rjmp	.-528    	; 0x6838 <disk_ioctl+0x52>
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();
    6a48:	80 e1       	ldi	r24, 0x10	; 16
    6a4a:	80 93 46 06 	sts	0x0646, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6a4e:	8f ef       	ldi	r24, 0xFF	; 255
    6a50:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	UINT wt			/* Timeout [ms] */
)
{
	BYTE d;

	Timer2 = wt / 10;
    6a54:	82 e3       	ldi	r24, 0x32	; 50
    6a56:	80 93 d9 22 	sts	0x22D9, r24
    6a5a:	05 c0       	rjmp	.+10     	; 0x6a66 <disk_ioctl+0x280>
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    6a5c:	80 91 d9 22 	lds	r24, 0x22D9
    6a60:	88 23       	and	r24, r24
    6a62:	09 f4       	brne	.+2      	; 0x6a66 <disk_ioctl+0x280>
    6a64:	91 c0       	rjmp	.+290    	; 0x6b88 <disk_ioctl+0x3a2>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6a66:	8f ef       	ldi	r24, 0xFF	; 255
    6a68:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	BYTE d;

	Timer2 = wt / 10;
	do
		d = xchg_spi(0xFF);
	while (d != 0xFF && Timer2);
    6a6c:	8f 3f       	cpi	r24, 0xFF	; 255
    6a6e:	b1 f7       	brne	.-20     	; 0x6a5c <disk_ioctl+0x276>
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
			res = RES_OK;
    6a70:	10 e0       	ldi	r17, 0x00	; 0
    6a72:	e2 ce       	rjmp	.-572    	; 0x6838 <disk_ioctl+0x52>
			res = RES_OK;
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
    6a74:	80 91 d8 22 	lds	r24, 0x22D8
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
    6a78:	40 e0       	ldi	r20, 0x00	; 0
    6a7a:	50 e0       	ldi	r21, 0x00	; 0
    6a7c:	ba 01       	movw	r22, r20
			res = RES_OK;
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
    6a7e:	82 ff       	sbrs	r24, 2
    6a80:	53 c0       	rjmp	.+166    	; 0x6b28 <disk_ioctl+0x342>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
    6a82:	8d e8       	ldi	r24, 0x8D	; 141
    6a84:	19 dc       	rcall	.-1998   	; 0x62b8 <send_cmd>
    6a86:	81 11       	cpse	r24, r1
    6a88:	ec ce       	rjmp	.-552    	; 0x6862 <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6a8a:	8f ef       	ldi	r24, 0xFF	; 255
    6a8c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
				xchg_spi(0xFF);
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
    6a90:	60 e1       	ldi	r22, 0x10	; 16
    6a92:	70 e0       	ldi	r23, 0x00	; 0
    6a94:	ce 01       	movw	r24, r28
    6a96:	01 96       	adiw	r24, 0x01	; 1
    6a98:	d1 db       	rcall	.-2142   	; 0x623c <rcvr_datablock>
    6a9a:	89 2b       	or	r24, r25
    6a9c:	09 f4       	brne	.+2      	; 0x6aa0 <disk_ioctl+0x2ba>
    6a9e:	e1 ce       	rjmp	.-574    	; 0x6862 <disk_ioctl+0x7c>
    6aa0:	b0 e3       	ldi	r27, 0x30	; 48
    6aa2:	fb 2e       	mov	r15, r27
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6aa4:	8f ef       	ldi	r24, 0xFF	; 255
    6aa6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6aaa:	fa 94       	dec	r15
	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
				xchg_spi(0xFF);
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
    6aac:	d9 f7       	brne	.-10     	; 0x6aa4 <disk_ioctl+0x2be>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
    6aae:	2b 85       	ldd	r18, Y+11	; 0x0b
    6ab0:	22 95       	swap	r18
    6ab2:	2f 70       	andi	r18, 0x0F	; 15
    6ab4:	80 e1       	ldi	r24, 0x10	; 16
    6ab6:	90 e0       	ldi	r25, 0x00	; 0
    6ab8:	a0 e0       	ldi	r26, 0x00	; 0
    6aba:	b0 e0       	ldi	r27, 0x00	; 0
    6abc:	04 c0       	rjmp	.+8      	; 0x6ac6 <disk_ioctl+0x2e0>
    6abe:	88 0f       	add	r24, r24
    6ac0:	99 1f       	adc	r25, r25
    6ac2:	aa 1f       	adc	r26, r26
    6ac4:	bb 1f       	adc	r27, r27
    6ac6:	2a 95       	dec	r18
    6ac8:	d2 f7       	brpl	.-12     	; 0x6abe <disk_ioctl+0x2d8>
    6aca:	f8 01       	movw	r30, r16
    6acc:	80 83       	st	Z, r24
    6ace:	91 83       	std	Z+1, r25	; 0x01
    6ad0:	a2 83       	std	Z+2, r26	; 0x02
    6ad2:	b3 83       	std	Z+3, r27	; 0x03
					res = RES_OK;
    6ad4:	10 e0       	ldi	r17, 0x00	; 0
    6ad6:	b0 ce       	rjmp	.-672    	; 0x6838 <disk_ioctl+0x52>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6ad8:	8f ef       	ldi	r24, 0xFF	; 255
    6ada:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
)
{
	BYTE token;


	Timer1 = 20;
    6ade:	84 e1       	ldi	r24, 0x14	; 20
    6ae0:	80 93 da 22 	sts	0x22DA, r24
    6ae4:	05 c0       	rjmp	.+10     	; 0x6af0 <disk_ioctl+0x30a>
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    6ae6:	80 91 da 22 	lds	r24, 0x22DA
    6aea:	88 23       	and	r24, r24
    6aec:	09 f4       	brne	.+2      	; 0x6af0 <disk_ioctl+0x30a>
    6aee:	b9 ce       	rjmp	.-654    	; 0x6862 <disk_ioctl+0x7c>
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6af0:	8f ef       	ldi	r24, 0xFF	; 255
    6af2:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>


	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
    6af6:	8f 3f       	cpi	r24, 0xFF	; 255
    6af8:	b1 f3       	breq	.-20     	; 0x6ae6 <disk_ioctl+0x300>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
    6afa:	8e 3f       	cpi	r24, 0xFE	; 254
    6afc:	09 f0       	breq	.+2      	; 0x6b00 <disk_ioctl+0x31a>
    6afe:	b1 ce       	rjmp	.-670    	; 0x6862 <disk_ioctl+0x7c>
    6b00:	78 01       	movw	r14, r16
    6b02:	f0 e4       	ldi	r31, 0x40	; 64
    6b04:	ef 0e       	add	r14, r31
    6b06:	f1 1c       	adc	r15, r1
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		*p++ = spi_wr_rd(0xff);
    6b08:	8f ef       	ldi	r24, 0xFF	; 255
    6b0a:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6b0e:	f8 01       	movw	r30, r16
    6b10:	80 83       	st	Z, r24
		*p++ = spi_wr_rd(0xff);
    6b12:	8f ef       	ldi	r24, 0xFF	; 255
    6b14:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
    6b18:	f8 01       	movw	r30, r16
    6b1a:	81 83       	std	Z+1, r24	; 0x01
    6b1c:	0e 5f       	subi	r16, 0xFE	; 254
    6b1e:	1f 4f       	sbci	r17, 0xFF	; 255
		
	} while (cnt -= 2);
    6b20:	0e 15       	cp	r16, r14
    6b22:	1f 05       	cpc	r17, r15
    6b24:	89 f7       	brne	.-30     	; 0x6b08 <disk_ioctl+0x322>
    6b26:	de ce       	rjmp	.-580    	; 0x68e4 <disk_ioctl+0xfe>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
					res = RES_OK;
				}
			}
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
    6b28:	89 e0       	ldi	r24, 0x09	; 9
    6b2a:	c6 db       	rcall	.-2164   	; 0x62b8 <send_cmd>
    6b2c:	81 11       	cpse	r24, r1
    6b2e:	99 ce       	rjmp	.-718    	; 0x6862 <disk_ioctl+0x7c>
    6b30:	60 e1       	ldi	r22, 0x10	; 16
    6b32:	70 e0       	ldi	r23, 0x00	; 0
    6b34:	ce 01       	movw	r24, r28
    6b36:	01 96       	adiw	r24, 0x01	; 1
    6b38:	81 db       	rcall	.-2302   	; 0x623c <rcvr_datablock>
    6b3a:	89 2b       	or	r24, r25
    6b3c:	09 f4       	brne	.+2      	; 0x6b40 <disk_ioctl+0x35a>
    6b3e:	91 ce       	rjmp	.-734    	; 0x6862 <disk_ioctl+0x7c>
				if (CardType & CT_SD1) {	/* SDv1 */
    6b40:	80 91 d8 22 	lds	r24, 0x22D8
    6b44:	81 ff       	sbrs	r24, 1
    6b46:	4c c0       	rjmp	.+152    	; 0x6be0 <disk_ioctl+0x3fa>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    6b48:	8c 85       	ldd	r24, Y+12	; 0x0c
    6b4a:	88 1f       	adc	r24, r24
    6b4c:	88 27       	eor	r24, r24
    6b4e:	88 1f       	adc	r24, r24
    6b50:	90 e0       	ldi	r25, 0x00	; 0
    6b52:	01 96       	adiw	r24, 0x01	; 1
    6b54:	2b 85       	ldd	r18, Y+11	; 0x0b
    6b56:	2f 73       	andi	r18, 0x3F	; 63
    6b58:	82 0f       	add	r24, r18
    6b5a:	91 1d       	adc	r25, r1
    6b5c:	82 0f       	add	r24, r18
    6b5e:	91 1d       	adc	r25, r1
    6b60:	2e 85       	ldd	r18, Y+14	; 0x0e
    6b62:	22 95       	swap	r18
    6b64:	26 95       	lsr	r18
    6b66:	26 95       	lsr	r18
    6b68:	23 70       	andi	r18, 0x03	; 3
    6b6a:	21 50       	subi	r18, 0x01	; 1
    6b6c:	02 c0       	rjmp	.+4      	; 0x6b72 <disk_ioctl+0x38c>
    6b6e:	88 0f       	add	r24, r24
    6b70:	99 1f       	adc	r25, r25
    6b72:	2a 95       	dec	r18
    6b74:	e2 f7       	brpl	.-8      	; 0x6b6e <disk_ioctl+0x388>
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    6b76:	a0 e0       	ldi	r26, 0x00	; 0
    6b78:	b0 e0       	ldi	r27, 0x00	; 0
    6b7a:	f8 01       	movw	r30, r16
    6b7c:	80 83       	st	Z, r24
    6b7e:	91 83       	std	Z+1, r25	; 0x01
    6b80:	a2 83       	std	Z+2, r26	; 0x02
    6b82:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    6b84:	10 e0       	ldi	r17, 0x00	; 0
    6b86:	58 ce       	rjmp	.-848    	; 0x6838 <disk_ioctl+0x52>
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();
    6b88:	80 e1       	ldi	r24, 0x10	; 16
    6b8a:	80 93 45 06 	sts	0x0645, r24
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	return spi_wr_rd(dat);
    6b8e:	8f ef       	ldi	r24, 0xFF	; 255
    6b90:	0e 94 d5 08 	call	0x11aa	; 0x11aa <spi_wr_rd>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
    6b94:	11 e0       	ldi	r17, 0x01	; 1
    6b96:	50 ce       	rjmp	.-864    	; 0x6838 <disk_ioctl+0x52>
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
    6b98:	88 85       	ldd	r24, Y+8	; 0x08
    6b9a:	8f 73       	andi	r24, 0x3F	; 63
    6b9c:	90 e0       	ldi	r25, 0x00	; 0
    6b9e:	a0 e0       	ldi	r26, 0x00	; 0
    6ba0:	b0 e0       	ldi	r27, 0x00	; 0
    6ba2:	dc 01       	movw	r26, r24
    6ba4:	99 27       	eor	r25, r25
    6ba6:	88 27       	eor	r24, r24
    6ba8:	01 96       	adiw	r24, 0x01	; 1
    6baa:	a1 1d       	adc	r26, r1
    6bac:	b1 1d       	adc	r27, r1
    6bae:	29 85       	ldd	r18, Y+9	; 0x09
    6bb0:	30 e0       	ldi	r19, 0x00	; 0
    6bb2:	32 2f       	mov	r19, r18
    6bb4:	22 27       	eor	r18, r18
    6bb6:	4a 85       	ldd	r20, Y+10	; 0x0a
    6bb8:	24 0f       	add	r18, r20
    6bba:	31 1d       	adc	r19, r1
    6bbc:	82 0f       	add	r24, r18
    6bbe:	93 1f       	adc	r25, r19
    6bc0:	a1 1d       	adc	r26, r1
    6bc2:	b1 1d       	adc	r27, r1
				*(DWORD*)buff = csize << 10;
    6bc4:	7a e0       	ldi	r23, 0x0A	; 10
    6bc6:	88 0f       	add	r24, r24
    6bc8:	99 1f       	adc	r25, r25
    6bca:	aa 1f       	adc	r26, r26
    6bcc:	bb 1f       	adc	r27, r27
    6bce:	7a 95       	dec	r23
    6bd0:	d1 f7       	brne	.-12     	; 0x6bc6 <disk_ioctl+0x3e0>
    6bd2:	f8 01       	movw	r30, r16
    6bd4:	80 83       	st	Z, r24
    6bd6:	91 83       	std	Z+1, r25	; 0x01
    6bd8:	a2 83       	std	Z+2, r26	; 0x02
    6bda:	b3 83       	std	Z+3, r27	; 0x03
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
			}
			res = RES_OK;
    6bdc:	10 e0       	ldi	r17, 0x00	; 0
    6bde:	2c ce       	rjmp	.-936    	; 0x6838 <disk_ioctl+0x52>
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
				if (CardType & CT_SD1) {	/* SDv1 */
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    6be0:	8c 85       	ldd	r24, Y+12	; 0x0c
    6be2:	98 2f       	mov	r25, r24
    6be4:	93 70       	andi	r25, 0x03	; 3
    6be6:	82 95       	swap	r24
    6be8:	86 95       	lsr	r24
    6bea:	87 70       	andi	r24, 0x07	; 7
    6bec:	48 2f       	mov	r20, r24
    6bee:	50 e0       	ldi	r21, 0x00	; 0
    6bf0:	f8 e0       	ldi	r31, 0x08	; 8
    6bf2:	9f 9f       	mul	r25, r31
    6bf4:	40 0d       	add	r20, r0
    6bf6:	51 1d       	adc	r21, r1
    6bf8:	11 24       	eor	r1, r1
    6bfa:	4f 5f       	subi	r20, 0xFF	; 255
    6bfc:	5f 4f       	sbci	r21, 0xFF	; 255
    6bfe:	2b 85       	ldd	r18, Y+11	; 0x0b
    6c00:	2c 77       	andi	r18, 0x7C	; 124
    6c02:	30 e0       	ldi	r19, 0x00	; 0
    6c04:	35 95       	asr	r19
    6c06:	27 95       	ror	r18
    6c08:	35 95       	asr	r19
    6c0a:	27 95       	ror	r18
    6c0c:	2f 5f       	subi	r18, 0xFF	; 255
    6c0e:	3f 4f       	sbci	r19, 0xFF	; 255
    6c10:	42 9f       	mul	r20, r18
    6c12:	c0 01       	movw	r24, r0
    6c14:	43 9f       	mul	r20, r19
    6c16:	90 0d       	add	r25, r0
    6c18:	52 9f       	mul	r21, r18
    6c1a:	90 0d       	add	r25, r0
    6c1c:	11 24       	eor	r1, r1
    6c1e:	ab cf       	rjmp	.-170    	; 0x6b76 <disk_ioctl+0x390>

00006c20 <__vector_14>:
{
	TCC0.INTCTRLA = TC_OVFINTLVL_OFF_gc;
	DACB.CTRLA &= ~(DAC_ENABLE_bm);
	speaker_off();

	WavFifo = 0;		/* Unregister FIFO control structure */
    6c20:	1f 92       	push	r1
    6c22:	0f 92       	push	r0
    6c24:	0f b6       	in	r0, 0x3f	; 63
    6c26:	0f 92       	push	r0
    6c28:	11 24       	eor	r1, r1
    6c2a:	0b b6       	in	r0, 0x3b	; 59
    6c2c:	0f 92       	push	r0
    6c2e:	cf 92       	push	r12
    6c30:	df 92       	push	r13
    6c32:	ef 92       	push	r14
    6c34:	ff 92       	push	r15
    6c36:	2f 93       	push	r18
    6c38:	3f 93       	push	r19
    6c3a:	4f 93       	push	r20
    6c3c:	5f 93       	push	r21
    6c3e:	6f 93       	push	r22
    6c40:	7f 93       	push	r23
    6c42:	8f 93       	push	r24
    6c44:	9f 93       	push	r25
    6c46:	af 93       	push	r26
    6c48:	bf 93       	push	r27
    6c4a:	ef 93       	push	r30
    6c4c:	ff 93       	push	r31
    6c4e:	e0 91 3c 23 	lds	r30, 0x233C
    6c52:	f0 91 3d 23 	lds	r31, 0x233D
    6c56:	30 97       	sbiw	r30, 0x00	; 0
    6c58:	09 f4       	brne	.+2      	; 0x6c5c <__vector_14+0x3c>
    6c5a:	4d c0       	rjmp	.+154    	; 0x6cf6 <__vector_14+0xd6>
    6c5c:	46 81       	ldd	r20, Z+6	; 0x06
    6c5e:	57 81       	ldd	r21, Z+7	; 0x07
    6c60:	22 81       	ldd	r18, Z+2	; 0x02
    6c62:	33 81       	ldd	r19, Z+3	; 0x03
    6c64:	a0 85       	ldd	r26, Z+8	; 0x08
    6c66:	b1 85       	ldd	r27, Z+9	; 0x09
    6c68:	a2 0f       	add	r26, r18
    6c6a:	b3 1f       	adc	r27, r19
    6c6c:	80 81       	ld	r24, Z
    6c6e:	91 81       	ldd	r25, Z+1	; 0x01
    6c70:	81 30       	cpi	r24, 0x01	; 1
    6c72:	91 05       	cpc	r25, r1
    6c74:	81 f0       	breq	.+32     	; 0x6c96 <__vector_14+0x76>
    6c76:	08 f4       	brcc	.+2      	; 0x6c7a <__vector_14+0x5a>
    6c78:	55 c0       	rjmp	.+170    	; 0x6d24 <__vector_14+0x104>
    6c7a:	02 97       	sbiw	r24, 0x02	; 2
    6c7c:	09 f0       	breq	.+2      	; 0x6c80 <__vector_14+0x60>
    6c7e:	5b c0       	rjmp	.+182    	; 0x6d36 <__vector_14+0x116>
    6c80:	42 30       	cpi	r20, 0x02	; 2
    6c82:	51 05       	cpc	r21, r1
    6c84:	c0 f1       	brcs	.+112    	; 0x6cf6 <__vector_14+0xd6>
    6c86:	11 96       	adiw	r26, 0x01	; 1
    6c88:	6c 91       	ld	r22, X
    6c8a:	60 58       	subi	r22, 0x80	; 128
    6c8c:	42 50       	subi	r20, 0x02	; 2
    6c8e:	51 09       	sbc	r21, r1
    6c90:	2e 5f       	subi	r18, 0xFE	; 254
    6c92:	3f 4f       	sbci	r19, 0xFF	; 255
    6c94:	08 c0       	rjmp	.+16     	; 0x6ca6 <__vector_14+0x86>
    6c96:	42 30       	cpi	r20, 0x02	; 2
    6c98:	51 05       	cpc	r21, r1
    6c9a:	68 f1       	brcs	.+90     	; 0x6cf6 <__vector_14+0xd6>
    6c9c:	6c 91       	ld	r22, X
    6c9e:	42 50       	subi	r20, 0x02	; 2
    6ca0:	51 09       	sbc	r21, r1
    6ca2:	2e 5f       	subi	r18, 0xFE	; 254
    6ca4:	3f 4f       	sbci	r19, 0xFF	; 255
    6ca6:	46 83       	std	Z+6, r20	; 0x06
    6ca8:	57 83       	std	Z+7, r21	; 0x07
    6caa:	82 85       	ldd	r24, Z+10	; 0x0a
    6cac:	93 85       	ldd	r25, Z+11	; 0x0b
    6cae:	01 97       	sbiw	r24, 0x01	; 1
    6cb0:	82 23       	and	r24, r18
    6cb2:	93 23       	and	r25, r19
    6cb4:	82 83       	std	Z+2, r24	; 0x02
    6cb6:	93 83       	std	Z+3, r25	; 0x03
    6cb8:	70 e0       	ldi	r23, 0x00	; 0
    6cba:	80 e0       	ldi	r24, 0x00	; 0
    6cbc:	90 e0       	ldi	r25, 0x00	; 0
    6cbe:	04 d5       	rcall	.+2568   	; 0x76c8 <__floatsisf>
    6cc0:	26 e6       	ldi	r18, 0x66	; 102
    6cc2:	36 e6       	ldi	r19, 0x66	; 102
    6cc4:	46 e2       	ldi	r20, 0x26	; 38
    6cc6:	5f e3       	ldi	r21, 0x3F	; 63
    6cc8:	8b d5       	rcall	.+2838   	; 0x77e0 <__mulsf3>
    6cca:	6b 01       	movw	r12, r22
    6ccc:	7c 01       	movw	r14, r24
    6cce:	60 e0       	ldi	r22, 0x00	; 0
    6cd0:	70 e0       	ldi	r23, 0x00	; 0
    6cd2:	cb 01       	movw	r24, r22
    6cd4:	f7 d4       	rcall	.+2542   	; 0x76c4 <__floatunsisf>
    6cd6:	23 e3       	ldi	r18, 0x33	; 51
    6cd8:	33 e3       	ldi	r19, 0x33	; 51
    6cda:	43 eb       	ldi	r20, 0xB3	; 179
    6cdc:	5e e3       	ldi	r21, 0x3E	; 62
    6cde:	80 d5       	rcall	.+2816   	; 0x77e0 <__mulsf3>
    6ce0:	9b 01       	movw	r18, r22
    6ce2:	ac 01       	movw	r20, r24
    6ce4:	c7 01       	movw	r24, r14
    6ce6:	b6 01       	movw	r22, r12
    6ce8:	58 d4       	rcall	.+2224   	; 0x759a <__addsf3>
    6cea:	bb d4       	rcall	.+2422   	; 0x7662 <__fixsfsi>
    6cec:	77 27       	eor	r23, r23
    6cee:	60 93 38 03 	sts	0x0338, r22
    6cf2:	70 93 39 03 	sts	0x0339, r23
    6cf6:	ff 91       	pop	r31
    6cf8:	ef 91       	pop	r30
    6cfa:	bf 91       	pop	r27
    6cfc:	af 91       	pop	r26
    6cfe:	9f 91       	pop	r25
    6d00:	8f 91       	pop	r24
    6d02:	7f 91       	pop	r23
    6d04:	6f 91       	pop	r22
    6d06:	5f 91       	pop	r21
    6d08:	4f 91       	pop	r20
    6d0a:	3f 91       	pop	r19
    6d0c:	2f 91       	pop	r18
    6d0e:	ff 90       	pop	r15
    6d10:	ef 90       	pop	r14
    6d12:	df 90       	pop	r13
    6d14:	cf 90       	pop	r12
    6d16:	0f 90       	pop	r0
    6d18:	0b be       	out	0x3b, r0	; 59
    6d1a:	0f 90       	pop	r0
    6d1c:	0f be       	out	0x3f, r0	; 63
    6d1e:	0f 90       	pop	r0
    6d20:	1f 90       	pop	r1
    6d22:	18 95       	reti
    6d24:	41 15       	cp	r20, r1
    6d26:	51 05       	cpc	r21, r1
    6d28:	31 f3       	breq	.-52     	; 0x6cf6 <__vector_14+0xd6>
    6d2a:	6c 91       	ld	r22, X
    6d2c:	41 50       	subi	r20, 0x01	; 1
    6d2e:	51 09       	sbc	r21, r1
    6d30:	2f 5f       	subi	r18, 0xFF	; 255
    6d32:	3f 4f       	sbci	r19, 0xFF	; 255
    6d34:	b8 cf       	rjmp	.-144    	; 0x6ca6 <__vector_14+0x86>
    6d36:	44 30       	cpi	r20, 0x04	; 4
    6d38:	51 05       	cpc	r21, r1
    6d3a:	e8 f2       	brcs	.-70     	; 0x6cf6 <__vector_14+0xd6>
    6d3c:	11 96       	adiw	r26, 0x01	; 1
    6d3e:	6c 91       	ld	r22, X
    6d40:	44 50       	subi	r20, 0x04	; 4
    6d42:	51 09       	sbc	r21, r1
    6d44:	2c 5f       	subi	r18, 0xFC	; 252
    6d46:	3f 4f       	sbci	r19, 0xFF	; 255
    6d48:	ae cf       	rjmp	.-164    	; 0x6ca6 <__vector_14+0x86>

00006d4a <load_wav>:
	FIL *fp,			/* Pointer to the open file object to play */
	const char *title,	/* Title (file name, etc...) */
	void *work,			/* Pointer to working buffer (must be-4 byte aligned) */
	UINT sz_work		/* Size of working buffer (must be power of 2) */
)
{
    6d4a:	2f 92       	push	r2
    6d4c:	3f 92       	push	r3
    6d4e:	4f 92       	push	r4
    6d50:	5f 92       	push	r5
    6d52:	6f 92       	push	r6
    6d54:	7f 92       	push	r7
    6d56:	8f 92       	push	r8
    6d58:	9f 92       	push	r9
    6d5a:	af 92       	push	r10
    6d5c:	bf 92       	push	r11
    6d5e:	cf 92       	push	r12
    6d60:	df 92       	push	r13
    6d62:	ef 92       	push	r14
    6d64:	ff 92       	push	r15
    6d66:	0f 93       	push	r16
    6d68:	1f 93       	push	r17
    6d6a:	cf 93       	push	r28
    6d6c:	df 93       	push	r29
    6d6e:	cd b7       	in	r28, 0x3d	; 61
    6d70:	de b7       	in	r29, 0x3e	; 62
    6d72:	c2 56       	subi	r28, 0x62	; 98
    6d74:	d1 09       	sbc	r29, r1
    6d76:	cd bf       	out	0x3d, r28	; 61
    6d78:	de bf       	out	0x3e, r29	; 62
    6d7a:	8c 01       	movw	r16, r24
    6d7c:	1a 01       	movw	r2, r20
    6d7e:	a3 96       	adiw	r28, 0x23	; 35
    6d80:	2e af       	std	Y+62, r18	; 0x3e
    6d82:	3f af       	std	Y+63, r19	; 0x3f
    6d84:	a3 97       	sbiw	r28, 0x23	; 35


	//xprintf(PSTR("%s\n"), title);	/* Put title */

	/* Is it a WAV file? */
	if (f_read(fp, buff, 12, &br) || br != 12) return -1;
    6d86:	9e 01       	movw	r18, r28
    6d88:	23 5b       	subi	r18, 0xB3	; 179
    6d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    6d8c:	4c e0       	ldi	r20, 0x0C	; 12
    6d8e:	50 e0       	ldi	r21, 0x00	; 0
    6d90:	b1 01       	movw	r22, r2
    6d92:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
    6d96:	81 11       	cpse	r24, r1
    6d98:	bb c0       	rjmp	.+374    	; 0x6f10 <load_wav+0x1c6>
    6d9a:	2f 96       	adiw	r28, 0x0f	; 15
    6d9c:	8e ad       	ldd	r24, Y+62	; 0x3e
    6d9e:	9f ad       	ldd	r25, Y+63	; 0x3f
    6da0:	2f 97       	sbiw	r28, 0x0f	; 15
    6da2:	0c 97       	sbiw	r24, 0x0c	; 12
    6da4:	09 f0       	breq	.+2      	; 0x6da8 <load_wav+0x5e>
    6da6:	b4 c0       	rjmp	.+360    	; 0x6f10 <load_wav+0x1c6>
	if (LD_DWORD(&buff[0]) != FCC('R','I','F','F')) return -1;
    6da8:	f1 01       	movw	r30, r2
    6daa:	80 81       	ld	r24, Z
    6dac:	91 81       	ldd	r25, Z+1	; 0x01
    6dae:	a2 81       	ldd	r26, Z+2	; 0x02
    6db0:	b3 81       	ldd	r27, Z+3	; 0x03
    6db2:	82 35       	cpi	r24, 0x52	; 82
    6db4:	99 44       	sbci	r25, 0x49	; 73
    6db6:	a6 44       	sbci	r26, 0x46	; 70
    6db8:	b6 44       	sbci	r27, 0x46	; 70
    6dba:	09 f0       	breq	.+2      	; 0x6dbe <load_wav+0x74>
    6dbc:	a9 c0       	rjmp	.+338    	; 0x6f10 <load_wav+0x1c6>
	if (LD_DWORD(&buff[8]) != FCC('W','A','V','E')) return -1;
    6dbe:	f1 01       	movw	r30, r2
    6dc0:	80 85       	ldd	r24, Z+8	; 0x08
    6dc2:	91 85       	ldd	r25, Z+9	; 0x09
    6dc4:	a2 85       	ldd	r26, Z+10	; 0x0a
    6dc6:	b3 85       	ldd	r27, Z+11	; 0x0b
    6dc8:	87 35       	cpi	r24, 0x57	; 87
    6dca:	91 44       	sbci	r25, 0x41	; 65
    6dcc:	a6 45       	sbci	r26, 0x56	; 86
    6dce:	b5 44       	sbci	r27, 0x45	; 69
    6dd0:	09 f0       	breq	.+2      	; 0x6dd4 <load_wav+0x8a>
    6dd2:	9e c0       	rjmp	.+316    	; 0x6f10 <load_wav+0x1c6>
	eof = LD_DWORD(&buff[4]) + 8;
    6dd4:	d1 01       	movw	r26, r2
    6dd6:	14 96       	adiw	r26, 0x04	; 4
    6dd8:	8d 90       	ld	r8, X+
    6dda:	9d 90       	ld	r9, X+
    6ddc:	ad 90       	ld	r10, X+
    6dde:	bc 90       	ld	r11, X
    6de0:	17 97       	sbiw	r26, 0x07	; 7
    6de2:	b8 e0       	ldi	r27, 0x08	; 8
    6de4:	8b 0e       	add	r8, r27
    6de6:	91 1c       	adc	r9, r1
    6de8:	a1 1c       	adc	r10, r1
    6dea:	b1 1c       	adc	r11, r1

	/* Analyze the RIFF-WAVE header and get properties */
	nam[0] = art[0] = 0;
    6dec:	19 82       	std	Y+1, r1	; 0x01
    6dee:	19 a2       	std	Y+33, r1	; 0x21
    6df0:	f8 01       	movw	r30, r16
    6df2:	86 81       	ldd	r24, Z+6	; 0x06
    6df4:	97 81       	ldd	r25, Z+7	; 0x07
    6df6:	a0 85       	ldd	r26, Z+8	; 0x08
    6df8:	b1 85       	ldd	r27, Z+9	; 0x09
	md = fsmp = wsmp = offw = szwav = 0;
    6dfa:	a1 96       	adiw	r28, 0x21	; 33
    6dfc:	1c ae       	std	Y+60, r1	; 0x3c
    6dfe:	1d ae       	std	Y+61, r1	; 0x3d
    6e00:	1e ae       	std	Y+62, r1	; 0x3e
    6e02:	1f ae       	std	Y+63, r1	; 0x3f
    6e04:	a1 97       	sbiw	r28, 0x21	; 33
    6e06:	6d 96       	adiw	r28, 0x1d	; 29
    6e08:	1c ae       	std	Y+60, r1	; 0x3c
    6e0a:	1d ae       	std	Y+61, r1	; 0x3d
    6e0c:	1e ae       	std	Y+62, r1	; 0x3e
    6e0e:	1f ae       	std	Y+63, r1	; 0x3f
    6e10:	6d 97       	sbiw	r28, 0x1d	; 29
    6e12:	41 2c       	mov	r4, r1
    6e14:	51 2c       	mov	r5, r1
    6e16:	32 01       	movw	r6, r4
    6e18:	69 96       	adiw	r28, 0x19	; 25
    6e1a:	1e ae       	std	Y+62, r1	; 0x3e
    6e1c:	1f ae       	std	Y+63, r1	; 0x3f
    6e1e:	69 97       	sbiw	r28, 0x19	; 25
					if (f_read(fp, buff, 8, &br) || br != 8) return -1;
					ssz = (LD_DWORD(&buff[4]) + 1) & ~1;
					p = 0;
					switch (LD_DWORD(buff)) {
					case FCC('I','N','A','M'):		/* INAM sub-chunk */
						p = nam; break;
    6e20:	9e 01       	movw	r18, r28
    6e22:	2f 5d       	subi	r18, 0xDF	; 223
    6e24:	3f 4f       	sbci	r19, 0xFF	; 255
    6e26:	61 96       	adiw	r28, 0x11	; 17
    6e28:	2e af       	std	Y+62, r18	; 0x3e
    6e2a:	3f af       	std	Y+63, r19	; 0x3f
    6e2c:	61 97       	sbiw	r28, 0x11	; 17
					case FCC('I','A','R','T'):		/* IART sub-cnunk */
						p = art; break;
    6e2e:	ae 01       	movw	r20, r28
    6e30:	4f 5f       	subi	r20, 0xFF	; 255
    6e32:	5f 4f       	sbci	r21, 0xFF	; 255
    6e34:	63 96       	adiw	r28, 0x13	; 19
    6e36:	4e af       	std	Y+62, r20	; 0x3e
    6e38:	5f af       	std	Y+63, r21	; 0x3f
    6e3a:	63 97       	sbiw	r28, 0x13	; 19
    6e3c:	67 96       	adiw	r28, 0x17	; 23
    6e3e:	8c ae       	std	Y+60, r8	; 0x3c
    6e40:	9d ae       	std	Y+61, r9	; 0x3d
    6e42:	ae ae       	std	Y+62, r10	; 0x3e
    6e44:	bf ae       	std	Y+63, r11	; 0x3f
    6e46:	67 97       	sbiw	r28, 0x17	; 23
    6e48:	a5 01       	movw	r20, r10
    6e4a:	94 01       	movw	r18, r8
	eof = LD_DWORD(&buff[4]) + 8;

	/* Analyze the RIFF-WAVE header and get properties */
	nam[0] = art[0] = 0;
	md = fsmp = wsmp = offw = szwav = 0;
	while (f_tell(fp) < eof) {
    6e4c:	82 17       	cp	r24, r18
    6e4e:	93 07       	cpc	r25, r19
    6e50:	a4 07       	cpc	r26, r20
    6e52:	b5 07       	cpc	r27, r21
    6e54:	08 f0       	brcs	.+2      	; 0x6e58 <load_wav+0x10e>
    6e56:	a5 c1       	rjmp	.+842    	; 0x71a2 <load_wav+0x458>
		if (f_read(fp, buff, 8, &br) || br != 8) return -1;
    6e58:	9e 01       	movw	r18, r28
    6e5a:	23 5b       	subi	r18, 0xB3	; 179
    6e5c:	3f 4f       	sbci	r19, 0xFF	; 255
    6e5e:	48 e0       	ldi	r20, 0x08	; 8
    6e60:	50 e0       	ldi	r21, 0x00	; 0
    6e62:	b1 01       	movw	r22, r2
    6e64:	c8 01       	movw	r24, r16
    6e66:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
    6e6a:	81 11       	cpse	r24, r1
    6e6c:	51 c0       	rjmp	.+162    	; 0x6f10 <load_wav+0x1c6>
    6e6e:	2f 96       	adiw	r28, 0x0f	; 15
    6e70:	8e ad       	ldd	r24, Y+62	; 0x3e
    6e72:	9f ad       	ldd	r25, Y+63	; 0x3f
    6e74:	2f 97       	sbiw	r28, 0x0f	; 15
    6e76:	08 97       	sbiw	r24, 0x08	; 8
    6e78:	09 f0       	breq	.+2      	; 0x6e7c <load_wav+0x132>
    6e7a:	4a c0       	rjmp	.+148    	; 0x6f10 <load_wav+0x1c6>
		sz = (LD_DWORD(&buff[4]) + 1) & ~1;
    6e7c:	d1 01       	movw	r26, r2
    6e7e:	14 96       	adiw	r26, 0x04	; 4
    6e80:	cd 90       	ld	r12, X+
    6e82:	dd 90       	ld	r13, X+
    6e84:	ed 90       	ld	r14, X+
    6e86:	fc 90       	ld	r15, X
    6e88:	17 97       	sbiw	r26, 0x07	; 7
    6e8a:	bf ef       	ldi	r27, 0xFF	; 255
    6e8c:	cb 1a       	sub	r12, r27
    6e8e:	db 0a       	sbc	r13, r27
    6e90:	eb 0a       	sbc	r14, r27
    6e92:	fb 0a       	sbc	r15, r27
    6e94:	e8 94       	clt
    6e96:	c0 f8       	bld	r12, 0
		switch (LD_DWORD(&buff[0])) {
    6e98:	f1 01       	movw	r30, r2
    6e9a:	80 81       	ld	r24, Z
    6e9c:	91 81       	ldd	r25, Z+1	; 0x01
    6e9e:	a2 81       	ldd	r26, Z+2	; 0x02
    6ea0:	b3 81       	ldd	r27, Z+3	; 0x03
    6ea2:	8c 34       	cpi	r24, 0x4C	; 76
    6ea4:	f9 e4       	ldi	r31, 0x49	; 73
    6ea6:	9f 07       	cpc	r25, r31
    6ea8:	f3 e5       	ldi	r31, 0x53	; 83
    6eaa:	af 07       	cpc	r26, r31
    6eac:	f4 e5       	ldi	r31, 0x54	; 84
    6eae:	bf 07       	cpc	r27, r31
    6eb0:	09 f4       	brne	.+2      	; 0x6eb4 <load_wav+0x16a>
    6eb2:	bc c0       	rjmp	.+376    	; 0x702c <load_wav+0x2e2>
    6eb4:	40 f1       	brcs	.+80     	; 0x6f06 <load_wav+0x1bc>
    6eb6:	84 36       	cpi	r24, 0x64	; 100
    6eb8:	41 e6       	ldi	r20, 0x61	; 97
    6eba:	94 07       	cpc	r25, r20
    6ebc:	44 e7       	ldi	r20, 0x74	; 116
    6ebe:	a4 07       	cpc	r26, r20
    6ec0:	41 e6       	ldi	r20, 0x61	; 97
    6ec2:	b4 07       	cpc	r27, r20
    6ec4:	09 f4       	brne	.+2      	; 0x6ec8 <load_wav+0x17e>
    6ec6:	90 c0       	rjmp	.+288    	; 0x6fe8 <load_wav+0x29e>
    6ec8:	86 36       	cpi	r24, 0x66	; 102
    6eca:	91 46       	sbci	r25, 0x61	; 97
    6ecc:	a3 46       	sbci	r26, 0x63	; 99
    6ece:	b4 47       	sbci	r27, 0x74	; 116
    6ed0:	f9 f4       	brne	.+62     	; 0x6f10 <load_wav+0x1c6>
			}
			fsmp = LD_DWORD(&buff[4]);		/* Sampling rate */
			break;

		case FCC('f','a','c','t') :
			f_lseek(fp, f_tell(fp) + sz);
    6ed2:	d8 01       	movw	r26, r16
    6ed4:	16 96       	adiw	r26, 0x06	; 6
    6ed6:	4d 91       	ld	r20, X+
    6ed8:	5d 91       	ld	r21, X+
    6eda:	6d 91       	ld	r22, X+
    6edc:	7c 91       	ld	r23, X
    6ede:	19 97       	sbiw	r26, 0x09	; 9
    6ee0:	4c 0d       	add	r20, r12
    6ee2:	5d 1d       	adc	r21, r13
    6ee4:	6e 1d       	adc	r22, r14
    6ee6:	7f 1d       	adc	r23, r15
    6ee8:	c8 01       	movw	r24, r16
    6eea:	0e 94 12 2f 	call	0x5e24	; 0x5e24 <f_lseek>
    6eee:	f8 01       	movw	r30, r16
    6ef0:	86 81       	ldd	r24, Z+6	; 0x06
    6ef2:	97 81       	ldd	r25, Z+7	; 0x07
    6ef4:	a0 85       	ldd	r26, Z+8	; 0x08
    6ef6:	b1 85       	ldd	r27, Z+9	; 0x09
    6ef8:	67 96       	adiw	r28, 0x17	; 23
    6efa:	2c ad       	ldd	r18, Y+60	; 0x3c
    6efc:	3d ad       	ldd	r19, Y+61	; 0x3d
    6efe:	4e ad       	ldd	r20, Y+62	; 0x3e
    6f00:	5f ad       	ldd	r21, Y+63	; 0x3f
    6f02:	67 97       	sbiw	r28, 0x17	; 23
			break;
    6f04:	a3 cf       	rjmp	.-186    	; 0x6e4c <load_wav+0x102>
	nam[0] = art[0] = 0;
	md = fsmp = wsmp = offw = szwav = 0;
	while (f_tell(fp) < eof) {
		if (f_read(fp, buff, 8, &br) || br != 8) return -1;
		sz = (LD_DWORD(&buff[4]) + 1) & ~1;
		switch (LD_DWORD(&buff[0])) {
    6f06:	86 36       	cpi	r24, 0x66	; 102
    6f08:	9d 46       	sbci	r25, 0x6D	; 109
    6f0a:	a4 47       	sbci	r26, 0x74	; 116
    6f0c:	b0 42       	sbci	r27, 0x20	; 32
    6f0e:	c9 f0       	breq	.+50     	; 0x6f42 <load_wav+0x1f8>
				if (f_lseek(fp, sz)) return -1;	/* Skip unknown sub-chunk type */
			}
			break;

		default :	/* Unknown chunk */
			return -1;
    6f10:	8f ef       	ldi	r24, 0xFF	; 255
    6f12:	9f ef       	ldi	r25, 0xFF	; 255

	sound_stop();	/* Stop sound output */

	//xputc('\n');
	return k;	/* Terminated due to -1:error, 0:eot, >0:key code */
}
    6f14:	ce 59       	subi	r28, 0x9E	; 158
    6f16:	df 4f       	sbci	r29, 0xFF	; 255
    6f18:	cd bf       	out	0x3d, r28	; 61
    6f1a:	de bf       	out	0x3e, r29	; 62
    6f1c:	df 91       	pop	r29
    6f1e:	cf 91       	pop	r28
    6f20:	1f 91       	pop	r17
    6f22:	0f 91       	pop	r16
    6f24:	ff 90       	pop	r15
    6f26:	ef 90       	pop	r14
    6f28:	df 90       	pop	r13
    6f2a:	cf 90       	pop	r12
    6f2c:	bf 90       	pop	r11
    6f2e:	af 90       	pop	r10
    6f30:	9f 90       	pop	r9
    6f32:	8f 90       	pop	r8
    6f34:	7f 90       	pop	r7
    6f36:	6f 90       	pop	r6
    6f38:	5f 90       	pop	r5
    6f3a:	4f 90       	pop	r4
    6f3c:	3f 90       	pop	r3
    6f3e:	2f 90       	pop	r2
    6f40:	08 95       	ret
	while (f_tell(fp) < eof) {
		if (f_read(fp, buff, 8, &br) || br != 8) return -1;
		sz = (LD_DWORD(&buff[4]) + 1) & ~1;
		switch (LD_DWORD(&buff[0])) {
		case FCC('f','m','t',' ') :
			if (sz > 1000 || sz < 16 || f_read(fp, buff, sz, &br) || sz != br) return -1;
    6f42:	d7 01       	movw	r26, r14
    6f44:	c6 01       	movw	r24, r12
    6f46:	40 97       	sbiw	r24, 0x10	; 16
    6f48:	a1 09       	sbc	r26, r1
    6f4a:	b1 09       	sbc	r27, r1
    6f4c:	89 3d       	cpi	r24, 0xD9	; 217
    6f4e:	93 40       	sbci	r25, 0x03	; 3
    6f50:	a1 05       	cpc	r26, r1
    6f52:	b1 05       	cpc	r27, r1
    6f54:	e8 f6       	brcc	.-70     	; 0x6f10 <load_wav+0x1c6>
    6f56:	9e 01       	movw	r18, r28
    6f58:	23 5b       	subi	r18, 0xB3	; 179
    6f5a:	3f 4f       	sbci	r19, 0xFF	; 255
    6f5c:	a6 01       	movw	r20, r12
    6f5e:	b1 01       	movw	r22, r2
    6f60:	c8 01       	movw	r24, r16
    6f62:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
    6f66:	81 11       	cpse	r24, r1
    6f68:	d3 cf       	rjmp	.-90     	; 0x6f10 <load_wav+0x1c6>
    6f6a:	2f 96       	adiw	r28, 0x0f	; 15
    6f6c:	8e ad       	ldd	r24, Y+62	; 0x3e
    6f6e:	9f ad       	ldd	r25, Y+63	; 0x3f
    6f70:	2f 97       	sbiw	r28, 0x0f	; 15
    6f72:	a0 e0       	ldi	r26, 0x00	; 0
    6f74:	b0 e0       	ldi	r27, 0x00	; 0
    6f76:	8c 15       	cp	r24, r12
    6f78:	9d 05       	cpc	r25, r13
    6f7a:	ae 05       	cpc	r26, r14
    6f7c:	bf 05       	cpc	r27, r15
    6f7e:	41 f6       	brne	.-112    	; 0x6f10 <load_wav+0x1c6>
			if (LD_WORD(&buff[0]) != 0x1) return -1;	/* Check if LPCM */
    6f80:	d1 01       	movw	r26, r2
    6f82:	8d 91       	ld	r24, X+
    6f84:	9c 91       	ld	r25, X
    6f86:	11 97       	sbiw	r26, 0x01	; 1
    6f88:	01 97       	sbiw	r24, 0x01	; 1
    6f8a:	11 f6       	brne	.-124    	; 0x6f10 <load_wav+0x1c6>
			if (LD_WORD(&buff[2]) == 2) {	/* Channels (1 or 2) */
    6f8c:	31 e0       	ldi	r19, 0x01	; 1
    6f8e:	20 e0       	ldi	r18, 0x00	; 0
    6f90:	12 96       	adiw	r26, 0x02	; 2
    6f92:	8d 91       	ld	r24, X+
    6f94:	9c 91       	ld	r25, X
    6f96:	13 97       	sbiw	r26, 0x03	; 3
    6f98:	02 97       	sbiw	r24, 0x02	; 2
    6f9a:	09 f0       	breq	.+2      	; 0x6f9e <load_wav+0x254>
    6f9c:	30 e0       	ldi	r19, 0x00	; 0
				md = 1; wsmp = 2;
    6f9e:	68 96       	adiw	r28, 0x18	; 24
    6fa0:	3f af       	std	Y+63, r19	; 0x3f
    6fa2:	68 97       	sbiw	r28, 0x18	; 24
    6fa4:	69 96       	adiw	r28, 0x19	; 25
    6fa6:	2f af       	std	Y+63, r18	; 0x3f
    6fa8:	69 97       	sbiw	r28, 0x19	; 25
			} else {
				md = 0; wsmp = 1;
			}
			if (LD_WORD(&buff[14]) == 16) {	/* Resolution (8 or 16) */
    6faa:	f1 01       	movw	r30, r2
    6fac:	86 85       	ldd	r24, Z+14	; 0x0e
    6fae:	97 85       	ldd	r25, Z+15	; 0x0f
    6fb0:	40 97       	sbiw	r24, 0x10	; 16
    6fb2:	09 f4       	brne	.+2      	; 0x6fb6 <load_wav+0x26c>
    6fb4:	ec c0       	rjmp	.+472    	; 0x718e <load_wav+0x444>
				md |= 2; wsmp *= 2;
			}
			fsmp = LD_DWORD(&buff[4]);		/* Sampling rate */
    6fb6:	d1 01       	movw	r26, r2
    6fb8:	14 96       	adiw	r26, 0x04	; 4
    6fba:	8d 91       	ld	r24, X+
    6fbc:	9d 91       	ld	r25, X+
    6fbe:	0d 90       	ld	r0, X+
    6fc0:	bc 91       	ld	r27, X
    6fc2:	a0 2d       	mov	r26, r0
    6fc4:	a1 96       	adiw	r28, 0x21	; 33
    6fc6:	8c af       	std	Y+60, r24	; 0x3c
    6fc8:	9d af       	std	Y+61, r25	; 0x3d
    6fca:	ae af       	std	Y+62, r26	; 0x3e
    6fcc:	bf af       	std	Y+63, r27	; 0x3f
    6fce:	a1 97       	sbiw	r28, 0x21	; 33
    6fd0:	f8 01       	movw	r30, r16
    6fd2:	86 81       	ldd	r24, Z+6	; 0x06
    6fd4:	97 81       	ldd	r25, Z+7	; 0x07
    6fd6:	a0 85       	ldd	r26, Z+8	; 0x08
    6fd8:	b1 85       	ldd	r27, Z+9	; 0x09
    6fda:	67 96       	adiw	r28, 0x17	; 23
    6fdc:	2c ad       	ldd	r18, Y+60	; 0x3c
    6fde:	3d ad       	ldd	r19, Y+61	; 0x3d
    6fe0:	4e ad       	ldd	r20, Y+62	; 0x3e
    6fe2:	5f ad       	ldd	r21, Y+63	; 0x3f
    6fe4:	67 97       	sbiw	r28, 0x17	; 23
			break;
    6fe6:	32 cf       	rjmp	.-412    	; 0x6e4c <load_wav+0x102>
		case FCC('f','a','c','t') :
			f_lseek(fp, f_tell(fp) + sz);
			break;

		case FCC('d','a','t','a') :
			offw = f_tell(fp);	/* Wave data start offset */
    6fe8:	d8 01       	movw	r26, r16
    6fea:	16 96       	adiw	r26, 0x06	; 6
    6fec:	4d 90       	ld	r4, X+
    6fee:	5d 90       	ld	r5, X+
    6ff0:	6d 90       	ld	r6, X+
    6ff2:	7c 90       	ld	r7, X
    6ff4:	19 97       	sbiw	r26, 0x09	; 9
			szwav = sz;			/* Wave data length [byte] */
			f_lseek(fp, f_tell(fp) + sz);
    6ff6:	b7 01       	movw	r22, r14
    6ff8:	a6 01       	movw	r20, r12
    6ffa:	44 0d       	add	r20, r4
    6ffc:	55 1d       	adc	r21, r5
    6ffe:	66 1d       	adc	r22, r6
    7000:	77 1d       	adc	r23, r7
    7002:	c8 01       	movw	r24, r16
    7004:	0e 94 12 2f 	call	0x5e24	; 0x5e24 <f_lseek>
    7008:	f8 01       	movw	r30, r16
    700a:	86 81       	ldd	r24, Z+6	; 0x06
    700c:	97 81       	ldd	r25, Z+7	; 0x07
    700e:	a0 85       	ldd	r26, Z+8	; 0x08
    7010:	b1 85       	ldd	r27, Z+9	; 0x09
	/* Analyze the RIFF-WAVE header and get properties */
	nam[0] = art[0] = 0;
	md = fsmp = wsmp = offw = szwav = 0;
	while (f_tell(fp) < eof) {
		if (f_read(fp, buff, 8, &br) || br != 8) return -1;
		sz = (LD_DWORD(&buff[4]) + 1) & ~1;
    7012:	6d 96       	adiw	r28, 0x1d	; 29
    7014:	cc ae       	std	Y+60, r12	; 0x3c
    7016:	dd ae       	std	Y+61, r13	; 0x3d
    7018:	ee ae       	std	Y+62, r14	; 0x3e
    701a:	ff ae       	std	Y+63, r15	; 0x3f
    701c:	6d 97       	sbiw	r28, 0x1d	; 29
    701e:	67 96       	adiw	r28, 0x17	; 23
    7020:	2c ad       	ldd	r18, Y+60	; 0x3c
    7022:	3d ad       	ldd	r19, Y+61	; 0x3d
    7024:	4e ad       	ldd	r20, Y+62	; 0x3e
    7026:	5f ad       	ldd	r21, Y+63	; 0x3f
    7028:	67 97       	sbiw	r28, 0x17	; 23

		case FCC('d','a','t','a') :
			offw = f_tell(fp);	/* Wave data start offset */
			szwav = sz;			/* Wave data length [byte] */
			f_lseek(fp, f_tell(fp) + sz);
			break;
    702a:	10 cf       	rjmp	.-480    	; 0x6e4c <load_wav+0x102>

		case FCC('L','I','S','T'):
			sz += f_tell(fp);
    702c:	d8 01       	movw	r26, r16
    702e:	16 96       	adiw	r26, 0x06	; 6
    7030:	8d 90       	ld	r8, X+
    7032:	9d 90       	ld	r9, X+
    7034:	ad 90       	ld	r10, X+
    7036:	bc 90       	ld	r11, X
    7038:	19 97       	sbiw	r26, 0x09	; 9
    703a:	8c 0c       	add	r8, r12
    703c:	9d 1c       	adc	r9, r13
    703e:	ae 1c       	adc	r10, r14
    7040:	bf 1c       	adc	r11, r15
			if (f_read(fp, buff, 4, &br) || br != 4) return -1;
    7042:	9e 01       	movw	r18, r28
    7044:	23 5b       	subi	r18, 0xB3	; 179
    7046:	3f 4f       	sbci	r19, 0xFF	; 255
    7048:	44 e0       	ldi	r20, 0x04	; 4
    704a:	50 e0       	ldi	r21, 0x00	; 0
    704c:	b1 01       	movw	r22, r2
    704e:	c8 01       	movw	r24, r16
    7050:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
    7054:	81 11       	cpse	r24, r1
    7056:	5c cf       	rjmp	.-328    	; 0x6f10 <load_wav+0x1c6>
    7058:	2f 96       	adiw	r28, 0x0f	; 15
    705a:	8e ad       	ldd	r24, Y+62	; 0x3e
    705c:	9f ad       	ldd	r25, Y+63	; 0x3f
    705e:	2f 97       	sbiw	r28, 0x0f	; 15
    7060:	04 97       	sbiw	r24, 0x04	; 4
    7062:	09 f0       	breq	.+2      	; 0x7066 <load_wav+0x31c>
    7064:	55 cf       	rjmp	.-342    	; 0x6f10 <load_wav+0x1c6>
			if (LD_DWORD(buff) == FCC('I','N','F','O')) {	/* LIST/INFO chunk */
    7066:	f1 01       	movw	r30, r2
    7068:	80 81       	ld	r24, Z
    706a:	91 81       	ldd	r25, Z+1	; 0x01
    706c:	a2 81       	ldd	r26, Z+2	; 0x02
    706e:	b3 81       	ldd	r27, Z+3	; 0x03
    7070:	89 34       	cpi	r24, 0x49	; 73
    7072:	9e 44       	sbci	r25, 0x4E	; 78
    7074:	a6 44       	sbci	r26, 0x46	; 70
    7076:	bf 44       	sbci	r27, 0x4F	; 79
    7078:	41 f1       	breq	.+80     	; 0x70ca <load_wav+0x380>
					} else {
						if (f_lseek(fp, f_tell(fp) + ssz)) return -1;
					}
				}
			} else {
				if (f_lseek(fp, sz)) return -1;	/* Skip unknown sub-chunk type */
    707a:	b5 01       	movw	r22, r10
    707c:	a4 01       	movw	r20, r8
    707e:	c8 01       	movw	r24, r16
    7080:	0e 94 12 2f 	call	0x5e24	; 0x5e24 <f_lseek>
    7084:	81 11       	cpse	r24, r1
    7086:	44 cf       	rjmp	.-376    	; 0x6f10 <load_wav+0x1c6>
    7088:	f8 01       	movw	r30, r16
    708a:	86 81       	ldd	r24, Z+6	; 0x06
    708c:	97 81       	ldd	r25, Z+7	; 0x07
    708e:	a0 85       	ldd	r26, Z+8	; 0x08
    7090:	b1 85       	ldd	r27, Z+9	; 0x09
    7092:	67 96       	adiw	r28, 0x17	; 23
    7094:	2c ad       	ldd	r18, Y+60	; 0x3c
    7096:	3d ad       	ldd	r19, Y+61	; 0x3d
    7098:	4e ad       	ldd	r20, Y+62	; 0x3e
    709a:	5f ad       	ldd	r21, Y+63	; 0x3f
    709c:	67 97       	sbiw	r28, 0x17	; 23
    709e:	d6 ce       	rjmp	.-596    	; 0x6e4c <load_wav+0x102>
						p = nam; break;
					case FCC('I','A','R','T'):		/* IART sub-cnunk */
						p = art; break;
					}
					if (p && ssz <= NBSIZE) {
						if (f_read(fp, p, ssz, &br) || br != ssz) return -1;
    70a0:	9e 01       	movw	r18, r28
    70a2:	23 5b       	subi	r18, 0xB3	; 179
    70a4:	3f 4f       	sbci	r19, 0xFF	; 255
    70a6:	a6 01       	movw	r20, r12
    70a8:	c8 01       	movw	r24, r16
    70aa:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
    70ae:	81 11       	cpse	r24, r1
    70b0:	2f cf       	rjmp	.-418    	; 0x6f10 <load_wav+0x1c6>
    70b2:	2f 96       	adiw	r28, 0x0f	; 15
    70b4:	8e ad       	ldd	r24, Y+62	; 0x3e
    70b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    70b8:	2f 97       	sbiw	r28, 0x0f	; 15
    70ba:	a0 e0       	ldi	r26, 0x00	; 0
    70bc:	b0 e0       	ldi	r27, 0x00	; 0
    70be:	8c 15       	cp	r24, r12
    70c0:	9d 05       	cpc	r25, r13
    70c2:	ae 05       	cpc	r26, r14
    70c4:	bf 05       	cpc	r27, r15
    70c6:	09 f0       	breq	.+2      	; 0x70ca <load_wav+0x380>
    70c8:	23 cf       	rjmp	.-442    	; 0x6f10 <load_wav+0x1c6>

		case FCC('L','I','S','T'):
			sz += f_tell(fp);
			if (f_read(fp, buff, 4, &br) || br != 4) return -1;
			if (LD_DWORD(buff) == FCC('I','N','F','O')) {	/* LIST/INFO chunk */
				while (f_tell(fp) < sz) {
    70ca:	f8 01       	movw	r30, r16
    70cc:	86 81       	ldd	r24, Z+6	; 0x06
    70ce:	97 81       	ldd	r25, Z+7	; 0x07
    70d0:	a0 85       	ldd	r26, Z+8	; 0x08
    70d2:	b1 85       	ldd	r27, Z+9	; 0x09
    70d4:	88 15       	cp	r24, r8
    70d6:	99 05       	cpc	r25, r9
    70d8:	aa 05       	cpc	r26, r10
    70da:	bb 05       	cpc	r27, r11
    70dc:	d0 f6       	brcc	.-76     	; 0x7092 <load_wav+0x348>
					if (f_read(fp, buff, 8, &br) || br != 8) return -1;
    70de:	9e 01       	movw	r18, r28
    70e0:	23 5b       	subi	r18, 0xB3	; 179
    70e2:	3f 4f       	sbci	r19, 0xFF	; 255
    70e4:	48 e0       	ldi	r20, 0x08	; 8
    70e6:	50 e0       	ldi	r21, 0x00	; 0
    70e8:	b1 01       	movw	r22, r2
    70ea:	c8 01       	movw	r24, r16
    70ec:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
    70f0:	81 11       	cpse	r24, r1
    70f2:	0e cf       	rjmp	.-484    	; 0x6f10 <load_wav+0x1c6>
    70f4:	2f 96       	adiw	r28, 0x0f	; 15
    70f6:	8e ad       	ldd	r24, Y+62	; 0x3e
    70f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    70fa:	2f 97       	sbiw	r28, 0x0f	; 15
    70fc:	08 97       	sbiw	r24, 0x08	; 8
    70fe:	09 f0       	breq	.+2      	; 0x7102 <load_wav+0x3b8>
    7100:	07 cf       	rjmp	.-498    	; 0x6f10 <load_wav+0x1c6>
					ssz = (LD_DWORD(&buff[4]) + 1) & ~1;
    7102:	d1 01       	movw	r26, r2
    7104:	14 96       	adiw	r26, 0x04	; 4
    7106:	cd 90       	ld	r12, X+
    7108:	dd 90       	ld	r13, X+
    710a:	ed 90       	ld	r14, X+
    710c:	fc 90       	ld	r15, X
    710e:	17 97       	sbiw	r26, 0x07	; 7
    7110:	bf ef       	ldi	r27, 0xFF	; 255
    7112:	cb 1a       	sub	r12, r27
    7114:	db 0a       	sbc	r13, r27
    7116:	eb 0a       	sbc	r14, r27
    7118:	fb 0a       	sbc	r15, r27
    711a:	e8 94       	clt
    711c:	c0 f8       	bld	r12, 0
					p = 0;
					switch (LD_DWORD(buff)) {
    711e:	f1 01       	movw	r30, r2
    7120:	80 81       	ld	r24, Z
    7122:	91 81       	ldd	r25, Z+1	; 0x01
    7124:	a2 81       	ldd	r26, Z+2	; 0x02
    7126:	b3 81       	ldd	r27, Z+3	; 0x03
    7128:	89 34       	cpi	r24, 0x49	; 73
    712a:	fe e4       	ldi	r31, 0x4E	; 78
    712c:	9f 07       	cpc	r25, r31
    712e:	f1 e4       	ldi	r31, 0x41	; 65
    7130:	af 07       	cpc	r26, r31
    7132:	fd e4       	ldi	r31, 0x4D	; 77
    7134:	bf 07       	cpc	r27, r31
    7136:	21 f1       	breq	.+72     	; 0x7180 <load_wav+0x436>
    7138:	89 34       	cpi	r24, 0x49	; 73
    713a:	91 44       	sbci	r25, 0x41	; 65
    713c:	a2 45       	sbci	r26, 0x52	; 82
    713e:	b4 45       	sbci	r27, 0x54	; 84
    7140:	69 f4       	brne	.+26     	; 0x715c <load_wav+0x412>
					case FCC('I','N','A','M'):		/* INAM sub-chunk */
						p = nam; break;
					case FCC('I','A','R','T'):		/* IART sub-cnunk */
						p = art; break;
    7142:	62 96       	adiw	r28, 0x12	; 18
    7144:	6f ad       	ldd	r22, Y+63	; 0x3f
    7146:	62 97       	sbiw	r28, 0x12	; 18
    7148:	63 96       	adiw	r28, 0x13	; 19
    714a:	7f ad       	ldd	r23, Y+63	; 0x3f
    714c:	63 97       	sbiw	r28, 0x13	; 19
					}
					if (p && ssz <= NBSIZE) {
    714e:	91 e2       	ldi	r25, 0x21	; 33
    7150:	c9 16       	cp	r12, r25
    7152:	d1 04       	cpc	r13, r1
    7154:	e1 04       	cpc	r14, r1
    7156:	f1 04       	cpc	r15, r1
    7158:	08 f4       	brcc	.+2      	; 0x715c <load_wav+0x412>
    715a:	a2 cf       	rjmp	.-188    	; 0x70a0 <load_wav+0x356>
						if (f_read(fp, p, ssz, &br) || br != ssz) return -1;
					} else {
						if (f_lseek(fp, f_tell(fp) + ssz)) return -1;
    715c:	d8 01       	movw	r26, r16
    715e:	16 96       	adiw	r26, 0x06	; 6
    7160:	4d 91       	ld	r20, X+
    7162:	5d 91       	ld	r21, X+
    7164:	6d 91       	ld	r22, X+
    7166:	7c 91       	ld	r23, X
    7168:	19 97       	sbiw	r26, 0x09	; 9
    716a:	4c 0d       	add	r20, r12
    716c:	5d 1d       	adc	r21, r13
    716e:	6e 1d       	adc	r22, r14
    7170:	7f 1d       	adc	r23, r15
    7172:	c8 01       	movw	r24, r16
    7174:	0e 94 12 2f 	call	0x5e24	; 0x5e24 <f_lseek>
    7178:	88 23       	and	r24, r24
    717a:	09 f4       	brne	.+2      	; 0x717e <load_wav+0x434>
    717c:	a6 cf       	rjmp	.-180    	; 0x70ca <load_wav+0x380>
    717e:	c8 ce       	rjmp	.-624    	; 0x6f10 <load_wav+0x1c6>
					if (f_read(fp, buff, 8, &br) || br != 8) return -1;
					ssz = (LD_DWORD(&buff[4]) + 1) & ~1;
					p = 0;
					switch (LD_DWORD(buff)) {
					case FCC('I','N','A','M'):		/* INAM sub-chunk */
						p = nam; break;
    7180:	60 96       	adiw	r28, 0x10	; 16
    7182:	6f ad       	ldd	r22, Y+63	; 0x3f
    7184:	60 97       	sbiw	r28, 0x10	; 16
    7186:	61 96       	adiw	r28, 0x11	; 17
    7188:	7f ad       	ldd	r23, Y+63	; 0x3f
    718a:	61 97       	sbiw	r28, 0x11	; 17
    718c:	e0 cf       	rjmp	.-64     	; 0x714e <load_wav+0x404>
				md = 1; wsmp = 2;
			} else {
				md = 0; wsmp = 1;
			}
			if (LD_WORD(&buff[14]) == 16) {	/* Resolution (8 or 16) */
				md |= 2; wsmp *= 2;
    718e:	69 96       	adiw	r28, 0x19	; 25
    7190:	2e ad       	ldd	r18, Y+62	; 0x3e
    7192:	3f ad       	ldd	r19, Y+63	; 0x3f
    7194:	69 97       	sbiw	r28, 0x19	; 25
    7196:	22 60       	ori	r18, 0x02	; 2
    7198:	69 96       	adiw	r28, 0x19	; 25
    719a:	2e af       	std	Y+62, r18	; 0x3e
    719c:	3f af       	std	Y+63, r19	; 0x3f
    719e:	69 97       	sbiw	r28, 0x19	; 25
    71a0:	0a cf       	rjmp	.-492    	; 0x6fb6 <load_wav+0x26c>

		default :	/* Unknown chunk */
			return -1;
		}
	}
	if (!szwav || !fsmp) return -1;		/* Check if valid WAV file */
    71a2:	6d 96       	adiw	r28, 0x1d	; 29
    71a4:	8c ad       	ldd	r24, Y+60	; 0x3c
    71a6:	9d ad       	ldd	r25, Y+61	; 0x3d
    71a8:	ae ad       	ldd	r26, Y+62	; 0x3e
    71aa:	bf ad       	ldd	r27, Y+63	; 0x3f
    71ac:	6d 97       	sbiw	r28, 0x1d	; 29
    71ae:	89 2b       	or	r24, r25
    71b0:	8a 2b       	or	r24, r26
    71b2:	8b 2b       	or	r24, r27
    71b4:	09 f4       	brne	.+2      	; 0x71b8 <load_wav+0x46e>
    71b6:	ac ce       	rjmp	.-680    	; 0x6f10 <load_wav+0x1c6>
    71b8:	a1 96       	adiw	r28, 0x21	; 33
    71ba:	2c ad       	ldd	r18, Y+60	; 0x3c
    71bc:	3d ad       	ldd	r19, Y+61	; 0x3d
    71be:	4e ad       	ldd	r20, Y+62	; 0x3e
    71c0:	5f ad       	ldd	r21, Y+63	; 0x3f
    71c2:	a1 97       	sbiw	r28, 0x21	; 33
    71c4:	23 2b       	or	r18, r19
    71c6:	24 2b       	or	r18, r20
    71c8:	25 2b       	or	r18, r21
    71ca:	09 f4       	brne	.+2      	; 0x71ce <load_wav+0x484>
    71cc:	a1 ce       	rjmp	.-702    	; 0x6f10 <load_wav+0x1c6>
	if (f_lseek(fp, offw)) return -1;	/* Seek to top of wav data */
    71ce:	b3 01       	movw	r22, r6
    71d0:	a2 01       	movw	r20, r4
    71d2:	c8 01       	movw	r24, r16
    71d4:	0e 94 12 2f 	call	0x5e24	; 0x5e24 <f_lseek>
    71d8:	81 11       	cpse	r24, r1
    71da:	9a ce       	rjmp	.-716    	; 0x6f10 <load_wav+0x1c6>

	//xprintf(PSTR("IART=%s\nINAM=%s\n"), art, nam);
	//xprintf(PSTR("Sample=%u.%ukHz/%ubit/%S\nLength=%u:%02u\n"), (UINT)(fsmp / 1000), (UINT)(fsmp / 100) % 10, (md & 2) ? 16 : 8, (md & 1) ? PSTR("st") : PSTR("mo"), tc / 60, tc % 60);

	/* Initialize stream parameters and start sound streming */
	fcb.mode = md;
    71dc:	69 96       	adiw	r28, 0x19	; 25
    71de:	4e ad       	ldd	r20, Y+62	; 0x3e
    71e0:	5f ad       	ldd	r21, Y+63	; 0x3f
    71e2:	69 97       	sbiw	r28, 0x19	; 25
    71e4:	23 96       	adiw	r28, 0x03	; 3
    71e6:	4e af       	std	Y+62, r20	; 0x3e
    71e8:	5f af       	std	Y+63, r21	; 0x3f
    71ea:	23 97       	sbiw	r28, 0x03	; 3
	fcb.buff = buff;
    71ec:	2b 96       	adiw	r28, 0x0b	; 11
    71ee:	2e ae       	std	Y+62, r2	; 0x3e
    71f0:	3f ae       	std	Y+63, r3	; 0x3f
    71f2:	2b 97       	sbiw	r28, 0x0b	; 11
	fcb.sz_buff = sz_work;
    71f4:	a3 96       	adiw	r28, 0x23	; 35
    71f6:	8e ad       	ldd	r24, Y+62	; 0x3e
    71f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    71fa:	a3 97       	sbiw	r28, 0x23	; 35
    71fc:	2d 96       	adiw	r28, 0x0d	; 13
    71fe:	8e af       	std	Y+62, r24	; 0x3e
    7200:	9f af       	std	Y+63, r25	; 0x3f
    7202:	2d 97       	sbiw	r28, 0x0d	; 13
int sound_start (
	WAVFIFO* fcb,	/* Pointer to the sound FIFO control structure */
	DWORD fs		/* Sampling frequency [Hz] */
)
{
	if (fs < 8000 || fs > 44100) return 0;	/* Check fs range */
    7204:	a1 96       	adiw	r28, 0x21	; 33
    7206:	8c ad       	ldd	r24, Y+60	; 0x3c
    7208:	9d ad       	ldd	r25, Y+61	; 0x3d
    720a:	ae ad       	ldd	r26, Y+62	; 0x3e
    720c:	bf ad       	ldd	r27, Y+63	; 0x3f
    720e:	a1 97       	sbiw	r28, 0x21	; 33
    7210:	80 54       	subi	r24, 0x40	; 64
    7212:	9f 41       	sbci	r25, 0x1F	; 31
    7214:	a1 09       	sbc	r26, r1
    7216:	b1 09       	sbc	r27, r1
    7218:	85 30       	cpi	r24, 0x05	; 5
    721a:	9d 48       	sbci	r25, 0x8D	; 141
    721c:	a1 05       	cpc	r26, r1
    721e:	b1 05       	cpc	r27, r1
    7220:	08 f0       	brcs	.+2      	; 0x7224 <load_wav+0x4da>
    7222:	76 ce       	rjmp	.-788    	; 0x6f10 <load_wav+0x1c6>

	fcb->ri = 0; fcb->wi = 0; fcb->ct = 0;	/* Flush FIFO */
    7224:	25 96       	adiw	r28, 0x05	; 5
    7226:	1e ae       	std	Y+62, r1	; 0x3e
    7228:	1f ae       	std	Y+63, r1	; 0x3f
    722a:	25 97       	sbiw	r28, 0x05	; 5
    722c:	27 96       	adiw	r28, 0x07	; 7
    722e:	1e ae       	std	Y+62, r1	; 0x3e
    7230:	1f ae       	std	Y+63, r1	; 0x3f
    7232:	27 97       	sbiw	r28, 0x07	; 7
    7234:	29 96       	adiw	r28, 0x09	; 9
    7236:	1e ae       	std	Y+62, r1	; 0x3e
    7238:	1f ae       	std	Y+63, r1	; 0x3f
    723a:	29 97       	sbiw	r28, 0x09	; 9
	WavFifo = fcb;			/* Register FIFO control structure */
    723c:	21 e4       	ldi	r18, 0x41	; 65
    723e:	30 e0       	ldi	r19, 0x00	; 0
    7240:	2c 0f       	add	r18, r28
    7242:	3d 1f       	adc	r19, r29
    7244:	20 93 3c 23 	sts	0x233C, r18
    7248:	30 93 3d 23 	sts	0x233D, r19
	
	PORTB.DIRSET = PIN2_bm;
    724c:	84 e0       	ldi	r24, 0x04	; 4
    724e:	80 93 21 06 	sts	0x0621, r24
	DACB.CTRLA = DAC_CH0EN_bm;
    7252:	80 93 20 03 	sts	0x0320, r24
	DACB.CTRLC = DAC_REFSEL_INT1V_gc;
    7256:	10 92 22 03 	sts	0x0322, r1
	DACB.CTRLB = DAC_CHSEL_SINGLE_gc;
    725a:	10 92 21 03 	sts	0x0321, r1
	
	//From calibration rows
	DACB.CH0OFFSETCAL = 0xE8;
    725e:	88 ee       	ldi	r24, 0xE8	; 232
    7260:	80 93 29 03 	sts	0x0329, r24
	DACB.CH0GAINCAL = 0xB6;
    7264:	86 eb       	ldi	r24, 0xB6	; 182
    7266:	80 93 28 03 	sts	0x0328, r24
	DACB.CH1GAINCAL = 0x0C;
    726a:	8c e0       	ldi	r24, 0x0C	; 12
    726c:	80 93 2a 03 	sts	0x032A, r24
	DACB.CH1OFFSETCAL = 0x13;
    7270:	83 e1       	ldi	r24, 0x13	; 19
    7272:	80 93 2b 03 	sts	0x032B, r24
	
	//DACB.CH1DATA = 255;
	
	DACB.CTRLA |= DAC_ENABLE_bm;
    7276:	80 91 20 03 	lds	r24, 0x0320
    727a:	81 60       	ori	r24, 0x01	; 1
    727c:	80 93 20 03 	sts	0x0320, r24
	
	//prev = data;
}

static inline void speaker_on(void) {
	PORTD.DIRSET |= PIN1_bm;
    7280:	80 91 61 06 	lds	r24, 0x0661
    7284:	82 60       	ori	r24, 0x02	; 2
    7286:	80 93 61 06 	sts	0x0661, r24
	PORTD.OUTSET |= PIN1_bm;
    728a:	80 91 65 06 	lds	r24, 0x0665
    728e:	82 60       	ori	r24, 0x02	; 2
    7290:	80 93 65 06 	sts	0x0665, r24
	
	DACB.CTRLA |= DAC_ENABLE_bm;
	
	speaker_on();
	
	TCC0.CNT = 0;
    7294:	10 92 20 08 	sts	0x0820, r1
    7298:	10 92 21 08 	sts	0x0821, r1
	TCC0.PER = (F_CPU / 44100 - 1);
    729c:	84 ed       	ldi	r24, 0xD4	; 212
    729e:	92 e0       	ldi	r25, 0x02	; 2
    72a0:	80 93 26 08 	sts	0x0826, r24
    72a4:	90 93 27 08 	sts	0x0827, r25
	TCC0.CTRLA = TC_CLKSEL_DIV1_gc;
    72a8:	81 e0       	ldi	r24, 0x01	; 1
    72aa:	80 93 00 08 	sts	0x0800, r24
	TCC0.INTCTRLA = TC_OVFINTLVL_HI_gc;
    72ae:	83 e0       	ldi	r24, 0x03	; 3
    72b0:	80 93 06 08 	sts	0x0806, r24
	fcb.sz_buff = sz_work;
	if (!sound_start(&fcb, fsmp)) return -1;

	k = 0; wi = 0;
	while (szwav || fcb.ct >= 4) {
		if (szwav && fcb.ct <= sz_work / 2) {	/* Refill FIFO when it gets half empty */
    72b4:	a3 96       	adiw	r28, 0x23	; 35
    72b6:	ee ac       	ldd	r14, Y+62	; 0x3e
    72b8:	ff ac       	ldd	r15, Y+63	; 0x3f
    72ba:	a3 97       	sbiw	r28, 0x23	; 35
    72bc:	f6 94       	lsr	r15
    72be:	e7 94       	ror	r14
			btr = (szwav >= sz_work / 2) ? sz_work / 2 : szwav;
    72c0:	27 01       	movw	r4, r14
    72c2:	61 2c       	mov	r6, r1
    72c4:	71 2c       	mov	r7, r1
    72c6:	c1 2c       	mov	r12, r1
    72c8:	d1 2c       	mov	r13, r1
			f_read(fp, &buff[wi], btr, &br);
			if (br != btr) break;
			szwav -= br;
			wi = (wi + br) & (sz_work - 1);
    72ca:	a3 96       	adiw	r28, 0x23	; 35
    72cc:	ae ac       	ldd	r10, Y+62	; 0x3e
    72ce:	bf ac       	ldd	r11, Y+63	; 0x3f
    72d0:	a3 97       	sbiw	r28, 0x23	; 35
    72d2:	31 e0       	ldi	r19, 0x01	; 1
    72d4:	a3 1a       	sub	r10, r19
    72d6:	b1 08       	sbc	r11, r1
    72d8:	65 96       	adiw	r28, 0x15	; 21
    72da:	ae ae       	std	Y+62, r10	; 0x3e
    72dc:	bf ae       	std	Y+63, r11	; 0x3f
    72de:	65 97       	sbiw	r28, 0x15	; 21
    72e0:	6d 96       	adiw	r28, 0x1d	; 29
    72e2:	8c ac       	ldd	r8, Y+60	; 0x3c
    72e4:	9d ac       	ldd	r9, Y+61	; 0x3d
    72e6:	ae ac       	ldd	r10, Y+62	; 0x3e
    72e8:	bf ac       	ldd	r11, Y+63	; 0x3f
    72ea:	6d 97       	sbiw	r28, 0x1d	; 29
	fcb.buff = buff;
	fcb.sz_buff = sz_work;
	if (!sound_start(&fcb, fsmp)) return -1;

	k = 0; wi = 0;
	while (szwav || fcb.ct >= 4) {
    72ec:	81 14       	cp	r8, r1
    72ee:	91 04       	cpc	r9, r1
    72f0:	a1 04       	cpc	r10, r1
    72f2:	b1 04       	cpc	r11, r1
    72f4:	c9 f4       	brne	.+50     	; 0x7328 <load_wav+0x5de>
    72f6:	29 96       	adiw	r28, 0x09	; 9
    72f8:	8e ad       	ldd	r24, Y+62	; 0x3e
    72fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    72fc:	29 97       	sbiw	r28, 0x09	; 9
    72fe:	04 97       	sbiw	r24, 0x04	; 4
    7300:	d0 f7       	brcc	.-12     	; 0x72f6 <load_wav+0x5ac>
/*-----------------------------------------------------*/
/* Disable sound output                                */

void sound_stop (void)
{
	TCC0.INTCTRLA = TC_OVFINTLVL_OFF_gc;
    7302:	10 92 06 08 	sts	0x0806, r1
	DACB.CTRLA &= ~(DAC_ENABLE_bm);
    7306:	80 91 20 03 	lds	r24, 0x0320
    730a:	8e 7f       	andi	r24, 0xFE	; 254
    730c:	80 93 20 03 	sts	0x0320, r24
	PORTD.DIRSET |= PIN1_bm;
	PORTD.OUTSET |= PIN1_bm;
}

static inline void speaker_off(void) {
	PORTD.OUTCLR |= PIN1_bm;
    7310:	80 91 66 06 	lds	r24, 0x0666
    7314:	82 60       	ori	r24, 0x02	; 2
    7316:	80 93 66 06 	sts	0x0666, r24
{
	TCC0.INTCTRLA = TC_OVFINTLVL_OFF_gc;
	DACB.CTRLA &= ~(DAC_ENABLE_bm);
	speaker_off();

	WavFifo = 0;		/* Unregister FIFO control structure */
    731a:	10 92 3c 23 	sts	0x233C, r1
    731e:	10 92 3d 23 	sts	0x233D, r1
	}

	sound_stop();	/* Stop sound output */

	//xputc('\n');
	return k;	/* Terminated due to -1:error, 0:eot, >0:key code */
    7322:	80 e0       	ldi	r24, 0x00	; 0
    7324:	90 e0       	ldi	r25, 0x00	; 0
    7326:	f6 cd       	rjmp	.-1044   	; 0x6f14 <load_wav+0x1ca>
	fcb.sz_buff = sz_work;
	if (!sound_start(&fcb, fsmp)) return -1;

	k = 0; wi = 0;
	while (szwav || fcb.ct >= 4) {
		if (szwav && fcb.ct <= sz_work / 2) {	/* Refill FIFO when it gets half empty */
    7328:	29 96       	adiw	r28, 0x09	; 9
    732a:	8e ad       	ldd	r24, Y+62	; 0x3e
    732c:	9f ad       	ldd	r25, Y+63	; 0x3f
    732e:	29 97       	sbiw	r28, 0x09	; 9
    7330:	e8 16       	cp	r14, r24
    7332:	f9 06       	cpc	r15, r25
    7334:	c8 f3       	brcs	.-14     	; 0x7328 <load_wav+0x5de>
			btr = (szwav >= sz_work / 2) ? sz_work / 2 : szwav;
    7336:	94 2d       	mov	r25, r4
    7338:	85 2d       	mov	r24, r5
    733a:	84 14       	cp	r8, r4
    733c:	95 04       	cpc	r9, r5
    733e:	a6 04       	cpc	r10, r6
    7340:	b7 04       	cpc	r11, r7
    7342:	10 f4       	brcc	.+4      	; 0x7348 <load_wav+0x5fe>
    7344:	98 2d       	mov	r25, r8
    7346:	89 2d       	mov	r24, r9
    7348:	29 2f       	mov	r18, r25
    734a:	38 2f       	mov	r19, r24
    734c:	69 96       	adiw	r28, 0x19	; 25
    734e:	2e af       	std	Y+62, r18	; 0x3e
    7350:	3f af       	std	Y+63, r19	; 0x3f
    7352:	69 97       	sbiw	r28, 0x19	; 25
			f_read(fp, &buff[wi], btr, &br);
    7354:	9e 01       	movw	r18, r28
    7356:	23 5b       	subi	r18, 0xB3	; 179
    7358:	3f 4f       	sbci	r19, 0xFF	; 255
    735a:	49 2f       	mov	r20, r25
    735c:	58 2f       	mov	r21, r24
    735e:	b1 01       	movw	r22, r2
    7360:	6c 0d       	add	r22, r12
    7362:	7d 1d       	adc	r23, r13
    7364:	c8 01       	movw	r24, r16
    7366:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
			if (br != btr) break;
    736a:	2f 96       	adiw	r28, 0x0f	; 15
    736c:	8e ad       	ldd	r24, Y+62	; 0x3e
    736e:	9f ad       	ldd	r25, Y+63	; 0x3f
    7370:	2f 97       	sbiw	r28, 0x0f	; 15
    7372:	69 96       	adiw	r28, 0x19	; 25
    7374:	4e ad       	ldd	r20, Y+62	; 0x3e
    7376:	5f ad       	ldd	r21, Y+63	; 0x3f
    7378:	69 97       	sbiw	r28, 0x19	; 25
    737a:	84 17       	cp	r24, r20
    737c:	95 07       	cpc	r25, r21
    737e:	09 f6       	brne	.-126    	; 0x7302 <load_wav+0x5b8>
			szwav -= br;
    7380:	88 1a       	sub	r8, r24
    7382:	99 0a       	sbc	r9, r25
    7384:	a1 08       	sbc	r10, r1
    7386:	b1 08       	sbc	r11, r1
			wi = (wi + br) & (sz_work - 1);
    7388:	c8 0e       	add	r12, r24
    738a:	d9 1e       	adc	r13, r25
    738c:	65 96       	adiw	r28, 0x15	; 21
    738e:	8e ad       	ldd	r24, Y+62	; 0x3e
    7390:	9f ad       	ldd	r25, Y+63	; 0x3f
    7392:	65 97       	sbiw	r28, 0x15	; 21
    7394:	c8 22       	and	r12, r24
    7396:	d9 22       	and	r13, r25
			cli();
    7398:	f8 94       	cli
			fcb.ct += br;
    739a:	29 96       	adiw	r28, 0x09	; 9
    739c:	8e ad       	ldd	r24, Y+62	; 0x3e
    739e:	9f ad       	ldd	r25, Y+63	; 0x3f
    73a0:	29 97       	sbiw	r28, 0x09	; 9
    73a2:	2f 96       	adiw	r28, 0x0f	; 15
    73a4:	2e ad       	ldd	r18, Y+62	; 0x3e
    73a6:	3f ad       	ldd	r19, Y+63	; 0x3f
    73a8:	2f 97       	sbiw	r28, 0x0f	; 15
    73aa:	82 0f       	add	r24, r18
    73ac:	93 1f       	adc	r25, r19
    73ae:	29 96       	adiw	r28, 0x09	; 9
    73b0:	8e af       	std	Y+62, r24	; 0x3e
    73b2:	9f af       	std	Y+63, r25	; 0x3f
    73b4:	29 97       	sbiw	r28, 0x09	; 9
			sei();
    73b6:	78 94       	sei
    73b8:	99 cf       	rjmp	.-206    	; 0x72ec <load_wav+0x5a2>

000073ba <jsmn_init>:

/**
 * Creates a new parser based over a given  buffer with an array of tokens
 * available.
 */
void jsmn_init(jsmn_parser *parser) {
    73ba:	fc 01       	movw	r30, r24
	parser->pos = 0;
    73bc:	10 82       	st	Z, r1
    73be:	11 82       	std	Z+1, r1	; 0x01
	parser->toknext = 0;
    73c0:	12 82       	std	Z+2, r1	; 0x02
    73c2:	13 82       	std	Z+3, r1	; 0x03
	parser->toksuper = -1;
    73c4:	8f ef       	ldi	r24, 0xFF	; 255
    73c6:	9f ef       	ldi	r25, 0xFF	; 255
    73c8:	84 83       	std	Z+4, r24	; 0x04
    73ca:	95 83       	std	Z+5, r25	; 0x05
    73cc:	08 95       	ret

000073ce <play_sound>:
	uint16_t reg01 = ((u16)reg1 << 8) | reg0;
	
	if (reg01 < 2200)
	{
		if (flip) {
			ht1632c_send_command(HT1632_LED_OFF);
    73ce:	41 e0       	ldi	r20, 0x01	; 1
    73d0:	61 e6       	ldi	r22, 0x61	; 97
    73d2:	71 e2       	ldi	r23, 0x21	; 33
    73d4:	82 e7       	ldi	r24, 0x72	; 114
    73d6:	9d e2       	ldi	r25, 0x2D	; 45
    73d8:	0e 94 74 22 	call	0x44e8	; 0x44e8 <f_open>
    73dc:	81 11       	cpse	r24, r1
    73de:	08 95       	ret
    73e0:	20 e0       	ldi	r18, 0x00	; 0
    73e2:	38 e0       	ldi	r19, 0x08	; 8
    73e4:	40 e7       	ldi	r20, 0x70	; 112
    73e6:	55 e2       	ldi	r21, 0x25	; 37
    73e8:	6b e6       	ldi	r22, 0x6B	; 107
    73ea:	71 e2       	ldi	r23, 0x21	; 33
    73ec:	82 e7       	ldi	r24, 0x72	; 114
    73ee:	9d e2       	ldi	r25, 0x2D	; 45
    73f0:	ac dc       	rcall	.-1704   	; 0x6d4a <load_wav>
    73f2:	82 e7       	ldi	r24, 0x72	; 114
    73f4:	9d e2       	ldi	r25, 0x2D	; 45
    73f6:	0c 94 1f 2e 	jmp	0x5c3e	; 0x5c3e <f_close>

000073fa <main>:
		}
		ht1632_fade(reg01/400);
	}
}

int main(void) {
    73fa:	cf 93       	push	r28
    73fc:	df 93       	push	r29
    73fe:	cd b7       	in	r28, 0x3d	; 61
    7400:	de b7       	in	r29, 0x3e	; 62
    7402:	26 97       	sbiw	r28, 0x06	; 6
    7404:	cd bf       	out	0x3d, r28	; 61
    7406:	de bf       	out	0x3e, r29	; 62
	char *cmd;
	//char json_buffer[RX_BUFFER];
	
	esp8266_status_t status;
	
	clock_setup_32_mhz();
    7408:	0e 94 55 01 	call	0x2aa	; 0x2aa <clock_setup_32_mhz>
	ht1632c_setup(HT1632_COMMON_16NMOS);
    740c:	84 e2       	ldi	r24, 0x24	; 36
    740e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <ht1632c_setup>
	ht1632c_set_brightness(0);
    7412:	80 e0       	ldi	r24, 0x00	; 0
    7414:	0e 94 95 04 	call	0x92a	; 0x92a <ht1632c_set_brightness>
	ht1632c_clear_screen();
    7418:	0e 94 7e 06 	call	0xcfc	; 0xcfc <ht1632c_clear_screen>
	
	uart_setup();
    741c:	63 d0       	rcall	.+198    	; 0x74e4 <uart_setup>
void uart_put_char(char c);
static FILE mystdout = FDEV_SETUP_STREAM(uart_put_char,uart_get_char,_FDEV_SETUP_WRITE);

void pmic_setup(void) {
	
	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_HILVLEN_bm;
    741e:	87 e0       	ldi	r24, 0x07	; 7
    7420:	80 93 a2 00 	sts	0x00A2, r24
	ht1632c_set_brightness(0);
	ht1632c_clear_screen();
	
	uart_setup();
	pmic_setup();
	twi_setup(&TWIC);
    7424:	80 e8       	ldi	r24, 0x80	; 128
    7426:	94 e0       	ldi	r25, 0x04	; 4
    7428:	0e 94 de 08 	call	0x11bc	; 0x11bc <twi_setup>
	si114x_reset(SI114X_ADDR);
    742c:	8a e5       	ldi	r24, 0x5A	; 90
    742e:	90 e0       	ldi	r25, 0x00	; 0
    7430:	0e 94 36 08 	call	0x106c	; 0x106c <si114x_reset>
	//si114x_setup();
	//tcc_setup();
	btn_setup();
    7434:	0e 94 86 06 	call	0xd0c	; 0xd0c <btn_setup>
	//rtc_setup();
	//rtc_init_time();
	jsmn_init(&p);
    7438:	ce 01       	movw	r24, r28
    743a:	01 96       	adiw	r24, 0x01	; 1
    743c:	be df       	rcall	.-132    	; 0x73ba <jsmn_init>
	
	stdout = stdin = &mystdout;
    743e:	85 e0       	ldi	r24, 0x05	; 5
    7440:	90 e2       	ldi	r25, 0x20	; 32
    7442:	80 93 92 2d 	sts	0x2D92, r24
    7446:	90 93 93 2d 	sts	0x2D93, r25
    744a:	80 93 94 2d 	sts	0x2D94, r24
    744e:	90 93 95 2d 	sts	0x2D95, r25
	puts("LED MATRIX Clock - By: Erlend Hestnes\r\n");
    7452:	80 e8       	ldi	r24, 0x80	; 128
    7454:	91 e2       	ldi	r25, 0x21	; 33
    7456:	8d d2       	rcall	.+1306   	; 0x7972 <puts>
		f_close(&Fil);
	}	
}

static inline void sd_card(void) {
	f_mount(&FatFs, "", 0);
    7458:	40 e0       	ldi	r20, 0x00	; 0
    745a:	64 e8       	ldi	r22, 0x84	; 132
    745c:	70 e2       	ldi	r23, 0x20	; 32
    745e:	8e e3       	ldi	r24, 0x3E	; 62
    7460:	93 e2       	ldi	r25, 0x23	; 35
    7462:	0e 94 0f 22 	call	0x441e	; 0x441e <f_mount>
	
	if (f_open(&Fil, "website2.txt", FA_READ | FA_OPEN_EXISTING) == FR_OK) {
    7466:	41 e0       	ldi	r20, 0x01	; 1
    7468:	68 ea       	ldi	r22, 0xA8	; 168
    746a:	71 e2       	ldi	r23, 0x21	; 33
    746c:	82 e7       	ldi	r24, 0x72	; 114
    746e:	9d e2       	ldi	r25, 0x2D	; 45
    7470:	0e 94 74 22 	call	0x44e8	; 0x44e8 <f_open>
    7474:	88 23       	and	r24, r24
    7476:	69 f0       	breq	.+26     	; 0x7492 <main+0x98>
		puts("Reading...");
		f_read(&Fil,Buff,1024,&bw);
		f_close(&Fil);
	}
	puts("Read done:");
    7478:	80 ec       	ldi	r24, 0xC0	; 192
    747a:	91 e2       	ldi	r25, 0x21	; 33
    747c:	7a d2       	rcall	.+1268   	; 0x7972 <puts>
	puts(Buff);
    747e:	80 e7       	ldi	r24, 0x70	; 112
    7480:	95 e2       	ldi	r25, 0x25	; 37
    7482:	77 d2       	rcall	.+1262   	; 0x7972 <puts>

	//rtc_set_time(18,50,0);
	
	sd_card();
	
	sei();
    7484:	78 94       	sei
	
	esp8266_off();
    7486:	0e 94 64 01 	call	0x2c8	; 0x2c8 <esp8266_off>
	
	//uint8_t *data;
	//uint8_t flip = 1;
	
	*/
	play_sound("whatever!");
    748a:	8b ec       	ldi	r24, 0xCB	; 203
    748c:	91 e2       	ldi	r25, 0x21	; 33
    748e:	9f df       	rcall	.-194    	; 0x73ce <play_sound>
    7490:	ff cf       	rjmp	.-2      	; 0x7490 <main+0x96>

static inline void sd_card(void) {
	f_mount(&FatFs, "", 0);
	
	if (f_open(&Fil, "website2.txt", FA_READ | FA_OPEN_EXISTING) == FR_OK) {
		puts("Reading...");
    7492:	85 eb       	ldi	r24, 0xB5	; 181
    7494:	91 e2       	ldi	r25, 0x21	; 33
    7496:	6d d2       	rcall	.+1242   	; 0x7972 <puts>
		f_read(&Fil,Buff,1024,&bw);
    7498:	20 e7       	ldi	r18, 0x70	; 112
    749a:	3d e2       	ldi	r19, 0x2D	; 45
    749c:	40 e0       	ldi	r20, 0x00	; 0
    749e:	54 e0       	ldi	r21, 0x04	; 4
    74a0:	60 e7       	ldi	r22, 0x70	; 112
    74a2:	75 e2       	ldi	r23, 0x25	; 37
    74a4:	82 e7       	ldi	r24, 0x72	; 114
    74a6:	9d e2       	ldi	r25, 0x2D	; 45
    74a8:	0e 94 9c 2b 	call	0x5738	; 0x5738 <f_read>
		f_close(&Fil);
    74ac:	82 e7       	ldi	r24, 0x72	; 114
    74ae:	9d e2       	ldi	r25, 0x2D	; 45
    74b0:	0e 94 1f 2e 	call	0x5c3e	; 0x5c3e <f_close>
    74b4:	e1 cf       	rjmp	.-62     	; 0x7478 <main+0x7e>

000074b6 <__vector_20>:
		//rtc_update_display_alt();
	}
}

//Used for SI114x Timestamp
ISR(TCC1_OVF_vect) {
    74b6:	1f 92       	push	r1
    74b8:	0f 92       	push	r0
    74ba:	0f b6       	in	r0, 0x3f	; 63
    74bc:	0f 92       	push	r0
    74be:	11 24       	eor	r1, r1
    74c0:	8f 93       	push	r24
    74c2:	9f 93       	push	r25
	counter++;
    74c4:	80 91 db 22 	lds	r24, 0x22DB
    74c8:	90 91 dc 22 	lds	r25, 0x22DC
    74cc:	01 96       	adiw	r24, 0x01	; 1
    74ce:	80 93 db 22 	sts	0x22DB, r24
    74d2:	90 93 dc 22 	sts	0x22DC, r25
}
    74d6:	9f 91       	pop	r25
    74d8:	8f 91       	pop	r24
    74da:	0f 90       	pop	r0
    74dc:	0f be       	out	0x3f, r0	; 63
    74de:	0f 90       	pop	r0
    74e0:	1f 90       	pop	r1
    74e2:	18 95       	reti

000074e4 <uart_setup>:
	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
	USARTD0.DATA = c;
    74e4:	e0 e6       	ldi	r30, 0x60	; 96
    74e6:	f6 e0       	ldi	r31, 0x06	; 6
    74e8:	88 e0       	ldi	r24, 0x08	; 8
    74ea:	81 83       	std	Z+1, r24	; 0x01
    74ec:	84 e0       	ldi	r24, 0x04	; 4
    74ee:	82 83       	std	Z+2, r24	; 0x02
    74f0:	e0 ea       	ldi	r30, 0xA0	; 160
    74f2:	f9 e0       	ldi	r31, 0x09	; 9
    74f4:	80 e2       	ldi	r24, 0x20	; 32
    74f6:	83 83       	std	Z+3, r24	; 0x03
    74f8:	8e e2       	ldi	r24, 0x2E	; 46
    74fa:	86 83       	std	Z+6, r24	; 0x06
    74fc:	88 e9       	ldi	r24, 0x98	; 152
    74fe:	87 83       	std	Z+7, r24	; 0x07
    7500:	83 e0       	ldi	r24, 0x03	; 3
    7502:	85 83       	std	Z+5, r24	; 0x05
    7504:	88 e1       	ldi	r24, 0x18	; 24
    7506:	84 83       	std	Z+4, r24	; 0x04
    7508:	08 95       	ret

0000750a <uart_put_char>:
    750a:	90 91 a1 09 	lds	r25, 0x09A1
    750e:	95 ff       	sbrs	r25, 5
    7510:	fc cf       	rjmp	.-8      	; 0x750a <uart_put_char>
    7512:	80 93 a0 09 	sts	0x09A0, r24
    7516:	08 95       	ret

00007518 <uart_get_char>:
    7518:	80 91 a1 09 	lds	r24, 0x09A1
    751c:	87 ff       	sbrs	r24, 7
    751e:	fc cf       	rjmp	.-8      	; 0x7518 <uart_get_char>
    7520:	80 91 a0 09 	lds	r24, 0x09A0
    7524:	08 95       	ret

00007526 <uwrite_hex>:
	uart_put_char('\r');
	uart_put_char('\n');
}

void uwrite_hex(unsigned char n) {
	if(((n>>4) & 15) < 10)
    7526:	98 2f       	mov	r25, r24
    7528:	92 95       	swap	r25
    752a:	9f 70       	andi	r25, 0x0F	; 15
    752c:	29 2f       	mov	r18, r25
    752e:	30 e0       	ldi	r19, 0x00	; 0
    7530:	2a 30       	cpi	r18, 0x0A	; 10
    7532:	31 05       	cpc	r19, r1
    7534:	54 f5       	brge	.+84     	; 0x758a <uwrite_hex+0x64>
	uart_put_char('0' + ((n>>4)&15));
    7536:	20 e3       	ldi	r18, 0x30	; 48
    7538:	29 0f       	add	r18, r25

	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
    753a:	90 91 a1 09 	lds	r25, 0x09A1
    753e:	95 ff       	sbrs	r25, 5
    7540:	fc cf       	rjmp	.-8      	; 0x753a <uwrite_hex+0x14>
	USARTD0.DATA = c;
    7542:	20 93 a0 09 	sts	0x09A0, r18
	if(((n>>4) & 15) < 10)
	uart_put_char('0' + ((n>>4)&15));
	else
	uart_put_char('A' + ((n>>4)&15) - 10);
	n <<= 4;
	if(((n>>4) & 15) < 10)
    7546:	8f 70       	andi	r24, 0x0F	; 15
    7548:	28 2f       	mov	r18, r24
    754a:	30 e0       	ldi	r19, 0x00	; 0
    754c:	2a 30       	cpi	r18, 0x0A	; 10
    754e:	31 05       	cpc	r19, r1
    7550:	b4 f4       	brge	.+44     	; 0x757e <uwrite_hex+0x58>
	uart_put_char('0' + ((n>>4)&15));
    7552:	80 5d       	subi	r24, 0xD0	; 208

	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
    7554:	90 91 a1 09 	lds	r25, 0x09A1
    7558:	95 ff       	sbrs	r25, 5
    755a:	fc cf       	rjmp	.-8      	; 0x7554 <uwrite_hex+0x2e>
	USARTD0.DATA = c;
    755c:	80 93 a0 09 	sts	0x09A0, r24

	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
    7560:	80 91 a1 09 	lds	r24, 0x09A1
    7564:	85 ff       	sbrs	r24, 5
    7566:	fc cf       	rjmp	.-8      	; 0x7560 <uwrite_hex+0x3a>
	USARTD0.DATA = c;
    7568:	8d e0       	ldi	r24, 0x0D	; 13
    756a:	80 93 a0 09 	sts	0x09A0, r24

	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
    756e:	80 91 a1 09 	lds	r24, 0x09A1
    7572:	85 ff       	sbrs	r24, 5
    7574:	fc cf       	rjmp	.-8      	; 0x756e <uwrite_hex+0x48>
	USARTD0.DATA = c;
    7576:	8a e0       	ldi	r24, 0x0A	; 10
    7578:	80 93 a0 09 	sts	0x09A0, r24
    757c:	08 95       	ret
	uart_put_char('A' + ((n>>4)&15) - 10);
	n <<= 4;
	if(((n>>4) & 15) < 10)
	uart_put_char('0' + ((n>>4)&15));
	else
	uart_put_char('A' + ((n>>4)&15) - 10);
    757e:	89 5c       	subi	r24, 0xC9	; 201

	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
    7580:	90 91 a1 09 	lds	r25, 0x09A1
    7584:	95 ff       	sbrs	r25, 5
    7586:	fc cf       	rjmp	.-8      	; 0x7580 <uwrite_hex+0x5a>
    7588:	e9 cf       	rjmp	.-46     	; 0x755c <uwrite_hex+0x36>

void uwrite_hex(unsigned char n) {
	if(((n>>4) & 15) < 10)
	uart_put_char('0' + ((n>>4)&15));
	else
	uart_put_char('A' + ((n>>4)&15) - 10);
    758a:	27 e3       	ldi	r18, 0x37	; 55
    758c:	29 0f       	add	r18, r25

	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
}

void uart_put_char(char c) {
	while (!(USARTD0.STATUS & USART_DREIF_bm)){}
    758e:	90 91 a1 09 	lds	r25, 0x09A1
    7592:	95 ff       	sbrs	r25, 5
    7594:	fc cf       	rjmp	.-8      	; 0x758e <uwrite_hex+0x68>
    7596:	d5 cf       	rjmp	.-86     	; 0x7542 <uwrite_hex+0x1c>

00007598 <__subsf3>:
    7598:	50 58       	subi	r21, 0x80	; 128

0000759a <__addsf3>:
    759a:	bb 27       	eor	r27, r27
    759c:	aa 27       	eor	r26, r26
    759e:	0e d0       	rcall	.+28     	; 0x75bc <__addsf3x>
    75a0:	e5 c0       	rjmp	.+458    	; 0x776c <__fp_round>
    75a2:	d6 d0       	rcall	.+428    	; 0x7750 <__fp_pscA>
    75a4:	30 f0       	brcs	.+12     	; 0x75b2 <__addsf3+0x18>
    75a6:	db d0       	rcall	.+438    	; 0x775e <__fp_pscB>
    75a8:	20 f0       	brcs	.+8      	; 0x75b2 <__addsf3+0x18>
    75aa:	31 f4       	brne	.+12     	; 0x75b8 <__addsf3+0x1e>
    75ac:	9f 3f       	cpi	r25, 0xFF	; 255
    75ae:	11 f4       	brne	.+4      	; 0x75b4 <__addsf3+0x1a>
    75b0:	1e f4       	brtc	.+6      	; 0x75b8 <__addsf3+0x1e>
    75b2:	cb c0       	rjmp	.+406    	; 0x774a <__fp_nan>
    75b4:	0e f4       	brtc	.+2      	; 0x75b8 <__addsf3+0x1e>
    75b6:	e0 95       	com	r30
    75b8:	e7 fb       	bst	r30, 7
    75ba:	c1 c0       	rjmp	.+386    	; 0x773e <__fp_inf>

000075bc <__addsf3x>:
    75bc:	e9 2f       	mov	r30, r25
    75be:	e7 d0       	rcall	.+462    	; 0x778e <__fp_split3>
    75c0:	80 f3       	brcs	.-32     	; 0x75a2 <__addsf3+0x8>
    75c2:	ba 17       	cp	r27, r26
    75c4:	62 07       	cpc	r22, r18
    75c6:	73 07       	cpc	r23, r19
    75c8:	84 07       	cpc	r24, r20
    75ca:	95 07       	cpc	r25, r21
    75cc:	18 f0       	brcs	.+6      	; 0x75d4 <__addsf3x+0x18>
    75ce:	71 f4       	brne	.+28     	; 0x75ec <__addsf3x+0x30>
    75d0:	9e f5       	brtc	.+102    	; 0x7638 <__addsf3x+0x7c>
    75d2:	ff c0       	rjmp	.+510    	; 0x77d2 <__fp_zero>
    75d4:	0e f4       	brtc	.+2      	; 0x75d8 <__addsf3x+0x1c>
    75d6:	e0 95       	com	r30
    75d8:	0b 2e       	mov	r0, r27
    75da:	ba 2f       	mov	r27, r26
    75dc:	a0 2d       	mov	r26, r0
    75de:	0b 01       	movw	r0, r22
    75e0:	b9 01       	movw	r22, r18
    75e2:	90 01       	movw	r18, r0
    75e4:	0c 01       	movw	r0, r24
    75e6:	ca 01       	movw	r24, r20
    75e8:	a0 01       	movw	r20, r0
    75ea:	11 24       	eor	r1, r1
    75ec:	ff 27       	eor	r31, r31
    75ee:	59 1b       	sub	r21, r25
    75f0:	99 f0       	breq	.+38     	; 0x7618 <__addsf3x+0x5c>
    75f2:	59 3f       	cpi	r21, 0xF9	; 249
    75f4:	50 f4       	brcc	.+20     	; 0x760a <__addsf3x+0x4e>
    75f6:	50 3e       	cpi	r21, 0xE0	; 224
    75f8:	68 f1       	brcs	.+90     	; 0x7654 <__addsf3x+0x98>
    75fa:	1a 16       	cp	r1, r26
    75fc:	f0 40       	sbci	r31, 0x00	; 0
    75fe:	a2 2f       	mov	r26, r18
    7600:	23 2f       	mov	r18, r19
    7602:	34 2f       	mov	r19, r20
    7604:	44 27       	eor	r20, r20
    7606:	58 5f       	subi	r21, 0xF8	; 248
    7608:	f3 cf       	rjmp	.-26     	; 0x75f0 <__addsf3x+0x34>
    760a:	46 95       	lsr	r20
    760c:	37 95       	ror	r19
    760e:	27 95       	ror	r18
    7610:	a7 95       	ror	r26
    7612:	f0 40       	sbci	r31, 0x00	; 0
    7614:	53 95       	inc	r21
    7616:	c9 f7       	brne	.-14     	; 0x760a <__addsf3x+0x4e>
    7618:	7e f4       	brtc	.+30     	; 0x7638 <__addsf3x+0x7c>
    761a:	1f 16       	cp	r1, r31
    761c:	ba 0b       	sbc	r27, r26
    761e:	62 0b       	sbc	r22, r18
    7620:	73 0b       	sbc	r23, r19
    7622:	84 0b       	sbc	r24, r20
    7624:	ba f0       	brmi	.+46     	; 0x7654 <__addsf3x+0x98>
    7626:	91 50       	subi	r25, 0x01	; 1
    7628:	a1 f0       	breq	.+40     	; 0x7652 <__addsf3x+0x96>
    762a:	ff 0f       	add	r31, r31
    762c:	bb 1f       	adc	r27, r27
    762e:	66 1f       	adc	r22, r22
    7630:	77 1f       	adc	r23, r23
    7632:	88 1f       	adc	r24, r24
    7634:	c2 f7       	brpl	.-16     	; 0x7626 <__addsf3x+0x6a>
    7636:	0e c0       	rjmp	.+28     	; 0x7654 <__addsf3x+0x98>
    7638:	ba 0f       	add	r27, r26
    763a:	62 1f       	adc	r22, r18
    763c:	73 1f       	adc	r23, r19
    763e:	84 1f       	adc	r24, r20
    7640:	48 f4       	brcc	.+18     	; 0x7654 <__addsf3x+0x98>
    7642:	87 95       	ror	r24
    7644:	77 95       	ror	r23
    7646:	67 95       	ror	r22
    7648:	b7 95       	ror	r27
    764a:	f7 95       	ror	r31
    764c:	9e 3f       	cpi	r25, 0xFE	; 254
    764e:	08 f0       	brcs	.+2      	; 0x7652 <__addsf3x+0x96>
    7650:	b3 cf       	rjmp	.-154    	; 0x75b8 <__addsf3+0x1e>
    7652:	93 95       	inc	r25
    7654:	88 0f       	add	r24, r24
    7656:	08 f0       	brcs	.+2      	; 0x765a <__addsf3x+0x9e>
    7658:	99 27       	eor	r25, r25
    765a:	ee 0f       	add	r30, r30
    765c:	97 95       	ror	r25
    765e:	87 95       	ror	r24
    7660:	08 95       	ret

00007662 <__fixsfsi>:
    7662:	04 d0       	rcall	.+8      	; 0x766c <__fixunssfsi>
    7664:	68 94       	set
    7666:	b1 11       	cpse	r27, r1
    7668:	b5 c0       	rjmp	.+362    	; 0x77d4 <__fp_szero>
    766a:	08 95       	ret

0000766c <__fixunssfsi>:
    766c:	98 d0       	rcall	.+304    	; 0x779e <__fp_splitA>
    766e:	88 f0       	brcs	.+34     	; 0x7692 <__fixunssfsi+0x26>
    7670:	9f 57       	subi	r25, 0x7F	; 127
    7672:	90 f0       	brcs	.+36     	; 0x7698 <__fixunssfsi+0x2c>
    7674:	b9 2f       	mov	r27, r25
    7676:	99 27       	eor	r25, r25
    7678:	b7 51       	subi	r27, 0x17	; 23
    767a:	a0 f0       	brcs	.+40     	; 0x76a4 <__fixunssfsi+0x38>
    767c:	d1 f0       	breq	.+52     	; 0x76b2 <__fixunssfsi+0x46>
    767e:	66 0f       	add	r22, r22
    7680:	77 1f       	adc	r23, r23
    7682:	88 1f       	adc	r24, r24
    7684:	99 1f       	adc	r25, r25
    7686:	1a f0       	brmi	.+6      	; 0x768e <__fixunssfsi+0x22>
    7688:	ba 95       	dec	r27
    768a:	c9 f7       	brne	.-14     	; 0x767e <__fixunssfsi+0x12>
    768c:	12 c0       	rjmp	.+36     	; 0x76b2 <__fixunssfsi+0x46>
    768e:	b1 30       	cpi	r27, 0x01	; 1
    7690:	81 f0       	breq	.+32     	; 0x76b2 <__fixunssfsi+0x46>
    7692:	9f d0       	rcall	.+318    	; 0x77d2 <__fp_zero>
    7694:	b1 e0       	ldi	r27, 0x01	; 1
    7696:	08 95       	ret
    7698:	9c c0       	rjmp	.+312    	; 0x77d2 <__fp_zero>
    769a:	67 2f       	mov	r22, r23
    769c:	78 2f       	mov	r23, r24
    769e:	88 27       	eor	r24, r24
    76a0:	b8 5f       	subi	r27, 0xF8	; 248
    76a2:	39 f0       	breq	.+14     	; 0x76b2 <__fixunssfsi+0x46>
    76a4:	b9 3f       	cpi	r27, 0xF9	; 249
    76a6:	cc f3       	brlt	.-14     	; 0x769a <__fixunssfsi+0x2e>
    76a8:	86 95       	lsr	r24
    76aa:	77 95       	ror	r23
    76ac:	67 95       	ror	r22
    76ae:	b3 95       	inc	r27
    76b0:	d9 f7       	brne	.-10     	; 0x76a8 <__fixunssfsi+0x3c>
    76b2:	3e f4       	brtc	.+14     	; 0x76c2 <__fixunssfsi+0x56>
    76b4:	90 95       	com	r25
    76b6:	80 95       	com	r24
    76b8:	70 95       	com	r23
    76ba:	61 95       	neg	r22
    76bc:	7f 4f       	sbci	r23, 0xFF	; 255
    76be:	8f 4f       	sbci	r24, 0xFF	; 255
    76c0:	9f 4f       	sbci	r25, 0xFF	; 255
    76c2:	08 95       	ret

000076c4 <__floatunsisf>:
    76c4:	e8 94       	clt
    76c6:	09 c0       	rjmp	.+18     	; 0x76da <__floatsisf+0x12>

000076c8 <__floatsisf>:
    76c8:	97 fb       	bst	r25, 7
    76ca:	3e f4       	brtc	.+14     	; 0x76da <__floatsisf+0x12>
    76cc:	90 95       	com	r25
    76ce:	80 95       	com	r24
    76d0:	70 95       	com	r23
    76d2:	61 95       	neg	r22
    76d4:	7f 4f       	sbci	r23, 0xFF	; 255
    76d6:	8f 4f       	sbci	r24, 0xFF	; 255
    76d8:	9f 4f       	sbci	r25, 0xFF	; 255
    76da:	99 23       	and	r25, r25
    76dc:	a9 f0       	breq	.+42     	; 0x7708 <__floatsisf+0x40>
    76de:	f9 2f       	mov	r31, r25
    76e0:	96 e9       	ldi	r25, 0x96	; 150
    76e2:	bb 27       	eor	r27, r27
    76e4:	93 95       	inc	r25
    76e6:	f6 95       	lsr	r31
    76e8:	87 95       	ror	r24
    76ea:	77 95       	ror	r23
    76ec:	67 95       	ror	r22
    76ee:	b7 95       	ror	r27
    76f0:	f1 11       	cpse	r31, r1
    76f2:	f8 cf       	rjmp	.-16     	; 0x76e4 <__floatsisf+0x1c>
    76f4:	fa f4       	brpl	.+62     	; 0x7734 <__floatsisf+0x6c>
    76f6:	bb 0f       	add	r27, r27
    76f8:	11 f4       	brne	.+4      	; 0x76fe <__floatsisf+0x36>
    76fa:	60 ff       	sbrs	r22, 0
    76fc:	1b c0       	rjmp	.+54     	; 0x7734 <__floatsisf+0x6c>
    76fe:	6f 5f       	subi	r22, 0xFF	; 255
    7700:	7f 4f       	sbci	r23, 0xFF	; 255
    7702:	8f 4f       	sbci	r24, 0xFF	; 255
    7704:	9f 4f       	sbci	r25, 0xFF	; 255
    7706:	16 c0       	rjmp	.+44     	; 0x7734 <__floatsisf+0x6c>
    7708:	88 23       	and	r24, r24
    770a:	11 f0       	breq	.+4      	; 0x7710 <__floatsisf+0x48>
    770c:	96 e9       	ldi	r25, 0x96	; 150
    770e:	11 c0       	rjmp	.+34     	; 0x7732 <__floatsisf+0x6a>
    7710:	77 23       	and	r23, r23
    7712:	21 f0       	breq	.+8      	; 0x771c <__floatsisf+0x54>
    7714:	9e e8       	ldi	r25, 0x8E	; 142
    7716:	87 2f       	mov	r24, r23
    7718:	76 2f       	mov	r23, r22
    771a:	05 c0       	rjmp	.+10     	; 0x7726 <__floatsisf+0x5e>
    771c:	66 23       	and	r22, r22
    771e:	71 f0       	breq	.+28     	; 0x773c <__floatsisf+0x74>
    7720:	96 e8       	ldi	r25, 0x86	; 134
    7722:	86 2f       	mov	r24, r22
    7724:	70 e0       	ldi	r23, 0x00	; 0
    7726:	60 e0       	ldi	r22, 0x00	; 0
    7728:	2a f0       	brmi	.+10     	; 0x7734 <__floatsisf+0x6c>
    772a:	9a 95       	dec	r25
    772c:	66 0f       	add	r22, r22
    772e:	77 1f       	adc	r23, r23
    7730:	88 1f       	adc	r24, r24
    7732:	da f7       	brpl	.-10     	; 0x772a <__floatsisf+0x62>
    7734:	88 0f       	add	r24, r24
    7736:	96 95       	lsr	r25
    7738:	87 95       	ror	r24
    773a:	97 f9       	bld	r25, 7
    773c:	08 95       	ret

0000773e <__fp_inf>:
    773e:	97 f9       	bld	r25, 7
    7740:	9f 67       	ori	r25, 0x7F	; 127
    7742:	80 e8       	ldi	r24, 0x80	; 128
    7744:	70 e0       	ldi	r23, 0x00	; 0
    7746:	60 e0       	ldi	r22, 0x00	; 0
    7748:	08 95       	ret

0000774a <__fp_nan>:
    774a:	9f ef       	ldi	r25, 0xFF	; 255
    774c:	80 ec       	ldi	r24, 0xC0	; 192
    774e:	08 95       	ret

00007750 <__fp_pscA>:
    7750:	00 24       	eor	r0, r0
    7752:	0a 94       	dec	r0
    7754:	16 16       	cp	r1, r22
    7756:	17 06       	cpc	r1, r23
    7758:	18 06       	cpc	r1, r24
    775a:	09 06       	cpc	r0, r25
    775c:	08 95       	ret

0000775e <__fp_pscB>:
    775e:	00 24       	eor	r0, r0
    7760:	0a 94       	dec	r0
    7762:	12 16       	cp	r1, r18
    7764:	13 06       	cpc	r1, r19
    7766:	14 06       	cpc	r1, r20
    7768:	05 06       	cpc	r0, r21
    776a:	08 95       	ret

0000776c <__fp_round>:
    776c:	09 2e       	mov	r0, r25
    776e:	03 94       	inc	r0
    7770:	00 0c       	add	r0, r0
    7772:	11 f4       	brne	.+4      	; 0x7778 <__fp_round+0xc>
    7774:	88 23       	and	r24, r24
    7776:	52 f0       	brmi	.+20     	; 0x778c <__fp_round+0x20>
    7778:	bb 0f       	add	r27, r27
    777a:	40 f4       	brcc	.+16     	; 0x778c <__fp_round+0x20>
    777c:	bf 2b       	or	r27, r31
    777e:	11 f4       	brne	.+4      	; 0x7784 <__fp_round+0x18>
    7780:	60 ff       	sbrs	r22, 0
    7782:	04 c0       	rjmp	.+8      	; 0x778c <__fp_round+0x20>
    7784:	6f 5f       	subi	r22, 0xFF	; 255
    7786:	7f 4f       	sbci	r23, 0xFF	; 255
    7788:	8f 4f       	sbci	r24, 0xFF	; 255
    778a:	9f 4f       	sbci	r25, 0xFF	; 255
    778c:	08 95       	ret

0000778e <__fp_split3>:
    778e:	57 fd       	sbrc	r21, 7
    7790:	90 58       	subi	r25, 0x80	; 128
    7792:	44 0f       	add	r20, r20
    7794:	55 1f       	adc	r21, r21
    7796:	59 f0       	breq	.+22     	; 0x77ae <__fp_splitA+0x10>
    7798:	5f 3f       	cpi	r21, 0xFF	; 255
    779a:	71 f0       	breq	.+28     	; 0x77b8 <__fp_splitA+0x1a>
    779c:	47 95       	ror	r20

0000779e <__fp_splitA>:
    779e:	88 0f       	add	r24, r24
    77a0:	97 fb       	bst	r25, 7
    77a2:	99 1f       	adc	r25, r25
    77a4:	61 f0       	breq	.+24     	; 0x77be <__fp_splitA+0x20>
    77a6:	9f 3f       	cpi	r25, 0xFF	; 255
    77a8:	79 f0       	breq	.+30     	; 0x77c8 <__fp_splitA+0x2a>
    77aa:	87 95       	ror	r24
    77ac:	08 95       	ret
    77ae:	12 16       	cp	r1, r18
    77b0:	13 06       	cpc	r1, r19
    77b2:	14 06       	cpc	r1, r20
    77b4:	55 1f       	adc	r21, r21
    77b6:	f2 cf       	rjmp	.-28     	; 0x779c <__fp_split3+0xe>
    77b8:	46 95       	lsr	r20
    77ba:	f1 df       	rcall	.-30     	; 0x779e <__fp_splitA>
    77bc:	08 c0       	rjmp	.+16     	; 0x77ce <__fp_splitA+0x30>
    77be:	16 16       	cp	r1, r22
    77c0:	17 06       	cpc	r1, r23
    77c2:	18 06       	cpc	r1, r24
    77c4:	99 1f       	adc	r25, r25
    77c6:	f1 cf       	rjmp	.-30     	; 0x77aa <__fp_splitA+0xc>
    77c8:	86 95       	lsr	r24
    77ca:	71 05       	cpc	r23, r1
    77cc:	61 05       	cpc	r22, r1
    77ce:	08 94       	sec
    77d0:	08 95       	ret

000077d2 <__fp_zero>:
    77d2:	e8 94       	clt

000077d4 <__fp_szero>:
    77d4:	bb 27       	eor	r27, r27
    77d6:	66 27       	eor	r22, r22
    77d8:	77 27       	eor	r23, r23
    77da:	cb 01       	movw	r24, r22
    77dc:	97 f9       	bld	r25, 7
    77de:	08 95       	ret

000077e0 <__mulsf3>:
    77e0:	0b d0       	rcall	.+22     	; 0x77f8 <__mulsf3x>
    77e2:	c4 cf       	rjmp	.-120    	; 0x776c <__fp_round>
    77e4:	b5 df       	rcall	.-150    	; 0x7750 <__fp_pscA>
    77e6:	28 f0       	brcs	.+10     	; 0x77f2 <__mulsf3+0x12>
    77e8:	ba df       	rcall	.-140    	; 0x775e <__fp_pscB>
    77ea:	18 f0       	brcs	.+6      	; 0x77f2 <__mulsf3+0x12>
    77ec:	95 23       	and	r25, r21
    77ee:	09 f0       	breq	.+2      	; 0x77f2 <__mulsf3+0x12>
    77f0:	a6 cf       	rjmp	.-180    	; 0x773e <__fp_inf>
    77f2:	ab cf       	rjmp	.-170    	; 0x774a <__fp_nan>
    77f4:	11 24       	eor	r1, r1
    77f6:	ee cf       	rjmp	.-36     	; 0x77d4 <__fp_szero>

000077f8 <__mulsf3x>:
    77f8:	ca df       	rcall	.-108    	; 0x778e <__fp_split3>
    77fa:	a0 f3       	brcs	.-24     	; 0x77e4 <__mulsf3+0x4>

000077fc <__mulsf3_pse>:
    77fc:	95 9f       	mul	r25, r21
    77fe:	d1 f3       	breq	.-12     	; 0x77f4 <__mulsf3+0x14>
    7800:	95 0f       	add	r25, r21
    7802:	50 e0       	ldi	r21, 0x00	; 0
    7804:	55 1f       	adc	r21, r21
    7806:	62 9f       	mul	r22, r18
    7808:	f0 01       	movw	r30, r0
    780a:	72 9f       	mul	r23, r18
    780c:	bb 27       	eor	r27, r27
    780e:	f0 0d       	add	r31, r0
    7810:	b1 1d       	adc	r27, r1
    7812:	63 9f       	mul	r22, r19
    7814:	aa 27       	eor	r26, r26
    7816:	f0 0d       	add	r31, r0
    7818:	b1 1d       	adc	r27, r1
    781a:	aa 1f       	adc	r26, r26
    781c:	64 9f       	mul	r22, r20
    781e:	66 27       	eor	r22, r22
    7820:	b0 0d       	add	r27, r0
    7822:	a1 1d       	adc	r26, r1
    7824:	66 1f       	adc	r22, r22
    7826:	82 9f       	mul	r24, r18
    7828:	22 27       	eor	r18, r18
    782a:	b0 0d       	add	r27, r0
    782c:	a1 1d       	adc	r26, r1
    782e:	62 1f       	adc	r22, r18
    7830:	73 9f       	mul	r23, r19
    7832:	b0 0d       	add	r27, r0
    7834:	a1 1d       	adc	r26, r1
    7836:	62 1f       	adc	r22, r18
    7838:	83 9f       	mul	r24, r19
    783a:	a0 0d       	add	r26, r0
    783c:	61 1d       	adc	r22, r1
    783e:	22 1f       	adc	r18, r18
    7840:	74 9f       	mul	r23, r20
    7842:	33 27       	eor	r19, r19
    7844:	a0 0d       	add	r26, r0
    7846:	61 1d       	adc	r22, r1
    7848:	23 1f       	adc	r18, r19
    784a:	84 9f       	mul	r24, r20
    784c:	60 0d       	add	r22, r0
    784e:	21 1d       	adc	r18, r1
    7850:	82 2f       	mov	r24, r18
    7852:	76 2f       	mov	r23, r22
    7854:	6a 2f       	mov	r22, r26
    7856:	11 24       	eor	r1, r1
    7858:	9f 57       	subi	r25, 0x7F	; 127
    785a:	50 40       	sbci	r21, 0x00	; 0
    785c:	8a f0       	brmi	.+34     	; 0x7880 <__mulsf3_pse+0x84>
    785e:	e1 f0       	breq	.+56     	; 0x7898 <__mulsf3_pse+0x9c>
    7860:	88 23       	and	r24, r24
    7862:	4a f0       	brmi	.+18     	; 0x7876 <__mulsf3_pse+0x7a>
    7864:	ee 0f       	add	r30, r30
    7866:	ff 1f       	adc	r31, r31
    7868:	bb 1f       	adc	r27, r27
    786a:	66 1f       	adc	r22, r22
    786c:	77 1f       	adc	r23, r23
    786e:	88 1f       	adc	r24, r24
    7870:	91 50       	subi	r25, 0x01	; 1
    7872:	50 40       	sbci	r21, 0x00	; 0
    7874:	a9 f7       	brne	.-22     	; 0x7860 <__mulsf3_pse+0x64>
    7876:	9e 3f       	cpi	r25, 0xFE	; 254
    7878:	51 05       	cpc	r21, r1
    787a:	70 f0       	brcs	.+28     	; 0x7898 <__mulsf3_pse+0x9c>
    787c:	60 cf       	rjmp	.-320    	; 0x773e <__fp_inf>
    787e:	aa cf       	rjmp	.-172    	; 0x77d4 <__fp_szero>
    7880:	5f 3f       	cpi	r21, 0xFF	; 255
    7882:	ec f3       	brlt	.-6      	; 0x787e <__mulsf3_pse+0x82>
    7884:	98 3e       	cpi	r25, 0xE8	; 232
    7886:	dc f3       	brlt	.-10     	; 0x787e <__mulsf3_pse+0x82>
    7888:	86 95       	lsr	r24
    788a:	77 95       	ror	r23
    788c:	67 95       	ror	r22
    788e:	b7 95       	ror	r27
    7890:	f7 95       	ror	r31
    7892:	e7 95       	ror	r30
    7894:	9f 5f       	subi	r25, 0xFF	; 255
    7896:	c1 f7       	brne	.-16     	; 0x7888 <__mulsf3_pse+0x8c>
    7898:	fe 2b       	or	r31, r30
    789a:	88 0f       	add	r24, r24
    789c:	91 1d       	adc	r25, r1
    789e:	96 95       	lsr	r25
    78a0:	87 95       	ror	r24
    78a2:	97 f9       	bld	r25, 7
    78a4:	08 95       	ret

000078a6 <__udivmodsi4>:
    78a6:	a1 e2       	ldi	r26, 0x21	; 33
    78a8:	1a 2e       	mov	r1, r26
    78aa:	aa 1b       	sub	r26, r26
    78ac:	bb 1b       	sub	r27, r27
    78ae:	fd 01       	movw	r30, r26
    78b0:	0d c0       	rjmp	.+26     	; 0x78cc <__udivmodsi4_ep>

000078b2 <__udivmodsi4_loop>:
    78b2:	aa 1f       	adc	r26, r26
    78b4:	bb 1f       	adc	r27, r27
    78b6:	ee 1f       	adc	r30, r30
    78b8:	ff 1f       	adc	r31, r31
    78ba:	a2 17       	cp	r26, r18
    78bc:	b3 07       	cpc	r27, r19
    78be:	e4 07       	cpc	r30, r20
    78c0:	f5 07       	cpc	r31, r21
    78c2:	20 f0       	brcs	.+8      	; 0x78cc <__udivmodsi4_ep>
    78c4:	a2 1b       	sub	r26, r18
    78c6:	b3 0b       	sbc	r27, r19
    78c8:	e4 0b       	sbc	r30, r20
    78ca:	f5 0b       	sbc	r31, r21

000078cc <__udivmodsi4_ep>:
    78cc:	66 1f       	adc	r22, r22
    78ce:	77 1f       	adc	r23, r23
    78d0:	88 1f       	adc	r24, r24
    78d2:	99 1f       	adc	r25, r25
    78d4:	1a 94       	dec	r1
    78d6:	69 f7       	brne	.-38     	; 0x78b2 <__udivmodsi4_loop>
    78d8:	60 95       	com	r22
    78da:	70 95       	com	r23
    78dc:	80 95       	com	r24
    78de:	90 95       	com	r25
    78e0:	9b 01       	movw	r18, r22
    78e2:	ac 01       	movw	r20, r24
    78e4:	bd 01       	movw	r22, r26
    78e6:	cf 01       	movw	r24, r30
    78e8:	08 95       	ret

000078ea <__tablejump2__>:
    78ea:	ee 0f       	add	r30, r30
    78ec:	ff 1f       	adc	r31, r31

000078ee <__tablejump__>:
    78ee:	05 90       	lpm	r0, Z+
    78f0:	f4 91       	lpm	r31, Z
    78f2:	e0 2d       	mov	r30, r0
    78f4:	09 94       	ijmp

000078f6 <__umulhisi3>:
    78f6:	a2 9f       	mul	r26, r18
    78f8:	b0 01       	movw	r22, r0
    78fa:	b3 9f       	mul	r27, r19
    78fc:	c0 01       	movw	r24, r0
    78fe:	a3 9f       	mul	r26, r19
    7900:	70 0d       	add	r23, r0
    7902:	81 1d       	adc	r24, r1
    7904:	11 24       	eor	r1, r1
    7906:	91 1d       	adc	r25, r1
    7908:	b2 9f       	mul	r27, r18
    790a:	70 0d       	add	r23, r0
    790c:	81 1d       	adc	r24, r1
    790e:	11 24       	eor	r1, r1
    7910:	91 1d       	adc	r25, r1
    7912:	08 95       	ret

00007914 <__muluhisi3>:
    7914:	f0 df       	rcall	.-32     	; 0x78f6 <__umulhisi3>
    7916:	a5 9f       	mul	r26, r21
    7918:	90 0d       	add	r25, r0
    791a:	b4 9f       	mul	r27, r20
    791c:	90 0d       	add	r25, r0
    791e:	a4 9f       	mul	r26, r20
    7920:	80 0d       	add	r24, r0
    7922:	91 1d       	adc	r25, r1
    7924:	11 24       	eor	r1, r1
    7926:	08 95       	ret

00007928 <strchr>:
    7928:	fc 01       	movw	r30, r24
    792a:	81 91       	ld	r24, Z+
    792c:	86 17       	cp	r24, r22
    792e:	21 f0       	breq	.+8      	; 0x7938 <strchr+0x10>
    7930:	88 23       	and	r24, r24
    7932:	d9 f7       	brne	.-10     	; 0x792a <strchr+0x2>
    7934:	99 27       	eor	r25, r25
    7936:	08 95       	ret
    7938:	31 97       	sbiw	r30, 0x01	; 1
    793a:	cf 01       	movw	r24, r30
    793c:	08 95       	ret

0000793e <strstr>:
    793e:	fb 01       	movw	r30, r22
    7940:	51 91       	ld	r21, Z+
    7942:	55 23       	and	r21, r21
    7944:	a9 f0       	breq	.+42     	; 0x7970 <strstr+0x32>
    7946:	bf 01       	movw	r22, r30
    7948:	dc 01       	movw	r26, r24
    794a:	4d 91       	ld	r20, X+
    794c:	45 17       	cp	r20, r21
    794e:	41 11       	cpse	r20, r1
    7950:	e1 f7       	brne	.-8      	; 0x794a <strstr+0xc>
    7952:	59 f4       	brne	.+22     	; 0x796a <strstr+0x2c>
    7954:	cd 01       	movw	r24, r26
    7956:	01 90       	ld	r0, Z+
    7958:	00 20       	and	r0, r0
    795a:	49 f0       	breq	.+18     	; 0x796e <strstr+0x30>
    795c:	4d 91       	ld	r20, X+
    795e:	40 15       	cp	r20, r0
    7960:	41 11       	cpse	r20, r1
    7962:	c9 f3       	breq	.-14     	; 0x7956 <strstr+0x18>
    7964:	fb 01       	movw	r30, r22
    7966:	41 11       	cpse	r20, r1
    7968:	ef cf       	rjmp	.-34     	; 0x7948 <strstr+0xa>
    796a:	81 e0       	ldi	r24, 0x01	; 1
    796c:	90 e0       	ldi	r25, 0x00	; 0
    796e:	01 97       	sbiw	r24, 0x01	; 1
    7970:	08 95       	ret

00007972 <puts>:
    7972:	0f 93       	push	r16
    7974:	1f 93       	push	r17
    7976:	cf 93       	push	r28
    7978:	df 93       	push	r29
    797a:	e0 91 94 2d 	lds	r30, 0x2D94
    797e:	f0 91 95 2d 	lds	r31, 0x2D95
    7982:	23 81       	ldd	r18, Z+3	; 0x03
    7984:	21 ff       	sbrs	r18, 1
    7986:	1b c0       	rjmp	.+54     	; 0x79be <puts+0x4c>
    7988:	ec 01       	movw	r28, r24
    798a:	00 e0       	ldi	r16, 0x00	; 0
    798c:	10 e0       	ldi	r17, 0x00	; 0
    798e:	89 91       	ld	r24, Y+
    7990:	60 91 94 2d 	lds	r22, 0x2D94
    7994:	70 91 95 2d 	lds	r23, 0x2D95
    7998:	db 01       	movw	r26, r22
    799a:	18 96       	adiw	r26, 0x08	; 8
    799c:	ed 91       	ld	r30, X+
    799e:	fc 91       	ld	r31, X
    79a0:	19 97       	sbiw	r26, 0x09	; 9
    79a2:	88 23       	and	r24, r24
    79a4:	31 f0       	breq	.+12     	; 0x79b2 <puts+0x40>
    79a6:	09 95       	icall
    79a8:	89 2b       	or	r24, r25
    79aa:	89 f3       	breq	.-30     	; 0x798e <puts+0x1c>
    79ac:	0f ef       	ldi	r16, 0xFF	; 255
    79ae:	1f ef       	ldi	r17, 0xFF	; 255
    79b0:	ee cf       	rjmp	.-36     	; 0x798e <puts+0x1c>
    79b2:	8a e0       	ldi	r24, 0x0A	; 10
    79b4:	09 95       	icall
    79b6:	89 2b       	or	r24, r25
    79b8:	11 f4       	brne	.+4      	; 0x79be <puts+0x4c>
    79ba:	c8 01       	movw	r24, r16
    79bc:	02 c0       	rjmp	.+4      	; 0x79c2 <puts+0x50>
    79be:	8f ef       	ldi	r24, 0xFF	; 255
    79c0:	9f ef       	ldi	r25, 0xFF	; 255
    79c2:	df 91       	pop	r29
    79c4:	cf 91       	pop	r28
    79c6:	1f 91       	pop	r17
    79c8:	0f 91       	pop	r16
    79ca:	08 95       	ret

000079cc <_exit>:
    79cc:	f8 94       	cli

000079ce <__stop_program>:
    79ce:	ff cf       	rjmp	.-2      	; 0x79ce <__stop_program>
